{"id":"1291e5b39eb5b8a6a8f9014f1813c29f","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/interfaces/IStakingAdapter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * @title IStakingAdapter\n * @notice Chain-agnostic interface for external staking protocols\n * @dev Allows HabitTracker to integrate with any staking protocol\n * \n * @dev Terminology:\n * - Yield Stake: User rewards staked in external protocol (principal)\n * - Yield Rewards: Additional rewards generated from external protocol\n */\ninterface IStakingAdapter {\n    /**\n     * @notice Create yield stake by staking user rewards into external protocol\n     * @param amount Amount to stake (user's earned rewards)\n     * @dev For native token staking, msg.value should equal amount\n     */\n    function stake(uint256 amount) external payable;\n\n    /**\n     * @notice Unstake from external protocol (yield stake + yield rewards)\n     * @param amount Amount to unstake\n     * @dev Unstaked tokens (principal + yield rewards) should be sent back to HabitTracker\n     */\n    function unstake(uint256 amount) external;\n\n    /**\n     * @notice Claim accumulated yield rewards from external protocol\n     * @return claimed Amount of yield rewards claimed\n     * @dev Returns 0 if no yield rewards available or not supported\n     */\n    function claimRewards() external returns (uint256 claimed);\n\n    /**\n     * @notice Get total yield stake amount for an address (principal only)\n     * @param who Address to check\n     * @return staked Total yield stake by address (excludes yield rewards)\n     */\n    function getStakedAmount(address who) external view returns (uint256 staked);\n\n    /**\n     * @notice Get pending unclaimed yield rewards for an address\n     * @param who Address to check\n     * @return pending Pending yield rewards\n     * @dev Returns 0 if not supported by protocol\n     */\n    function getPendingRewards(address who) external view returns (uint256 pending);\n}\n\n"},"contracts/mocks/MockStakingRewards.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"../interfaces/IStakingAdapter.sol\";\n\n/**\n * @title MockStakingRewards\n * @notice Simple mock staking contract for testing on Passet Hub\n * @dev Linear reward rate: rewards = staked * ratePerSecond * timeStaked\n */\ncontract MockStakingRewards is IStakingAdapter {\n    uint256 public immutable ratePerSecond; // Reward rate per second (in wei per 1e18 staked)\n    address public immutable habitTracker;\n\n    mapping(address => uint256) public deposits;\n    mapping(address => uint256) public lastUpdateTime;\n\n    event Staked(address indexed user, uint256 amount);\n    event Unstaked(address indexed user, uint256 amount);\n    event RewardsClaimed(address indexed user, uint256 amount);\n\n    error OnlyHabitTracker();\n    error InsufficientBalance();\n    error TransferFailed();\n    error InvalidAmount();\n\n    modifier onlyHabitTracker() {\n        if (msg.sender != habitTracker) revert OnlyHabitTracker();\n        _;\n    }\n\n    /**\n     * @param _ratePerSecond Reward rate (e.g., 1e15 = 0.1% per second)\n     * @param _habitTracker HabitTracker contract address\n     */\n    constructor(uint256 _ratePerSecond, address _habitTracker) {\n        ratePerSecond = _ratePerSecond;\n        habitTracker = _habitTracker;\n    }\n\n    function stake(uint256 amount) external payable onlyHabitTracker {\n        if (msg.value != amount) revert InvalidAmount();\n        if (amount == 0) revert InvalidAmount();\n\n        _updateRewards(msg.sender);\n        deposits[msg.sender] += amount;\n\n        emit Staked(msg.sender, amount);\n    }\n\n    function unstake(uint256 amount) external onlyHabitTracker {\n        if (amount == 0) revert InvalidAmount();\n        if (deposits[msg.sender] < amount) revert InsufficientBalance();\n\n        _updateRewards(msg.sender);\n        deposits[msg.sender] -= amount;\n\n        // Send back to HabitTracker\n        (bool success, ) = habitTracker.call{value: amount}(\"\");\n        if (!success) revert TransferFailed();\n\n        emit Unstaked(msg.sender, amount);\n    }\n\n    function claimRewards() external onlyHabitTracker returns (uint256 claimed) {\n        claimed = _pendingRewards(msg.sender);\n        \n        // Safety: Check contract has funds\n        uint256 balance = address(this).balance;\n        if (balance == 0) return 0;\n        \n        // Safety: Cap at 10% of balance per claim\n        uint256 maxClaim = balance / 10;\n        if (claimed > maxClaim) claimed = maxClaim;\n        \n        // Safety: Can only claim what's available\n        if (claimed > balance) claimed = balance;\n        \n        if (claimed > 0) {\n            lastUpdateTime[msg.sender] = block.timestamp;\n            (bool success, ) = habitTracker.call{value: claimed}(\"\");\n            if (!success) revert TransferFailed();\n            emit RewardsClaimed(msg.sender, claimed);\n        }\n        \n        return claimed;\n    }\n\n    function getStakedAmount(address who) external view returns (uint256) {\n        return deposits[who];\n    }\n\n    function getPendingRewards(address who) external view returns (uint256) {\n        return _pendingRewards(who);\n    }\n\n    function getContractBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n\n    function _updateRewards(address user) internal {\n        if (lastUpdateTime[user] == 0) {\n            lastUpdateTime[user] = block.timestamp;\n        }\n    }\n\n    function _pendingRewards(address user) internal view returns (uint256) {\n        if (lastUpdateTime[user] == 0 || deposits[user] == 0) {\n            return 0;\n        }\n\n        uint256 timeElapsed = block.timestamp - lastUpdateTime[user];\n        // rewards = staked * ratePerSecond * timeElapsed / 1e18\n        return (deposits[user] * ratePerSecond * timeElapsed) / 1e18;\n    }\n\n    /**\n     * @notice Allow receiving PAS for reward pool\n     */\n    receive() external payable {}\n}\n\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"parameters":"z","fallbackOz":true,"runs":200},"outputSelection":{"*":{"*":["abi"]}},"resolc":{"version":"latest","compilerSource":"npm","settings":{"optimizer":{"enabled":true,"parameters":"z","fallbackOz":true,"runs":200}}}}},"output":{"errors":[],"version":"0.8.28","long_version":"0.8.28+commit.7893614a.Emscripten.clang","revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","sources":{"contracts/interfaces/IStakingAdapter.sol":{"id":0,"ast":{"absolutePath":"contracts/interfaces/IStakingAdapter.sol","exportedSymbols":{"IStakingAdapter":[37]},"id":38,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakingAdapter","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:335:0","text":" @title IStakingAdapter\n @notice Chain-agnostic interface for external staking protocols\n @dev Allows HabitTracker to integrate with any staking protocol\n \n @dev Terminology:\n - Yield Stake: User rewards staked in external protocol (principal)\n - Yield Rewards: Additional rewards generated from external protocol"},"fullyImplemented":false,"id":37,"linearizedBaseContracts":[37],"name":"IStakingAdapter","nameLocation":"404:15:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"426:221:0","text":" @notice Create yield stake by staking user rewards into external protocol\n @param amount Amount to stake (user's earned rewards)\n @dev For native token staking, msg.value should equal amount"},"functionSelector":"a694fc3a","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"stake","nameLocation":"661:5:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"amount","nameLocation":"675:6:0","nodeType":"VariableDeclaration","scope":8,"src":"667:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4,"name":"uint256","nodeType":"ElementaryTypeName","src":"667:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"666:16:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"699:0:0"},"scope":37,"src":"652:48:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"706:218:0","text":" @notice Unstake from external protocol (yield stake + yield rewards)\n @param amount Amount to unstake\n @dev Unstaked tokens (principal + yield rewards) should be sent back to HabitTracker"},"functionSelector":"2e17de78","id":14,"implemented":false,"kind":"function","modifiers":[],"name":"unstake","nameLocation":"938:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"amount","nameLocation":"954:6:0","nodeType":"VariableDeclaration","scope":14,"src":"946:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"945:16:0"},"returnParameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"970:0:0"},"scope":37,"src":"929:42:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"977:205:0","text":" @notice Claim accumulated yield rewards from external protocol\n @return claimed Amount of yield rewards claimed\n @dev Returns 0 if no yield rewards available or not supported"},"functionSelector":"372500ab","id":20,"implemented":false,"kind":"function","modifiers":[],"name":"claimRewards","nameLocation":"1196:12:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"1208:2:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"claimed","nameLocation":"1237:7:0","nodeType":"VariableDeclaration","scope":20,"src":"1229:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:0"},"scope":37,"src":"1187:59:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"1252:198:0","text":" @notice Get total yield stake amount for an address (principal only)\n @param who Address to check\n @return staked Total yield stake by address (excludes yield rewards)"},"functionSelector":"4da6a556","id":28,"implemented":false,"kind":"function","modifiers":[],"name":"getStakedAmount","nameLocation":"1464:15:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"who","nameLocation":"1488:3:0","nodeType":"VariableDeclaration","scope":28,"src":"1480:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:13:0"},"returnParameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"staked","nameLocation":"1524:6:0","nodeType":"VariableDeclaration","scope":28,"src":"1516:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1516:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1515:16:0"},"scope":37,"src":"1455:77:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"1538:208:0","text":" @notice Get pending unclaimed yield rewards for an address\n @param who Address to check\n @return pending Pending yield rewards\n @dev Returns 0 if not supported by protocol"},"functionSelector":"f6ed2017","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"getPendingRewards","nameLocation":"1760:17:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"who","nameLocation":"1786:3:0","nodeType":"VariableDeclaration","scope":36,"src":"1778:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1778:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1777:13:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"pending","nameLocation":"1822:7:0","nodeType":"VariableDeclaration","scope":36,"src":"1814:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1814:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1813:17:0"},"scope":37,"src":"1751:80:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":38,"src":"394:1439:0","usedErrors":[],"usedEvents":[]}],"src":"32:1803:0"}},"contracts/mocks/MockStakingRewards.sol":{"id":1,"ast":{"absolutePath":"contracts/mocks/MockStakingRewards.sol","exportedSymbols":{"IStakingAdapter":[37],"MockStakingRewards":[401]},"id":402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":39,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:1"},{"absolutePath":"contracts/interfaces/IStakingAdapter.sol","file":"../interfaces/IStakingAdapter.sol","id":40,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":402,"sourceUnit":38,"src":"58:43:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":42,"name":"IStakingAdapter","nameLocations":["311:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"311:15:1"},"id":43,"nodeType":"InheritanceSpecifier","src":"311:15:1"}],"canonicalName":"MockStakingRewards","contractDependencies":[],"contractKind":"contract","documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"103:176:1","text":" @title MockStakingRewards\n @notice Simple mock staking contract for testing on Passet Hub\n @dev Linear reward rate: rewards = staked * ratePerSecond * timeStaked"},"fullyImplemented":true,"id":401,"linearizedBaseContracts":[401,37],"name":"MockStakingRewards","nameLocation":"289:18:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8eff1a98","id":45,"mutability":"immutable","name":"ratePerSecond","nameLocation":"358:13:1","nodeType":"VariableDeclaration","scope":401,"src":"333:38:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"333:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"836ee1c0","id":47,"mutability":"immutable","name":"habitTracker","nameLocation":"453:12:1","nodeType":"VariableDeclaration","scope":401,"src":"428:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"fc7e286d","id":51,"mutability":"mutable","name":"deposits","nameLocation":"507:8:1","nodeType":"VariableDeclaration","scope":401,"src":"472:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":50,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"480:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"472:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"491:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"2ce9aead","id":55,"mutability":"mutable","name":"lastUpdateTime","nameLocation":"556:14:1","nodeType":"VariableDeclaration","scope":401,"src":"521:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":54,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"521:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d","id":61,"name":"Staked","nameLocation":"583:6:1","nodeType":"EventDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"606:4:1","nodeType":"VariableDeclaration","scope":61,"src":"590:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"590:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"620:6:1","nodeType":"VariableDeclaration","scope":61,"src":"612:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:38:1"},"src":"577:51:1"},{"anonymous":false,"eventSelector":"0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75","id":67,"name":"Unstaked","nameLocation":"639:8:1","nodeType":"EventDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"664:4:1","nodeType":"VariableDeclaration","scope":67,"src":"648:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"648:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"678:6:1","nodeType":"VariableDeclaration","scope":67,"src":"670:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"647:38:1"},"src":"633:53:1"},{"anonymous":false,"eventSelector":"fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe","id":73,"name":"RewardsClaimed","nameLocation":"697:14:1","nodeType":"EventDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"728:4:1","nodeType":"VariableDeclaration","scope":73,"src":"712:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"742:6:1","nodeType":"VariableDeclaration","scope":73,"src":"734:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"711:38:1"},"src":"691:59:1"},{"errorSelector":"c39fa004","id":75,"name":"OnlyHabitTracker","nameLocation":"762:16:1","nodeType":"ErrorDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"778:2:1"},"src":"756:25:1"},{"errorSelector":"f4d678b8","id":77,"name":"InsufficientBalance","nameLocation":"792:19:1","nodeType":"ErrorDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"811:2:1"},"src":"786:28:1"},{"errorSelector":"90b8ec18","id":79,"name":"TransferFailed","nameLocation":"825:14:1","nodeType":"ErrorDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"839:2:1"},"src":"819:23:1"},{"errorSelector":"2c5211c6","id":81,"name":"InvalidAmount","nameLocation":"853:13:1","nodeType":"ErrorDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"866:2:1"},"src":"847:22:1"},{"body":{"id":92,"nodeType":"Block","src":"903:85:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":83,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"917:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"921:6:1","memberName":"sender","nodeType":"MemberAccess","src":"917:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":85,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"931:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"917:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":90,"nodeType":"IfStatement","src":"913:57:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"OnlyHabitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"952:16:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":89,"nodeType":"RevertStatement","src":"945:25:1"}},{"id":91,"nodeType":"PlaceholderStatement","src":"980:1:1"}]},"id":93,"name":"onlyHabitTracker","nameLocation":"884:16:1","nodeType":"ModifierDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[],"src":"900:2:1"},"src":"875:113:1","virtual":false,"visibility":"internal"},{"body":{"id":109,"nodeType":"Block","src":"1199:85:1","statements":[{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"ratePerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"1209:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"_ratePerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"1225:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1209:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":104,"nodeType":"ExpressionStatement","src":"1209:30:1"},{"expression":{"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":105,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1249:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":106,"name":"_habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1264:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1249:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":108,"nodeType":"ExpressionStatement","src":"1249:28:1"}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"994:141:1","text":" @param _ratePerSecond Reward rate (e.g., 1e15 = 0.1% per second)\n @param _habitTracker HabitTracker contract address"},"id":110,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"_ratePerSecond","nameLocation":"1160:14:1","nodeType":"VariableDeclaration","scope":110,"src":"1152:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"_habitTracker","nameLocation":"1184:13:1","nodeType":"VariableDeclaration","scope":110,"src":"1176:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1151:47:1"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"1199:0:1"},"scope":401,"src":"1140:144:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8],"body":{"id":150,"nodeType":"Block","src":"1355:232:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1369:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1373:5:1","memberName":"value","nodeType":"MemberAccess","src":"1369:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":119,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"1382:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1369:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":124,"nodeType":"IfStatement","src":"1365:47:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":121,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1397:13:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1397:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":123,"nodeType":"RevertStatement","src":"1390:22:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":125,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"1426:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1436:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1426:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":131,"nodeType":"IfStatement","src":"1422:39:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":128,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1446:13:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1446:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":130,"nodeType":"RevertStatement","src":"1439:22:1"}},{"expression":{"arguments":[{"expression":{"id":133,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1487:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1491:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1487:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":132,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1472:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1472:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"1472:26:1"},{"expression":{"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":137,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1508:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":140,"indexExpression":{"expression":{"id":138,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1517:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1521:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1517:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1508:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":141,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"1532:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1508:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":143,"nodeType":"ExpressionStatement","src":"1508:30:1"},{"eventCall":{"arguments":[{"expression":{"id":145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1561:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1565:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1561:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":147,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"1573:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":144,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1554:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":149,"nodeType":"EmitStatement","src":"1549:31:1"}]},"functionSelector":"a694fc3a","id":151,"implemented":true,"kind":"function","modifiers":[{"id":115,"kind":"modifierInvocation","modifierName":{"id":114,"name":"onlyHabitTracker","nameLocations":["1338:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":93,"src":"1338:16:1"},"nodeType":"ModifierInvocation","src":"1338:16:1"}],"name":"stake","nameLocation":"1299:5:1","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"amount","nameLocation":"1313:6:1","nodeType":"VariableDeclaration","scope":151,"src":"1305:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1304:16:1"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"1355:0:1"},"scope":401,"src":"1290:297:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[14],"body":{"id":208,"nodeType":"Block","src":"1652:400:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":158,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1666:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"IfStatement","src":"1662:39:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1686:13:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1686:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":163,"nodeType":"RevertStatement","src":"1679:22:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":165,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1715:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":168,"indexExpression":{"expression":{"id":166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1724:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1728:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1724:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1715:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":169,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1738:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1715:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":174,"nodeType":"IfStatement","src":"1711:63:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":171,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1753:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1753:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":173,"nodeType":"RevertStatement","src":"1746:28:1"}},{"expression":{"arguments":[{"expression":{"id":176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1800:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1804:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1800:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":175,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1785:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1785:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"1785:26:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":180,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1821:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":183,"indexExpression":{"expression":{"id":181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1830:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1834:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1830:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1821:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":184,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1845:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":186,"nodeType":"ExpressionStatement","src":"1821:30:1"},{"assignments":[188,null],"declarations":[{"constant":false,"id":188,"mutability":"mutable","name":"success","nameLocation":"1905:7:1","nodeType":"VariableDeclaration","scope":208,"src":"1900:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":187,"name":"bool","nodeType":"ElementaryTypeName","src":"1900:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":195,"initialValue":{"arguments":[{"hexValue":"","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1951:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":189,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1918:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1931:4:1","memberName":"call","nodeType":"MemberAccess","src":"1918:17:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":191,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1943:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1918:32:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1918:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1899:55:1"},{"condition":{"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1968:8:1","subExpression":{"id":196,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"1969:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":201,"nodeType":"IfStatement","src":"1964:37:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":198,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1985:14:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1985:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":200,"nodeType":"RevertStatement","src":"1978:23:1"}},{"eventCall":{"arguments":[{"expression":{"id":203,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2026:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2030:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2026:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":205,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2038:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":202,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2017:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"EmitStatement","src":"2012:33:1"}]},"functionSelector":"2e17de78","id":209,"implemented":true,"kind":"function","modifiers":[{"id":156,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyHabitTracker","nameLocations":["1635:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":93,"src":"1635:16:1"},"nodeType":"ModifierInvocation","src":"1635:16:1"}],"name":"unstake","nameLocation":"1602:7:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"amount","nameLocation":"1618:6:1","nodeType":"VariableDeclaration","scope":209,"src":"1610:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1609:16:1"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1652:0:1"},"scope":401,"src":"1593:459:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[20],"body":{"id":295,"nodeType":"Block","src":"2134:767:1","statements":[{"expression":{"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":216,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2144:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2170:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2174:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2170:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2154:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2144:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":222,"nodeType":"ExpressionStatement","src":"2144:37:1"},{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"balance","nameLocation":"2252:7:1","nodeType":"VariableDeclaration","scope":295,"src":"2244:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":230,"initialValue":{"expression":{"arguments":[{"id":227,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2270:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_MockStakingRewards_$401","typeString":"contract MockStakingRewards"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MockStakingRewards_$401","typeString":"contract MockStakingRewards"}],"id":226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2262:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:1","typeDescriptions":{}}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2276:7:1","memberName":"balance","nodeType":"MemberAccess","src":"2262:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2244:39:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2297:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2308:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2297:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":236,"nodeType":"IfStatement","src":"2293:26:1","trueBody":{"expression":{"hexValue":"30","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2318:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":215,"id":235,"nodeType":"Return","src":"2311:8:1"}},{"assignments":[238],"declarations":[{"constant":false,"id":238,"mutability":"mutable","name":"maxClaim","nameLocation":"2397:8:1","nodeType":"VariableDeclaration","scope":295,"src":"2389:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":242,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":239,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2408:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2418:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2408:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:31:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":243,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2434:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":244,"name":"maxClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2444:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2434:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":250,"nodeType":"IfStatement","src":"2430:42:1","trueBody":{"expression":{"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":246,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":247,"name":"maxClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2464:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2454:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":249,"nodeType":"ExpressionStatement","src":"2454:18:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2546:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":252,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2556:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2546:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":258,"nodeType":"IfStatement","src":"2542:40:1","trueBody":{"expression":{"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":254,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2565:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":255,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2575:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":257,"nodeType":"ExpressionStatement","src":"2565:17:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":259,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2605:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2615:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2605:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":292,"nodeType":"IfStatement","src":"2601:261:1","trueBody":{"id":291,"nodeType":"Block","src":"2618:244:1","statements":[{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":262,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2632:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":265,"indexExpression":{"expression":{"id":263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2647:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2651:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2647:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2632:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":266,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2661:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2667:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"2661:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":269,"nodeType":"ExpressionStatement","src":"2632:44:1"},{"assignments":[271,null],"declarations":[{"constant":false,"id":271,"mutability":"mutable","name":"success","nameLocation":"2696:7:1","nodeType":"VariableDeclaration","scope":291,"src":"2691:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":270,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":278,"initialValue":{"arguments":[{"hexValue":"","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2743:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":272,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"2709:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2722:4:1","memberName":"call","nodeType":"MemberAccess","src":"2709:17:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":274,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2734:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2709:33:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2709:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2690:56:1"},{"condition":{"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2764:8:1","subExpression":{"id":279,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"2765:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"IfStatement","src":"2760:37:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2781:14:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2781:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":283,"nodeType":"RevertStatement","src":"2774:23:1"}},{"eventCall":{"arguments":[{"expression":{"id":286,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2831:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2835:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2831:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":288,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2843:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":285,"name":"RewardsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2816:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2816:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"EmitStatement","src":"2811:40:1"}]}},{"expression":{"id":293,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":215,"id":294,"nodeType":"Return","src":"2880:14:1"}]},"functionSelector":"372500ab","id":296,"implemented":true,"kind":"function","modifiers":[{"id":212,"kind":"modifierInvocation","modifierName":{"id":211,"name":"onlyHabitTracker","nameLocations":["2091:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":93,"src":"2091:16:1"},"nodeType":"ModifierInvocation","src":"2091:16:1"}],"name":"claimRewards","nameLocation":"2067:12:1","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"2079:2:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"claimed","nameLocation":"2125:7:1","nodeType":"VariableDeclaration","scope":296,"src":"2117:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2116:17:1"},"scope":401,"src":"2058:843:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[28],"body":{"id":307,"nodeType":"Block","src":"2977:37:1","statements":[{"expression":{"baseExpression":{"id":303,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2994:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":305,"indexExpression":{"id":304,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3003:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2994:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":302,"id":306,"nodeType":"Return","src":"2987:20:1"}]},"functionSelector":"4da6a556","id":308,"implemented":true,"kind":"function","modifiers":[],"name":"getStakedAmount","nameLocation":"2916:15:1","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"who","nameLocation":"2940:3:1","nodeType":"VariableDeclaration","scope":308,"src":"2932:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"2932:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2931:13:1"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":308,"src":"2968:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2967:9:1"},"scope":401,"src":"2907:107:1","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[36],"body":{"id":319,"nodeType":"Block","src":"3092:44:1","statements":[{"expression":{"arguments":[{"id":316,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"3125:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":315,"name":"_pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3109:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3109:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":314,"id":318,"nodeType":"Return","src":"3102:27:1"}]},"functionSelector":"f6ed2017","id":320,"implemented":true,"kind":"function","modifiers":[],"name":"getPendingRewards","nameLocation":"3029:17:1","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"who","nameLocation":"3055:3:1","nodeType":"VariableDeclaration","scope":320,"src":"3047:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3046:13:1"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":320,"src":"3083:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"3083:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3082:9:1"},"scope":401,"src":"3020:116:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":331,"nodeType":"Block","src":"3204:45:1","statements":[{"expression":{"expression":{"arguments":[{"id":327,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3229:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_MockStakingRewards_$401","typeString":"contract MockStakingRewards"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MockStakingRewards_$401","typeString":"contract MockStakingRewards"}],"id":326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3221:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"3221:7:1","typeDescriptions":{}}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3235:7:1","memberName":"balance","nodeType":"MemberAccess","src":"3221:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":324,"id":330,"nodeType":"Return","src":"3214:28:1"}]},"functionSelector":"6f9fb98a","id":332,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"3151:18:1","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"3169:2:1"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"3195:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3195:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3194:9:1"},"scope":401,"src":"3142:107:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":351,"nodeType":"Block","src":"3302:110:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":337,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3316:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":339,"indexExpression":{"id":338,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"3331:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3316:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3340:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3316:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":350,"nodeType":"IfStatement","src":"3312:94:1","trueBody":{"id":349,"nodeType":"Block","src":"3343:63:1","statements":[{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":342,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3357:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":344,"indexExpression":{"id":343,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"3372:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3357:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":345,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3380:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3386:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"3380:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3357:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":348,"nodeType":"ExpressionStatement","src":"3357:38:1"}]}}]},"id":352,"implemented":true,"kind":"function","modifiers":[],"name":"_updateRewards","nameLocation":"3264:14:1","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"user","nameLocation":"3287:4:1","nodeType":"VariableDeclaration","scope":352,"src":"3279:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"3279:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3278:14:1"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"3302:0:1"},"scope":401,"src":"3255:157:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":394,"nodeType":"Block","src":"3489:309:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":359,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3503:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":361,"indexExpression":{"id":360,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3518:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3503:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3527:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3503:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":364,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"3532:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":366,"indexExpression":{"id":365,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3541:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3532:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3550:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3532:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3503:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"3499:87:1","trueBody":{"id":372,"nodeType":"Block","src":"3553:33:1","statements":[{"expression":{"hexValue":"30","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3574:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":358,"id":371,"nodeType":"Return","src":"3567:8:1"}]}},{"assignments":[375],"declarations":[{"constant":false,"id":375,"mutability":"mutable","name":"timeElapsed","nameLocation":"3604:11:1","nodeType":"VariableDeclaration","scope":394,"src":"3596:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":382,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":376,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3618:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3624:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"3618:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":378,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3636:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":380,"indexExpression":{"id":379,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3651:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3636:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3618:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3596:60:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":383,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"3739:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":385,"indexExpression":{"id":384,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3748:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3739:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":386,"name":"ratePerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"3756:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3739:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":388,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3772:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3739:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3738:46:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3787:4:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3738:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":358,"id":393,"nodeType":"Return","src":"3731:60:1"}]},"id":395,"implemented":true,"kind":"function","modifiers":[],"name":"_pendingRewards","nameLocation":"3427:15:1","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"user","nameLocation":"3451:4:1","nodeType":"VariableDeclaration","scope":395,"src":"3443:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"3443:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3442:14:1"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"3480:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:1"},"scope":401,"src":"3418:380:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":399,"nodeType":"Block","src":"3898:2:1","statements":[]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"3804:62:1","text":" @notice Allow receiving PAS for reward pool"},"id":400,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"3878:2:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"3898:0:1"},"scope":401,"src":"3871:29:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":402,"src":"280:3622:1","usedErrors":[75,77,79,81],"usedEvents":[61,67,73]}],"src":"32:3872:1"}}},"contracts":{"contracts/interfaces/IStakingAdapter.sol":{"IStakingAdapter":{"abi":[{"inputs":[],"name":"claimRewards","outputs":[{"internalType":"uint256","name":"claimed","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getPendingRewards","outputs":[{"internalType":"uint256","name":"pending","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getStakedAmount","outputs":[{"internalType":"uint256","name":"staked","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pending\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"staked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allows HabitTracker to integrate with any staking protocol Terminology: - Yield Stake: User rewards staked in external protocol (principal) - Yield Rewards: Additional rewards generated from external protocol\",\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"Returns 0 if no yield rewards available or not supported\",\"returns\":{\"claimed\":\"Amount of yield rewards claimed\"}},\"getPendingRewards(address)\":{\"details\":\"Returns 0 if not supported by protocol\",\"params\":{\"who\":\"Address to check\"},\"returns\":{\"pending\":\"Pending yield rewards\"}},\"getStakedAmount(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"staked\":\"Total yield stake by address (excludes yield rewards)\"}},\"stake(uint256)\":{\"details\":\"For native token staking, msg.value should equal amount\",\"params\":{\"amount\":\"Amount to stake (user's earned rewards)\"}},\"unstake(uint256)\":{\"details\":\"Unstaked tokens (principal + yield rewards) should be sent back to HabitTracker\",\"params\":{\"amount\":\"Amount to unstake\"}}},\"title\":\"IStakingAdapter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated yield rewards from external protocol\"},\"getPendingRewards(address)\":{\"notice\":\"Get pending unclaimed yield rewards for an address\"},\"getStakedAmount(address)\":{\"notice\":\"Get total yield stake amount for an address (principal only)\"},\"stake(uint256)\":{\"notice\":\"Create yield stake by staking user rewards into external protocol\"},\"unstake(uint256)\":{\"notice\":\"Unstake from external protocol (yield stake + yield rewards)\"}},\"notice\":\"Chain-agnostic interface for external staking protocols\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakingAdapter.sol\":\"IStakingAdapter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0x53ee1805657bbdd0146ec2bb17aa4e0fb095042d59a9a3b3dbde0f2952ff4427\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fa2790c6d8caa9d429dc944a1da9bf743984bb6663b9a767df65056818aba11\",\"dweb:/ipfs/QmXbGxuPJTXcz6cPaxMChXc5XWX4nPXUiAbgpSZRw7WM3B\"]}},\"version\":1}","evm":{"methodIdentifiers":{"claimRewards()":"372500ab","getPendingRewards(address)":"f6ed2017","getStakedAmount(address)":"4da6a556","stake(uint256)":"a694fc3a","unstake(uint256)":"2e17de78"}},"irOptimized":""}},"contracts/mocks/MockStakingRewards.sol":{"MockStakingRewards":{"abi":[{"inputs":[{"internalType":"uint256","name":"_ratePerSecond","type":"uint256"},{"internalType":"address","name":"_habitTracker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"OnlyHabitTracker","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"claimRewards","outputs":[{"internalType":"uint256","name":"claimed","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getPendingRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getStakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"habitTracker","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ratePerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_habitTracker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyHabitTracker\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"habitTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratePerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Linear reward rate: rewards = staked * ratePerSecond * timeStaked\",\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"Returns 0 if no yield rewards available or not supported\",\"returns\":{\"claimed\":\"Amount of yield rewards claimed\"}},\"constructor\":{\"params\":{\"_habitTracker\":\"HabitTracker contract address\",\"_ratePerSecond\":\"Reward rate (e.g., 1e15 = 0.1% per second)\"}},\"getPendingRewards(address)\":{\"details\":\"Returns 0 if not supported by protocol\",\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"Pending yield rewards\"}},\"getStakedAmount(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"Total yield stake by address (excludes yield rewards)\"}},\"stake(uint256)\":{\"details\":\"For native token staking, msg.value should equal amount\",\"params\":{\"amount\":\"Amount to stake (user's earned rewards)\"}},\"unstake(uint256)\":{\"details\":\"Unstaked tokens (principal + yield rewards) should be sent back to HabitTracker\",\"params\":{\"amount\":\"Amount to unstake\"}}},\"title\":\"MockStakingRewards\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated yield rewards from external protocol\"},\"getPendingRewards(address)\":{\"notice\":\"Get pending unclaimed yield rewards for an address\"},\"getStakedAmount(address)\":{\"notice\":\"Get total yield stake amount for an address (principal only)\"},\"stake(uint256)\":{\"notice\":\"Create yield stake by staking user rewards into external protocol\"},\"unstake(uint256)\":{\"notice\":\"Unstake from external protocol (yield stake + yield rewards)\"}},\"notice\":\"Simple mock staking contract for testing on Passet Hub\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockStakingRewards.sol\":\"MockStakingRewards\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0x53ee1805657bbdd0146ec2bb17aa4e0fb095042d59a9a3b3dbde0f2952ff4427\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fa2790c6d8caa9d429dc944a1da9bf743984bb6663b9a767df65056818aba11\",\"dweb:/ipfs/QmXbGxuPJTXcz6cPaxMChXc5XWX4nPXUiAbgpSZRw7WM3B\"]},\"contracts/mocks/MockStakingRewards.sol\":{\"keccak256\":\"0x12aeafa053a67ac79b3148e0dcf0359b22cc7800818e160a306036a4ddbf0b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05966a4dcbfa1de52986086ea921a6d31b550213b4734ea77b01e675e38b0da8\",\"dweb:/ipfs/QmfLyxGwmauZtdHjCzGsAFwgrFXaNpJh6eDhKvPGNCZB4g\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 100/65744 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 4092\n// Code size = 13699 bytes\n\n      : @0 (gas: 7)\n     0: sp = sp + 0xffffffffffffffe8\n     3: u64 [sp + 0x10] = ra\n     6: u64 [sp + 0x8] = s0\n     9: u64 [sp] = s1\n    11: s1 = 0x20060\n    16: s0 = i32 [0x20060]\n    21: jump @3 if s0 == 0\n      : @1 (gas: 5)\n    24: a0 = 0x30090\n    29: i32 a0 = a0 + 0\n    31: i32 a1 = s1 + 0\n    33: ecalli 7 // 'get_immutable_data'\n    35: fallthrough\n      : @2 (gas: 3)\n    36: a0 = i32 [0x20060]\n    41: u32 [0x20060] = 0\n    46: jump @4 if a0 <u s0\n      : @3 (gas: 5)\n    49: ra = u64 [sp + 0x10]\n    52: s0 = u64 [sp + 0x8]\n    55: s1 = u64 [sp]\n    57: sp = sp + 0x18\n    60: ret\n      : @4 (gas: 1)\n    62: trap\n      : @5 (gas: 2)\n    63: a1 = i32 [0x20060]\n    68: jump @46 if a1 == 0\n      : @6 (gas: 4)\n    72: a0 = 0x30090\n    77: i32 a0 = a0 + 0\n    79: ecalli 15 // 'set_immutable_data'\n    81: jump @46\n      : @7 (gas: 8)\n    84: sp = sp + 0xfffffffffffffff0\n    87: u64 [sp + 0x8] = ra\n    90: u64 [sp] = s0\n    92: a2 = a1\n    94: s0 = a0\n    96: a1 = 0x20\n    99: a0 = a2\n   101: ra = 2, jump @15\n      : @8 [@dyn 1] (gas: 100)\n   106: a1 = u8 [a0 + 0x1]\n   109: a2 = u8 [a0]\n   111: a3 = u8 [a0 + 0x2]\n   114: a4 = u8 [a0 + 0x3]\n   117: a1 = a1 << 0x8\n   120: a1 = a1 | a2\n   123: a3 = a3 << 0x10\n   126: a4 = a4 << 0x18\n   129: a3 = a3 | a4\n   132: a1 = a1 | a3\n   135: a2 = u8 [a0 + 0x5]\n   138: a3 = u8 [a0 + 0x4]\n   141: a4 = u8 [a0 + 0x6]\n   144: a5 = u8 [a0 + 0x7]\n   147: a2 = a2 << 0x8\n   150: a2 = a2 | a3\n   153: a4 = a4 << 0x10\n   156: a5 = a5 << 0x18\n   159: a4 = a4 | a5\n   162: a2 = a2 | a4\n   165: a2 = a2 << 0x20\n   168: t0 = a2 | a1\n   171: a2 = u8 [a0 + 0x9]\n   174: a3 = u8 [a0 + 0x8]\n   177: a4 = u8 [a0 + 0xa]\n   180: a5 = u8 [a0 + 0xb]\n   183: a2 = a2 << 0x8\n   186: a2 = a2 | a3\n   189: a4 = a4 << 0x10\n   192: a5 = a5 << 0x18\n   195: a4 = a4 | a5\n   198: a2 = a2 | a4\n   201: a3 = u8 [a0 + 0xd]\n   204: a4 = u8 [a0 + 0xc]\n   207: a5 = u8 [a0 + 0xe]\n   210: a1 = u8 [a0 + 0xf]\n   213: a3 = a3 << 0x8\n   216: a3 = a3 | a4\n   219: a5 = a5 << 0x10\n   222: a1 = a1 << 0x18\n   225: a1 = a1 | a5\n   228: a1 = a1 | a3\n   231: a1 = a1 << 0x20\n   234: t1 = a1 | a2\n   237: a1 = u8 [a0 + 0x11]\n   240: a3 = u8 [a0 + 0x10]\n   243: a4 = u8 [a0 + 0x12]\n   246: a5 = u8 [a0 + 0x13]\n   249: a1 = a1 << 0x8\n   252: a1 = a1 | a3\n   255: a4 = a4 << 0x10\n   258: a5 = a5 << 0x18\n   261: a4 = a4 | a5\n   264: a1 = a1 | a4\n   267: a3 = u8 [a0 + 0x15]\n   270: a4 = u8 [a0 + 0x14]\n   273: a5 = u8 [a0 + 0x16]\n   276: a2 = u8 [a0 + 0x17]\n   279: a3 = a3 << 0x8\n   282: a3 = a3 | a4\n   285: a5 = a5 << 0x10\n   288: a2 = a2 << 0x18\n   291: a2 = a2 | a5\n   294: a2 = a2 | a3\n   297: a2 = a2 << 0x20\n   300: a3 = a2 | a1\n   303: a1 = u8 [a0 + 0x19]\n   306: a2 = u8 [a0 + 0x18]\n   309: a4 = u8 [a0 + 0x1a]\n   312: a5 = u8 [a0 + 0x1b]\n   315: a1 = a1 << 0x8\n   318: a1 = a1 | a2\n   321: a4 = a4 << 0x10\n   324: a5 = a5 << 0x18\n   327: a4 = a4 | a5\n   330: a1 = a1 | a4\n   333: a2 = u8 [a0 + 0x1d]\n   336: a4 = u8 [a0 + 0x1c]\n   339: a5 = u8 [a0 + 0x1e]\n   342: a0 = u8 [a0 + 0x1f]\n   345: a2 = a2 << 0x8\n   348: a2 = a2 | a4\n   351: a5 = a5 << 0x10\n   354: a0 = a0 << 0x18\n   357: a0 = a0 | a5\n   360: a0 = a0 | a2\n   363: a0 = a0 << 0x20\n   366: a0 = a0 | a1\n   369: a0 = reverse a0\n   371: a1 = reverse a3\n   373: a2 = reverse t1\n   375: a3 = reverse t0\n   377: u64 [s0 + 0x18] = a3\n   380: u64 [s0 + 0x10] = a2\n   383: u64 [s0 + 0x8] = a1\n   386: u64 [s0] = a0\n   388: ra = u64 [sp + 0x8]\n   391: s0 = u64 [sp]\n   393: sp = sp + 0x10\n   396: ret\n      : @9 (gas: 12)\n   398: sp = sp + 0xffffffffffffffd8\n   401: u64 [sp + 0x20] = ra\n   404: u64 [sp + 0x18] = s0\n   407: u64 [sp + 0x10] = s1\n   410: a2 = u64 [a1]\n   412: u64 [sp + 0x8] = a2\n   415: a2 = u64 [a1 + 0x8]\n   418: u64 [sp] = a2\n   420: s0 = u64 [a1 + 0x10]\n   423: s1 = u64 [a1 + 0x18]\n   426: a1 = 0x20\n   429: ra = 4, jump @15\n      : @10 [@dyn 2] (gas: 71)\n   434: a1 = reverse s1\n   436: a2 = reverse s0\n   438: a3 = u64 [sp]\n   440: a3 = reverse a3\n   442: a4 = u64 [sp + 0x8]\n   445: a4 = reverse a4\n   447: u8 [a0 + 0x18] = a4\n   450: u8 [a0 + 0x10] = a3\n   453: u8 [a0 + 0x8] = a2\n   456: u8 [a0] = a1\n   458: a5 = a4 >> 0x38\n   461: u8 [a0 + 0x1f] = a5\n   464: a5 = a4 >> 0x30\n   467: u8 [a0 + 0x1e] = a5\n   470: a5 = a4 >> 0x28\n   473: u8 [a0 + 0x1d] = a5\n   476: a5 = a4 >> 0x20\n   479: u8 [a0 + 0x1c] = a5\n   482: a5 = a4 >> 0x18\n   485: u8 [a0 + 0x1b] = a5\n   488: a5 = a4 >> 0x10\n   491: u8 [a0 + 0x1a] = a5\n   494: a4 = a4 >> 0x8\n   497: u8 [a0 + 0x19] = a4\n   500: a4 = a3 >> 0x38\n   503: u8 [a0 + 0x17] = a4\n   506: a4 = a3 >> 0x30\n   509: u8 [a0 + 0x16] = a4\n   512: a4 = a3 >> 0x28\n   515: u8 [a0 + 0x15] = a4\n   518: a4 = a3 >> 0x20\n   521: u8 [a0 + 0x14] = a4\n   524: a4 = a3 >> 0x18\n   527: u8 [a0 + 0x13] = a4\n   530: a4 = a3 >> 0x10\n   533: u8 [a0 + 0x12] = a4\n   536: a3 = a3 >> 0x8\n   539: u8 [a0 + 0x11] = a3\n   542: a3 = a2 >> 0x38\n   545: u8 [a0 + 0xf] = a3\n   548: a3 = a2 >> 0x30\n   551: u8 [a0 + 0xe] = a3\n   554: a3 = a2 >> 0x28\n   557: u8 [a0 + 0xd] = a3\n   560: a3 = a2 >> 0x20\n   563: u8 [a0 + 0xc] = a3\n   566: a3 = a2 >> 0x18\n   569: u8 [a0 + 0xb] = a3\n   572: a3 = a2 >> 0x10\n   575: u8 [a0 + 0xa] = a3\n   578: a2 = a2 >> 0x8\n   581: u8 [a0 + 0x9] = a2\n   584: a2 = a1 >> 0x38\n   587: u8 [a0 + 0x7] = a2\n   590: a2 = a1 >> 0x30\n   593: u8 [a0 + 0x6] = a2\n   596: a2 = a1 >> 0x28\n   599: u8 [a0 + 0x5] = a2\n   602: a2 = a1 >> 0x20\n   605: u8 [a0 + 0x4] = a2\n   608: a2 = a1 >> 0x18\n   611: u8 [a0 + 0x3] = a2\n   614: a2 = a1 >> 0x10\n   617: u8 [a0 + 0x2] = a2\n   620: a1 = a1 >> 0x8\n   623: u8 [a0 + 0x1] = a1\n   626: ra = u64 [sp + 0x20]\n   629: s0 = u64 [sp + 0x18]\n   632: s1 = u64 [sp + 0x10]\n   635: sp = sp + 0x28\n   638: ret\n      : @11 (gas: 48)\n   640: sp = sp + 0xffffffffffffffa0\n   643: u64 [sp + 0x58] = ra\n   646: u64 [sp + 0x50] = s0\n   649: u64 [sp + 0x48] = s1\n   652: s0 = sp + 0x60\n   655: sp = sp & 0xffffffffffffffe0\n   658: s1 = a0\n   660: a0 = u64 [a1 + 0x18]\n   663: a2 = u64 [a1 + 0x10]\n   666: a3 = u64 [a1 + 0x8]\n   669: a1 = u64 [a1]\n   671: a0 = reverse a0\n   673: a2 = reverse a2\n   675: a3 = reverse a3\n   677: a1 = reverse a1\n   679: u64 [sp + 0x18] = a1\n   682: u64 [sp + 0x10] = a3\n   685: u64 [sp + 0x8] = a2\n   688: u64 [sp] = a0\n   690: u64 [sp + 56] = 0\n   693: u64 [sp + 48] = 0\n   696: u64 [sp + 40] = 0\n   699: u64 [sp + 32] = 0\n   702: u32 [sp + 64] = 0x20\n   706: i32 a1 = sp + 0\n   708: i32 a3 = sp + 0x20\n   711: i32 a4 = sp + 0x40\n   714: a2 = 0xffffffffffffffff\n   717: a0 = 0\n   719: ecalli 8 // 'get_storage'\n   721: a0 = u64 [sp + 0x38]\n   724: a1 = u64 [sp + 0x30]\n   727: a2 = u64 [sp + 0x28]\n   730: a3 = u64 [sp + 0x20]\n   733: a0 = reverse a0\n   735: a1 = reverse a1\n   737: a2 = reverse a2\n   739: a3 = reverse a3\n   741: u64 [s1 + 0x18] = a3\n   744: u64 [s1 + 0x10] = a2\n   747: u64 [s1 + 0x8] = a1\n   750: u64 [s1] = a0\n   752: sp = s0 + 0xffffffffffffffa0\n   755: ra = u64 [sp + 0x58]\n   758: s0 = u64 [sp + 0x50]\n   761: s1 = u64 [sp + 0x48]\n   764: sp = sp + 0x60\n   767: ret\n      : @12 (gas: 40)\n   769: sp = sp + 0xffffffffffffffa0\n   772: u64 [sp + 0x58] = ra\n   775: u64 [sp + 0x50] = s0\n   778: s0 = sp + 0x60\n   781: sp = sp & 0xffffffffffffffe0\n   784: t0 = u64 [a0]\n   786: a3 = u64 [a0 + 0x8]\n   789: a4 = u64 [a0 + 0x10]\n   792: a0 = u64 [a0 + 0x18]\n   795: t1 = u64 [a1]\n   797: a2 = u64 [a1 + 0x8]\n   800: a5 = u64 [a1 + 0x10]\n   803: a1 = u64 [a1 + 0x18]\n   806: t2 = reverse a0\n   808: a4 = reverse a4\n   810: a3 = reverse a3\n   812: a0 = reverse t0\n   814: t0 = reverse a1\n   816: a5 = reverse a5\n   818: a2 = reverse a2\n   820: a1 = reverse t1\n   822: u64 [sp + 0x18] = a0\n   825: u64 [sp + 0x10] = a3\n   828: u64 [sp + 0x8] = a4\n   831: u64 [sp] = t2\n   833: u64 [sp + 0x38] = a1\n   836: u64 [sp + 0x30] = a2\n   839: u64 [sp + 0x28] = a5\n   842: u64 [sp + 0x20] = t0\n   845: i32 a1 = sp + 0\n   847: i32 a3 = sp + 0x20\n   850: a2 = 0xffffffffffffffff\n   853: a4 = 0x20\n   856: a0 = 0\n   858: ecalli 16 // 'set_storage'\n   860: sp = s0 + 0xffffffffffffffa0\n   863: ra = u64 [sp + 0x58]\n   866: s0 = u64 [sp + 0x50]\n   869: sp = sp + 0x60\n   872: ret\n      : @13 (gas: 24)\n   874: sp = sp + 0xffffffffffffff60\n   878: u64 [sp + 0x98] = ra\n   882: u64 [sp + 0x90] = s0\n   886: u64 [sp + 0x88] = s1\n   890: s0 = sp + 0xa0\n   894: sp = sp & 0xffffffffffffffe0\n   897: a4 = u64 [a3]\n   899: u64 [sp + 0x38] = a4\n   902: a4 = u64 [a3 + 0x8]\n   905: u64 [sp + 0x30] = a4\n   908: a4 = u64 [a3 + 0x10]\n   911: u64 [sp + 0x28] = a4\n   914: a3 = u64 [a3 + 0x18]\n   917: u64 [sp + 0x20] = a3\n   920: a3 = u64 [a2]\n   922: u64 [sp + 0x18] = a3\n   925: a3 = u64 [a2 + 0x8]\n   928: u64 [sp + 0x10] = a3\n   931: a3 = u64 [a2 + 0x10]\n   934: u64 [sp + 0x8] = a3\n   937: a2 = u64 [a2 + 0x18]\n   940: u64 [sp] = a2\n   942: s1 = a1\n   944: ra = 6, jump @15\n      : @14 [@dyn 3] (gas: 35)\n   948: a1 = u64 [sp]\n   950: a1 = reverse a1\n   952: a2 = u64 [sp + 0x8]\n   955: a2 = reverse a2\n   957: a3 = u64 [sp + 0x10]\n   960: a3 = reverse a3\n   962: a4 = u64 [sp + 0x18]\n   965: a4 = reverse a4\n   967: u64 [sp + 0x58] = a4\n   970: u64 [sp + 0x50] = a3\n   973: u64 [sp + 0x48] = a2\n   976: u64 [sp + 0x40] = a1\n   979: a1 = u64 [sp + 0x20]\n   982: a1 = reverse a1\n   984: a2 = u64 [sp + 0x28]\n   987: a2 = reverse a2\n   989: a3 = u64 [sp + 0x30]\n   992: a3 = reverse a3\n   994: a4 = u64 [sp + 0x38]\n   997: a4 = reverse a4\n   999: u64 [sp + 0x78] = a4\n  1002: u64 [sp + 0x70] = a3\n  1005: u64 [sp + 0x68] = a2\n  1008: u64 [sp + 0x60] = a1\n  1011: i32 a2 = a0 + 0\n  1013: i32 a3 = s1 + 0\n  1015: i32 a0 = sp + 0x40\n  1018: a1 = 0x2\n  1021: ecalli 6 // 'deposit_event'\n  1023: sp = s0 + 0xffffffffffffff60\n  1027: ra = u64 [sp + 0x98]\n  1031: s0 = u64 [sp + 0x90]\n  1035: s1 = u64 [sp + 0x88]\n  1039: sp = sp + 0xa0\n  1043: ret\n      : @15 (gas: 2)\n  1045: i32 a2 = a0 >> 0x10\n  1048: jump @20 if a2 != 0\n      : @16 (gas: 4)\n  1051: a1 = a1 + a0\n  1054: i32 a1 = a1 + 0x1f\n  1057: a1 = a1 & 0xffffffffffffffe0\n  1060: jump @20 if a1 >u 65536\n      : @17 (gas: 3)\n  1066: a2 = 0x20068\n  1071: a3 = i32 [0x20068]\n  1076: jump @19 if a3 >=u a1\n      : @18 (gas: 2)\n  1079: u32 [0x20068] = a1\n  1084: fallthrough\n      : @19 (gas: 4)\n  1085: a1 = 0x20070\n  1090: i32 a0 = a0 + 0\n  1092: a0 = a0 + a1\n  1095: ret\n      : @20 (gas: 1)\n  1097: trap\n      : @21 (gas: 6)\n  1098: sp = sp + 0xfffffffffffffff0\n  1101: u64 [sp + 0x8] = ra\n  1104: u64 [sp] = s0\n  1106: s0 = a0 & 0x1\n  1109: ecalli 4 // 'call_data_size'\n  1111: fallthrough\n      : @22 (gas: 2)\n  1112: u32 [0x20064] = a0\n  1117: jump @24 if s0 == 0\n      : @23 (gas: 1)\n  1120: ra = 8, jump @25\n      : @24 [@dyn 4] (gas: 1)\n  1124: ra = 10, jump @49\n      : @25 [@dyn 5] (gas: 13)\n  1129: sp = sp + 0xfffffffffffffe80\n  1133: u64 [sp + 0x178] = ra\n  1137: u64 [sp + 0x170] = s0\n  1141: u64 [sp + 0x168] = s1\n  1145: s0 = sp + 0x180\n  1149: sp = sp & 0xffffffffffffffe0\n  1152: u64 [sp + 344] = 0\n  1156: u64 [sp + 336] = 0\n  1160: u64 [sp + 328] = 0\n  1164: u64 [sp + 320] = 0\n  1168: i32 a0 = sp + 0x140\n  1172: ecalli 17 // 'value_transferred'\n  1174: fallthrough\n      : @26 (gas: 8)\n  1175: a0 = u64 [sp + 0x150]\n  1179: a1 = u64 [sp + 0x158]\n  1183: a2 = u64 [sp + 0x148]\n  1187: a3 = u64 [sp + 0x140]\n  1191: a1 = a1 | a2\n  1194: a0 = a0 | a3\n  1197: a0 = a0 | a1\n  1200: jump @39 if a0 != 0\n      : @27 (gas: 15)\n  1204: s1 = i32 [0x20064]\n  1209: a0 = s1 << 0x20\n  1212: a0 = a0 >> 0x20\n  1215: a0 = a0 + 0x1f\n  1218: a0 = a0 & 0xffffffffffffffe0\n  1221: a1 = a0 + 0xc0\n  1225: a0 = a1 <u a0\n  1228: u64 [sp + 312] = 0\n  1232: u64 [sp + 0x120] = a1\n  1236: u64 [sp + 0x128] = a0\n  1240: a0 = 0 if a0 != 0\n  1242: u64 [sp + 0x130] = a0\n  1246: a0 = 0x40\n  1249: a1 = sp + 0x120\n  1253: ra = 12, jump @9\n      : @28 [@dyn 6] (gas: 3)\n  1258: a0 = 0xc0\n  1262: a1 = s1\n  1264: ra = 14, jump @15\n      : @29 [@dyn 7] (gas: 5)\n  1269: i32 a0 = a0 + 0\n  1271: a1 = s1\n  1273: a2 = 0\n  1275: ecalli 2 // 'call_data_copy'\n  1277: fallthrough\n      : @30 (gas: 1)\n  1278: jump @40 if s1 <u 64\n      : @31 (gas: 3)\n  1283: a0 = sp + 0x100\n  1287: a1 = 0xc0\n  1291: ra = 16, jump @7\n      : @32 [@dyn 8] (gas: 11)\n  1296: a0 = u64 [sp + 0x118]\n  1300: u64 [sp + 0x38] = a0\n  1303: a0 = u64 [sp + 0x110]\n  1307: u64 [sp + 0x30] = a0\n  1310: a0 = u64 [sp + 0x108]\n  1314: u64 [sp + 0x20] = a0\n  1317: a0 = u64 [sp + 0x100]\n  1321: u64 [sp + 0x18] = a0\n  1324: a0 = sp + 0xe0\n  1328: a1 = 0xe0\n  1332: ra = 18, jump @7\n      : @33 [@dyn 9] (gas: 11)\n  1337: a1 = u64 [sp + 0xf0]\n  1341: s1 = u64 [sp + 0xf8]\n  1345: a0 = 0x100000000\n  1355: a0 = a0 ^ a1\n  1358: a0 = a0 | s1\n  1361: u64 [sp + 0x28] = a1\n  1364: a1 = a1 >> 0x20\n  1367: a1 = a1 <u 0x1\n  1370: a1 = 0 if s1 != 0\n  1372: a1 = 0 if a0 == 0\n  1374: jump @41 if a1 == 0\n      : @34 (gas: 15)\n  1378: a0 = u64 [sp + 0xe8]\n  1382: u64 [sp + 0x8] = a0\n  1385: a0 = u64 [sp + 0xe0]\n  1389: u64 [sp + 0x10] = a0\n  1392: a0 = u64 [sp + 0x18]\n  1395: u64 [sp + 0xc0] = a0\n  1399: a0 = u64 [sp + 0x20]\n  1402: u64 [sp + 0xc8] = a0\n  1406: a0 = u64 [sp + 0x30]\n  1409: u64 [sp + 0xd0] = a0\n  1413: a0 = 0x80\n  1417: a1 = sp + 0xc0\n  1421: a2 = u64 [sp + 0x38]\n  1424: u64 [sp + 0xd8] = a2\n  1428: ra = 20, jump @9\n      : @35 [@dyn 10] (gas: 10)\n  1433: u64 [sp + 0xb8] = s1\n  1437: a0 = u64 [sp + 0x28]\n  1440: u64 [sp + 0xb0] = a0\n  1444: a0 = u64 [sp + 0x8]\n  1447: u64 [sp + 0xa8] = a0\n  1451: a0 = 0xa0\n  1455: a1 = sp + a0\n  1458: a2 = u64 [sp + 0x10]\n  1461: u64 [sp + 0xa0] = a2\n  1465: ra = 22, jump @9\n      : @36 [@dyn 11] (gas: 3)\n  1470: a0 = sp + 0x80\n  1474: a1 = 0x40\n  1477: ra = 24, jump @7\n      : @37 [@dyn 12] (gas: 12)\n  1482: a0 = u64 [sp + 0x98]\n  1486: a1 = u64 [sp + 0x90]\n  1490: a2 = u64 [sp + 0x88]\n  1494: s1 = u64 [sp + 0x80]\n  1498: a0 = a0 | a2\n  1501: a2 = s1 | a1\n  1504: a2 = a2 | a0\n  1507: a2 = a2 >> 0x20\n  1510: a0 = a0 | a1\n  1513: a0 = a0 << 0x20\n  1516: a0 = a0 | a2\n  1519: jump @42 if a0 == 0\n      : @38 (gas: 1)\n  1522: trap\n      : @39 (gas: 4)\n  1523: a1 = 0x20070\n  1528: i32 a1 = a1 + 0\n  1530: a0 = 0x1\n  1533: jump @48\n      : @40 (gas: 4)\n  1536: a1 = 0x20070\n  1541: i32 a1 = a1 + 0\n  1543: a0 = 0x1\n  1546: jump @48\n      : @41 (gas: 4)\n  1549: a1 = 0x20070\n  1554: i32 a1 = a1 + 0\n  1556: a0 = 0x1\n  1559: jump @48\n      : @42 (gas: 3)\n  1562: a0 = s1\n  1564: a1 = 0\n  1566: ra = 26, jump @15\n      : @43 [@dyn 13] (gas: 7)\n  1571: i32 a0 = a0 + 0\n  1573: a1 = 0\n  1575: a2 = 0\n  1577: ecalli 2 // 'call_data_copy'\n  1579: a0 = sp + 0x60\n  1582: a1 = 0x80\n  1586: ra = 28, jump @7\n      : @44 [@dyn 14] (gas: 13)\n  1591: a0 = u64 [sp + 0x78]\n  1594: a4 = 0x30090\n  1599: u64 [sp + 0x38] = a4\n  1602: a1 = u64 [sp + 0x70]\n  1605: a2 = u64 [sp + 0x68]\n  1608: a3 = u64 [sp + 0x60]\n  1611: u64 [0x300a8] = a0\n  1616: u64 [0x300a0] = a1\n  1621: u64 [0x30098] = a2\n  1626: u64 [0x30090] = a3\n  1631: a0 = sp + 0x40\n  1634: a1 = 0xa0\n  1638: ra = 30, jump @7\n      : @45 [@dyn 15] (gas: 10)\n  1643: a0 = u64 [sp + 0x58]\n  1646: a1 = u64 [sp + 0x50]\n  1649: a2 = u64 [sp + 0x48]\n  1652: a3 = u64 [sp + 0x40]\n  1655: a4 = u64 [sp + 0x38]\n  1658: u64 [a4 + 0x38] = a0\n  1661: u64 [a4 + 0x30] = a1\n  1664: u64 [a4 + 0x28] = a2\n  1667: u64 [a4 + 0x20] = a3\n  1670: jump @5\n      : @46 (gas: 3)\n  1673: a0 = s1\n  1675: a1 = 0\n  1677: ra = 32, jump @15\n      : @47 [@dyn 16] (gas: 6)\n  1682: i32 a1 = a0 + 0\n  1684: a0 = 0\n  1686: a2 = 0\n  1688: ra = 0x22\n  1691: ecalli 14 // 'seal_return'\n  1693: jump @49\n      : @48 (gas: 4)\n  1695: a2 = 0\n  1697: ra = 0x22\n  1700: ecalli 14 // 'seal_return'\n  1702: fallthrough\n      : @49 [@dyn 17] (gas: 18)\n  1703: sp = sp + 0xfffffffffffff808\n  1707: a0 = sp + 0x700\n  1711: u64 [a0 + 0xf0] = ra\n  1715: u64 [a0 + 0xe8] = s0\n  1719: u64 [a0 + 0xe0] = s1\n  1723: s0 = sp + 0x7f8\n  1727: sp = sp + 0xfffffffffffffc78\n  1731: sp = sp & 0xffffffffffffffe0\n  1734: s1 = sp\n  1736: a2 = s1 + 0x7f0\n  1740: u64 [a2 + 40] = 0\n  1743: u64 [a2 + 32] = 0\n  1746: u64 [a2 + 16] = 0x80\n  1751: a0 = 0x40\n  1754: a1 = s1 + 0x7ff\n  1758: a1 = a1 + 0x1\n  1761: u64 [a2 + 24] = 0\n  1764: ra = 36, jump @9\n      : @50 [@dyn 18] (gas: 4)\n  1769: a0 = 0x20064\n  1774: u64 [s1 + 0x78] = a0\n  1777: a0 = i32 [0x20064]\n  1782: jump @52 if a0 >=u 4\n      : @51 (gas: 1)\n  1786: jump @279\n      : @52 (gas: 6)\n  1789: a0 = s1 + 0x1000\n  1793: i32 a0 = a0 + 0xfffffffffffff820\n  1797: a1 = 0\n  1799: ra = 0x26\n  1802: ecalli 3 // 'call_data_load'\n  1804: fallthrough\n      : @53 [@dyn 19] (gas: 3)\n  1805: a2 = s1 + 0x7f0\n  1809: a0 = i32 [a2 + 0x4c]\n  1812: jump @55 if a0 != 2205082048\n      : @54 (gas: 1)\n  1819: jump @208\n      : @55 (gas: 1)\n  1822: jump @151 if a0 == 2399083160\n      : @56 (gas: 1)\n  1830: jump @178 if a0 == 2794781754\n      : @57 (gas: 1)\n  1838: jump @166 if a0 == 4142735383\n      : @58 (gas: 1)\n  1846: jump @82 if a0 == 4236126317\n      : @59 (gas: 1)\n  1854: jump @111 if a0 == 773316216\n      : @60 (gas: 1)\n  1862: jump @99 if a0 == 925171883\n      : @61 (gas: 1)\n  1870: jump @158 if a0 != 1302766934\n      : @62 (gas: 8)\n  1878: u64 [a2 + 456] = 0\n  1882: u64 [a2 + 448] = 0\n  1886: u64 [a2 + 440] = 0\n  1890: u64 [a2 + 432] = 0\n  1894: a0 = s1 + 0x1000\n  1898: i32 a0 = a0 + 0xfffffffffffff9a0\n  1902: ecalli 17 // 'value_transferred'\n  1904: fallthrough\n      : @63 (gas: 10)\n  1905: a3 = s1 + 0x7f0\n  1909: a4 = a3 + 0x100\n  1913: a0 = u64 [a4 + 0xc0]\n  1917: a1 = u64 [a4 + 0xc8]\n  1921: a2 = u64 [a4 + 0xb8]\n  1925: a3 = u64 [a4 + 0xb0]\n  1929: a1 = a1 | a2\n  1932: a0 = a0 | a3\n  1935: a0 = a0 | a1\n  1938: jump @65 if a0 == 0\n      : @64 (gas: 1)\n  1941: jump @215\n      : @65 (gas: 3)\n  1944: a0 = u64 [s1 + 0x78]\n  1947: a0 = i32 [a0]\n  1949: jump @67 if a0 >u 35\n      : @66 (gas: 1)\n  1953: jump @216\n      : @67 (gas: 6)\n  1956: a0 = s1 + 0x1000\n  1960: i32 a0 = a0 + 0xfffffffffffff9c0\n  1964: a1 = 0x4\n  1967: ra = 0x28\n  1970: ecalli 3 // 'call_data_load'\n  1972: fallthrough\n      : @68 [@dyn 20] (gas: 4)\n  1973: a4 = s1 + 0x7f0\n  1977: a1 = u64 [a4 + 0x1e0]\n  1981: a0 = u64 [a4 + 0x1e8]\n  1985: t0 = 42, jump @464\n      : @69 [@dyn 21] (gas: 1)\n  1990: jump @71 if a3 != 0\n      : @70 (gas: 1)\n  1993: jump @217\n      : @71 (gas: 10)\n  1996: a2 = u64 [a4 + 0x1d8]\n  2000: a3 = u64 [a4 + 0x1d0]\n  2004: a4 = s1 + 0x400\n  2008: u64 [a4 + 0x60] = a3\n  2011: u64 [a4 + 0x68] = a2\n  2014: u64 [a4 + 0x70] = a1\n  2017: a1 = s1 + 0x460\n  2021: u64 [a4 + 0x78] = a0\n  2024: a0 = 0\n  2026: ra = 44, jump @9\n      : @72 [@dyn 22] (gas: 7)\n  2031: u64 [s1 + 1112] = 0\n  2035: u64 [s1 + 1104] = 0\n  2039: u64 [s1 + 1096] = 0\n  2043: a0 = 0x20\n  2046: a1 = s1 + 0x440\n  2050: u64 [s1 + 1088] = 0\n  2054: ra = 46, jump @9\n      : @73 [@dyn 23] (gas: 2)\n  2059: a1 = i32 [0x20068]\n  2064: jump @75 if a1 >u 63\n      : @74 (gas: 2)\n  2068: u32 [0x20068] = 0x40\n  2074: fallthrough\n      : @75 (gas: 13)\n  2075: a0 = sp + 0xffffffffffffffe0\n  2078: a2 = a0 & 0xffffffffffffffe0\n  2081: u64 [s1 + 0x78] = a2\n  2084: sp = a2\n  2086: a0 = 0x20070\n  2091: i32 a0 = a0 + 0\n  2093: i32 a2 = a2 + 0\n  2095: a1 = 0x40\n  2098: ra = 0x30\n  2101: ecalli 9 // 'hash_keccak_256'\n  2103: a3 = u64 [s1 + 0x78]\n  2106: t0 = 0x32\n  2109: jump @460\n      : @76 [@dyn 24] (gas: 2)\n  2112: a3 = u64 [s1 + 0x78]\n  2115: t0 = 50, jump @460\n      : @77 [@dyn 25] (gas: 8)\n  2120: u64 [a4 + 0x208] = a3\n  2124: u64 [a4 + 0x200] = a2\n  2128: u64 [a4 + 0x1f8] = a1\n  2132: u64 [a4 + 0x1f0] = a0\n  2136: a0 = s1 + 0x420\n  2140: a1 = s1 + 0x7ff\n  2144: a1 = a1 + 0x1e1\n  2148: ra = 52, jump @11\n      : @78 [@dyn 26] (gas: 11)\n  2153: a0 = u64 [s1 + 0x438]\n  2157: u64 [s1 + 0x78] = a0\n  2160: a0 = u64 [s1 + 0x430]\n  2164: u64 [s1 + 0x70] = a0\n  2167: a0 = u64 [s1 + 0x428]\n  2171: u64 [s1 + 0x68] = a0\n  2174: a0 = u64 [s1 + 0x420]\n  2178: u64 [s1 + 0x60] = a0\n  2181: a0 = s1 + 0x400\n  2185: a1 = 0x40\n  2188: ra = 54, jump @7\n      : @79 [@dyn 27] (gas: 6)\n  2193: a4 = s1 + 0x400\n  2197: a0 = u64 [a4 + 0x18]\n  2200: a1 = u64 [a4 + 0x10]\n  2203: a2 = u64 [a4 + 0x8]\n  2206: a3 = u64 [a4]\n  2208: t0 = 56, jump @462\n      : @80 [@dyn 28] (gas: 1)\n  2213: jump @214 if a0 != 0\n      : @81 (gas: 11)\n  2217: a0 = u64 [s1 + 0x60]\n  2220: a2 = s1 + 0x300\n  2224: u64 [a2 + 0xe0] = a0\n  2228: a0 = u64 [s1 + 0x68]\n  2231: u64 [a2 + 0xe8] = a0\n  2235: a0 = u64 [s1 + 0x70]\n  2238: u64 [a2 + 0xf0] = a0\n  2242: a1 = s1 + 0x3e0\n  2246: a0 = u64 [s1 + 0x78]\n  2249: u64 [a2 + 0xf8] = a0\n  2253: jump @176\n      : @82 (gas: 8)\n  2256: u64 [a2 + 808] = 0\n  2260: u64 [a2 + 800] = 0\n  2264: u64 [a2 + 792] = 0\n  2268: u64 [a2 + 784] = 0\n  2272: a0 = s1 + 0x1000\n  2276: i32 a0 = a0 + 0xfffffffffffffb00\n  2280: ecalli 17 // 'value_transferred'\n  2282: fallthrough\n      : @83 (gas: 10)\n  2283: a3 = s1 + 0x7f0\n  2287: a4 = a3 + 0x300\n  2291: a0 = u64 [a4 + 0x20]\n  2294: a1 = u64 [a4 + 0x28]\n  2297: a2 = u64 [a4 + 0x18]\n  2300: a3 = u64 [a4 + 0x10]\n  2303: a1 = a1 | a2\n  2306: a0 = a0 | a3\n  2309: a0 = a0 | a1\n  2312: jump @218 if a0 != 0\n      : @84 (gas: 3)\n  2316: a0 = u64 [s1 + 0x78]\n  2319: a0 = i32 [a0]\n  2321: jump @219 if a0 <=u 35\n      : @85 (gas: 6)\n  2326: a0 = s1 + 0x1000\n  2330: i32 a0 = a0 + 0xfffffffffffffb20\n  2334: a1 = 0x4\n  2337: ra = 0x3a\n  2340: ecalli 3 // 'call_data_load'\n  2342: fallthrough\n      : @86 [@dyn 29] (gas: 4)\n  2343: a4 = s1 + 0x7f0\n  2347: a1 = u64 [a4 + 0x340]\n  2351: a0 = u64 [a4 + 0x348]\n  2355: t0 = 60, jump @464\n      : @87 [@dyn 30] (gas: 1)\n  2360: jump @220 if a3 == 0\n      : @88 (gas: 9)\n  2364: a2 = u64 [a4 + 0x338]\n  2368: a3 = u64 [a4 + 0x330]\n  2372: u64 [s1 + 0x7e0] = a3\n  2376: u64 [s1 + 0x7e8] = a2\n  2380: u64 [a4] = a1\n  2382: a1 = s1 + 0x7e0\n  2386: u64 [a4 + 0x8] = a0\n  2389: a0 = 0\n  2391: ra = 62, jump @9\n      : @89 [@dyn 31] (gas: 7)\n  2396: u64 [s1 + 2008] = 0\n  2400: u64 [s1 + 2000] = 0\n  2404: u64 [s1 + 1992] = 0\n  2408: a0 = 0x20\n  2411: a1 = s1 + 0x7c0\n  2415: u64 [s1 + 1984] = 0\n  2419: ra = 64, jump @9\n      : @90 [@dyn 32] (gas: 2)\n  2424: a1 = i32 [0x20068]\n  2429: jump @92 if a1 >u 63\n      : @91 (gas: 2)\n  2433: u32 [0x20068] = 0x40\n  2439: fallthrough\n      : @92 (gas: 13)\n  2440: a0 = sp + 0xffffffffffffffe0\n  2443: a2 = a0 & 0xffffffffffffffe0\n  2446: u64 [s1 + 0x78] = a2\n  2449: sp = a2\n  2451: a0 = 0x20070\n  2456: i32 a0 = a0 + 0\n  2458: i32 a2 = a2 + 0\n  2460: a1 = 0x40\n  2463: ra = 0x42\n  2466: ecalli 9 // 'hash_keccak_256'\n  2468: a3 = u64 [s1 + 0x78]\n  2471: t0 = 0x44\n  2474: jump @460\n      : @93 [@dyn 33] (gas: 2)\n  2477: a3 = u64 [s1 + 0x78]\n  2480: t0 = 68, jump @460\n      : @94 [@dyn 34] (gas: 9)\n  2485: a5 = a4 + 0x300\n  2489: u64 [a5 + 0x68] = a3\n  2492: u64 [a5 + 0x60] = a2\n  2495: u64 [a5 + 0x58] = a1\n  2498: u64 [a5 + 0x50] = a0\n  2501: a0 = s1 + 0x7a0\n  2505: a1 = s1 + 0x7ff\n  2509: a1 = a1 + 0x341\n  2513: ra = 70, jump @11\n      : @95 [@dyn 35] (gas: 11)\n  2518: a0 = u64 [s1 + 0x7b8]\n  2522: u64 [s1 + 0x78] = a0\n  2525: a0 = u64 [s1 + 0x7b0]\n  2529: u64 [s1 + 0x70] = a0\n  2532: a0 = u64 [s1 + 0x7a8]\n  2536: u64 [s1 + 0x68] = a0\n  2539: a0 = u64 [s1 + 0x7a0]\n  2543: u64 [s1 + 0x60] = a0\n  2546: a0 = s1 + 0x780\n  2550: a1 = 0x40\n  2553: ra = 72, jump @7\n      : @96 [@dyn 36] (gas: 6)\n  2558: a4 = s1 + 0x700\n  2562: a0 = u64 [a4 + 0x98]\n  2566: a1 = u64 [a4 + 0x90]\n  2570: a2 = u64 [a4 + 0x88]\n  2574: a3 = u64 [a4 + 0x80]\n  2578: t0 = 74, jump @462\n      : @97 [@dyn 37] (gas: 1)\n  2583: jump @214 if a0 != 0\n      : @98 (gas: 11)\n  2587: a0 = u64 [s1 + 0x60]\n  2590: a2 = s1 + 0x700\n  2594: u64 [a2 + 0x60] = a0\n  2597: a0 = u64 [s1 + 0x68]\n  2600: u64 [a2 + 0x68] = a0\n  2603: a0 = u64 [s1 + 0x70]\n  2606: u64 [a2 + 0x70] = a0\n  2609: a1 = s1 + 0x760\n  2613: a0 = u64 [s1 + 0x78]\n  2616: u64 [a2 + 0x78] = a0\n  2619: jump @176\n      : @99 (gas: 8)\n  2622: u64 [a2 + 424] = 0\n  2626: u64 [a2 + 416] = 0\n  2630: u64 [a2 + 408] = 0\n  2634: u64 [a2 + 400] = 0\n  2638: a0 = s1 + 0x1000\n  2642: i32 a0 = a0 + 0xfffffffffffff980\n  2646: ecalli 17 // 'value_transferred'\n  2648: fallthrough\n      : @100 (gas: 10)\n  2649: a3 = s1 + 0x7f0\n  2653: a4 = a3 + 0x100\n  2657: a0 = u64 [a4 + 0xa0]\n  2661: a1 = u64 [a4 + 0xa8]\n  2665: a2 = u64 [a4 + 0x98]\n  2669: a3 = u64 [a4 + 0x90]\n  2673: a1 = a1 | a2\n  2676: a0 = a0 | a3\n  2679: a0 = a0 | a1\n  2682: jump @221 if a0 != 0\n      : @101 (gas: 4)\n  2686: a0 = u64 [s1 + 0x78]\n  2689: a0 = i32 [a0]\n  2691: a1 = 0x3\n  2694: jump @222 if a1 >=u a0\n      : @102 (gas: 1)\n  2698: ra = 76, jump @0\n      : @103 [@dyn 38] (gas: 14)\n  2703: a1 = u64 [0x300b8]\n  2708: u64 [s1 + 0x78] = a1\n  2711: a1 = u64 [0x300b0]\n  2716: u64 [s1 + 0x70] = a1\n  2719: a0 = u32 [0x300c0]\n  2724: u64 [s1 + 0x68] = a0\n  2727: a0 = 0x30070\n  2732: u64 [s1 + 0x60] = a0\n  2735: i32 a0 = a0 + 0\n  2737: ra = 0x4e\n  2740: ecalli 5 // 'caller'\n  2742: a2 = u64 [s1 + 0x60]\n  2745: t0 = 0x50\n  2748: jump @466\n      : @104 [@dyn 39] (gas: 2)\n  2751: a2 = u64 [s1 + 0x60]\n  2754: t0 = 80, jump @466\n      : @105 [@dyn 40] (gas: 9)\n  2759: a2 = u64 [s1 + 0x68]\n  2762: a1 = a1 ^ a2\n  2765: a2 = u64 [s1 + 0x70]\n  2768: a0 = a0 ^ a2\n  2771: a0 = a0 | a1\n  2774: a1 = u64 [s1 + 0x78]\n  2777: a1 = a1 ^ a3\n  2780: a0 = a0 | a1\n  2783: jump @223 if a0 != 0\n      : @106 (gas: 2)\n  2787: a0 = s1 + 0x3a0\n  2791: ra = 82, jump @329\n      : @107 [@dyn 41] (gas: 11)\n  2796: a0 = u64 [s1 + 0x3b8]\n  2800: u64 [s1 + 0x78] = a0\n  2803: a0 = u64 [s1 + 0x3b0]\n  2807: u64 [s1 + 0x70] = a0\n  2810: a0 = u64 [s1 + 0x3a8]\n  2814: u64 [s1 + 0x68] = a0\n  2817: a0 = u64 [s1 + 0x3a0]\n  2821: u64 [s1 + 0x60] = a0\n  2824: a0 = s1 + 0x380\n  2828: a1 = 0x40\n  2831: ra = 84, jump @7\n      : @108 [@dyn 42] (gas: 6)\n  2836: a4 = s1 + 0x300\n  2840: a0 = u64 [a4 + 0x98]\n  2844: a1 = u64 [a4 + 0x90]\n  2848: a2 = u64 [a4 + 0x88]\n  2852: a3 = u64 [a4 + 0x80]\n  2856: t0 = 86, jump @462\n      : @109 [@dyn 43] (gas: 1)\n  2861: jump @214 if a0 != 0\n      : @110 (gas: 11)\n  2865: a0 = u64 [s1 + 0x60]\n  2868: a2 = s1 + 0x300\n  2872: u64 [a2 + 0x60] = a0\n  2875: a0 = u64 [s1 + 0x68]\n  2878: u64 [a2 + 0x68] = a0\n  2881: a0 = u64 [s1 + 0x70]\n  2884: u64 [a2 + 0x70] = a0\n  2887: a1 = s1 + 0x360\n  2891: a0 = u64 [s1 + 0x78]\n  2894: u64 [a2 + 0x78] = a0\n  2897: jump @176\n      : @111 (gas: 8)\n  2900: u64 [a2 + 200] = 0\n  2904: u64 [a2 + 192] = 0\n  2908: u64 [a2 + 184] = 0\n  2912: u64 [a2 + 176] = 0\n  2916: a0 = s1 + 0x1000\n  2920: i32 a0 = a0 + 0xfffffffffffff8a0\n  2924: ecalli 17 // 'value_transferred'\n  2926: fallthrough\n      : @112 (gas: 9)\n  2927: a3 = s1 + 0x7f0\n  2931: a0 = u64 [a3 + 0xc0]\n  2935: a1 = u64 [a3 + 0xc8]\n  2939: a2 = u64 [a3 + 0xb8]\n  2943: a3 = u64 [a3 + 0xb0]\n  2947: a1 = a1 | a2\n  2950: a0 = a0 | a3\n  2953: a0 = a0 | a1\n  2956: jump @227 if a0 != 0\n      : @113 (gas: 3)\n  2960: a0 = u64 [s1 + 0x78]\n  2963: a0 = i32 [a0]\n  2965: jump @228 if a0 <=u 35\n      : @114 (gas: 14)\n  2970: a0 = s1 + 0x1000\n  2974: i32 a0 = a0 + 0xfffffffffffff8c0\n  2978: a1 = 0x4\n  2981: ecalli 3 // 'call_data_load'\n  2983: a0 = s1 + 0x7f0\n  2987: a1 = u64 [a0 + 0xe8]\n  2991: u64 [s1 + 0x70] = a1\n  2994: a1 = u64 [a0 + 0xe0]\n  2998: u64 [s1 + 0x68] = a1\n  3001: a1 = u64 [a0 + 0xd8]\n  3005: u64 [s1 + 0x60] = a1\n  3008: a0 = u64 [a0 + 0xd0]\n  3012: u64 [s1 + 0x58] = a0\n  3015: ra = 88, jump @0\n      : @115 [@dyn 44] (gas: 12)\n  3020: a1 = u64 [0x300b8]\n  3025: u64 [s1 + 0x48] = a1\n  3028: a1 = u64 [0x300b0]\n  3033: u64 [s1 + 0x40] = a1\n  3036: a0 = u32 [0x300c0]\n  3041: u64 [s1 + 0x38] = a0\n  3044: a0 = 0x30070\n  3049: u64 [s1 + 0x78] = a0\n  3052: i32 a0 = a0 + 0\n  3054: u64 [s1 + 0x50] = a0\n  3057: ecalli 5 // 'caller'\n  3059: fallthrough\n      : @116 (gas: 23)\n  3060: a0 = u64 [s1 + 0x78]\n  3063: t0 = u64 [a0 + 0x8]\n  3066: a4 = u64 [a0]\n  3068: a5 = u32 [a0 + 0x10]\n  3071: a0 = reverse t0\n  3073: a1 = a0 >> 0x20\n  3076: a2 = reverse a4\n  3078: a3 = a2 << 0x20\n  3081: a1 = a1 | a3\n  3084: a0 = a0 << 0x20\n  3087: a3 = reverse a5\n  3089: a3 = a3 >> 0x20\n  3092: a0 = a0 | a3\n  3095: a2 = a2 >> 0x20\n  3098: a3 = u64 [s1 + 0x38]\n  3101: a2 = a2 ^ a3\n  3104: a3 = u64 [s1 + 0x40]\n  3107: a0 = a0 ^ a3\n  3110: a0 = a0 | a2\n  3113: a2 = u64 [s1 + 0x48]\n  3116: a1 = a1 ^ a2\n  3119: a0 = a0 | a1\n  3122: jump @229 if a0 != 0\n      : @117 (gas: 11)\n  3126: u64 [s1 + 0x20] = a5\n  3129: u64 [s1 + 0x28] = t0\n  3132: u64 [s1 + 0x30] = a4\n  3135: a0 = u64 [s1 + 0x68]\n  3138: a1 = u64 [s1 + 0x58]\n  3141: a0 = a0 | a1\n  3144: a1 = u64 [s1 + 0x70]\n  3147: a2 = u64 [s1 + 0x60]\n  3150: a1 = a1 | a2\n  3153: a0 = a0 | a1\n  3156: jump @233 if a0 == 0\n      : @118 (gas: 6)\n  3160: a0 = u64 [s1 + 0x50]\n  3163: ra = 0x5a\n  3166: ecalli 5 // 'caller'\n  3168: a2 = u64 [s1 + 0x78]\n  3171: t0 = 0x5c\n  3174: jump @459\n      : @119 [@dyn 45] (gas: 2)\n  3177: a2 = u64 [s1 + 0x78]\n  3180: t0 = 92, jump @459\n      : @120 [@dyn 46] (gas: 8)\n  3185: u64 [s1 + 824] = 0\n  3189: a2 = s1 + 0x300\n  3193: u64 [a2 + 0x30] = a1\n  3196: u64 [a2 + 0x28] = a0\n  3199: a1 = s1 + 0x320\n  3203: u64 [a2 + 0x20] = a3\n  3206: a0 = 0\n  3208: ra = 94, jump @9\n      : @121 [@dyn 47] (gas: 7)\n  3213: u64 [s1 + 792] = 0\n  3217: u64 [s1 + 784] = 0\n  3221: u64 [s1 + 776] = 0\n  3225: a0 = 0x20\n  3228: a1 = s1 + 0x300\n  3232: u64 [s1 + 768] = 0\n  3236: ra = 96, jump @9\n      : @122 [@dyn 48] (gas: 4)\n  3241: a0 = 0x20068\n  3246: u64 [s1 + 0x48] = a0\n  3249: a0 = i32 [0x20068]\n  3254: jump @124 if a0 >u 63\n      : @123 (gas: 3)\n  3258: a1 = u64 [s1 + 0x48]\n  3261: u32 [a1 + 0] = 0x40\n  3264: fallthrough\n      : @124 (gas: 15)\n  3265: a0 = sp + 0xffffffffffffffe0\n  3268: a2 = a0 & 0xffffffffffffffe0\n  3271: u64 [s1 + 0x40] = a2\n  3274: sp = a2\n  3276: a0 = 0x20070\n  3281: u64 [s1 + 0x18] = a0\n  3284: i32 a0 = a0 + 0\n  3286: i32 a2 = a2 + 0\n  3288: a1 = 0x40\n  3291: u64 [s1 + 0x38] = a0\n  3294: ra = 0x62\n  3297: ecalli 9 // 'hash_keccak_256'\n  3299: a3 = u64 [s1 + 0x40]\n  3302: t0 = 0x64\n  3305: jump @460\n      : @125 [@dyn 49] (gas: 2)\n  3308: a3 = u64 [s1 + 0x40]\n  3311: t0 = 100, jump @460\n      : @126 [@dyn 50] (gas: 8)\n  3316: u64 [a4 + 0x108] = a3\n  3320: u64 [a4 + 0x100] = a2\n  3324: u64 [a4 + 0xf8] = a1\n  3328: u64 [a4 + 0xf0] = a0\n  3332: a0 = s1 + 0x2e0\n  3336: a1 = s1 + 0x7ff\n  3340: a1 = a1 + 0xe1\n  3344: ra = 102, jump @11\n      : @127 [@dyn 51] (gas: 21)\n  3349: a1 = s1 + 0x200\n  3353: a0 = u64 [a1 + 0xf8]\n  3357: t0 = u64 [s1 + 0x2e0]\n  3361: a2 = u64 [a1 + 0xf0]\n  3365: a3 = u64 [a1 + 0xe8]\n  3369: a5 = u64 [s1 + 0x70]\n  3372: a4 = a0 ^ a5\n  3375: a1 = a0 <u a5\n  3378: a0 = u64 [s1 + 0x68]\n  3381: a5 = a2 <u a0\n  3384: a5 = a1 if a4 != 0\n  3387: a1 = u64 [s1 + 0x60]\n  3390: t1 = a3 ^ a1\n  3393: a3 = a3 <u a1\n  3396: a1 = u64 [s1 + 0x58]\n  3399: a1 = t0 <u a1\n  3402: a1 = a3 if t1 != 0\n  3405: a0 = a0 ^ a2\n  3408: a0 = a0 | a4\n  3411: a1 = a5 if a0 != 0\n  3414: jump @237 if a1 != 0\n      : @128 (gas: 5)\n  3418: a0 = u64 [s1 + 0x50]\n  3421: ra = 0x68\n  3424: ecalli 5 // 'caller'\n  3426: t0 = 0x6a\n  3429: jump @465\n      : @129 [@dyn 52] (gas: 1)\n  3432: t0 = 106, jump @465\n      : @130 [@dyn 53] (gas: 6)\n  3437: u64 [s1 + 728] = 0\n  3441: u64 [s1 + 0x2d0] = a2\n  3445: u64 [s1 + 0x2c8] = a0\n  3449: a0 = s1 + 0x2c0\n  3453: u64 [s1 + 0x2c0] = a1\n  3457: ra = 108, jump @378\n      : @131 [@dyn 54] (gas: 6)\n  3462: a0 = u64 [s1 + 0x50]\n  3465: ra = 0x6e\n  3468: ecalli 5 // 'caller'\n  3470: a2 = u64 [s1 + 0x78]\n  3473: t0 = 0x70\n  3476: jump @459\n      : @132 [@dyn 55] (gas: 2)\n  3479: a2 = u64 [s1 + 0x78]\n  3482: t0 = 112, jump @459\n      : @133 [@dyn 56] (gas: 8)\n  3487: u64 [s1 + 696] = 0\n  3491: a2 = s1 + 0x200\n  3495: u64 [a2 + 0xb0] = a1\n  3499: u64 [a2 + 0xa8] = a0\n  3503: a1 = s1 + 0x2a0\n  3507: u64 [a2 + 0xa0] = a3\n  3511: a0 = 0\n  3513: ra = 114, jump @9\n      : @134 [@dyn 57] (gas: 7)\n  3518: u64 [s1 + 664] = 0\n  3522: u64 [s1 + 656] = 0\n  3526: u64 [s1 + 648] = 0\n  3530: a0 = 0x20\n  3533: a1 = s1 + 0x280\n  3537: u64 [s1 + 640] = 0\n  3541: ra = 116, jump @9\n      : @135 [@dyn 58] (gas: 7)\n  3546: a0 = sp + 0xffffffffffffffe0\n  3549: a0 = a0 & 0xffffffffffffffe0\n  3552: u64 [s1 + 0x40] = a0\n  3555: sp = a0\n  3557: a0 = u64 [s1 + 0x48]\n  3560: a0 = i32 [a0]\n  3562: jump @137 if a0 >u 63\n      : @136 (gas: 3)\n  3566: a1 = u64 [s1 + 0x48]\n  3569: u32 [a1 + 0] = 0x40\n  3572: fallthrough\n      : @137 (gas: 12)\n  3573: a0 = sp + 0xffffffffffffffe0\n  3576: a0 = a0 & 0xffffffffffffffe0\n  3579: u64 [s1 + 0x10] = a0\n  3582: sp = a0\n  3584: i32 a2 = a0 + 0\n  3586: a1 = 0x40\n  3589: a0 = u64 [s1 + 0x38]\n  3592: ra = 0x76\n  3595: ecalli 9 // 'hash_keccak_256'\n  3597: a3 = u64 [s1 + 0x10]\n  3600: t0 = 0x78\n  3603: jump @468\n      : @138 [@dyn 59] (gas: 2)\n  3606: a3 = u64 [s1 + 0x10]\n  3609: t0 = 120, jump @468\n      : @139 [@dyn 60] (gas: 7)\n  3614: a1 = u64 [s1 + 0x40]\n  3617: u64 [a1 + 0x18] = a3\n  3620: u64 [a1 + 0x10] = a2\n  3623: u64 [a1 + 0x8] = a4\n  3626: u64 [a1] = a0\n  3628: a0 = s1 + 0x260\n  3632: ra = 122, jump @11\n      : @140 [@dyn 61] (gas: 20)\n  3637: a3 = u64 [s1 + 0x260]\n  3641: a0 = u64 [s1 + 0x268]\n  3645: a1 = u64 [s1 + 0x270]\n  3649: a2 = u64 [s1 + 0x278]\n  3653: a4 = u64 [s1 + 0x70]\n  3656: u64 [s1 + 0x218] = a4\n  3660: a4 = u64 [s1 + 0x68]\n  3663: u64 [s1 + 0x210] = a4\n  3667: a4 = u64 [s1 + 0x60]\n  3670: u64 [s1 + 0x208] = a4\n  3674: a4 = u64 [s1 + 0x58]\n  3677: u64 [s1 + 0x200] = a4\n  3681: u64 [s1 + 0x238] = a2\n  3685: u64 [s1 + 0x230] = a1\n  3689: u64 [s1 + 0x228] = a0\n  3693: a0 = s1 + 0x240\n  3697: a1 = s1 + 0x220\n  3701: a2 = s1 + 0x200\n  3705: u64 [s1 + 0x220] = a3\n  3709: ra = 124, jump @300\n      : @141 [@dyn 62] (gas: 15)\n  3714: a4 = s1 + 0x200\n  3718: a0 = u64 [a4 + 0x58]\n  3721: a1 = u64 [a4 + 0x50]\n  3724: a2 = u64 [a4 + 0x48]\n  3727: a3 = u64 [a4 + 0x40]\n  3730: a4 = s1 + 0x7f0\n  3734: a5 = a4 + 0x100\n  3738: u64 [a5 + 0x28] = a0\n  3741: u64 [a5 + 0x20] = a1\n  3744: u64 [a5 + 0x18] = a2\n  3747: u64 [a5 + 0x10] = a3\n  3750: a1 = s1 + 0x7ff\n  3754: a1 = a1 + 0x101\n  3758: a0 = u64 [s1 + 0x40]\n  3761: ra = 126, jump @12\n      : @142 [@dyn 63] (gas: 50)\n  3766: ecalli 11 // 'ref_time_left'\n  3768: a2 = u64 [s1 + 0x78]\n  3771: a1 = u64 [s1 + 0x28]\n  3774: u64 [a2 + 0x8] = a1\n  3777: a1 = u64 [s1 + 0x30]\n  3780: u64 [a2] = a1\n  3782: a1 = u64 [s1 + 0x20]\n  3785: u32 [a2 + 0x10] = a1\n  3788: a1 = u64 [s1 + 0x70]\n  3791: a3 = s1 + 0x7f0\n  3795: a4 = a3 + 0x100\n  3799: u64 [a4 + 0x48] = a1\n  3802: a1 = u64 [s1 + 0x68]\n  3805: u64 [a4 + 0x40] = a1\n  3808: a1 = u64 [s1 + 0x60]\n  3811: u64 [a4 + 0x38] = a1\n  3814: a1 = u64 [s1 + 0x58]\n  3817: u64 [a4 + 0x30] = a1\n  3820: u32 [a3 + 336] = 0\n  3824: a0 = a0 >u 0x8fc\n  3828: a1 = -a0\n  3830: u64 [a4 + 0x88] = a1\n  3834: u64 [a4 + 0x80] = a1\n  3838: u64 [a4 + 0x78] = a1\n  3841: u64 [a4 + 0x70] = a1\n  3844: a1 = a2 << 0x20\n  3847: a1 = a1 >> 0x20\n  3850: a0 = a0 << 0x23\n  3853: a0 = a0 | a1\n  3856: a1 = s1 + 0x7ff\n  3860: a1 = a1 + 0x121\n  3864: a1 = a1 << 0x20\n  3867: a1 = a1 >> 0x20\n  3870: a2 = s1 + 0x7ff\n  3874: a2 = a2 + 0x161\n  3878: a2 = a2 << 0x20\n  3881: a3 = a2 | a1\n  3884: a4 = u64 [s1 + 0x18]\n  3887: a4 = a4 << 0x20\n  3890: a4 = a4 >> 0x20\n  3893: a1 = s1 + 0x7ff\n  3897: a1 = a1 + 0x141\n  3901: a1 = a1 << 0x20\n  3904: a5 = a1 | a4\n  3907: a1 = 0xffffffffffffffff\n  3910: a2 = 0xffffffffffffffff\n  3913: ecalli 1 // 'call'\n  3915: u64 [s1 + 0x40] = a0\n  3918: a0 = s1 + 0x1e0\n  3922: ra = 128, jump @307\n      : @143 [@dyn 64] (gas: 2)\n  3928: a0 = u64 [s1 + 0x40]\n  3931: jump @238 if a0 != 0\n      : @144 (gas: 3)\n  3935: a0 = s1 + 0x1a0\n  3939: a1 = 0x40\n  3942: ra = 130, jump @7\n      : @145 [@dyn 65] (gas: 6)\n  3948: a4 = s1 + 0x100\n  3952: a0 = u64 [a4 + 0xb8]\n  3956: a1 = u64 [a4 + 0xb0]\n  3960: a2 = u64 [a4 + 0xa8]\n  3964: a3 = u64 [a4 + 0xa0]\n  3968: t0 = 132, jump @462\n      : @146 [@dyn 66] (gas: 1)\n  3974: jump @214 if a0 != 0\n      : @147 (gas: 12)\n  3978: a0 = u64 [s1 + 0x58]\n  3981: u64 [s1 + 0x180] = a0\n  3985: a0 = u64 [s1 + 0x60]\n  3988: u64 [s1 + 0x188] = a0\n  3992: a0 = u64 [s1 + 0x68]\n  3995: u64 [s1 + 0x190] = a0\n  3999: a1 = s1 + 0x180\n  4003: a0 = u64 [s1 + 0x70]\n  4006: u64 [s1 + 0x198] = a0\n  4010: a0 = a3\n  4012: u64 [s1 + 0x70] = a3\n  4015: ra = 134, jump @9\n      : @148 [@dyn 67] (gas: 6)\n  4021: a0 = u64 [s1 + 0x50]\n  4024: ra = 0x88\n  4028: ecalli 5 // 'caller'\n  4030: a2 = u64 [s1 + 0x78]\n  4033: t0 = 0x8a\n  4037: jump @467\n      : @149 [@dyn 68] (gas: 2)\n  4040: a2 = u64 [s1 + 0x78]\n  4043: t0 = 138, jump @467\n      : @150 [@dyn 69] (gas: 25)\n  4049: t0 = a1 | a0\n  4052: a3 = a3 >> 0x20\n  4055: a2 = reverse a2\n  4057: a1 = a2 << 0x20\n  4060: a1 = a1 | a3\n  4063: a2 = a2 >> 0x20\n  4066: u64 [s1 + 344] = 0\n  4070: a3 = u64 [0x20020]\n  4075: a4 = u64 [0x20028]\n  4080: a5 = u64 [0x20030]\n  4085: a0 = u64 [0x20038]\n  4090: u64 [s1 + 0x178] = a3\n  4094: a3 = s1 + 0x100\n  4098: u64 [a3 + 0x70] = a4\n  4101: u64 [a3 + 0x68] = a5\n  4104: u64 [a3 + 0x60] = a0\n  4107: u64 [a3 + 0x50] = a2\n  4110: u64 [a3 + 0x48] = a1\n  4113: a1 = 0x20\n  4116: a2 = s1 + 0x160\n  4120: a3 = s1 + 0x140\n  4124: u64 [s1 + 0x140] = t0\n  4128: a0 = u64 [s1 + 0x70]\n  4131: ra = 0xc2\n  4135: jump @13\n      : @151 (gas: 8)\n  4138: u64 [a2 + 648] = 0\n  4142: u64 [a2 + 640] = 0\n  4146: u64 [a2 + 632] = 0\n  4150: u64 [a2 + 624] = 0\n  4154: a0 = s1 + 0x1000\n  4158: i32 a0 = a0 + 0xfffffffffffffa60\n  4162: ecalli 17 // 'value_transferred'\n  4164: fallthrough\n      : @152 (gas: 10)\n  4165: a3 = s1 + 0x7f0\n  4169: a4 = a3 + 0x200\n  4173: a0 = u64 [a4 + 0x80]\n  4177: a1 = u64 [a4 + 0x88]\n  4181: a2 = u64 [a4 + 0x78]\n  4184: a3 = u64 [a4 + 0x70]\n  4187: a1 = a1 | a2\n  4190: a0 = a0 | a3\n  4193: a0 = a0 | a1\n  4196: jump @242 if a0 != 0\n      : @153 (gas: 3)\n  4200: a0 = u64 [s1 + 0x78]\n  4203: a0 = i32 [a0]\n  4205: jump @243 if a0 <=u 3\n      : @154 (gas: 3)\n  4210: a0 = s1 + 0x520\n  4214: a1 = 0x40\n  4217: ra = 140, jump @7\n      : @155 [@dyn 70] (gas: 10)\n  4223: a1 = s1 + 0x500\n  4227: a0 = u64 [a1 + 0x38]\n  4230: u64 [s1 + 0x78] = a0\n  4233: a0 = u64 [a1 + 0x30]\n  4236: u64 [s1 + 0x70] = a0\n  4239: a0 = u64 [a1 + 0x28]\n  4242: u64 [s1 + 0x60] = a0\n  4245: a0 = u64 [a1 + 0x20]\n  4248: u64 [s1 + 0x68] = a0\n  4251: ra = 142, jump @0\n      : @156 [@dyn 71] (gas: 13)\n  4257: a0 = u64 [s1 + 0x78]\n  4260: a1 = u64 [s1 + 0x60]\n  4263: a0 = a0 | a1\n  4266: a1 = u64 [s1 + 0x68]\n  4269: a4 = a1\n  4271: a2 = u64 [s1 + 0x70]\n  4274: a1 = a1 | a2\n  4277: a1 = a1 | a0\n  4280: a1 = a1 >> 0x20\n  4283: a0 = a0 | a2\n  4286: a0 = a0 << 0x20\n  4289: a0 = a0 | a1\n  4292: jump @214 if a0 != 0\n      : @157 (gas: 13)\n  4296: a2 = u64 [0x30090]\n  4301: a1 = u64 [0x30098]\n  4306: a3 = u64 [0x300a0]\n  4311: a0 = u64 [0x300a8]\n  4316: a5 = s1 + 0x500\n  4320: u64 [a5 + 0x18] = a0\n  4323: u64 [a5 + 0x10] = a3\n  4326: u64 [a5 + 0x8] = a1\n  4329: a1 = s1 + 0x500\n  4333: u64 [a5] = a2\n  4335: a0 = a4\n  4337: ra = 0xda\n  4341: jump @9\n      : @158 (gas: 1)\n  4344: jump @244 if a0 != 1872738698\n      : @159 (gas: 8)\n  4352: u64 [a2 + 552] = 0\n  4356: u64 [a2 + 544] = 0\n  4360: u64 [a2 + 536] = 0\n  4364: u64 [a2 + 528] = 0\n  4368: a0 = s1 + 0x1000\n  4372: i32 a0 = a0 + 0xfffffffffffffa00\n  4376: ecalli 17 // 'value_transferred'\n  4378: fallthrough\n      : @160 (gas: 10)\n  4379: a3 = s1 + 0x7f0\n  4383: a4 = a3 + 0x200\n  4387: a0 = u64 [a4 + 0x20]\n  4390: a1 = u64 [a4 + 0x28]\n  4393: a2 = u64 [a4 + 0x18]\n  4396: a3 = u64 [a4 + 0x10]\n  4399: a1 = a1 | a2\n  4402: a0 = a0 | a3\n  4405: a0 = a0 | a1\n  4408: jump @248 if a0 != 0\n      : @161 (gas: 3)\n  4412: a0 = u64 [s1 + 0x78]\n  4415: a0 = i32 [a0]\n  4417: jump @249 if a0 <=u 3\n      : @162 (gas: 16)\n  4422: a0 = s1 + 0x1000\n  4426: i32 a0 = a0 + 0xfffffffffffffa20\n  4430: ecalli 0 // 'balance'\n  4431: a0 = s1 + 0x7f0\n  4435: a2 = a0 + 0x200\n  4439: a1 = u64 [a2 + 0x48]\n  4442: u64 [s1 + 0x78] = a1\n  4445: a1 = u64 [a2 + 0x40]\n  4448: u64 [s1 + 0x70] = a1\n  4451: a1 = u64 [a2 + 0x38]\n  4454: u64 [s1 + 0x68] = a1\n  4457: a0 = u64 [a2 + 0x30]\n  4460: u64 [s1 + 0x60] = a0\n  4463: a0 = s1 + 0x4a0\n  4467: a1 = 0x40\n  4470: ra = 144, jump @7\n      : @163 [@dyn 72] (gas: 6)\n  4476: a4 = s1 + 0x400\n  4480: a0 = u64 [a4 + 0xb8]\n  4484: a1 = u64 [a4 + 0xb0]\n  4488: a2 = u64 [a4 + 0xa8]\n  4492: a3 = u64 [a4 + 0xa0]\n  4496: t0 = 146, jump @462\n      : @164 [@dyn 73] (gas: 1)\n  4502: jump @214 if a0 != 0\n      : @165 (gas: 11)\n  4506: a0 = u64 [s1 + 0x60]\n  4509: a2 = s1 + 0x400\n  4513: u64 [a2 + 0x80] = a0\n  4517: a0 = u64 [s1 + 0x68]\n  4520: u64 [a2 + 0x88] = a0\n  4524: a0 = u64 [s1 + 0x70]\n  4527: u64 [a2 + 0x90] = a0\n  4531: a1 = s1 + 0x480\n  4535: a0 = u64 [s1 + 0x78]\n  4538: u64 [a2 + 0x98] = a0\n  4542: jump @176\n      : @166 (gas: 8)\n  4545: u64 [a2 + 744] = 0\n  4549: u64 [a2 + 736] = 0\n  4553: u64 [a2 + 728] = 0\n  4557: u64 [a2 + 720] = 0\n  4561: a0 = s1 + 0x1000\n  4565: i32 a0 = a0 + 0xfffffffffffffac0\n  4569: ecalli 17 // 'value_transferred'\n  4571: fallthrough\n      : @167 (gas: 10)\n  4572: a3 = s1 + 0x7f0\n  4576: a4 = a3 + 0x200\n  4580: a0 = u64 [a4 + 0xe0]\n  4584: a1 = u64 [a4 + 0xe8]\n  4588: a2 = u64 [a4 + 0xd8]\n  4592: a3 = u64 [a4 + 0xd0]\n  4596: a1 = a1 | a2\n  4599: a0 = a0 | a3\n  4602: a0 = a0 | a1\n  4605: jump @250 if a0 != 0\n      : @168 (gas: 3)\n  4609: a0 = u64 [s1 + 0x78]\n  4612: a0 = i32 [a0]\n  4614: jump @251 if a0 <=u 35\n      : @169 (gas: 5)\n  4619: a0 = s1 + 0x1000\n  4623: i32 a0 = a0 + 0xfffffffffffffae0\n  4627: a1 = 0x4\n  4630: ecalli 3 // 'call_data_load'\n  4632: fallthrough\n      : @170 (gas: 11)\n  4633: a4 = s1 + 0x7f0\n  4637: a0 = u64 [a4 + 0x300]\n  4641: a2 = u64 [a4 + 0x308]\n  4645: a1 = 0x100000000\n  4655: a1 = a1 ^ a0\n  4658: a1 = a1 | a2\n  4661: a3 = a0 >> 0x20\n  4664: a3 = a3 <u 0x1\n  4667: a3 = 0 if a2 != 0\n  4669: a3 = 0 if a1 == 0\n  4671: jump @252 if a3 == 0\n      : @171 (gas: 9)\n  4675: a1 = u64 [a4 + 0x2f8]\n  4679: a3 = u64 [a4 + 0x2f0]\n  4683: u64 [s1 + 0x720] = a3\n  4687: u64 [s1 + 0x728] = a1\n  4691: u64 [s1 + 0x730] = a0\n  4695: a0 = s1 + 0x740\n  4699: a1 = s1 + 0x720\n  4703: u64 [s1 + 0x738] = a2\n  4707: ra = 148, jump @403\n      : @172 [@dyn 74] (gas: 11)\n  4713: a0 = u64 [s1 + 0x758]\n  4717: u64 [s1 + 0x78] = a0\n  4720: a0 = u64 [s1 + 0x750]\n  4724: u64 [s1 + 0x70] = a0\n  4727: a0 = u64 [s1 + 0x748]\n  4731: u64 [s1 + 0x68] = a0\n  4734: a0 = u64 [s1 + 0x740]\n  4738: u64 [s1 + 0x60] = a0\n  4741: a0 = s1 + 0x700\n  4745: a1 = 0x40\n  4748: ra = 150, jump @7\n      : @173 [@dyn 75] (gas: 6)\n  4754: a4 = s1 + 0x700\n  4758: a0 = u64 [a4 + 0x18]\n  4761: a1 = u64 [a4 + 0x10]\n  4764: a2 = u64 [a4 + 0x8]\n  4767: a3 = u64 [a4]\n  4769: t0 = 152, jump @462\n      : @174 [@dyn 76] (gas: 1)\n  4775: jump @214 if a0 != 0\n      : @175 (gas: 11)\n  4779: a0 = u64 [s1 + 0x60]\n  4782: a2 = s1 + 0x600\n  4786: u64 [a2 + 0xe0] = a0\n  4790: a0 = u64 [s1 + 0x68]\n  4793: u64 [a2 + 0xe8] = a0\n  4797: a0 = u64 [s1 + 0x70]\n  4800: u64 [a2 + 0xf0] = a0\n  4804: a1 = s1 + 0x6e0\n  4808: a0 = u64 [s1 + 0x78]\n  4811: u64 [a2 + 0xf8] = a0\n  4815: fallthrough\n      : @176 (gas: 3)\n  4816: a0 = a3\n  4818: u64 [s1 + 0x78] = a3\n  4821: ra = 154, jump @9\n      : @177 [@dyn 77] (gas: 4)\n  4827: a1 = 0x20\n  4830: a0 = u64 [s1 + 0x78]\n  4833: ra = 0xdc\n  4837: jump @15\n      : @178 (gas: 3)\n  4840: a0 = u64 [s1 + 0x78]\n  4843: a0 = i32 [a0]\n  4845: jump @253 if a0 <=u 35\n      : @179 (gas: 15)\n  4850: a0 = s1 + 0x1000\n  4854: i32 a0 = a0 + 0xfffffffffffffa80\n  4858: a1 = 0x4\n  4861: ecalli 3 // 'call_data_load'\n  4863: a1 = s1 + 0x7f0\n  4867: a2 = a1 + 0x200\n  4871: a0 = u64 [a2 + 0xa8]\n  4875: u64 [s1 + 0x70] = a0\n  4878: a0 = u64 [a2 + 0xa0]\n  4882: u64 [s1 + 0x68] = a0\n  4885: a0 = u64 [a2 + 0x98]\n  4889: u64 [s1 + 0x60] = a0\n  4892: a0 = u64 [a2 + 0x90]\n  4896: u64 [s1 + 0x58] = a0\n  4899: ra = 156, jump @0\n      : @180 [@dyn 78] (gas: 15)\n  4905: a1 = u64 [0x300b8]\n  4910: u64 [s1 + 0x48] = a1\n  4913: a1 = u64 [0x300b0]\n  4918: u64 [s1 + 0x40] = a1\n  4921: a0 = u32 [0x300c0]\n  4926: u64 [s1 + 0x38] = a0\n  4929: a0 = 0x30070\n  4934: u64 [s1 + 0x78] = a0\n  4937: i32 a0 = a0 + 0\n  4939: u64 [s1 + 0x50] = a0\n  4942: ra = 0x9e\n  4946: ecalli 5 // 'caller'\n  4948: a2 = u64 [s1 + 0x78]\n  4951: t0 = 0xa0\n  4955: jump @466\n      : @181 [@dyn 79] (gas: 2)\n  4958: a2 = u64 [s1 + 0x78]\n  4961: t0 = 160, jump @466\n      : @182 [@dyn 80] (gas: 9)\n  4967: a2 = u64 [s1 + 0x38]\n  4970: a1 = a1 ^ a2\n  4973: a2 = u64 [s1 + 0x40]\n  4976: a0 = a0 ^ a2\n  4979: a0 = a0 | a1\n  4982: a1 = u64 [s1 + 0x48]\n  4985: a1 = a1 ^ a3\n  4988: a0 = a0 | a1\n  4991: jump @254 if a0 != 0\n      : @183 (gas: 9)\n  4995: a0 = s1 + 0x7f0\n  4999: u64 [a0 + 712] = 0\n  5003: u64 [a0 + 704] = 0\n  5007: u64 [a0 + 696] = 0\n  5011: u64 [a0 + 688] = 0\n  5015: a0 = s1 + 0x1000\n  5019: i32 a0 = a0 + 0xfffffffffffffaa0\n  5023: ecalli 17 // 'value_transferred'\n  5025: fallthrough\n      : @184 (gas: 18)\n  5026: a2 = s1 + 0x7f0\n  5030: a3 = a2 + 0x200\n  5034: a0 = u64 [a3 + 0xc8]\n  5038: a1 = u64 [a3 + 0xb8]\n  5042: t0 = u64 [a2 + 0x2b0]\n  5046: a2 = u64 [a3 + 0xc0]\n  5050: t1 = u64 [s1 + 0x70]\n  5053: a0 = a0 ^ t1\n  5056: a3 = u64 [s1 + 0x60]\n  5059: a1 = a1 ^ a3\n  5062: a0 = a0 | a1\n  5065: a5 = u64 [s1 + 0x68]\n  5068: a1 = a2 ^ a5\n  5071: a4 = u64 [s1 + 0x58]\n  5074: a2 = t0 ^ a4\n  5077: a1 = a1 | a2\n  5080: a0 = a0 | a1\n  5083: jump @258 if a0 != 0\n      : @185 (gas: 4)\n  5087: a0 = a4 | a5\n  5090: a1 = a3 | t1\n  5093: a0 = a0 | a1\n  5096: jump @262 if a0 == 0\n      : @186 (gas: 5)\n  5100: a0 = u64 [s1 + 0x50]\n  5103: ra = 0xa2\n  5107: ecalli 5 // 'caller'\n  5109: t0 = 0xa4\n  5113: jump @465\n      : @187 [@dyn 81] (gas: 1)\n  5116: t0 = 164, jump @465\n      : @188 [@dyn 82] (gas: 6)\n  5122: u64 [s1 + 1688] = 0\n  5126: u64 [s1 + 0x690] = a2\n  5130: u64 [s1 + 0x688] = a0\n  5134: a0 = s1 + 0x680\n  5138: u64 [s1 + 0x680] = a1\n  5142: ra = 166, jump @378\n      : @189 [@dyn 83] (gas: 6)\n  5148: a0 = u64 [s1 + 0x50]\n  5151: ra = 0xa8\n  5155: ecalli 5 // 'caller'\n  5157: a2 = u64 [s1 + 0x78]\n  5160: t0 = 0xaa\n  5164: jump @459\n      : @190 [@dyn 84] (gas: 2)\n  5167: a2 = u64 [s1 + 0x78]\n  5170: t0 = 170, jump @459\n      : @191 [@dyn 85] (gas: 8)\n  5176: u64 [s1 + 1656] = 0\n  5180: a2 = s1 + 0x600\n  5184: u64 [a2 + 0x70] = a1\n  5187: u64 [a2 + 0x68] = a0\n  5190: a1 = s1 + 0x660\n  5194: u64 [a2 + 0x60] = a3\n  5197: a0 = 0\n  5199: ra = 172, jump @9\n      : @192 [@dyn 86] (gas: 7)\n  5205: u64 [s1 + 1624] = 0\n  5209: u64 [s1 + 1616] = 0\n  5213: u64 [s1 + 1608] = 0\n  5217: a0 = 0x20\n  5220: a1 = s1 + 0x640\n  5224: u64 [s1 + 1600] = 0\n  5228: ra = 174, jump @9\n      : @193 [@dyn 87] (gas: 7)\n  5234: a0 = sp + 0xffffffffffffffe0\n  5237: a0 = a0 & 0xffffffffffffffe0\n  5240: u64 [s1 + 0x48] = a0\n  5243: sp = a0\n  5245: a2 = 0x20068\n  5250: a0 = i32 [0x20068]\n  5255: jump @195 if a0 >u 63\n      : @194 (gas: 2)\n  5259: u32 [0x20068] = 0x40\n  5265: fallthrough\n      : @195 (gas: 15)\n  5266: u64 [s1 + 0x30] = a2\n  5269: a0 = sp + 0xffffffffffffffe0\n  5272: a2 = a0 & 0xffffffffffffffe0\n  5275: u64 [s1 + 0x40] = a2\n  5278: sp = a2\n  5280: a0 = 0x20070\n  5285: i32 a0 = a0 + 0\n  5287: i32 a2 = a2 + 0\n  5289: a1 = 0x40\n  5292: u64 [s1 + 0x38] = a0\n  5295: ra = 0xb0\n  5299: ecalli 9 // 'hash_keccak_256'\n  5301: a3 = u64 [s1 + 0x40]\n  5304: t0 = 0xb2\n  5308: jump @468\n      : @196 [@dyn 88] (gas: 2)\n  5311: a3 = u64 [s1 + 0x40]\n  5314: t0 = 178, jump @468\n      : @197 [@dyn 89] (gas: 7)\n  5320: a1 = u64 [s1 + 0x48]\n  5323: u64 [a1 + 0x18] = a3\n  5326: u64 [a1 + 0x10] = a2\n  5329: u64 [a1 + 0x8] = a4\n  5332: u64 [a1] = a0\n  5334: a0 = s1 + 0x620\n  5338: ra = 180, jump @11\n      : @198 [@dyn 90] (gas: 38)\n  5344: t2 = u64 [s1 + 0x638]\n  5348: a1 = s1 + 0x600\n  5352: a0 = u64 [a1 + 0x30]\n  5355: a4 = u64 [a1 + 0x20]\n  5358: a5 = u64 [a1 + 0x28]\n  5361: a1 = sp + 0xffffffffffffffe0\n  5364: a1 = a1 & 0xffffffffffffffe0\n  5367: sp = a1\n  5369: a3 = u64 [s1 + 0x60]\n  5372: a3 = a3 + a5\n  5375: t0 = u64 [s1 + 0x58]\n  5378: t0 = t0 + a4\n  5381: a4 = t0 <u a4\n  5384: a3 = a3 + a4\n  5387: t1 = a3 ^ a5\n  5390: a2 = a3 <u a5\n  5393: a2 = a4 if t1 == 0\n  5396: a4 = u64 [s1 + 0x68]\n  5399: a4 = a4 + a0\n  5402: a5 = a4 + a2\n  5405: t1 = a5 <u a4\n  5408: ra = u64 [s1 + 0x70]\n  5411: ra = ra + t2\n  5414: a4 = a4 <u a0\n  5417: a4 = a4 + ra\n  5420: ra = a4 + t1\n  5423: t1 = a5 <u a0\n  5426: a4 = t2 ^ ra\n  5429: t2 = ra <u t2\n  5432: t2 = t1 if a4 == 0\n  5435: a0 = a0 ^ a5\n  5438: a0 = a0 | a4\n  5441: t2 = a2 if a0 == 0\n  5444: u64 [a1 + 0x10] = a5\n  5447: u64 [a1 + 0x8] = a3\n  5450: u64 [a1] = t0\n  5452: u64 [a1 + 0x18] = ra\n  5455: jump @267 if t2 != 0\n      : @199 (gas: 2)\n  5459: a0 = u64 [s1 + 0x48]\n  5462: ra = 182, jump @12\n      : @200 [@dyn 91] (gas: 3)\n  5468: a0 = s1 + 0x600\n  5472: a1 = 0x40\n  5475: ra = 184, jump @7\n      : @201 [@dyn 92] (gas: 6)\n  5481: a4 = s1 + 0x600\n  5485: a0 = u64 [a4 + 0x18]\n  5488: a1 = u64 [a4 + 0x10]\n  5491: a2 = u64 [a4 + 0x8]\n  5494: a3 = u64 [a4]\n  5496: t0 = 186, jump @462\n      : @202 [@dyn 93] (gas: 1)\n  5502: jump @214 if a0 != 0\n      : @203 (gas: 12)\n  5506: a0 = u64 [s1 + 0x58]\n  5509: u64 [s1 + 0x5e0] = a0\n  5513: a0 = u64 [s1 + 0x60]\n  5516: u64 [s1 + 0x5e8] = a0\n  5520: a0 = u64 [s1 + 0x68]\n  5523: u64 [s1 + 0x5f0] = a0\n  5527: a1 = s1 + 0x5e0\n  5531: a0 = u64 [s1 + 0x70]\n  5534: u64 [s1 + 0x5f8] = a0\n  5538: a0 = a3\n  5540: u64 [s1 + 0x70] = a3\n  5543: ra = 188, jump @9\n      : @204 [@dyn 94] (gas: 6)\n  5549: a0 = u64 [s1 + 0x50]\n  5552: ra = 0xbe\n  5556: ecalli 5 // 'caller'\n  5558: a2 = u64 [s1 + 0x78]\n  5561: t0 = 0xc0\n  5565: jump @467\n      : @205 [@dyn 95] (gas: 2)\n  5568: a2 = u64 [s1 + 0x78]\n  5571: t0 = 192, jump @467\n      : @206 [@dyn 96] (gas: 24)\n  5577: t0 = a1 | a0\n  5580: a3 = a3 >> 0x20\n  5583: a2 = reverse a2\n  5585: a1 = a2 << 0x20\n  5588: a1 = a1 | a3\n  5591: a2 = a2 >> 0x20\n  5594: u64 [s1 + 1464] = 0\n  5598: a3 = u64 [0x20000]\n  5603: a4 = u64 [0x20008]\n  5608: a5 = u64 [0x20010]\n  5613: a0 = u64 [0x20018]\n  5618: u64 [s1 + 0x5d8] = a3\n  5622: a3 = s1 + 0x500\n  5626: u64 [a3 + 0xd0] = a4\n  5630: u64 [a3 + 0xc8] = a5\n  5634: u64 [a3 + 0xc0] = a0\n  5638: u64 [a3 + 0xb0] = a2\n  5642: u64 [a3 + 0xa8] = a1\n  5646: a1 = 0x20\n  5649: a2 = s1 + 0x5c0\n  5653: a3 = s1 + 0x5a0\n  5657: u64 [s1 + 0x5a0] = t0\n  5661: a0 = u64 [s1 + 0x70]\n  5664: ra = 194, jump @13\n      : @207 [@dyn 97] (gas: 5)\n  5670: a0 = 0\n  5672: a1 = u64 [s1 + 0x38]\n  5675: a2 = 0\n  5677: ecalli 14 // 'seal_return'\n  5679: jump @282\n      : @208 (gas: 8)\n  5682: u64 [a2 + 616] = 0\n  5686: u64 [a2 + 608] = 0\n  5690: u64 [a2 + 600] = 0\n  5694: u64 [a2 + 592] = 0\n  5698: a0 = s1 + 0x1000\n  5702: i32 a0 = a0 + 0xfffffffffffffa40\n  5706: ecalli 17 // 'value_transferred'\n  5708: fallthrough\n      : @209 (gas: 10)\n  5709: a3 = s1 + 0x7f0\n  5713: a4 = a3 + 0x200\n  5717: a0 = u64 [a4 + 0x60]\n  5720: a1 = u64 [a4 + 0x68]\n  5723: a2 = u64 [a4 + 0x58]\n  5726: a3 = u64 [a4 + 0x50]\n  5729: a1 = a1 | a2\n  5732: a0 = a0 | a3\n  5735: a0 = a0 | a1\n  5738: jump @272 if a0 != 0\n      : @210 (gas: 3)\n  5742: a0 = u64 [s1 + 0x78]\n  5745: a0 = i32 [a0]\n  5747: jump @273 if a0 <=u 3\n      : @211 (gas: 3)\n  5752: a0 = s1 + 0x4e0\n  5756: a1 = 0x40\n  5759: ra = 196, jump @7\n      : @212 [@dyn 98] (gas: 10)\n  5765: a1 = s1 + 0x400\n  5769: a0 = u64 [a1 + 0xf8]\n  5773: u64 [s1 + 0x78] = a0\n  5776: a0 = u64 [a1 + 0xf0]\n  5780: u64 [s1 + 0x70] = a0\n  5783: a0 = u64 [a1 + 0xe8]\n  5787: u64 [s1 + 0x60] = a0\n  5790: a0 = u64 [a1 + 0xe0]\n  5794: u64 [s1 + 0x68] = a0\n  5797: ra = 198, jump @0\n      : @213 [@dyn 99] (gas: 13)\n  5803: a0 = u64 [s1 + 0x78]\n  5806: a1 = u64 [s1 + 0x60]\n  5809: a0 = a0 | a1\n  5812: a1 = u64 [s1 + 0x68]\n  5815: a3 = a1\n  5817: a2 = u64 [s1 + 0x70]\n  5820: a1 = a1 | a2\n  5823: a1 = a1 | a0\n  5826: a1 = a1 >> 0x20\n  5829: a0 = a0 | a2\n  5832: a0 = a0 << 0x20\n  5835: a0 = a0 | a1\n  5838: jump @274 if a0 == 0\n      : @214 (gas: 1)\n  5842: trap\n      : @215 (gas: 6)\n  5843: a1 = 0x20070\n  5848: i32 a1 = a1 + 0\n  5850: a0 = 0x1\n  5853: a2 = 0\n  5855: ecalli 14 // 'seal_return'\n  5857: jump @282\n      : @216 (gas: 6)\n  5860: a1 = 0x20070\n  5865: i32 a1 = a1 + 0\n  5867: a0 = 0x1\n  5870: a2 = 0\n  5872: ecalli 14 // 'seal_return'\n  5874: jump @282\n      : @217 (gas: 6)\n  5877: a1 = 0x20070\n  5882: i32 a1 = a1 + 0\n  5884: a0 = 0x1\n  5887: a2 = 0\n  5889: ecalli 14 // 'seal_return'\n  5891: jump @282\n      : @218 (gas: 6)\n  5894: a1 = 0x20070\n  5899: i32 a1 = a1 + 0\n  5901: a0 = 0x1\n  5904: a2 = 0\n  5906: ecalli 14 // 'seal_return'\n  5908: jump @282\n      : @219 (gas: 6)\n  5911: a1 = 0x20070\n  5916: i32 a1 = a1 + 0\n  5918: a0 = 0x1\n  5921: a2 = 0\n  5923: ecalli 14 // 'seal_return'\n  5925: jump @282\n      : @220 (gas: 6)\n  5928: a1 = 0x20070\n  5933: i32 a1 = a1 + 0\n  5935: a0 = 0x1\n  5938: a2 = 0\n  5940: ecalli 14 // 'seal_return'\n  5942: jump @282\n      : @221 (gas: 6)\n  5945: a1 = 0x20070\n  5950: i32 a1 = a1 + 0\n  5952: a0 = 0x1\n  5955: a2 = 0\n  5957: ecalli 14 // 'seal_return'\n  5959: jump @282\n      : @222 (gas: 6)\n  5962: a1 = 0x20070\n  5967: i32 a1 = a1 + 0\n  5969: a0 = 0x1\n  5972: a2 = 0\n  5974: ecalli 14 // 'seal_return'\n  5976: jump @282\n      : @223 (gas: 8)\n  5979: u64 [s1 + 976] = 0\n  5983: u64 [s1 + 968] = 0\n  5987: u64 [s1 + 960] = 0\n  5991: a0 = 0xc39fa00400000000\n  6001: a1 = s1 + 0x3c0\n  6005: u64 [s1 + 0x3d8] = a0\n  6009: a0 = 0\n  6011: ra = 200, jump @9\n      : @224 [@dyn 100] (gas: 2)\n  6017: a1 = i32 [0x20068]\n  6022: jump @226 if a1 >u 31\n      : @225 (gas: 3)\n  6026: u32 [0x20068] = 0x20\n  6032: a1 = 0x20070\n  6037: jump @266\n      : @226 (gas: 2)\n  6040: a1 = 0x20070\n  6045: jump @266\n      : @227 (gas: 6)\n  6048: a1 = 0x20070\n  6053: i32 a1 = a1 + 0\n  6055: a0 = 0x1\n  6058: a2 = 0\n  6060: ecalli 14 // 'seal_return'\n  6062: jump @282\n      : @228 (gas: 6)\n  6065: a1 = 0x20070\n  6070: i32 a1 = a1 + 0\n  6072: a0 = 0x1\n  6075: a2 = 0\n  6077: ecalli 14 // 'seal_return'\n  6079: jump @282\n      : @229 (gas: 8)\n  6082: u64 [s1 + 848] = 0\n  6086: u64 [s1 + 840] = 0\n  6090: u64 [s1 + 832] = 0\n  6094: a0 = 0xc39fa00400000000\n  6104: a1 = s1 + 0x340\n  6108: u64 [s1 + 0x358] = a0\n  6112: a0 = 0\n  6114: ra = 202, jump @9\n      : @230 [@dyn 101] (gas: 2)\n  6120: a1 = i32 [0x20068]\n  6125: jump @232 if a1 >u 31\n      : @231 (gas: 3)\n  6129: u32 [0x20068] = 0x20\n  6135: a1 = 0x20070\n  6140: jump @266\n      : @232 (gas: 2)\n  6143: a1 = 0x20070\n  6148: jump @266\n      : @233 (gas: 8)\n  6151: u64 [s1 + 272] = 0\n  6155: u64 [s1 + 264] = 0\n  6159: u64 [s1 + 256] = 0\n  6163: a0 = 0x2c5211c600000000\n  6173: a1 = s1 + 0x100\n  6177: u64 [s1 + 0x118] = a0\n  6181: a0 = 0\n  6183: ra = 204, jump @9\n      : @234 [@dyn 102] (gas: 2)\n  6189: a1 = i32 [0x20068]\n  6194: jump @236 if a1 >u 31\n      : @235 (gas: 3)\n  6198: u32 [0x20068] = 0x20\n  6204: a1 = 0x20070\n  6209: jump @266\n      : @236 (gas: 2)\n  6212: a1 = 0x20070\n  6217: jump @266\n      : @237 (gas: 9)\n  6220: u64 [s1 + 304] = 0\n  6224: u64 [s1 + 296] = 0\n  6228: u64 [s1 + 288] = 0\n  6232: a0 = 0xf4d678b800000000\n  6242: a1 = s1 + 0x120\n  6246: u64 [s1 + 0x138] = a0\n  6250: a0 = 0\n  6252: ra = 0xce\n  6256: jump @9\n      : @238 (gas: 8)\n  6259: u64 [s1 + 464] = 0\n  6263: u64 [s1 + 456] = 0\n  6267: u64 [s1 + 448] = 0\n  6271: a0 = 0x90b8ec1800000000\n  6281: a1 = s1 + 0x1c0\n  6285: u64 [s1 + 0x1d8] = a0\n  6289: a0 = 0\n  6291: ra = 206, jump @9\n      : @239 [@dyn 103] (gas: 3)\n  6297: a0 = u64 [s1 + 0x48]\n  6300: a0 = i32 [a0]\n  6302: jump @241 if a0 >u 31\n      : @240 (gas: 7)\n  6306: a1 = u64 [s1 + 0x48]\n  6309: u32 [a1 + 0] = 0x20\n  6312: a0 = 0x1\n  6315: a2 = 0x4\n  6318: a1 = u64 [s1 + 0x38]\n  6321: ecalli 14 // 'seal_return'\n  6323: jump @272\n      : @241 (gas: 5)\n  6326: a0 = 0x1\n  6329: a2 = 0x4\n  6332: a1 = u64 [s1 + 0x38]\n  6335: ecalli 14 // 'seal_return'\n  6337: jump @272\n      : @242 (gas: 6)\n  6340: a1 = 0x20070\n  6345: i32 a1 = a1 + 0\n  6347: a0 = 0x1\n  6350: a2 = 0\n  6352: ecalli 14 // 'seal_return'\n  6354: jump @282\n      : @243 (gas: 6)\n  6357: a1 = 0x20070\n  6362: i32 a1 = a1 + 0\n  6364: a0 = 0x1\n  6367: a2 = 0\n  6369: ecalli 14 // 'seal_return'\n  6371: jump @282\n      : @244 (gas: 1)\n  6374: jump @278 if a0 != 753512109\n      : @245 (gas: 9)\n  6382: a0 = s1 + 0x7f0\n  6386: u64 [a0 + 104] = 0\n  6389: u64 [a0 + 96] = 0\n  6392: u64 [a0 + 88] = 0\n  6395: u64 [a0 + 80] = 0\n  6398: a0 = s1 + 0x1000\n  6402: i32 a0 = a0 + 0xfffffffffffff840\n  6406: ecalli 17 // 'value_transferred'\n  6408: fallthrough\n      : @246 (gas: 9)\n  6409: a3 = s1 + 0x7f0\n  6413: a0 = u64 [a3 + 0x60]\n  6416: a1 = u64 [a3 + 0x68]\n  6419: a2 = u64 [a3 + 0x58]\n  6422: a3 = u64 [a3 + 0x50]\n  6425: a1 = a1 | a2\n  6428: a0 = a0 | a3\n  6431: a0 = a0 | a1\n  6434: jump @283 if a0 == 0\n      : @247 (gas: 6)\n  6438: a1 = 0x20070\n  6443: i32 a1 = a1 + 0\n  6445: a0 = 0x1\n  6448: a2 = 0\n  6450: ecalli 14 // 'seal_return'\n  6452: jump @282\n      : @248 (gas: 6)\n  6455: a1 = 0x20070\n  6460: i32 a1 = a1 + 0\n  6462: a0 = 0x1\n  6465: a2 = 0\n  6467: ecalli 14 // 'seal_return'\n  6469: jump @282\n      : @249 (gas: 6)\n  6472: a1 = 0x20070\n  6477: i32 a1 = a1 + 0\n  6479: a0 = 0x1\n  6482: a2 = 0\n  6484: ecalli 14 // 'seal_return'\n  6486: jump @282\n      : @250 (gas: 6)\n  6489: a1 = 0x20070\n  6494: i32 a1 = a1 + 0\n  6496: a0 = 0x1\n  6499: a2 = 0\n  6501: ecalli 14 // 'seal_return'\n  6503: jump @282\n      : @251 (gas: 6)\n  6506: a1 = 0x20070\n  6511: i32 a1 = a1 + 0\n  6513: a0 = 0x1\n  6516: a2 = 0\n  6518: ecalli 14 // 'seal_return'\n  6520: jump @282\n      : @252 (gas: 6)\n  6523: a1 = 0x20070\n  6528: i32 a1 = a1 + 0\n  6530: a0 = 0x1\n  6533: a2 = 0\n  6535: ecalli 14 // 'seal_return'\n  6537: jump @282\n      : @253 (gas: 6)\n  6540: a1 = 0x20070\n  6545: i32 a1 = a1 + 0\n  6547: a0 = 0x1\n  6550: a2 = 0\n  6552: ecalli 14 // 'seal_return'\n  6554: jump @282\n      : @254 (gas: 8)\n  6557: u64 [s1 + 1744] = 0\n  6561: u64 [s1 + 1736] = 0\n  6565: u64 [s1 + 1728] = 0\n  6569: a0 = 0xc39fa00400000000\n  6579: a1 = s1 + 0x6c0\n  6583: u64 [s1 + 0x6d8] = a0\n  6587: a0 = 0\n  6589: ra = 208, jump @9\n      : @255 [@dyn 104] (gas: 2)\n  6595: a1 = i32 [0x20068]\n  6600: jump @257 if a1 >u 31\n      : @256 (gas: 3)\n  6604: u32 [0x20068] = 0x20\n  6610: a1 = 0x20070\n  6615: jump @266\n      : @257 (gas: 2)\n  6618: a1 = 0x20070\n  6623: jump @266\n      : @258 (gas: 8)\n  6626: u64 [s1 + 1712] = 0\n  6630: u64 [s1 + 1704] = 0\n  6634: u64 [s1 + 1696] = 0\n  6638: a0 = 0x2c5211c600000000\n  6648: a1 = s1 + 0x6a0\n  6652: u64 [s1 + 0x6b8] = a0\n  6656: a0 = 0\n  6658: ra = 210, jump @9\n      : @259 [@dyn 105] (gas: 2)\n  6664: a1 = i32 [0x20068]\n  6669: jump @261 if a1 >u 31\n      : @260 (gas: 3)\n  6673: u32 [0x20068] = 0x20\n  6679: a1 = 0x20070\n  6684: jump @266\n      : @261 (gas: 2)\n  6686: a1 = 0x20070\n  6691: jump @266\n      : @262 (gas: 8)\n  6693: u64 [s1 + 1360] = 0\n  6697: u64 [s1 + 1352] = 0\n  6701: u64 [s1 + 1344] = 0\n  6705: a0 = 0x2c5211c600000000\n  6715: a1 = s1 + 0x540\n  6719: u64 [s1 + 0x558] = a0\n  6723: a0 = 0\n  6725: ra = 212, jump @9\n      : @263 [@dyn 106] (gas: 2)\n  6731: a1 = i32 [0x20068]\n  6736: jump @265 if a1 >u 31\n      : @264 (gas: 3)\n  6740: u32 [0x20068] = 0x20\n  6746: a1 = 0x20070\n  6751: jump @266\n      : @265 (gas: 2)\n  6753: a1 = 0x20070\n  6758: fallthrough\n      : @266 (gas: 5)\n  6759: i32 a1 = a1 + 0\n  6761: a0 = 0x1\n  6764: a2 = 0x4\n  6767: ecalli 14 // 'seal_return'\n  6769: fallthrough\n      : @267 (gas: 8)\n  6770: u64 [s1 + 1424] = 0\n  6774: u64 [s1 + 1416] = 0\n  6778: u64 [s1 + 1408] = 0\n  6782: a0 = 0x4e487b7100000000\n  6792: a1 = s1 + 0x580\n  6796: u64 [s1 + 0x598] = a0\n  6800: a0 = 0\n  6802: ra = 214, jump @9\n      : @268 [@dyn 107] (gas: 7)\n  6808: u64 [s1 + 1400] = 0\n  6812: u64 [s1 + 1392] = 0\n  6816: u64 [s1 + 1376] = 0x11\n  6821: a0 = 0x4\n  6824: a1 = s1 + 0x560\n  6828: u64 [s1 + 1384] = 0\n  6832: ra = 216, jump @9\n      : @269 [@dyn 108] (gas: 3)\n  6838: a0 = u64 [s1 + 0x30]\n  6841: a0 = i32 [a0]\n  6843: jump @271 if a0 >u 63\n      : @270 (gas: 7)\n  6847: a1 = u64 [s1 + 0x30]\n  6850: u32 [a1 + 0] = 0x40\n  6853: a0 = 0x1\n  6856: a2 = 0x24\n  6859: a1 = u64 [s1 + 0x38]\n  6862: ecalli 14 // 'seal_return'\n  6864: jump @272\n      : @271 (gas: 5)\n  6866: a0 = 0x1\n  6869: a2 = 0x24\n  6872: a1 = u64 [s1 + 0x38]\n  6875: ecalli 14 // 'seal_return'\n  6877: fallthrough\n      : @272 (gas: 6)\n  6878: a1 = 0x20070\n  6883: i32 a1 = a1 + 0\n  6885: a0 = 0x1\n  6888: a2 = 0\n  6890: ecalli 14 // 'seal_return'\n  6892: jump @282\n      : @273 (gas: 6)\n  6895: a1 = 0x20070\n  6900: i32 a1 = a1 + 0\n  6902: a0 = 0x1\n  6905: a2 = 0\n  6907: ecalli 14 // 'seal_return'\n  6909: jump @282\n      : @274 (gas: 11)\n  6911: a2 = u64 [0x300b0]\n  6916: a1 = u64 [0x300b8]\n  6921: a0 = u32 [0x300c0]\n  6926: u64 [s1 + 1240] = 0\n  6930: a4 = s1 + 0x400\n  6934: u64 [a4 + 0xd0] = a0\n  6938: u64 [a4 + 0xc8] = a1\n  6942: a1 = s1 + 0x4c0\n  6946: u64 [a4 + 0xc0] = a2\n  6950: a0 = a3\n  6952: ra = 218, jump @9\n      : @275 [@dyn 109] (gas: 3)\n  6958: a1 = 0x20\n  6961: a0 = u64 [s1 + 0x68]\n  6964: ra = 220, jump @15\n      : @276 [@dyn 110] (gas: 2)\n  6970: i32 a1 = a0 + 0\n  6972: fallthrough\n      : @277 (gas: 6)\n  6973: a2 = 0x20\n  6976: a0 = 0\n  6978: ecalli 14 // 'seal_return'\n  6980: a0 = u64 [s1 + 0x78]\n  6983: a0 = i32 [a0]\n  6985: jump @279\n      : @278 (gas: 3)\n  6987: a0 = u64 [s1 + 0x78]\n  6990: a0 = i32 [a0]\n  6992: fallthrough\n      : @279 (gas: 1)\n  6993: jump @282 if a0 == 0\n      : @280 (gas: 6)\n  6996: a1 = 0x20070\n  7001: i32 a1 = a1 + 0\n  7003: a0 = 0x1\n  7006: a2 = 0\n  7008: ecalli 14 // 'seal_return'\n  7010: jump @282\n      : @281 (gas: 5)\n  7012: i32 a1 = a1 + 0\n  7014: a0 = 0x1\n  7017: a2 = 0\n  7019: ecalli 14 // 'seal_return'\n  7021: fallthrough\n      : @282 (gas: 6)\n  7022: a1 = 0x20070\n  7027: i32 a1 = a1 + 0\n  7029: a0 = 0\n  7031: a2 = 0\n  7033: ecalli 14 // 'seal_return'\n  7035: jump @282\n      : @283 (gas: 3)\n  7037: a0 = u64 [s1 + 0x78]\n  7040: a0 = i32 [a0]\n  7042: jump @285 if a0 >u 35\n      : @284 (gas: 2)\n  7046: a1 = 0x20070\n  7051: jump @281\n      : @285 (gas: 6)\n  7053: a0 = s1 + 0x1000\n  7057: i32 a0 = a0 + 0xfffffffffffff860\n  7061: a1 = 0x4\n  7064: ra = 0xde\n  7068: ecalli 3 // 'call_data_load'\n  7070: fallthrough\n      : @286 [@dyn 111] (gas: 4)\n  7071: a0 = s1 + 0x7f0\n  7075: a1 = u64 [a0 + 0x80]\n  7079: a0 = u64 [a0 + 0x88]\n  7083: t0 = 224, jump @464\n      : @287 [@dyn 112] (gas: 1)\n  7089: jump @289 if a3 != 0\n      : @288 (gas: 2)\n  7092: a1 = 0x20070\n  7097: jump @281\n      : @289 (gas: 10)\n  7099: a3 = s1 + 0x7f0\n  7103: a2 = u64 [a3 + 0x78]\n  7106: a3 = u64 [a3 + 0x70]\n  7109: u64 [s1 + 0xe0] = a3\n  7113: u64 [s1 + 0xe8] = a2\n  7117: u64 [s1 + 0xf0] = a1\n  7121: a1 = s1 + 0xe0\n  7125: u64 [s1 + 0xf8] = a0\n  7129: a0 = 0\n  7131: ra = 226, jump @9\n      : @290 [@dyn 113] (gas: 7)\n  7137: u64 [s1 + 216] = 0\n  7141: u64 [s1 + 208] = 0\n  7145: u64 [s1 + 192] = 0x1\n  7150: a0 = 0x20\n  7153: a1 = s1 + 0xc0\n  7157: u64 [s1 + 200] = 0\n  7161: ra = 228, jump @9\n      : @291 [@dyn 114] (gas: 4)\n  7167: a0 = 0x20068\n  7172: u64 [s1 + 0x78] = a0\n  7175: a0 = i32 [0x20068]\n  7180: jump @293 if a0 >u 63\n      : @292 (gas: 3)\n  7184: a1 = u64 [s1 + 0x78]\n  7187: u32 [a1 + 0] = 0x40\n  7190: fallthrough\n      : @293 (gas: 14)\n  7191: a0 = sp + 0xffffffffffffffe0\n  7194: a2 = a0 & 0xffffffffffffffe0\n  7197: u64 [s1 + 0x68] = a2\n  7200: sp = a2\n  7202: a0 = 0x20070\n  7207: u64 [s1 + 0x70] = a0\n  7210: i32 a0 = a0 + 0\n  7212: i32 a2 = a2 + 0\n  7214: a1 = 0x40\n  7217: ra = 0xe6\n  7221: ecalli 9 // 'hash_keccak_256'\n  7223: a3 = u64 [s1 + 0x68]\n  7226: t0 = 0xe8\n  7230: jump @460\n      : @294 [@dyn 115] (gas: 2)\n  7233: a3 = u64 [s1 + 0x68]\n  7236: t0 = 232, jump @460\n      : @295 [@dyn 116] (gas: 8)\n  7242: u64 [a4 + 0xa8] = a3\n  7246: u64 [a4 + 0xa0] = a2\n  7250: u64 [a4 + 0x98] = a1\n  7254: u64 [a4 + 0x90] = a0\n  7258: a0 = s1 + 0xa0\n  7262: a1 = s1 + 0x7ff\n  7266: a1 = a1 + 0x81\n  7270: ra = 234, jump @11\n      : @296 [@dyn 117] (gas: 11)\n  7276: a2 = u64 [s1 + 0xa0]\n  7280: a0 = u64 [s1 + 0xa8]\n  7284: a1 = u64 [s1 + 0xb0]\n  7288: a3 = u64 [s1 + 0xb8]\n  7292: u64 [s1 + 0x98] = a3\n  7296: u64 [s1 + 0x90] = a1\n  7300: u64 [s1 + 0x88] = a0\n  7304: a0 = 0x80\n  7308: a1 = s1 + a0\n  7311: u64 [s1 + 0x80] = a2\n  7315: ra = 236, jump @9\n      : @297 [@dyn 118] (gas: 3)\n  7321: a0 = u64 [s1 + 0x78]\n  7324: a0 = i32 [a0]\n  7326: jump @299 if a0 >u 159\n      : @298 (gas: 5)\n  7331: a1 = u64 [s1 + 0x78]\n  7334: u32 [a1 + 0] = 0xa0\n  7338: a0 = u64 [s1 + 0x70]\n  7341: i32 a1 = a0 + 0x80\n  7345: jump @277\n      : @299 (gas: 3)\n  7348: a0 = u64 [s1 + 0x70]\n  7351: i32 a1 = a0 + 0x80\n  7355: jump @277\n      : @300 (gas: 30)\n  7358: sp = sp + 0xffffffffffffff80\n  7361: u64 [sp + 0x78] = ra\n  7364: u64 [sp + 0x70] = s0\n  7367: u64 [sp + 0x68] = s1\n  7370: s0 = sp + 0x80\n  7374: sp = sp & 0xfffffffffffffff0\n  7377: a4 = u64 [a2]\n  7379: a3 = u64 [a1]\n  7381: s1 = u64 [a2 + 0x8]\n  7384: t1 = u64 [a1 + 0x8]\n  7387: t2 = u64 [a2 + 0x10]\n  7390: a5 = u64 [a1 + 0x10]\n  7393: a2 = u64 [a2 + 0x18]\n  7396: a1 = u64 [a1 + 0x18]\n  7399: t0 = t1 ^ s1\n  7402: u64 [sp + 0x8] = s1\n  7405: s1 = t1 <u s1\n  7408: u64 [sp + 0x18] = a4\n  7411: u64 [sp + 0x10] = a3\n  7414: a3 = a3 <u a4\n  7417: u64 [sp] = a3\n  7419: s1 = a3 if t0 == 0\n  7422: a3 = a1 ^ a2\n  7425: ra = a1 <u a2\n  7428: t0 = a5 <u t2\n  7431: ra = t0 if a3 == 0\n  7434: a4 = a5 ^ t2\n  7437: a3 = a3 | a4\n  7440: ra = s1 if a3 == 0\n  7443: jump @302 if ra != 0\n      : @301 (gas: 23)\n  7446: a3 = a5 - t2\n  7449: a1 = a1 - a2\n  7452: a1 = a1 - t0\n  7455: a2 = a3 <u s1\n  7458: a1 = a1 - a2\n  7461: a3 = a3 - s1\n  7464: a2 = u64 [sp + 0x8]\n  7467: a2 = t1 - a2\n  7470: a4 = u64 [sp]\n  7472: a2 = a2 - a4\n  7475: a4 = u64 [sp + 0x18]\n  7478: a5 = u64 [sp + 0x10]\n  7481: a4 = a5 - a4\n  7484: u64 [a0] = a4\n  7486: u64 [a0 + 0x8] = a2\n  7489: u64 [a0 + 0x10] = a3\n  7492: u64 [a0 + 0x18] = a1\n  7495: sp = s0 + 0xffffffffffffff80\n  7498: ra = u64 [sp + 0x78]\n  7501: s0 = u64 [sp + 0x70]\n  7504: s1 = u64 [sp + 0x68]\n  7507: sp = sp + 0x80\n  7511: ret\n      : @302 (gas: 8)\n  7513: u64 [sp + 80] = 0\n  7516: u64 [sp + 72] = 0\n  7519: u64 [sp + 64] = 0\n  7522: a0 = 0x4e487b7100000000\n  7532: a1 = sp + 0x40\n  7535: u64 [sp + 0x58] = a0\n  7538: a0 = 0\n  7540: ra = 238, jump @9\n      : @303 [@dyn 119] (gas: 7)\n  7546: u64 [sp + 56] = 0\n  7549: u64 [sp + 48] = 0\n  7552: u64 [sp + 32] = 0x11\n  7556: a0 = 0x4\n  7559: a1 = sp + 0x20\n  7562: u64 [sp + 40] = 0\n  7565: ra = 240, jump @9\n      : @304 [@dyn 120] (gas: 2)\n  7571: a1 = i32 [0x20068]\n  7576: jump @306 if a1 >u 63\n      : @305 (gas: 2)\n  7580: u32 [0x20068] = 0x40\n  7586: fallthrough\n      : @306 (gas: 7)\n  7587: a1 = 0x20070\n  7592: i32 a1 = a1 + 0\n  7594: a0 = 0x1\n  7597: a2 = 0x24\n  7600: ra = 0xf2\n  7604: ecalli 14 // 'seal_return'\n  7606: fallthrough\n      : @307 [@dyn 121] (gas: 9)\n  7607: sp = sp + 0xffffffffffffff00\n  7611: u64 [sp + 0xf8] = ra\n  7615: u64 [sp + 0xf0] = s0\n  7619: u64 [sp + 0xe8] = s1\n  7623: s0 = sp + 0x100\n  7627: sp = sp & 0xffffffffffffffe0\n  7630: s1 = a0\n  7632: ecalli 13 // 'return_data_size'\n  7634: fallthrough\n      : @308 (gas: 1)\n  7635: jump @322 if a0 == 0\n      : @309 (gas: 6)\n  7639: u64 [sp + 0x10] = s1\n  7642: ecalli 13 // 'return_data_size'\n  7644: s1 = a0\n  7646: a0 = sp + 0xc0\n  7650: a1 = 0x40\n  7653: ra = 244, jump @7\n      : @310 [@dyn 122] (gas: 30)\n  7659: t1 = u64 [sp + 0xd8]\n  7663: t2 = u64 [sp + 0xd0]\n  7667: ra = u64 [sp + 0xc8]\n  7671: t0 = u64 [sp + 0xc0]\n  7675: a0 = s1 + 0x1f\n  7678: u64 [sp + 0x18] = s1\n  7681: a1 = a0 <u s1\n  7684: a0 = a0 & 0xffffffffffffffe0\n  7687: a2 = a0 + 0x3f\n  7690: a0 = a2 <u a0\n  7693: a3 = a1 + a0\n  7696: a2 = a2 & 0xffffffffffffffe0\n  7699: a1 = a3 + ra\n  7702: u64 [sp + 0x38] = t0\n  7705: t0 = t0 + a2\n  7708: a2 = t0 <u a2\n  7711: a1 = a1 + a2\n  7714: a4 = a1 ^ a3\n  7717: a3 = a1 <u a3\n  7720: a3 = a2 if a4 == 0\n  7723: a3 = a3 + t2\n  7726: a4 = a3 <u t2\n  7729: a2 = t1 + a4\n  7732: a5 = a3 >u 0\n  7734: s1 = a2 >u 0\n  7736: s1 = a5 if a2 == 0\n  7739: a5 = a3 | a2\n  7742: a0 = a1 >u 0\n  7744: a0 = s1 if a5 != 0\n  7747: jump @324 if a0 != 0\n      : @311 (gas: 12)\n  7751: a0 = u64 [sp + 0x38]\n  7754: a0 = t0 <u a0\n  7757: a5 = a1 ^ ra\n  7760: s1 = a1 <u ra\n  7763: s1 = a0 if a5 == 0\n  7766: a0 = a2 ^ t1\n  7769: a5 = a2 <u t1\n  7772: a4 = a5 if a0 != 0\n  7775: a5 = a3 ^ t2\n  7778: a0 = a0 | a5\n  7781: a4 = s1 if a0 == 0\n  7784: jump @324 if a4 != 0\n      : @312 (gas: 10)\n  7788: u64 [sp + 0xa0] = t0\n  7792: u64 [sp + 0xa8] = a1\n  7796: u64 [sp + 0xb0] = a3\n  7800: a0 = 0x40\n  7803: a1 = sp + 0xa0\n  7807: u64 [sp + 0xb8] = a2\n  7811: u64 [sp + 0x30] = t1\n  7814: s1 = t2\n  7816: u64 [sp + 0x28] = ra\n  7819: ra = 246, jump @9\n      : @313 [@dyn 123] (gas: 12)\n  7825: a2 = u64 [sp + 0x38]\n  7828: a0 = a2 | s1\n  7831: a1 = u64 [sp + 0x30]\n  7834: a3 = u64 [sp + 0x28]\n  7837: a1 = a1 | a3\n  7840: a0 = a0 | a1\n  7843: a0 = a0 >> 0x20\n  7846: u64 [sp + 0x20] = s1\n  7849: a1 = a1 | s1\n  7852: a1 = a1 << 0x20\n  7855: a1 = a1 | a0\n  7858: jump @321 if a1 != 0\n      : @314 (gas: 8)\n  7862: a0 = a2\n  7864: u64 [sp + 152] = 0\n  7868: u64 [sp + 144] = 0\n  7872: u64 [sp + 136] = 0\n  7876: a1 = sp + 0x80\n  7880: a2 = u64 [sp + 0x18]\n  7883: u64 [sp + 0x80] = a2\n  7887: ra = 248, jump @9\n      : @315 [@dyn 124] (gas: 2)\n  7893: ecalli 13 // 'return_data_size'\n  7895: fallthrough\n      : @316 (gas: 10)\n  7896: a4 = u64 [sp + 0x38]\n  7899: a1 = u64 [sp + 0x20]\n  7902: a2 = u64 [sp + 0x30]\n  7905: a1 = a1 | a2\n  7908: a2 = 0xffffffe0\n  7918: a2 = a4 <u a2\n  7921: a3 = u64 [sp + 0x28]\n  7924: a2 = 0 if a3 != 0\n  7926: a2 = 0 if a1 != 0\n  7928: jump @321 if a2 == 0\n      : @317 (gas: 3)\n  7931: s1 = a0\n  7933: a0 = a0 >> 0x20\n  7936: jump @321 if a0 != 0\n      : @318 (gas: 5)\n  7939: i32 a0 = a4 + 0x20\n  7942: i32 a1 = s1 + 0\n  7944: u64 [sp + 0x18] = a1\n  7947: a1 = s1\n  7949: ra = 250, jump @15\n      : @319 [@dyn 125] (gas: 6)\n  7955: u32 [sp + 0xe0] = s1\n  7959: i32 a0 = a0 + 0\n  7961: i32 a1 = sp + 0xe0\n  7965: a2 = 0\n  7967: ecalli 12 // 'return_data_copy'\n  7969: fallthrough\n      : @320 (gas: 8)\n  7970: a4 = u64 [sp + 0x38]\n  7973: a0 = i32 [sp + 0xe0]\n  7977: s1 = u64 [sp + 0x10]\n  7980: a1 = u64 [sp + 0x30]\n  7983: a2 = u64 [sp + 0x20]\n  7986: a3 = u64 [sp + 0x28]\n  7989: a5 = u64 [sp + 0x18]\n  7992: jump @323 if a0 >=u a5\n      : @321 (gas: 1)\n  7995: trap\n      : @322 (gas: 5)\n  7996: a3 = 0\n  7998: a2 = 0\n  8000: a1 = 0\n  8002: a4 = 0x60\n  8005: fallthrough\n      : @323 (gas: 10)\n  8006: u64 [s1] = a4\n  8008: u64 [s1 + 0x8] = a3\n  8011: u64 [s1 + 0x10] = a2\n  8014: u64 [s1 + 0x18] = a1\n  8017: sp = s0 + 0xffffffffffffff00\n  8021: ra = u64 [sp + 0xf8]\n  8025: s0 = u64 [sp + 0xf0]\n  8029: s1 = u64 [sp + 0xe8]\n  8033: sp = sp + 0x100\n  8037: ret\n      : @324 (gas: 8)\n  8039: u64 [sp + 112] = 0\n  8042: u64 [sp + 104] = 0\n  8045: u64 [sp + 96] = 0\n  8048: a0 = 0x4e487b7100000000\n  8058: a1 = sp + 0x60\n  8061: u64 [sp + 0x78] = a0\n  8064: a0 = 0\n  8066: ra = 252, jump @9\n      : @325 [@dyn 126] (gas: 7)\n  8072: u64 [sp + 88] = 0\n  8075: u64 [sp + 80] = 0\n  8078: u64 [sp + 64] = 0x41\n  8082: a0 = 0x4\n  8085: a1 = sp + 0x40\n  8088: u64 [sp + 72] = 0\n  8091: ra = 254, jump @9\n      : @326 [@dyn 127] (gas: 2)\n  8097: a1 = i32 [0x20068]\n  8102: jump @328 if a1 >u 63\n      : @327 (gas: 2)\n  8106: u32 [0x20068] = 0x40\n  8112: fallthrough\n      : @328 (gas: 7)\n  8113: a1 = 0x20070\n  8118: i32 a1 = a1 + 0\n  8120: a0 = 0x1\n  8123: a2 = 0x24\n  8126: ra = 0x100\n  8130: ecalli 14 // 'seal_return'\n  8132: fallthrough\n      : @329 [@dyn 128] (gas: 18)\n  8133: sp = sp + 0xfffffffffffffce0\n  8137: a1 = sp + 0x300\n  8141: u64 [a1 + 0x18] = ra\n  8144: u64 [a1 + 0x10] = s0\n  8147: u64 [a1 + 0x8] = s1\n  8150: s0 = sp + 0x320\n  8154: sp = sp & 0xffffffffffffffe0\n  8157: s1 = sp\n  8159: u64 [s1 + 0x18] = a0\n  8162: a0 = 0x30070\n  8167: u64 [s1 + 0x38] = a0\n  8170: i32 a0 = a0 + 0\n  8172: u64 [s1 + 0x10] = a0\n  8175: ra = 0x102\n  8179: ecalli 5 // 'caller'\n  8181: a2 = u64 [s1 + 0x38]\n  8184: t0 = 0x104\n  8188: jump @459\n      : @330 [@dyn 129] (gas: 2)\n  8191: a2 = u64 [s1 + 0x38]\n  8194: t0 = 260, jump @459\n      : @331 [@dyn 130] (gas: 8)\n  8200: u64 [s1 + 504] = 0\n  8204: a2 = s1 + 0x100\n  8208: u64 [a2 + 0xf0] = a1\n  8212: u64 [a2 + 0xe8] = a0\n  8216: a0 = s1 + 0x200\n  8220: a1 = s1 + 0x1e0\n  8224: u64 [a2 + 0xe0] = a3\n  8228: ra = 262, jump @403\n      : @332 [@dyn 131] (gas: 11)\n  8234: a0 = u64 [s1 + 0x218]\n  8238: u64 [s1 + 0x40] = a0\n  8241: a0 = u64 [s1 + 0x210]\n  8245: u64 [s1 + 0x48] = a0\n  8248: a0 = u64 [s1 + 0x208]\n  8252: u64 [s1 + 0x50] = a0\n  8255: a0 = u64 [s1 + 0x200]\n  8259: u64 [s1 + 0x58] = a0\n  8262: i32 a0 = s1 + 0x220\n  8266: ecalli 0 // 'balance'\n  8267: fallthrough\n      : @333 (gas: 8)\n  8268: a5 = u64 [s1 + 0x238]\n  8272: t1 = u64 [s1 + 0x230]\n  8276: t0 = u64 [s1 + 0x228]\n  8280: ra = u64 [s1 + 0x220]\n  8284: a0 = t0 | a5\n  8287: a1 = ra | t1\n  8290: a0 = a0 | a1\n  8293: jump @371 if a0 == 0\n      : @334 (gas: 51)\n  8297: a0 = a0 <u 0x1\n  8300: u64 [s1 + 0xd8] = a0\n  8304: a1 = clz t1\n  8306: a2 = a1 + 0x40\n  8309: a1 = clz a5\n  8311: a1 = a2 if a5 == 0\n  8314: a2 = clz ra\n  8316: a2 = a2 + 0x40\n  8319: a3 = clz t0\n  8321: a3 = a2 if t0 == 0\n  8324: a2 = a3 + 0x80\n  8328: a4 = t1 | a5\n  8331: a1 = a2 if a4 == 0\n  8334: u64 [s1 + 0x30] = t0\n  8337: u64 [s1 + 0x60] = a5\n  8340: a5 = a2 <u a3\n  8343: a5 = 0 if a4 != 0\n  8345: a3 = a5 >u 0\n  8347: a2 = a1 <u 0xfd\n  8351: a4 = a2 ^ 0x1\n  8354: a3 = a4 if a5 == 0\n  8357: a2 = a3 <u 0x1\n  8360: a2 = a2 + 0xffffffffffffffff\n  8363: t2 = -a3\n  8365: a5 = -a5\n  8367: t0 = a5 - a4\n  8370: a0 = 0xfc - a1\n  8374: u64 [s1 + 0xc0] = t2\n  8378: a1 = t2 >u 0\n  8380: a4 = a2 >u 0\n  8382: u64 [s1 + 0xc8] = a2\n  8386: a4 = a1 if a2 == 0\n  8389: a1 = t0 >u 0\n  8391: u64 [s1 + 0xd0] = a0\n  8395: a0 = a0 <u 0x100\n  8399: a0 = a0 ^ 0x1\n  8402: a0 = a1 if t0 != 0\n  8405: a0 = a4 if a3 != 0\n  8408: a2 = u64 [s1 + 0xd8]\n  8412: a2 = a2 | a0\n  8415: a4 = u64 [s1 + 0x60]\n  8418: a4 = 0 if a2 != 0\n  8420: u64 [s1 + 0x20] = t1\n  8423: a1 = t1\n  8425: a1 = 0 if a2 != 0\n  8427: a3 = u64 [s1 + 0x30]\n  8430: a3 = 0 if a2 != 0\n  8432: a5 = ra\n  8434: a5 = 0 if a2 != 0\n  8436: u64 [s1 + 0x28] = ra\n  8439: jump @350 if a2 != 0\n      : @335 (gas: 8)\n  8443: a0 = u64 [s1 + 0xd0]\n  8447: a2 = a0 ^ 0xff\n  8451: t1 = u64 [s1 + 0xc0]\n  8455: a0 = a2 | t1\n  8458: t2 = u64 [s1 + 0xc8]\n  8462: a2 = t0 | t2\n  8465: a2 = a2 | a0\n  8468: jump @350 if a2 == 0\n      : @336 (gas: 19)\n  8472: a2 = u64 [s1 + 0xd0]\n  8476: a1 = a2 + 0x1\n  8479: u64 [s1 + 0xd8] = a1\n  8483: a0 = a1 <u 0x1\n  8486: a0 = a0 + t0\n  8489: u64 [s1 + 0xb8] = a0\n  8493: a0 = a0 | a1\n  8496: a0 = a0 <u 0x1\n  8499: a0 = a0 + t1\n  8502: u64 [s1 + 0xa8] = a0\n  8506: a0 = a0 <u t1\n  8509: a0 = a0 + t2\n  8512: u64 [s1 + 0xb0] = a0\n  8516: a1 = 0xff - a2\n  8520: u64 [s1 + 0xc0] = a1\n  8524: a2 = 0x80 - a1\n  8528: a0 = u64 [s1 + 0x28]\n  8531: a1 = u64 [s1 + 0x30]\n  8534: ra = 264, jump @470\n      : @337 [@dyn 132] (gas: 6)\n  8540: u64 [s1 + 0xc8] = a0\n  8544: u64 [s1 + 0x98] = a1\n  8548: a0 = u64 [s1 + 0x20]\n  8551: a1 = u64 [s1 + 0x60]\n  8554: a2 = u64 [s1 + 0xc0]\n  8558: ra = 266, jump @475\n      : @338 [@dyn 133] (gas: 9)\n  8564: u64 [s1 + 0xa0] = a0\n  8568: a0 = u64 [s1 + 0x98]\n  8572: a0 = a0 | a1\n  8575: u64 [s1 + 0x98] = a0\n  8579: a1 = u64 [s1 + 0xd0]\n  8583: a2 = 0x7f - a1\n  8586: a0 = u64 [s1 + 0x28]\n  8589: a1 = u64 [s1 + 0x30]\n  8592: ra = 268, jump @475\n      : @339 [@dyn 134] (gas: 18)\n  8598: a2 = u64 [s1 + 0xc0]\n  8602: a3 = a2 <u 0x80\n  8606: u64 [s1 + 0xd0] = a3\n  8610: a4 = u64 [s1 + 0x98]\n  8614: a1 = a4 if a3 != 0\n  8617: a4 = u64 [s1 + 0x60]\n  8620: a1 = a4 if a2 == 0\n  8623: u64 [s1 + 0x90] = a1\n  8627: a1 = u64 [s1 + 0xc8]\n  8631: a4 = u64 [s1 + 0xa0]\n  8635: a1 = a1 | a4\n  8638: a1 = a0 if a3 == 0\n  8641: a0 = u64 [s1 + 0x20]\n  8644: a1 = a0 if a2 == 0\n  8647: u64 [s1 + 0xc8] = a1\n  8651: a0 = u64 [s1 + 0x28]\n  8654: a1 = u64 [s1 + 0x30]\n  8657: ra = 270, jump @475\n      : @340 [@dyn 135] (gas: 13)\n  8663: a4 = u64 [s1 + 0xa8]\n  8667: a5 = u64 [s1 + 0xb0]\n  8671: a2 = u64 [s1 + 0xb8]\n  8675: a5 = a5 | a2\n  8678: a3 = u64 [s1 + 0xd8]\n  8682: a3 = a3 | a4\n  8685: a3 = a3 | a5\n  8688: a2 = u64 [s1 + 0xd0]\n  8692: a1 = 0 if a2 == 0\n  8694: u64 [s1 + 0xc0] = a1\n  8698: a0 = 0 if a2 == 0\n  8700: u64 [s1 + 0xd0] = a0\n  8704: jump @348 if a3 == 0\n      : @341 (gas: 5)\n  8708: a0 = u64 [s1 + 0xd8]\n  8712: a2 = a0 + 0xffffffffffffff80\n  8715: a0 = u64 [s1 + 0x20]\n  8718: a1 = u64 [s1 + 0x60]\n  8721: ra = 272, jump @470\n      : @342 [@dyn 136] (gas: 6)\n  8727: u64 [s1 + 0x98] = a0\n  8731: u64 [s1 + 0xa0] = a1\n  8735: a0 = u64 [s1 + 0x28]\n  8738: a1 = u64 [s1 + 0x30]\n  8741: a2 = u64 [s1 + 0xd8]\n  8745: ra = 274, jump @470\n      : @343 [@dyn 137] (gas: 7)\n  8751: u64 [s1 + 0x80] = a0\n  8755: u64 [s1 + 0x88] = a1\n  8759: a1 = u64 [s1 + 0xd8]\n  8763: a2 = 0x80 - a1\n  8767: a0 = u64 [s1 + 0x20]\n  8770: a1 = u64 [s1 + 0x60]\n  8773: ra = 276, jump @475\n      : @344 [@dyn 138] (gas: 20)\n  8779: a2 = u64 [s1 + 0x88]\n  8783: a1 = a1 | a2\n  8786: a2 = u64 [s1 + 0xd8]\n  8790: a3 = a2 <u 0x80\n  8794: u64 [s1 + 0x88] = a3\n  8798: a4 = u64 [s1 + 0xa0]\n  8802: a1 = a4 if a3 == 0\n  8805: a4 = u64 [s1 + 0x30]\n  8808: a1 = a4 if a2 == 0\n  8811: u64 [s1 + 0xa0] = a1\n  8815: a1 = u64 [s1 + 0x80]\n  8819: a0 = a0 | a1\n  8822: a1 = u64 [s1 + 0x98]\n  8826: a0 = a1 if a3 == 0\n  8829: a1 = u64 [s1 + 0x28]\n  8832: a0 = a1 if a2 == 0\n  8835: u64 [s1 + 0x98] = a0\n  8839: a0 = u64 [s1 + 0x20]\n  8842: a1 = u64 [s1 + 0x60]\n  8845: ra = 278, jump @470\n      : @345 [@dyn 139] (gas: 8)\n  8851: a5 = 0\n  8853: a2 = u64 [s1 + 0x88]\n  8857: a1 = 0 if a2 == 0\n  8859: a0 = 0 if a2 == 0\n  8861: u64 [s1 + 112] = 0x9\n  8865: u64 [s1 + 104] = 0\n  8868: ra = u64 [s1 + 0x90]\n  8872: fallthrough\n      : @346 (gas: 91)\n  8873: u64 [s1 + 0x80] = a1\n  8877: u64 [s1 + 0x88] = a5\n  8881: u64 [s1 + 120] = 0\n  8884: a1 = u64 [s1 + 0x98]\n  8888: a2 = a1 >> 0x3f\n  8891: a5 = u64 [s1 + 0xa0]\n  8895: a3 = a5 << 0x1\n  8898: t1 = a3 | a2\n  8901: a2 = a1 << 0x1\n  8904: a4 = ra >> 0x3f\n  8907: a4 = a4 | a2\n  8910: u64 [s1 + 0x90] = a4\n  8914: a3 = u64 [s1 + 0x68]\n  8917: a1 = a3 ^ t1\n  8920: u64 [s1 + 0x98] = a1\n  8924: a1 = a3 <u t1\n  8927: a2 = u64 [s1 + 0x70]\n  8930: t0 = a2 <u a4\n  8933: a2 = u64 [s1 + 0x98]\n  8937: t0 = a1 if a2 != 0\n  8940: a1 = u64 [s1 + 0x80]\n  8944: a1 = a1 << 0x1\n  8947: a4 = a0 >> 0x3f\n  8950: a1 = a1 | a4\n  8953: u64 [s1 + 0x80] = a1\n  8957: a4 = a5 >> 0x3f\n  8960: a0 = a0 << 0x1\n  8963: a4 = a4 | a0\n  8966: a0 = ra << 0x1\n  8969: a1 = u64 [s1 + 0xc8]\n  8973: a5 = a1 >> 0x3f\n  8976: a0 = a0 | a5\n  8979: u64 [s1 + 0xa0] = a0\n  8983: a5 = a1 << 0x1\n  8986: a0 = u64 [s1 + 0xc0]\n  8990: a1 = a0 >> 0x3f\n  8993: a1 = a1 | a5\n  8996: a5 = a0 << 0x1\n  8999: a0 = u64 [s1 + 0xd0]\n  9003: ra = a0 >> 0x3f\n  9006: a5 = a5 | ra\n  9009: a0 = a0 << 0x1\n  9012: a2 = u64 [s1 + 0x88]\n  9016: a0 = a0 | a2\n  9019: u64 [s1 + 0xd0] = a0\n  9023: a0 = a5 | 0\n  9025: u64 [s1 + 0xc0] = a0\n  9029: a0 = a1 | 0\n  9031: u64 [s1 + 0xc8] = a0\n  9035: a0 = u64 [s1 + 0xa0]\n  9039: ra = a0 | 0\n  9041: a0 = a3 - a4\n  9044: a0 = a0 <u t0\n  9047: a1 = a3 <u a4\n  9050: t2 = u64 [s1 + 0x80]\n  9054: a5 = a3 - t2\n  9057: a5 = a5 - a1\n  9060: a5 = a5 - a0\n  9063: t0 = a5 >>a 0x3f\n  9066: a0 = t0 & 0xa\n  9069: a2 = u64 [s1 + 0x90]\n  9073: a1 = a2 - a0\n  9076: u64 [s1 + 0x98] = a1\n  9080: a1 = a2 <u a0\n  9083: a0 = t1 - a1\n  9086: u64 [s1 + 0xa0] = a0\n  9090: a1 = 0 if t1 != 0\n  9092: a0 = a4 - a1\n  9095: a1 = a4 <u a1\n  9098: a1 = t2 - a1\n  9101: a3 = u64 [s1 + 0xd8]\n  9105: a5 = u64 [s1 + 0xb8]\n  9109: a2 = a3 | a5\n  9112: a2 = a2 <u 0x1\n  9115: a4 = u64 [s1 + 0xa8]\n  9119: t1 = a4 <u a2\n  9122: a4 = a4 - a2\n  9125: a2 = a3 <u 0x1\n  9128: a5 = a5 - a2\n  9131: a2 = u64 [s1 + 0xb0]\n  9135: a2 = a2 - t1\n  9138: a3 = a3 + 0xffffffffffffffff\n  9141: u64 [s1 + 0xb8] = a5\n  9145: u64 [s1 + 0xb0] = a2\n  9149: a2 = a2 | a5\n  9152: u64 [s1 + 0xd8] = a3\n  9156: a3 = a3 | a4\n  9159: a2 = a2 | a3\n  9162: a5 = t0 & 0x1\n  9165: u64 [s1 + 0xa8] = a4\n  9169: jump @346 if a2 != 0\n      : @347 (gas: 1)\n  9173: jump @349\n      : @348 (gas: 4)\n  9175: a5 = 0\n  9177: u64 [s1 + 120] = 0\n  9180: ra = u64 [s1 + 0x90]\n  9184: fallthrough\n      : @349 (gas: 19)\n  9185: a2 = u64 [s1 + 0xc8]\n  9189: a0 = a2 >> 0x3f\n  9192: a1 = ra << 0x1\n  9195: a0 = a0 | a1\n  9198: a3 = u64 [s1 + 0xc0]\n  9202: a1 = a3 >> 0x3f\n  9205: a2 = a2 << 0x1\n  9208: a1 = a1 | a2\n  9211: a4 = u64 [s1 + 0xd0]\n  9215: a2 = a4 >> 0x3f\n  9218: a3 = a3 << 0x1\n  9221: a4 = a4 << 0x1\n  9224: a5 = a5 | a4\n  9227: a4 = u64 [s1 + 0x78]\n  9230: a2 = a2 | a4\n  9233: a3 = a3 | a2\n  9236: a1 = a1 | a4\n  9239: a4 = a4 | a0\n  9242: fallthrough\n      : @350 (gas: 31)\n  9243: u64 [s1 + 0xc8] = a1\n  9247: t2 = u64 [s1 + 0x58]\n  9250: u64 [s1 + 0xd8] = a5\n  9254: t0 = t2 <u a5\n  9257: a0 = u64 [s1 + 0x50]\n  9260: a5 = a0 ^ a3\n  9263: t1 = a0 <u a3\n  9266: t1 = t0 if a5 == 0\n  9269: a5 = u64 [s1 + 0x48]\n  9272: ra = a5 <u a1\n  9275: a2 = u64 [s1 + 0x40]\n  9278: t0 = a2 ^ a4\n  9281: u64 [s1 + 0xd0] = a4\n  9285: a4 = a2 <u a4\n  9288: a4 = ra if t0 == 0\n  9291: ra = a0\n  9293: a1 = a3\n  9295: a3 = u64 [s1 + 0xc8]\n  9299: a0 = a5 ^ a3\n  9302: a0 = a0 | t0\n  9305: a4 = t1 if a0 == 0\n  9308: a0 = u64 [s1 + 0xd8]\n  9312: t2 = a0 if a4 == 0\n  9315: ra = a1 if a4 == 0\n  9318: a5 = a3 if a4 == 0\n  9321: a0 = u64 [s1 + 0xd0]\n  9325: a2 = a0 if a4 == 0\n  9328: a0 = ra | a2\n  9331: a1 = t2 | a5\n  9334: a0 = a0 | a1\n  9337: jump @371 if a0 == 0\n      : @351 (gas: 34)\n  9341: a1 = u64 [s1 + 0x60]\n  9344: a0 = a2 ^ a1\n  9347: u64 [s1 + 0xd8] = a0\n  9351: a0 = a1\n  9353: t1 = u64 [s1 + 0x30]\n  9356: t0 = ra ^ t1\n  9359: a4 = ra <u t1\n  9362: a1 = u64 [s1 + 0x28]\n  9365: a3 = t2 <u a1\n  9368: a3 = a4 if t0 != 0\n  9371: a1 = a2 <u a0\n  9374: t0 = u64 [s1 + 0x20]\n  9377: a4 = a5 <u t0\n  9380: a0 = u64 [s1 + 0xd8]\n  9384: a4 = a1 if a0 != 0\n  9387: a1 = a5 ^ t0\n  9390: a0 = a0 | a1\n  9393: a3 = a4 if a0 != 0\n  9396: a0 = u64 [s1 + 0x60]\n  9399: a2 = a0 if a3 == 0\n  9402: u64 [s1 + 0x40] = a2\n  9405: a5 = t0 if a3 == 0\n  9408: u64 [s1 + 0x48] = a5\n  9411: ra = t1 if a3 == 0\n  9414: u64 [s1 + 0x50] = ra\n  9417: a0 = u64 [s1 + 0x28]\n  9420: t2 = a0 if a3 == 0\n  9423: u64 [s1 + 0x58] = t2\n  9426: a0 = u64 [s1 + 0x10]\n  9429: ra = 0x118\n  9433: ecalli 5 // 'caller'\n  9435: a2 = u64 [s1 + 0x38]\n  9438: t0 = 0x11a\n  9442: jump @459\n      : @352 [@dyn 140] (gas: 2)\n  9445: a2 = u64 [s1 + 0x38]\n  9448: t0 = 282, jump @459\n      : @353 [@dyn 141] (gas: 7)\n  9454: u64 [s1 + 472] = 0\n  9458: u64 [s1 + 0x1d0] = a1\n  9462: u64 [s1 + 0x1c8] = a0\n  9466: a1 = s1 + 0x1c0\n  9470: u64 [s1 + 0x1c0] = a3\n  9474: a0 = 0\n  9476: ra = 284, jump @9\n      : @354 [@dyn 142] (gas: 7)\n  9482: u64 [s1 + 440] = 0\n  9486: u64 [s1 + 432] = 0\n  9490: u64 [s1 + 416] = 0x1\n  9495: a0 = 0x20\n  9498: a1 = s1 + 0x1a0\n  9502: u64 [s1 + 424] = 0\n  9506: ra = 286, jump @9\n      : @355 [@dyn 143] (gas: 3)\n  9512: i32 a0 = s1 + 0x240\n  9516: ecalli 10 // 'now'\n  9518: fallthrough\n      : @356 (gas: 12)\n  9519: a2 = 0x20068\n  9524: a3 = s1 + 0x200\n  9528: a0 = u64 [a3 + 0x58]\n  9531: u64 [s1 + 0xc0] = a0\n  9535: a0 = u64 [a3 + 0x50]\n  9538: u64 [s1 + 0xc8] = a0\n  9542: a0 = u64 [a3 + 0x48]\n  9545: u64 [s1 + 0xd0] = a0\n  9549: a0 = i32 [0x20068]\n  9554: a1 = u64 [a3 + 0x40]\n  9557: u64 [s1 + 0xb8] = a1\n  9561: jump @358 if a0 >u 63\n      : @357 (gas: 2)\n  9565: u32 [0x20068] = 0x40\n  9571: fallthrough\n      : @358 (gas: 16)\n  9572: u64 [s1 + 0xa8] = a2\n  9576: a0 = sp + 0xffffffffffffffe0\n  9579: a2 = a0 & 0xffffffffffffffe0\n  9582: u64 [s1 + 0xb0] = a2\n  9586: sp = a2\n  9588: a0 = 0x20070\n  9593: u64 [s1 + 0xd8] = a0\n  9597: i32 a0 = a0 + 0\n  9599: i32 a2 = a2 + 0\n  9601: a1 = 0x40\n  9604: u64 [s1 + 0xa0] = a0\n  9608: ra = 0x120\n  9612: ecalli 9 // 'hash_keccak_256'\n  9614: a3 = u64 [s1 + 0xb0]\n  9618: t0 = 0x122\n  9622: jump @461\n      : @359 [@dyn 144] (gas: 2)\n  9625: a3 = u64 [s1 + 0xb0]\n  9629: t0 = 290, jump @461\n      : @360 [@dyn 145] (gas: 15)\n  9635: u64 [s1 + 0x278] = a3\n  9639: u64 [s1 + 0x270] = a2\n  9643: u64 [s1 + 0x268] = a1\n  9647: u64 [s1 + 0x260] = a0\n  9651: a0 = u64 [s1 + 0xc0]\n  9655: u64 [s1 + 0x298] = a0\n  9659: a0 = u64 [s1 + 0xc8]\n  9663: u64 [s1 + 0x290] = a0\n  9667: a0 = u64 [s1 + 0xd0]\n  9671: u64 [s1 + 0x288] = a0\n  9675: a0 = u64 [s1 + 0xb8]\n  9679: u64 [s1 + 0x280] = a0\n  9683: a0 = s1 + 0x260\n  9687: a1 = s1 + 0x280\n  9691: ra = 292, jump @12\n      : @361 [@dyn 146] (gas: 1)\n  9697: ra = 294, jump @0\n      : @362 [@dyn 147] (gas: 62)\n  9703: a1 = u64 [0x300b0]\n  9708: u64 [s1 + 0xd0] = a1\n  9712: a1 = u64 [0x300c0]\n  9717: u64 [s1 + 0xc8] = a1\n  9721: a0 = u64 [0x300b8]\n  9726: u64 [s1 + 0xc0] = a0\n  9730: ecalli 11 // 'ref_time_left'\n  9732: a1 = u64 [s1 + 0xc0]\n  9736: a1 = reverse a1\n  9738: a2 = a1 << 0x20\n  9741: a3 = u64 [s1 + 0xc8]\n  9745: a3 = reverse a3\n  9747: a3 = a3 >> 0x20\n  9750: a2 = a2 | a3\n  9753: a1 = a1 >> 0x20\n  9756: a3 = u64 [s1 + 0xd0]\n  9760: a3 = reverse a3\n  9762: a4 = a3 << 0x20\n  9765: a1 = a1 | a4\n  9768: a3 = a3 >> 0x20\n  9771: a4 = u64 [s1 + 0x38]\n  9774: u32 [a4 + 0x10] = a3\n  9777: u64 [a4 + 0x8] = a1\n  9780: u64 [a4] = a2\n  9782: a1 = u64 [s1 + 0x40]\n  9785: a2 = s1 + 0x200\n  9789: u64 [a2 + 0xb8] = a1\n  9793: a1 = u64 [s1 + 0x48]\n  9796: u64 [a2 + 0xb0] = a1\n  9800: a1 = u64 [s1 + 0x50]\n  9803: u64 [a2 + 0xa8] = a1\n  9807: a1 = u64 [s1 + 0x58]\n  9810: u64 [a2 + 0xa0] = a1\n  9814: u32 [s1 + 704] = 0\n  9818: a0 = a0 >u 0x8fc\n  9822: a1 = -a0\n  9824: u64 [a2 + 0xf8] = a1\n  9828: u64 [a2 + 0xf0] = a1\n  9832: u64 [a2 + 0xe8] = a1\n  9836: u64 [a2 + 0xe0] = a1\n  9840: a1 = a4 << 0x20\n  9843: a1 = a1 >> 0x20\n  9846: a0 = a0 << 0x23\n  9849: a0 = a0 | a1\n  9852: a1 = s1 + 0x2a0\n  9856: a1 = a1 << 0x20\n  9859: a1 = a1 >> 0x20\n  9862: a2 = s1 + 0x2e0\n  9866: a2 = a2 << 0x20\n  9869: a3 = a2 | a1\n  9872: a4 = u64 [s1 + 0xd8]\n  9876: a4 = a4 << 0x20\n  9879: a4 = a4 >> 0x20\n  9882: a1 = s1 + 0x2c0\n  9886: a1 = a1 << 0x20\n  9889: a5 = a1 | a4\n  9892: a1 = 0xffffffffffffffff\n  9895: a2 = 0xffffffffffffffff\n  9898: ecalli 1 // 'call'\n  9900: u64 [s1 + 0xd8] = a0\n  9904: a0 = s1 + 0x180\n  9908: ra = 296, jump @307\n      : @363 [@dyn 148] (gas: 2)\n  9914: a0 = u64 [s1 + 0xd8]\n  9918: jump @374 if a0 != 0\n      : @364 (gas: 3)\n  9922: a0 = s1 + 0x140\n  9926: a1 = 0x40\n  9929: ra = 298, jump @7\n      : @365 [@dyn 149] (gas: 13)\n  9935: a4 = s1 + 0x100\n  9939: a3 = u64 [a4 + 0x58]\n  9942: a1 = u64 [a4 + 0x50]\n  9945: a2 = u64 [a4 + 0x48]\n  9948: a0 = u64 [a4 + 0x40]\n  9951: a3 = a3 | a2\n  9954: a2 = a0 | a1\n  9957: a2 = a2 | a3\n  9960: a2 = a2 >> 0x20\n  9963: a1 = a1 | a3\n  9966: a1 = a1 << 0x20\n  9969: a1 = a1 | a2\n  9972: jump @373 if a1 != 0\n      : @366 (gas: 11)\n  9976: a1 = u64 [s1 + 0x58]\n  9979: u64 [s1 + 0x120] = a1\n  9983: a1 = u64 [s1 + 0x50]\n  9986: u64 [s1 + 0x128] = a1\n  9990: a1 = u64 [s1 + 0x48]\n  9993: u64 [s1 + 0x130] = a1\n  9997: a1 = s1 + 0x120\n 10001: a2 = u64 [s1 + 0x40]\n 10004: u64 [s1 + 0x138] = a2\n 10008: u64 [s1 + 0xd8] = a0\n 10012: ra = 300, jump @9\n      : @367 [@dyn 150] (gas: 6)\n 10018: a0 = u64 [s1 + 0x10]\n 10021: ra = 0x12e\n 10025: ecalli 5 // 'caller'\n 10027: a2 = u64 [s1 + 0x38]\n 10030: t0 = 0x130\n 10034: jump @467\n      : @368 [@dyn 151] (gas: 2)\n 10037: a2 = u64 [s1 + 0x38]\n 10040: t0 = 304, jump @467\n      : @369 [@dyn 152] (gas: 24)\n 10046: t0 = a1 | a0\n 10049: a3 = a3 >> 0x20\n 10052: a2 = reverse a2\n 10054: a1 = a2 << 0x20\n 10057: a1 = a1 | a3\n 10060: a2 = a2 >> 0x20\n 10063: u64 [s1 + 248] = 0\n 10067: a3 = u64 [0x20040]\n 10072: a4 = u64 [0x20048]\n 10077: a5 = u64 [0x20050]\n 10082: a0 = u64 [0x20058]\n 10087: u64 [s1 + 0x118] = a3\n 10091: a3 = s1 + 0x100\n 10095: u64 [a3 + 0x10] = a4\n 10098: u64 [a3 + 0x8] = a5\n 10101: u64 [a3] = a0\n 10103: u64 [s1 + 0xf0] = a2\n 10107: u64 [s1 + 0xe8] = a1\n 10111: a1 = 0x20\n 10114: a2 = s1 + 0x100\n 10118: a3 = s1 + 0xe0\n 10122: u64 [s1 + 0xe0] = t0\n 10126: a0 = u64 [s1 + 0xd8]\n 10130: ra = 306, jump @13\n      : @370 [@dyn 153] (gas: 5)\n 10136: a4 = u64 [s1 + 0x40]\n 10139: a3 = u64 [s1 + 0x48]\n 10142: a2 = u64 [s1 + 0x50]\n 10145: a1 = u64 [s1 + 0x58]\n 10148: jump @372\n      : @371 (gas: 5)\n 10150: a1 = 0\n 10152: a2 = 0\n 10154: a3 = 0\n 10156: a4 = 0\n 10158: fallthrough\n      : @372 (gas: 12)\n 10159: a0 = u64 [s1 + 0x18]\n 10162: u64 [a0] = a1\n 10164: u64 [a0 + 0x8] = a2\n 10167: u64 [a0 + 0x10] = a3\n 10170: u64 [a0 + 0x18] = a4\n 10173: sp = s0 + 0xfffffffffffffce0\n 10177: a0 = sp + 0x300\n 10181: ra = u64 [a0 + 0x18]\n 10184: s0 = u64 [a0 + 0x10]\n 10187: s1 = u64 [a0 + 0x8]\n 10190: sp = sp + 0x320\n 10194: ret\n      : @373 (gas: 1)\n 10196: trap\n      : @374 (gas: 8)\n 10197: u64 [s1 + 368] = 0\n 10201: u64 [s1 + 360] = 0\n 10205: u64 [s1 + 352] = 0\n 10209: a0 = 0x90b8ec1800000000\n 10219: a1 = s1 + 0x160\n 10223: u64 [s1 + 0x178] = a0\n 10227: a0 = 0\n 10229: ra = 308, jump @9\n      : @375 [@dyn 154] (gas: 3)\n 10235: a0 = u64 [s1 + 0xa8]\n 10239: a0 = i32 [a0]\n 10241: jump @377 if a0 >u 31\n      : @376 (gas: 3)\n 10245: a1 = u64 [s1 + 0xa8]\n 10249: u32 [a1 + 0] = 0x20\n 10252: fallthrough\n      : @377 (gas: 6)\n 10253: a0 = 0x1\n 10256: a2 = 0x4\n 10259: a1 = u64 [s1 + 0xa0]\n 10263: ra = 0x136\n 10267: ecalli 14 // 'seal_return'\n 10269: fallthrough\n      : @378 [@dyn 155] (gas: 20)\n 10270: sp = sp + 0xfffffffffffffe80\n 10274: u64 [sp + 0x178] = ra\n 10278: u64 [sp + 0x170] = s0\n 10282: u64 [sp + 0x168] = s1\n 10286: s0 = sp + 0x180\n 10290: sp = sp & 0xffffffffffffffe0\n 10293: s1 = sp\n 10295: a2 = u64 [a0]\n 10297: a1 = u64 [a0 + 0x8]\n 10300: a0 = u32 [a0 + 0x10]\n 10303: u64 [s1 + 216] = 0\n 10307: u64 [s1 + 0x28] = a0\n 10310: u64 [s1 + 0xd0] = a0\n 10314: u64 [s1 + 0x10] = a1\n 10317: u64 [s1 + 0xc8] = a1\n 10321: a1 = s1 + 0xc0\n 10325: u64 [s1 + 0x18] = a2\n 10328: u64 [s1 + 0xc0] = a2\n 10332: a0 = 0\n 10334: ra = 312, jump @9\n      : @379 [@dyn 156] (gas: 7)\n 10340: u64 [s1 + 184] = 0\n 10344: u64 [s1 + 176] = 0\n 10348: u64 [s1 + 160] = 0x1\n 10353: a0 = 0x20\n 10356: a1 = s1 + 0xa0\n 10360: u64 [s1 + 168] = 0\n 10364: ra = 314, jump @9\n      : @380 [@dyn 157] (gas: 3)\n 10370: a2 = 0x20068\n 10375: a0 = i32 [0x20068]\n 10380: jump @382 if a0 >u 63\n      : @381 (gas: 2)\n 10384: u32 [0x20068] = 0x40\n 10390: fallthrough\n      : @382 (gas: 15)\n 10391: u64 [s1 + 0x30] = a2\n 10394: a0 = sp + 0xffffffffffffffe0\n 10397: a2 = a0 & 0xffffffffffffffe0\n 10400: u64 [s1 + 0x38] = a2\n 10403: sp = a2\n 10405: a0 = 0x20070\n 10410: i32 a0 = a0 + 0\n 10412: i32 a2 = a2 + 0\n 10414: a1 = 0x40\n 10417: u64 [s1 + 0x20] = a0\n 10420: ra = 0x13c\n 10424: ecalli 9 // 'hash_keccak_256'\n 10426: a3 = u64 [s1 + 0x38]\n 10429: t0 = 0x13e\n 10433: jump @461\n      : @383 [@dyn 158] (gas: 2)\n 10436: a3 = u64 [s1 + 0x38]\n 10439: t0 = 318, jump @461\n      : @384 [@dyn 159] (gas: 7)\n 10445: u64 [s1 + 0xf8] = a3\n 10449: u64 [s1 + 0xf0] = a2\n 10453: u64 [s1 + 0xe8] = a1\n 10457: u64 [s1 + 0xe0] = a0\n 10461: a0 = s1 + 0x80\n 10465: a1 = s1 + 0xe0\n 10469: ra = 320, jump @11\n      : @385 [@dyn 160] (gas: 8)\n 10475: a0 = u64 [s1 + 0x90]\n 10479: a1 = u64 [s1 + 0x98]\n 10483: a2 = u64 [s1 + 0x88]\n 10487: a3 = u64 [s1 + 0x80]\n 10491: a1 = a1 | a2\n 10494: a0 = a0 | a3\n 10497: a0 = a0 | a1\n 10500: jump @394 if a0 != 0\n      : @386 (gas: 10)\n 10504: u64 [s1 + 120] = 0\n 10507: a0 = u64 [s1 + 0x18]\n 10510: u64 [s1 + 0x60] = a0\n 10513: a0 = u64 [s1 + 0x10]\n 10516: u64 [s1 + 0x68] = a0\n 10519: a1 = s1 + 0x60\n 10522: a0 = u64 [s1 + 0x28]\n 10525: u64 [s1 + 0x70] = a0\n 10528: a0 = 0\n 10530: ra = 322, jump @9\n      : @387 [@dyn 161] (gas: 7)\n 10536: u64 [s1 + 88] = 0\n 10539: u64 [s1 + 80] = 0\n 10542: u64 [s1 + 64] = 0x1\n 10546: a0 = 0x20\n 10549: a1 = s1 + 0x40\n 10552: u64 [s1 + 72] = 0\n 10555: ra = 324, jump @9\n      : @388 [@dyn 162] (gas: 3)\n 10561: i32 a0 = s1 + 0x100\n 10565: ecalli 10 // 'now'\n 10567: fallthrough\n      : @389 (gas: 12)\n 10568: a3 = s1 + 0x100\n 10572: a0 = u64 [a3 + 0x18]\n 10575: u64 [s1 + 0x18] = a0\n 10578: a0 = u64 [a3 + 0x10]\n 10581: u64 [s1 + 0x28] = a0\n 10584: a0 = u64 [a3 + 0x8]\n 10587: u64 [s1 + 0x38] = a0\n 10590: a2 = u64 [s1 + 0x30]\n 10593: a0 = i32 [a2]\n 10595: a1 = u64 [a3]\n 10597: u64 [s1 + 0x10] = a1\n 10600: jump @391 if a0 >u 63\n      : @390 (gas: 2)\n 10604: u32 [a2 + 0] = 0x40\n 10607: fallthrough\n      : @391 (gas: 12)\n 10608: a0 = sp + 0xffffffffffffffe0\n 10611: a0 = a0 & 0xffffffffffffffe0\n 10614: u64 [s1 + 0x30] = a0\n 10617: sp = a0\n 10619: i32 a2 = a0 + 0\n 10621: a1 = 0x40\n 10624: a0 = u64 [s1 + 0x20]\n 10627: ra = 0x146\n 10631: ecalli 9 // 'hash_keccak_256'\n 10633: a3 = u64 [s1 + 0x30]\n 10636: t0 = 0x148\n 10640: jump @461\n      : @392 [@dyn 163] (gas: 2)\n 10643: a3 = u64 [s1 + 0x30]\n 10646: t0 = 328, jump @461\n      : @393 [@dyn 164] (gas: 16)\n 10652: a4 = s1 + 0x100\n 10656: u64 [a4 + 0x38] = a3\n 10659: u64 [a4 + 0x30] = a2\n 10662: u64 [a4 + 0x28] = a1\n 10665: u64 [a4 + 0x20] = a0\n 10668: a0 = u64 [s1 + 0x18]\n 10671: u64 [a4 + 0x58] = a0\n 10674: a0 = u64 [s1 + 0x28]\n 10677: u64 [a4 + 0x50] = a0\n 10680: a0 = u64 [s1 + 0x38]\n 10683: u64 [a4 + 0x48] = a0\n 10686: a0 = u64 [s1 + 0x10]\n 10689: u64 [a4 + 0x40] = a0\n 10692: a0 = s1 + 0x120\n 10696: a1 = s1 + 0x140\n 10700: ra = 330, jump @12\n      : @394 [@dyn 165] (gas: 6)\n 10706: sp = s0 + 0xfffffffffffffe80\n 10710: ra = u64 [sp + 0x178]\n 10714: s0 = u64 [sp + 0x170]\n 10718: s1 = u64 [sp + 0x168]\n 10722: sp = sp + 0x180\n 10726: ret\n      : @395 (gas: 70)\n 10728: sp = sp + 0xffffffffffffff40\n 10732: u64 [sp + 0xb8] = ra\n 10736: u64 [sp + 0xb0] = s0\n 10740: u64 [sp + 0xa8] = s1\n 10744: s0 = sp + 0xc0\n 10748: sp = sp & 0xfffffffffffffff0\n 10751: ra = u64 [a2]\n 10753: t0 = u64 [a1]\n 10755: a3 = u64 [a1 + 0x8]\n 10758: u64 [sp + 0x58] = a0\n 10761: a4 = u64 [a2 + 0x8]\n 10764: a0 = t0 mulhu ra\n 10767: s1 = a3 * ra\n 10770: a0 = a0 + s1\n 10773: s1 = a0 <u s1\n 10776: a5 = a3 mulhu ra\n 10779: a5 = a5 + s1\n 10782: s1 = t0 * a4\n 10785: a0 = a0 + s1\n 10788: u64 [sp + 0x50] = a0\n 10791: a0 = a0 <u s1\n 10794: s1 = t0 mulhu a4\n 10797: a0 = a0 + s1\n 10800: a0 = a0 + a5\n 10803: a5 = a0 <u a5\n 10806: s1 = a3 mulhu a4\n 10809: a5 = a5 + s1\n 10812: s1 = a3 * a4\n 10815: a0 = a0 + s1\n 10818: u64 [sp + 0x48] = a0\n 10821: s1 = a0 <u s1\n 10824: a5 = a5 + s1\n 10827: u64 [sp + 0x40] = a5\n 10830: t1 = u64 [a2 + 0x10]\n 10833: a2 = u64 [a2 + 0x18]\n 10836: t2 = u64 [a1 + 0x18]\n 10839: a0 = u64 [a1 + 0x10]\n 10842: a5 = a3 * t1\n 10845: u64 [sp + 0x20] = a2\n 10848: s1 = a2 * t0\n 10851: a1 = s1 + a5\n 10854: u64 [sp + 0x28] = a4\n 10857: s1 = a4 * a0\n 10860: a2 = t2 * ra\n 10863: a2 = a2 + s1\n 10866: s1 = t1 * t0\n 10869: a5 = a0 * ra\n 10872: s1 = s1 + a5\n 10875: u64 [sp + 0x30] = t1\n 10878: a4 = t1 mulhu t0\n 10881: u64 [sp + 0x10] = a4\n 10884: a4 = a4 + a1\n 10887: t1 = a0 mulhu ra\n 10890: a1 = t1 + a2\n 10893: a2 = s1 <u a5\n 10896: u64 [sp + 0x18] = a1\n 10899: u64 [sp + 0x8] = a4\n 10902: a5 = a1 + a4\n 10905: a2 = a2 + a5\n 10908: u64 [sp + 0x38] = t2\n 10911: a5 = a3 | t2\n 10914: a1 = t0 | a0\n 10917: a1 = a1 | a5\n 10920: a4 = u64 [sp + 0x40]\n 10923: a5 = u64 [sp + 0x48]\n 10926: s1 = s1 + a5\n 10929: t2 = s1 <u a5\n 10932: a2 = a2 + a4\n 10935: a2 = a2 + t2\n 10938: jump @397 if a1 == 0\n      : @396 (gas: 50)\n 10942: a1 = a2 ^ a4\n 10945: u64 [sp + 0x48] = a2\n 10948: a2 = u64 [sp + 0x48]\n 10951: a2 = a2 <u a4\n 10954: t2 = a2 if a1 != 0\n 10957: u64 [sp + 0x40] = s1\n 10960: a1 = u64 [sp + 0x10]\n 10963: a2 = u64 [sp + 0x8]\n 10966: s1 = a2 <u a1\n 10969: a2 = a3 >u 0\n 10971: a1 = u64 [sp + 0x20]\n 10974: a5 = a1 >u 0\n 10976: a2 = a2 & a5\n 10979: a5 = a1 mulhu t0\n 10982: a5 = a5 >u 0\n 10984: a2 = a2 | a5\n 10987: a4 = t1\n 10989: t1 = u64 [sp + 0x30]\n 10992: a3 = a3 mulhu t1\n 10995: a3 = a3 >u 0\n 10997: a2 = a2 | a3\n 11000: a2 = a2 | s1\n 11003: u64 [sp + 0x10] = a2\n 11006: a2 = u64 [sp + 0x18]\n 11009: a2 = a2 <u a4\n 11012: a4 = u64 [sp + 0x28]\n 11015: a3 = a4 >u 0\n 11017: s1 = u64 [sp + 0x38]\n 11020: a5 = s1 >u 0\n 11022: a3 = a3 & a5\n 11025: a5 = s1 mulhu ra\n 11028: a5 = a5 >u 0\n 11030: a3 = a3 | a5\n 11033: a5 = a4 mulhu a0\n 11036: a5 = a5 >u 0\n 11038: a3 = a3 | a5\n 11041: a2 = a2 | a3\n 11044: a3 = t1 | a1\n 11047: a5 = a0 | s1\n 11050: s1 = u64 [sp + 0x40]\n 11053: a3 = a3 >u 0\n 11055: a5 = a5 >u 0\n 11057: a3 = a3 & a5\n 11060: a2 = a2 | a3\n 11063: a1 = u64 [sp + 0x10]\n 11066: a1 = a1 | a2\n 11069: a2 = u64 [sp + 0x48]\n 11072: a0 = a1 | t2\n 11075: a0 = a0 & 0x1\n 11078: jump @398 if a0 != 0\n      : @397 (gas: 13)\n 11081: a0 = t0 * ra\n 11084: a1 = u64 [sp + 0x58]\n 11087: u64 [a1] = a0\n 11089: a0 = u64 [sp + 0x50]\n 11092: u64 [a1 + 0x8] = a0\n 11095: u64 [a1 + 0x10] = s1\n 11098: u64 [a1 + 0x18] = a2\n 11101: sp = s0 + 0xffffffffffffff40\n 11105: ra = u64 [sp + 0xb8]\n 11109: s0 = u64 [sp + 0xb0]\n 11113: s1 = u64 [sp + 0xa8]\n 11117: sp = sp + 0xc0\n 11121: ret\n      : @398 (gas: 8)\n 11123: u64 [sp + 144] = 0\n 11127: u64 [sp + 136] = 0\n 11131: u64 [sp + 128] = 0\n 11135: a0 = 0x4e487b7100000000\n 11145: a1 = sp + 0x80\n 11149: u64 [sp + 0x98] = a0\n 11153: a0 = 0\n 11155: ra = 332, jump @9\n      : @399 [@dyn 166] (gas: 7)\n 11161: u64 [sp + 120] = 0\n 11164: u64 [sp + 112] = 0\n 11167: u64 [sp + 96] = 0x11\n 11171: a0 = 0x4\n 11174: a1 = sp + 0x60\n 11177: u64 [sp + 104] = 0\n 11180: ra = 334, jump @9\n      : @400 [@dyn 167] (gas: 2)\n 11186: a1 = i32 [0x20068]\n 11191: jump @402 if a1 >u 63\n      : @401 (gas: 2)\n 11195: u32 [0x20068] = 0x40\n 11201: fallthrough\n      : @402 (gas: 7)\n 11202: a1 = 0x20070\n 11207: i32 a1 = a1 + 0\n 11209: a0 = 0x1\n 11212: a2 = 0x24\n 11215: ra = 0x150\n 11219: ecalli 14 // 'seal_return'\n 11221: fallthrough\n      : @403 [@dyn 168] (gas: 22)\n 11222: sp = sp + 0xfffffffffffffc00\n 11226: a2 = sp + 0x300\n 11230: u64 [a2 + 0xf8] = ra\n 11234: u64 [a2 + 0xf0] = s0\n 11238: u64 [a2 + 0xe8] = s1\n 11242: s0 = sp + 0x400\n 11246: sp = sp & 0xffffffffffffffe0\n 11249: s1 = sp\n 11251: a2 = u64 [a1]\n 11253: a3 = u64 [a1 + 0x8]\n 11256: a1 = u32 [a1 + 0x10]\n 11259: u64 [s1 + 0x18] = a0\n 11262: u64 [s1 + 824] = 0\n 11266: u64 [s1 + 0x88] = a1\n 11270: u64 [s1 + 0x330] = a1\n 11274: u64 [s1 + 0x90] = a3\n 11278: u64 [s1 + 0x328] = a3\n 11282: a1 = s1 + 0x320\n 11286: u64 [s1 + 0x98] = a2\n 11290: u64 [s1 + 0x320] = a2\n 11294: a0 = 0\n 11296: ra = 338, jump @9\n      : @404 [@dyn 169] (gas: 7)\n 11302: u64 [s1 + 792] = 0\n 11306: u64 [s1 + 784] = 0\n 11310: u64 [s1 + 768] = 0x1\n 11315: a0 = 0x20\n 11318: a1 = s1 + 0x300\n 11322: u64 [s1 + 776] = 0\n 11326: ra = 340, jump @9\n      : @405 [@dyn 170] (gas: 3)\n 11332: a2 = 0x20068\n 11337: a0 = i32 [0x20068]\n 11342: jump @407 if a0 >u 63\n      : @406 (gas: 2)\n 11346: u32 [0x20068] = 0x40\n 11352: fallthrough\n      : @407 (gas: 15)\n 11353: u64 [s1 + 0x80] = a2\n 11357: a0 = sp + 0xffffffffffffffe0\n 11360: a2 = a0 & 0xffffffffffffffe0\n 11363: u64 [s1 + 0x70] = a2\n 11366: sp = a2\n 11368: a0 = 0x20070\n 11373: i32 a0 = a0 + 0\n 11375: i32 a2 = a2 + 0\n 11377: a1 = 0x40\n 11380: u64 [s1 + 0x78] = a0\n 11383: ra = 0x156\n 11387: ecalli 9 // 'hash_keccak_256'\n 11389: a3 = u64 [s1 + 0x70]\n 11392: t0 = 0x158\n 11396: jump @463\n      : @408 [@dyn 171] (gas: 2)\n 11399: a3 = u64 [s1 + 0x70]\n 11402: t0 = 344, jump @463\n      : @409 [@dyn 172] (gas: 7)\n 11408: u64 [a4 + 0x58] = a3\n 11411: u64 [a4 + 0x50] = a2\n 11414: u64 [a4 + 0x48] = a1\n 11417: u64 [a4 + 0x40] = a0\n 11420: a0 = s1 + 0x2e0\n 11424: a1 = s1 + 0x340\n 11428: ra = 346, jump @11\n      : @410 [@dyn 173] (gas: 9)\n 11434: a4 = s1 + 0x200\n 11438: a0 = u64 [a4 + 0xf0]\n 11442: a1 = u64 [a4 + 0xf8]\n 11446: a2 = u64 [a4 + 0xe8]\n 11450: a3 = u64 [a4 + 0xe0]\n 11454: a1 = a1 | a2\n 11457: a0 = a0 | a3\n 11460: a0 = a0 | a1\n 11463: jump @453 if a0 == 0\n      : @411 (gas: 11)\n 11467: u64 [s1 + 728] = 0\n 11471: a0 = u64 [s1 + 0x98]\n 11475: a2 = s1 + 0x200\n 11479: u64 [a2 + 0xc0] = a0\n 11483: a0 = u64 [s1 + 0x90]\n 11487: u64 [a2 + 0xc8] = a0\n 11491: a1 = s1 + 0x2c0\n 11495: a0 = u64 [s1 + 0x88]\n 11499: u64 [a2 + 0xd0] = a0\n 11503: a0 = 0\n 11505: ra = 348, jump @9\n      : @412 [@dyn 174] (gas: 7)\n 11511: u64 [s1 + 696] = 0\n 11515: u64 [s1 + 688] = 0\n 11519: u64 [s1 + 680] = 0\n 11523: a0 = 0x20\n 11526: a1 = s1 + 0x2a0\n 11530: u64 [s1 + 672] = 0\n 11534: ra = 350, jump @9\n      : @413 [@dyn 175] (gas: 3)\n 11540: a2 = u64 [s1 + 0x80]\n 11544: a0 = i32 [a2]\n 11546: jump @415 if a0 >u 63\n      : @414 (gas: 3)\n 11550: u32 [a2 + 0] = 0x40\n 11553: t0 = 0x160\n 11557: jump @469\n      : @415 (gas: 1)\n 11560: t0 = 352, jump @469\n      : @416 [@dyn 176] (gas: 5)\n 11566: ra = 0x162\n 11570: ecalli 9 // 'hash_keccak_256'\n 11572: a3 = u64 [s1 + 0x70]\n 11575: t0 = 0x164\n 11579: jump @463\n      : @417 [@dyn 177] (gas: 2)\n 11582: a3 = u64 [s1 + 0x70]\n 11585: t0 = 356, jump @463\n      : @418 [@dyn 178] (gas: 7)\n 11591: u64 [a4 + 0x78] = a3\n 11594: u64 [a4 + 0x70] = a2\n 11597: u64 [a4 + 0x68] = a1\n 11600: u64 [a4 + 0x60] = a0\n 11603: a0 = s1 + 0x280\n 11607: a1 = s1 + 0x360\n 11611: ra = 358, jump @11\n      : @419 [@dyn 179] (gas: 9)\n 11617: a4 = s1 + 0x200\n 11621: a0 = u64 [a4 + 0x90]\n 11625: a1 = u64 [a4 + 0x98]\n 11629: a2 = u64 [a4 + 0x88]\n 11633: a3 = u64 [a4 + 0x80]\n 11637: a1 = a1 | a2\n 11640: a0 = a0 | a3\n 11643: a0 = a0 | a1\n 11646: jump @453 if a0 == 0\n      : @420 (gas: 10)\n 11650: u64 [s1 + 632] = 0\n 11654: a0 = u64 [s1 + 0x98]\n 11658: u64 [s1 + 0x260] = a0\n 11662: a0 = u64 [s1 + 0x90]\n 11666: u64 [s1 + 0x268] = a0\n 11670: a1 = s1 + 0x260\n 11674: a0 = u64 [s1 + 0x88]\n 11678: u64 [s1 + 0x270] = a0\n 11682: a0 = 0\n 11684: ra = 360, jump @9\n      : @421 [@dyn 180] (gas: 7)\n 11690: u64 [s1 + 600] = 0\n 11694: u64 [s1 + 592] = 0\n 11698: u64 [s1 + 576] = 0x1\n 11703: a0 = 0x20\n 11706: a1 = s1 + 0x240\n 11710: u64 [s1 + 584] = 0\n 11714: ra = 362, jump @9\n      : @422 [@dyn 181] (gas: 3)\n 11720: a1 = u64 [s1 + 0x80]\n 11724: a0 = i32 [a1]\n 11726: jump @424 if a0 >u 63\n      : @423 (gas: 3)\n 11730: u32 [a1 + 0] = 0x40\n 11733: t0 = 0x16c\n 11737: jump @469\n      : @424 (gas: 1)\n 11740: t0 = 364, jump @469\n      : @425 [@dyn 182] (gas: 5)\n 11746: ra = 0x16e\n 11750: ecalli 9 // 'hash_keccak_256'\n 11752: a3 = u64 [s1 + 0x70]\n 11755: t0 = 0x170\n 11759: jump @461\n      : @426 [@dyn 183] (gas: 2)\n 11762: a3 = u64 [s1 + 0x70]\n 11765: t0 = 368, jump @461\n      : @427 [@dyn 184] (gas: 7)\n 11771: u64 [s1 + 0x398] = a3\n 11775: u64 [s1 + 0x390] = a2\n 11779: u64 [s1 + 0x388] = a1\n 11783: u64 [s1 + 0x380] = a0\n 11787: a0 = s1 + 0x220\n 11791: a1 = s1 + 0x380\n 11795: ra = 370, jump @11\n      : @428 [@dyn 185] (gas: 31)\n 11801: a0 = u64 [s1 + 0x220]\n 11805: u64 [s1 + 0x70] = a0\n 11808: a0 = u64 [s1 + 0x228]\n 11812: u64 [s1 + 0x68] = a0\n 11815: a0 = u64 [s1 + 0x230]\n 11819: u64 [s1 + 0x60] = a0\n 11822: a0 = u64 [s1 + 0x238]\n 11826: u64 [s1 + 0x58] = a0\n 11829: i32 a0 = s1 + 0x3a0\n 11833: ecalli 10 // 'now'\n 11835: a4 = s1 + 0x300\n 11839: a3 = u64 [a4 + 0xa0]\n 11843: a0 = u64 [a4 + 0xa8]\n 11847: a1 = u64 [a4 + 0xb0]\n 11851: a2 = u64 [a4 + 0xb8]\n 11855: a4 = u64 [s1 + 0x58]\n 11858: u64 [s1 + 0x1d8] = a4\n 11862: a4 = u64 [s1 + 0x60]\n 11865: u64 [s1 + 0x1d0] = a4\n 11869: a4 = u64 [s1 + 0x68]\n 11872: u64 [s1 + 0x1c8] = a4\n 11876: a4 = u64 [s1 + 0x70]\n 11879: u64 [s1 + 0x1c0] = a4\n 11883: u64 [s1 + 0x1f8] = a2\n 11887: u64 [s1 + 0x1f0] = a1\n 11891: u64 [s1 + 0x1e8] = a0\n 11895: a0 = s1 + 0x200\n 11899: a1 = s1 + 0x1e0\n 11903: a2 = s1 + 0x1c0\n 11907: u64 [s1 + 0x1e0] = a3\n 11911: ra = 372, jump @300\n      : @429 [@dyn 186] (gas: 20)\n 11917: a1 = s1 + 0x200\n 11921: a0 = u64 [a1 + 0x18]\n 11924: u64 [s1 + 0x58] = a0\n 11927: a0 = u64 [a1 + 0x10]\n 11930: u64 [s1 + 0x60] = a0\n 11933: a0 = u64 [a1 + 0x8]\n 11936: u64 [s1 + 0x68] = a0\n 11939: a0 = u64 [a1]\n 11941: u64 [s1 + 0x70] = a0\n 11944: u64 [s1 + 440] = 0\n 11948: a0 = u64 [s1 + 0x88]\n 11952: a2 = s1 + 0x100\n 11956: u64 [a2 + 0xb0] = a0\n 11960: a0 = u64 [s1 + 0x90]\n 11964: u64 [a2 + 0xa8] = a0\n 11968: a1 = s1 + 0x1a0\n 11972: a0 = u64 [s1 + 0x98]\n 11976: u64 [a2 + 0xa0] = a0\n 11980: a0 = 0\n 11982: ra = 374, jump @9\n      : @430 [@dyn 187] (gas: 7)\n 11988: u64 [s1 + 408] = 0\n 11992: u64 [s1 + 400] = 0\n 11996: u64 [s1 + 392] = 0\n 12000: a0 = 0x20\n 12003: a1 = s1 + 0x180\n 12007: u64 [s1 + 384] = 0\n 12011: ra = 376, jump @9\n      : @431 [@dyn 188] (gas: 3)\n 12017: a1 = u64 [s1 + 0x80]\n 12021: a0 = i32 [a1]\n 12023: jump @433 if a0 >u 63\n      : @432 (gas: 2)\n 12027: u32 [a1 + 0] = 0x40\n 12030: fallthrough\n      : @433 (gas: 12)\n 12031: a0 = sp + 0xffffffffffffffe0\n 12034: a0 = a0 & 0xffffffffffffffe0\n 12037: u64 [s1 + 0x98] = a0\n 12041: sp = a0\n 12043: i32 a2 = a0 + 0\n 12045: a1 = 0x40\n 12048: a0 = u64 [s1 + 0x78]\n 12051: ra = 0x17a\n 12055: ecalli 9 // 'hash_keccak_256'\n 12057: a3 = u64 [s1 + 0x98]\n 12061: t0 = 0x17c\n 12065: jump @463\n      : @434 [@dyn 189] (gas: 2)\n 12068: a3 = u64 [s1 + 0x98]\n 12072: t0 = 380, jump @463\n      : @435 [@dyn 190] (gas: 7)\n 12078: u64 [a4 + 0xd8] = a3\n 12082: u64 [a4 + 0xd0] = a2\n 12086: u64 [a4 + 0xc8] = a1\n 12090: u64 [a4 + 0xc0] = a0\n 12094: a0 = s1 + 0x160\n 12098: a1 = s1 + 0x3c0\n 12102: ra = 382, jump @11\n      : @436 [@dyn 191] (gas: 9)\n 12108: a0 = u64 [s1 + 0x160]\n 12112: u64 [s1 + 0x98] = a0\n 12116: a0 = u64 [s1 + 0x168]\n 12120: u64 [s1 + 0x90] = a0\n 12124: a0 = u64 [s1 + 0x170]\n 12128: u64 [s1 + 0x88] = a0\n 12132: a0 = u64 [s1 + 0x178]\n 12136: u64 [s1 + 0x80] = a0\n 12140: ra = 384, jump @0\n      : @437 [@dyn 192] (gas: 20)\n 12146: a1 = u64 [0x30090]\n 12151: a2 = u64 [0x30098]\n 12156: a3 = u64 [0x300a0]\n 12161: a0 = u64 [0x300a8]\n 12166: u64 [s1 + 0x118] = a0\n 12170: u64 [s1 + 0x110] = a3\n 12174: u64 [s1 + 0x108] = a2\n 12178: u64 [s1 + 0x100] = a1\n 12182: a0 = u64 [s1 + 0x80]\n 12186: u64 [s1 + 0x138] = a0\n 12190: a0 = u64 [s1 + 0x88]\n 12194: u64 [s1 + 0x130] = a0\n 12198: a0 = u64 [s1 + 0x90]\n 12202: u64 [s1 + 0x128] = a0\n 12206: a0 = s1 + 0x140\n 12210: a1 = s1 + 0x120\n 12214: a2 = s1 + 0x100\n 12218: a3 = u64 [s1 + 0x98]\n 12222: u64 [s1 + 0x120] = a3\n 12226: ra = 386, jump @395\n      : @438 [@dyn 193] (gas: 21)\n 12232: a4 = s1 + 0x100\n 12236: a3 = u64 [a4 + 0x40]\n 12239: a0 = u64 [a4 + 0x48]\n 12242: a1 = u64 [a4 + 0x50]\n 12245: a2 = u64 [a4 + 0x58]\n 12248: a4 = u64 [s1 + 0x58]\n 12251: u64 [s1 + 0xb8] = a4\n 12255: a4 = u64 [s1 + 0x60]\n 12258: u64 [s1 + 0xb0] = a4\n 12262: a4 = u64 [s1 + 0x68]\n 12265: u64 [s1 + 0xa8] = a4\n 12269: a4 = u64 [s1 + 0x70]\n 12272: u64 [s1 + 0xa0] = a4\n 12276: u64 [s1 + 0xd8] = a2\n 12280: u64 [s1 + 0xd0] = a1\n 12284: u64 [s1 + 0xc8] = a0\n 12288: a0 = s1 + 0xe0\n 12292: a1 = s1 + 0xc0\n 12296: a2 = s1 + 0xa0\n 12300: u64 [s1 + 0xc0] = a3\n 12304: ra = 388, jump @395\n      : @439 [@dyn 194] (gas: 55)\n 12310: t0 = u64 [s1 + 0xf8]\n 12314: t2 = u64 [s1 + 0xf0]\n 12318: t1 = u64 [s1 + 0xe8]\n 12322: a1 = u64 [s1 + 0xe0]\n 12326: u64 [s1 + 0x58] = a1\n 12329: a0 = clz t0\n 12331: a2 = clz t2\n 12333: a5 = a2 + 0x40\n 12336: a5 = a0 if t0 != 0\n 12339: a0 = clz t1\n 12341: a2 = clz a1\n 12343: a2 = a2 + 0x40\n 12346: a2 = a0 if t1 != 0\n 12349: a0 = a2 + 0x80\n 12353: a3 = t2 | t0\n 12356: a5 = a0 if a3 == 0\n 12359: a2 = a0 <u a2\n 12362: a2 = 0 if a3 != 0\n 12364: a3 = a2 >u 0\n 12366: a0 = a5 <u 0xc5\n 12370: a4 = a0 ^ 0x1\n 12373: a3 = a4 if a2 == 0\n 12376: a0 = a3 <u 0x1\n 12379: a0 = a0 + 0xffffffffffffffff\n 12382: ra = -a3\n 12384: a2 = -a2\n 12386: a1 = a2 - a4\n 12389: a2 = 0xc4 - a5\n 12393: u64 [s1 + 0x88] = ra\n 12397: a5 = ra >u 0\n 12399: a4 = a0 >u 0\n 12401: u64 [s1 + 0x80] = a0\n 12405: a4 = a5 if a0 == 0\n 12408: u64 [s1 + 0x90] = a2\n 12412: a0 = a2 <u 0x100\n 12416: a0 = a0 ^ 0x1\n 12419: a5 = a1 >u 0\n 12421: a0 = a5 if a1 != 0\n 12424: a0 = a4 if a3 != 0\n 12427: a3 = t1 | t0\n 12430: ra = u64 [s1 + 0x58]\n 12433: a4 = ra | t2\n 12436: a3 = a3 | a4\n 12439: a3 = a3 <u 0x1\n 12442: a0 = a0 | a3\n 12445: u64 [s1 + 0x50] = t0\n 12448: a2 = t0\n 12450: a2 = 0 if a0 != 0\n 12452: a5 = t2\n 12454: a5 = 0 if a0 != 0\n 12456: a4 = t1\n 12458: a4 = 0 if a0 != 0\n 12460: t0 = ra\n 12462: t0 = 0 if a0 != 0\n 12464: jump @456 if a0 != 0\n      : @440 (gas: 9)\n 12468: ra = t2\n 12470: a0 = u64 [s1 + 0x90]\n 12474: a0 = a0 ^ 0xff\n 12478: a3 = u64 [s1 + 0x88]\n 12482: t2 = a0 | a3\n 12485: a3 = u64 [s1 + 0x80]\n 12489: a0 = a1 | a3\n 12492: a0 = t2 | a0\n 12495: jump @456 if a0 == 0\n      : @441 (gas: 22)\n 12499: a4 = u64 [s1 + 0x90]\n 12503: a2 = a4 + 0x1\n 12506: u64 [s1 + 0x98] = a2\n 12510: a0 = a2 <u 0x1\n 12513: a0 = a0 + a1\n 12516: u64 [s1 + 0x70] = a0\n 12519: a0 = a0 | a2\n 12522: a0 = a0 <u 0x1\n 12525: a2 = u64 [s1 + 0x88]\n 12529: a0 = a0 + a2\n 12532: u64 [s1 + 0x60] = a0\n 12535: a0 = a0 <u a2\n 12538: a0 = a0 + a3\n 12541: u64 [s1 + 0x68] = a0\n 12544: a1 = 0xff - a4\n 12548: u64 [s1 + 0x78] = a1\n 12551: a2 = 0x80 - a1\n 12555: a0 = u64 [s1 + 0x58]\n 12558: a1 = t1\n 12560: u64 [s1 + 0x48] = t1\n 12563: u64 [s1 + 0x40] = ra\n 12566: ra = 390, jump @470\n      : @442 [@dyn 195] (gas: 6)\n 12572: u64 [s1 + 0x88] = a0\n 12576: u64 [s1 + 0x80] = a1\n 12580: a0 = u64 [s1 + 0x40]\n 12583: a1 = u64 [s1 + 0x50]\n 12586: a2 = u64 [s1 + 0x78]\n 12589: ra = 392, jump @475\n      : @443 [@dyn 196] (gas: 9)\n 12595: u64 [s1 + 0x38] = a0\n 12598: a0 = u64 [s1 + 0x80]\n 12602: a0 = a0 | a1\n 12605: u64 [s1 + 0x80] = a0\n 12609: a1 = u64 [s1 + 0x90]\n 12613: a2 = 0x7f - a1\n 12616: a0 = u64 [s1 + 0x58]\n 12619: a1 = u64 [s1 + 0x48]\n 12622: ra = 394, jump @475\n      : @444 [@dyn 197] (gas: 18)\n 12628: a2 = u64 [s1 + 0x78]\n 12631: a3 = a2 <u 0x80\n 12635: u64 [s1 + 0x90] = a3\n 12639: a4 = u64 [s1 + 0x80]\n 12643: a1 = a4 if a3 != 0\n 12646: a4 = u64 [s1 + 0x50]\n 12649: a1 = a4 if a2 == 0\n 12652: u64 [s1 + 0x80] = a1\n 12656: a1 = u64 [s1 + 0x88]\n 12660: a4 = u64 [s1 + 0x38]\n 12663: a1 = a1 | a4\n 12666: a1 = a0 if a3 == 0\n 12669: a0 = u64 [s1 + 0x40]\n 12672: a1 = a0 if a2 == 0\n 12675: u64 [s1 + 0x88] = a1\n 12679: a0 = u64 [s1 + 0x58]\n 12682: a1 = u64 [s1 + 0x48]\n 12685: ra = 396, jump @475\n      : @445 [@dyn 198] (gas: 13)\n 12691: a3 = u64 [s1 + 0x60]\n 12694: a4 = u64 [s1 + 0x68]\n 12697: a2 = u64 [s1 + 0x70]\n 12700: a2 = a2 | a4\n 12703: a5 = u64 [s1 + 0x98]\n 12707: a5 = a5 | a3\n 12710: a2 = a2 | a5\n 12713: a3 = u64 [s1 + 0x90]\n 12717: a1 = 0 if a3 == 0\n 12719: u64 [s1 + 0x78] = a1\n 12722: a0 = 0 if a3 == 0\n 12724: u64 [s1 + 0x90] = a0\n 12728: jump @454 if a2 == 0\n      : @446 (gas: 7)\n 12732: a0 = 0xde0b6b3a7640000\n 12742: u64 [s1 + 0x30] = a0\n 12745: a0 = u64 [s1 + 0x98]\n 12749: a2 = a0 + 0xffffffffffffff80\n 12752: a0 = u64 [s1 + 0x40]\n 12755: a1 = u64 [s1 + 0x50]\n 12758: ra = 398, jump @470\n      : @447 [@dyn 199] (gas: 6)\n 12764: u64 [s1 + 0x38] = a0\n 12767: u64 [s1 + 0x20] = a1\n 12770: a0 = u64 [s1 + 0x58]\n 12773: a1 = u64 [s1 + 0x48]\n 12776: a2 = u64 [s1 + 0x98]\n 12780: ra = 400, jump @470\n      : @448 [@dyn 200] (gas: 7)\n 12786: u64 [s1 + 0x10] = a0\n 12789: u64 [s1 + 0x28] = a1\n 12792: a1 = u64 [s1 + 0x98]\n 12796: a2 = 0x80 - a1\n 12800: a0 = u64 [s1 + 0x40]\n 12803: a1 = u64 [s1 + 0x50]\n 12806: ra = 402, jump @475\n      : @449 [@dyn 201] (gas: 21)\n 12812: a2 = u64 [s1 + 0x28]\n 12815: a1 = a1 | a2\n 12818: a3 = u64 [s1 + 0x98]\n 12822: a4 = a3 <u 0x80\n 12826: u64 [s1 + 0x28] = a4\n 12829: a2 = u64 [s1 + 0x20]\n 12832: a1 = a2 if a4 == 0\n 12835: a2 = u64 [s1 + 0x48]\n 12838: a2 = a1 if a3 != 0\n 12841: u64 [s1 + 0x48] = a2\n 12844: a1 = u64 [s1 + 0x10]\n 12847: a0 = a0 | a1\n 12850: a1 = u64 [s1 + 0x38]\n 12853: a0 = a1 if a4 == 0\n 12856: a1 = u64 [s1 + 0x58]\n 12859: a1 = a0 if a3 != 0\n 12862: a2 = a3\n 12864: u64 [s1 + 0x58] = a1\n 12867: a0 = u64 [s1 + 0x40]\n 12870: a1 = u64 [s1 + 0x50]\n 12873: ra = 404, jump @470\n      : @450 [@dyn 202] (gas: 13)\n 12879: a5 = 0\n 12881: a2 = u64 [s1 + 0x28]\n 12884: a1 = 0 if a2 == 0\n 12886: a0 = 0 if a2 == 0\n 12888: a4 = u64 [s1 + 0x30]\n 12891: a2 = a4 + 0xffffffffffffffff\n 12894: u64 [s1 + 0x28] = a2\n 12897: a2 = a4 >u 0\n 12899: a2 = a2 + 0xffffffffffffffff\n 12902: u64 [s1 + 0x20] = a2\n 12905: t2 = u64 [s1 + 0x48]\n 12908: t0 = u64 [s1 + 0x58]\n 12911: fallthrough\n      : @451 (gas: 90)\n 12912: u64 [s1 + 0x48] = a1\n 12915: u64 [s1 + 0x50] = a5\n 12918: u64 [s1 + 56] = 0\n 12921: a2 = t0 >> 0x3f\n 12924: a3 = t2 << 0x1\n 12927: a3 = a3 | a2\n 12930: a2 = t0 << 0x1\n 12933: ra = u64 [s1 + 0x80]\n 12937: a4 = ra >> 0x3f\n 12940: a4 = a4 | a2\n 12943: u64 [s1 + 0x58] = a4\n 12946: a2 = u64 [s1 + 0x20]\n 12949: a1 = a2 ^ a3\n 12952: u64 [s1 + 0x40] = a1\n 12955: a1 = a2 <u a3\n 12958: a5 = u64 [s1 + 0x28]\n 12961: t0 = a5 <u a4\n 12964: a4 = u64 [s1 + 0x40]\n 12967: t0 = a1 if a4 != 0\n 12970: a1 = u64 [s1 + 0x48]\n 12973: a1 = a1 << 0x1\n 12976: a4 = a0 >> 0x3f\n 12979: a1 = a1 | a4\n 12982: u64 [s1 + 0x48] = a1\n 12985: a4 = t2 >> 0x3f\n 12988: a0 = a0 << 0x1\n 12991: a4 = a4 | a0\n 12994: a0 = ra << 0x1\n 12997: a1 = u64 [s1 + 0x88]\n 13001: a5 = a1 >> 0x3f\n 13004: a0 = a0 | a5\n 13007: u64 [s1 + 0x80] = a0\n 13011: a5 = a1 << 0x1\n 13014: a0 = u64 [s1 + 0x78]\n 13017: a1 = a0 >> 0x3f\n 13020: t2 = a5 | a1\n 13023: a5 = a0 << 0x1\n 13026: a0 = u64 [s1 + 0x90]\n 13030: ra = a0 >> 0x3f\n 13033: a5 = a5 | ra\n 13036: a0 = a0 << 0x1\n 13039: a1 = u64 [s1 + 0x50]\n 13042: a0 = a0 | a1\n 13045: u64 [s1 + 0x90] = a0\n 13049: a0 = a5 | 0\n 13051: u64 [s1 + 0x78] = a0\n 13054: a0 = t2 | 0\n 13056: u64 [s1 + 0x88] = a0\n 13060: a0 = u64 [s1 + 0x80]\n 13064: a0 = a0 | 0\n 13066: u64 [s1 + 0x80] = a0\n 13070: a0 = a2 - a4\n 13073: a0 = a0 <u t0\n 13076: a1 = a2 <u a4\n 13079: t1 = u64 [s1 + 0x48]\n 13082: a5 = a2 - t1\n 13085: a5 = a5 - a1\n 13088: a5 = a5 - a0\n 13091: ra = a5 >>a 0x3f\n 13094: a0 = u64 [s1 + 0x30]\n 13097: a0 = ra & a0\n 13100: a1 = u64 [s1 + 0x58]\n 13103: t0 = a1 - a0\n 13106: a1 = a1 <u a0\n 13109: t2 = a3 - a1\n 13112: a1 = 0 if a3 != 0\n 13114: a0 = a4 - a1\n 13117: a1 = a4 <u a1\n 13120: a1 = t1 - a1\n 13123: a3 = u64 [s1 + 0x98]\n 13127: a5 = u64 [s1 + 0x70]\n 13130: a2 = a3 | a5\n 13133: a2 = a2 <u 0x1\n 13136: a4 = u64 [s1 + 0x60]\n 13139: t1 = a4 <u a2\n 13142: a4 = a4 - a2\n 13145: a2 = a3 <u 0x1\n 13148: a5 = a5 - a2\n 13151: a2 = u64 [s1 + 0x68]\n 13154: a2 = a2 - t1\n 13157: a3 = a3 + 0xffffffffffffffff\n 13160: u64 [s1 + 0x70] = a5\n 13163: u64 [s1 + 0x68] = a2\n 13166: a2 = a2 | a5\n 13169: u64 [s1 + 0x98] = a3\n 13173: a3 = a3 | a4\n 13176: a2 = a2 | a3\n 13179: a5 = ra & 0x1\n 13182: u64 [s1 + 0x60] = a4\n 13185: jump @451 if a2 != 0\n      : @452 (gas: 1)\n 13189: jump @455\n      : @453 (gas: 5)\n 13191: t0 = 0\n 13193: a4 = 0\n 13195: a5 = 0\n 13197: a2 = 0\n 13199: jump @456\n      : @454 (gas: 3)\n 13201: a5 = 0\n 13203: u64 [s1 + 56] = 0\n 13206: fallthrough\n      : @455 (gas: 20)\n 13207: a2 = u64 [s1 + 0x88]\n 13211: a0 = a2 >> 0x3f\n 13214: a1 = u64 [s1 + 0x80]\n 13218: a1 = a1 << 0x1\n 13221: t1 = a1 | a0\n 13224: a4 = u64 [s1 + 0x78]\n 13227: a1 = a4 >> 0x3f\n 13230: a2 = a2 << 0x1\n 13233: a1 = a1 | a2\n 13236: a3 = u64 [s1 + 0x90]\n 13240: a2 = a3 >> 0x3f\n 13243: a4 = a4 << 0x1\n 13246: a3 = a3 << 0x1\n 13249: t0 = a5 | a3\n 13252: a0 = u64 [s1 + 0x38]\n 13255: a2 = a2 | a0\n 13258: a4 = a4 | a2\n 13261: a5 = a0 | a1\n 13264: a2 = a0 | t1\n 13267: fallthrough\n      : @456 (gas: 12)\n 13268: a1 = u64 [s1 + 0x18]\n 13271: u64 [a1] = t0\n 13273: u64 [a1 + 0x8] = a4\n 13276: u64 [a1 + 0x10] = a5\n 13279: u64 [a1 + 0x18] = a2\n 13282: sp = s0 + 0xfffffffffffffc00\n 13286: a0 = sp + 0x300\n 13290: ra = u64 [a0 + 0xf8]\n 13294: s0 = u64 [a0 + 0xf0]\n 13298: s1 = u64 [a0 + 0xe8]\n 13302: sp = sp + 0x400\n 13306: ret\n      : @457 [export #0: 'call'] (gas: 2)\n 13308: a0 = 0\n 13310: ra = 406, jump @21\n      : @458 [@dyn 203] [export #1: 'deploy'] (gas: 2)\n 13316: a0 = 0x1\n 13319: ra = 408, jump @21\n      : @459 [@dyn 204] (gas: 14)\n 13325: a0 = u64 [a2 + 0x8]\n 13328: a1 = i32 [a2 + 0x10]\n 13331: a2 = u64 [a2]\n 13333: a0 = reverse a0\n 13335: a3 = a0 << 0x20\n 13338: a1 = reverse a1\n 13340: a1 = a1 >> 0x20\n 13343: a3 = a3 | a1\n 13346: a0 = a0 >> 0x20\n 13349: a1 = reverse a2\n 13351: a2 = a1 << 0x20\n 13354: a0 = a0 | a2\n 13357: a1 = a1 >> 0x20\n 13360: jump [t0]\n      : @460 (gas: 10)\n 13362: a0 = u64 [a3 + 0x18]\n 13365: a1 = u64 [a3 + 0x10]\n 13368: a2 = u64 [a3 + 0x8]\n 13371: a3 = u64 [a3]\n 13373: a0 = reverse a0\n 13375: a1 = reverse a1\n 13377: a2 = reverse a2\n 13379: a3 = reverse a3\n 13381: a4 = s1 + 0x7f0\n 13385: jump [t0]\n      : @461 (gas: 9)\n 13387: a0 = u64 [a3 + 0x18]\n 13390: a1 = u64 [a3 + 0x10]\n 13393: a2 = u64 [a3 + 0x8]\n 13396: a3 = u64 [a3]\n 13398: a0 = reverse a0\n 13400: a1 = reverse a1\n 13402: a2 = reverse a2\n 13404: a3 = reverse a3\n 13406: jump [t0]\n      : @462 (gas: 8)\n 13408: a0 = a0 | a2\n 13411: a2 = a3 | a1\n 13414: a2 = a2 | a0\n 13417: a2 = a2 >> 0x20\n 13420: a0 = a0 | a1\n 13423: a0 = a0 << 0x20\n 13426: a0 = a0 | a2\n 13429: jump [t0]\n      : @463 (gas: 10)\n 13431: a0 = u64 [a3 + 0x18]\n 13434: a1 = u64 [a3 + 0x10]\n 13437: a2 = u64 [a3 + 0x8]\n 13440: a3 = u64 [a3]\n 13442: a0 = reverse a0\n 13444: a1 = reverse a1\n 13446: a2 = reverse a2\n 13448: a3 = reverse a3\n 13450: a4 = s1 + 0x300\n 13454: jump [t0]\n      : @464 (gas: 8)\n 13456: a2 = 0x100000000\n 13466: a2 = a2 ^ a1\n 13469: a2 = a2 | a0\n 13472: a3 = a1 >> 0x20\n 13475: a3 = a3 <u 0x1\n 13478: a3 = 0 if a0 != 0\n 13480: a3 = 0 if a2 == 0\n 13482: jump [t0]\n      : @465 (gas: 15)\n 13484: a2 = u64 [s1 + 0x78]\n 13487: a0 = u64 [a2 + 0x8]\n 13490: a1 = i32 [a2 + 0x10]\n 13493: a2 = u64 [a2]\n 13495: a0 = reverse a0\n 13497: a3 = a0 << 0x20\n 13500: a1 = reverse a1\n 13502: a1 = a1 >> 0x20\n 13505: a1 = a1 | a3\n 13508: a0 = a0 >> 0x20\n 13511: a2 = reverse a2\n 13513: a3 = a2 << 0x20\n 13516: a0 = a0 | a3\n 13519: a2 = a2 >> 0x20\n 13522: jump [t0]\n      : @466 (gas: 14)\n 13524: a0 = u64 [a2 + 0x8]\n 13527: a1 = u64 [a2]\n 13529: a2 = i32 [a2 + 0x10]\n 13532: a0 = reverse a0\n 13534: a3 = a0 >> 0x20\n 13537: a1 = reverse a1\n 13539: a4 = a1 << 0x20\n 13542: a3 = a3 | a4\n 13545: a0 = a0 << 0x20\n 13548: a2 = reverse a2\n 13550: a2 = a2 >> 0x20\n 13553: a0 = a0 | a2\n 13556: a1 = a1 >> 0x20\n 13559: jump [t0]\n      : @467 (gas: 8)\n 13561: a0 = u64 [a2 + 0x8]\n 13564: a1 = i32 [a2 + 0x10]\n 13567: a2 = u64 [a2]\n 13569: a3 = reverse a0\n 13571: a0 = a3 << 0x20\n 13574: a1 = reverse a1\n 13576: a1 = a1 >> 0x20\n 13579: jump [t0]\n      : @468 (gas: 9)\n 13581: a0 = u64 [a3 + 0x18]\n 13584: a1 = u64 [a3 + 0x10]\n 13587: a2 = u64 [a3 + 0x8]\n 13590: a3 = u64 [a3]\n 13592: a0 = reverse a0\n 13594: a4 = reverse a1\n 13596: a2 = reverse a2\n 13598: a3 = reverse a3\n 13600: jump [t0]\n      : @469 (gas: 8)\n 13602: a0 = sp + 0xffffffffffffffe0\n 13605: a0 = a0 & 0xffffffffffffffe0\n 13608: u64 [s1 + 0x70] = a0\n 13611: sp = a0\n 13613: i32 a2 = a0 + 0\n 13615: a1 = 0x40\n 13618: a0 = u64 [s1 + 0x78]\n 13621: jump [t0]\n      : @470 (gas: 2)\n 13623: a3 = a2 & 0x40\n 13626: jump @474 if a3 != 0\n      : @471 (gas: 1)\n 13629: jump @473 if a2 == 0\n      : @472 (gas: 6)\n 13632: i32 a3 = 0x40 - a2\n 13635: a3 = a1 << a3\n 13638: a1 = a1 >> a2\n 13641: a0 = a0 >> a2\n 13644: a0 = a0 | a3\n 13647: ret\n      : @473 (gas: 1)\n 13649: ret\n      : @474 (gas: 4)\n 13651: a0 = a2 + 0xffffffffffffffc0\n 13654: a0 = a1 >> a0\n 13657: a1 = 0\n 13659: ret\n      : @475 (gas: 2)\n 13661: a3 = a2 & 0x40\n 13664: jump @479 if a3 != 0\n      : @476 (gas: 1)\n 13667: jump @478 if a2 == 0\n      : @477 (gas: 6)\n 13670: i32 a3 = 0x40 - a2\n 13673: a3 = a0 >> a3\n 13676: a0 = a0 << a2\n 13679: a1 = a1 << a2\n 13682: a1 = a1 | a3\n 13685: ret\n      : @478 (gas: 1)\n 13687: ret\n      : @479 (gas: 4)\n 13689: a1 = a2 + 0xffffffffffffffc0\n 13692: a1 = a0 << a1\n 13695: a0 = 0\n 13697: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"claimRewards()":"372500ab","deposits(address)":"fc7e286d","getContractBalance()":"6f9fb98a","getPendingRewards(address)":"f6ed2017","getStakedAmount(address)":"4da6a556","habitTracker()":"836ee1c0","lastUpdateTime(address)":"2ce9aead","ratePerSecond()":"8eff1a98","stake(uint256)":"a694fc3a","unstake(uint256)":"2e17de78"}},"irOptimized":"/// @use-src 0:\"contracts/interfaces/IStakingAdapter.sol\", 1:\"contracts/mocks/MockStakingRewards.sol\"\nobject \"MockStakingRewards_401\" {\n    code {\n        {\n            /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MockStakingRewards_401\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n            let value := mload(_1)\n            let value_1 := mload(add(_1, 32))\n            if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1209:1239  \"ratePerSecond = _ratePerSecond\"\n            mstore(128, value)\n            /// @src 1:1249:1277  \"habitTracker = _habitTracker\"\n            mstore(160, value_1)\n            /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"MockStakingRewards_401_deployed\")\n            codecopy(_2, dataoffset(\"MockStakingRewards_401_deployed\"), _3)\n            setimmutable(_2, \"45\", mload(/** @src 1:1209:1239  \"ratePerSecond = _ratePerSecond\" */ 128))\n            /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n            setimmutable(_2, \"47\", mload(/** @src 1:1249:1277  \"habitTracker = _habitTracker\" */ 160))\n            /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n            return(_2, _3)\n        }\n    }\n    /// @use-src 1:\"contracts/mocks/MockStakingRewards.sol\"\n    object \"MockStakingRewards_401_deployed\" {\n        code {\n            {\n                /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x2ce9aead {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        mstore(0, _2)\n                        mstore(32, /** @src 1:521:570  \"mapping(address => uint256) public lastUpdateTime\" */ 1)\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        mstore(_1, sload(keccak256(0, 64)))\n                        return(_1, 32)\n                    }\n                    case 0x2e17de78 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        /// @src 1:931:943  \"habitTracker\"\n                        let _3 := loadimmutable(\"47\")\n                        /// @src 1:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 1:917:943  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 1:917:927  \"msg.sender\" */ caller(), /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ and(/** @src 1:931:943  \"habitTracker\" */ _3, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 1:952:970  \"OnlyHabitTracker()\"\n                            mstore(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 1:952:970  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:1662:1701  \"if (amount == 0) revert InvalidAmount()\"\n                        if /** @src 1:1666:1677  \"amount == 0\" */ iszero(value_1)\n                        /// @src 1:1662:1701  \"if (amount == 0) revert InvalidAmount()\"\n                        {\n                            /// @src 1:1686:1701  \"InvalidAmount()\"\n                            mstore(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 1:1686:1701  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        mstore(0, /** @src 1:917:927  \"msg.sender\" */ caller())\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        mstore(32, 0)\n                        /// @src 1:1711:1774  \"if (deposits[msg.sender] < amount) revert InsufficientBalance()\"\n                        if /** @src 1:1715:1744  \"deposits[msg.sender] < amount\" */ lt(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(0, 64)), /** @src 1:1715:1744  \"deposits[msg.sender] < amount\" */ value_1)\n                        /// @src 1:1711:1774  \"if (deposits[msg.sender] < amount) revert InsufficientBalance()\"\n                        {\n                            /// @src 1:1753:1774  \"InsufficientBalance()\"\n                            mstore(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 1:1753:1774  \"InsufficientBalance()\" */ shl(227, 0x1e9acf17))\n                            revert(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:1800:1810  \"msg.sender\"\n                        fun_updateRewards(/** @src 1:917:927  \"msg.sender\" */ caller())\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        mstore(0, /** @src 1:917:927  \"msg.sender\" */ caller())\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        mstore(32, 0)\n                        let dataSlot := keccak256(0, 64)\n                        sstore(dataSlot, /** @src 1:1821:1851  \"deposits[msg.sender] -= amount\" */ checked_sub_uint256(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(/** @src 1:1821:1851  \"deposits[msg.sender] -= amount\" */ dataSlot), value_1))\n                        /// @src 1:1918:1954  \"habitTracker.call{value: amount}(\\\"\\\")\"\n                        let expr_component := call(gas(), _3, value_1, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 0, 0, 0)\n                        /// @src 1:1918:1954  \"habitTracker.call{value: amount}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 1:1964:2001  \"if (!success) revert TransferFailed()\"\n                        if /** @src 1:1968:1976  \"!success\" */ iszero(expr_component)\n                        /// @src 1:1964:2001  \"if (!success) revert TransferFailed()\"\n                        {\n                            /// @src 1:1985:2001  \"TransferFailed()\"\n                            mstore(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 1:1985:2001  \"TransferFailed()\" */ shl(227, 0x12171d83))\n                            revert(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:2017:2045  \"Unstaked(msg.sender, amount)\"\n                        let _4 := /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ mload(64)\n                        mstore(_4, value_1)\n                        /// @src 1:2017:2045  \"Unstaked(msg.sender, amount)\"\n                        log2(_4, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 32, /** @src 1:2017:2045  \"Unstaked(msg.sender, amount)\" */ 0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75, /** @src 1:917:927  \"msg.sender\" */ caller())\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        return(0, 0)\n                    }\n                    case 0x372500ab {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 1:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 1:917:943  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 1:917:927  \"msg.sender\" */ caller(), /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ and(/** @src 1:931:943  \"habitTracker\" */ loadimmutable(\"47\"), /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 1:952:970  \"OnlyHabitTracker()\"\n                            mstore(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 1:952:970  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:980:981  \"_\"\n                        let _5 := /** @src 1:2058:2901  \"function claimRewards() external onlyHabitTracker returns (uint256 claimed) {...\" */ fun_claimRewards_inner()\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _5)\n                        return(memPos, 32)\n                    }\n                    case 0x4da6a556 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_2 := calldataload(4)\n                        let _6 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _6)) { revert(0, 0) }\n                        mstore(0, _6)\n                        mstore(32, 0)\n                        let _7 := sload(keccak256(0, 64))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x6f9fb98a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := /** @src 1:3221:3242  \"address(this).balance\" */ selfbalance()\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, ret)\n                        return(memPos_2, 32)\n                    }\n                    case 0x836ee1c0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, and(/** @src 1:428:465  \"address public immutable habitTracker\" */ loadimmutable(\"47\"), /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_3, 32)\n                    }\n                    case 0x8eff1a98 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 1:333:371  \"uint256 public immutable ratePerSecond\" */ loadimmutable(\"45\"))\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0xa694fc3a {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        /// @src 1:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 1:917:943  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 1:917:927  \"msg.sender\" */ caller(), /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ and(/** @src 1:931:943  \"habitTracker\" */ loadimmutable(\"47\"), /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 1:952:970  \"OnlyHabitTracker()\"\n                            mstore(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 1:952:970  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:1365:1412  \"if (msg.value != amount) revert InvalidAmount()\"\n                        if /** @src 1:1369:1388  \"msg.value != amount\" */ iszero(eq(/** @src 1:1369:1378  \"msg.value\" */ callvalue(), /** @src 1:1369:1388  \"msg.value != amount\" */ value_3))\n                        /// @src 1:1365:1412  \"if (msg.value != amount) revert InvalidAmount()\"\n                        {\n                            /// @src 1:1397:1412  \"InvalidAmount()\"\n                            mstore(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 1:1686:1701  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            /// @src 1:1397:1412  \"InvalidAmount()\"\n                            revert(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:1422:1461  \"if (amount == 0) revert InvalidAmount()\"\n                        if /** @src 1:1426:1437  \"amount == 0\" */ iszero(value_3)\n                        /// @src 1:1422:1461  \"if (amount == 0) revert InvalidAmount()\"\n                        {\n                            /// @src 1:1446:1461  \"InvalidAmount()\"\n                            mstore(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 1:1686:1701  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            /// @src 1:1446:1461  \"InvalidAmount()\"\n                            revert(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:1487:1497  \"msg.sender\"\n                        fun_updateRewards(/** @src 1:917:927  \"msg.sender\" */ caller())\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        mstore(0, /** @src 1:917:927  \"msg.sender\" */ caller())\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        mstore(32, 0)\n                        let dataSlot_1 := keccak256(0, 64)\n                        let _8 := sload(/** @src 1:1508:1538  \"deposits[msg.sender] += amount\" */ dataSlot_1)\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        let sum := add(_8, value_3)\n                        if gt(_8, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        sstore(dataSlot_1, sum)\n                        /// @src 1:1554:1580  \"Staked(msg.sender, amount)\"\n                        let _9 := /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ mload(64)\n                        mstore(_9, value_3)\n                        /// @src 1:1554:1580  \"Staked(msg.sender, amount)\"\n                        log2(_9, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 32, /** @src 1:1554:1580  \"Staked(msg.sender, amount)\" */ 0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d, /** @src 1:917:927  \"msg.sender\" */ caller())\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        return(0, 0)\n                    }\n                    case 0xf6ed2017 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_4 := calldataload(4)\n                        if iszero(eq(value_4, and(value_4, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        /// @src 1:3102:3129  \"return _pendingRewards(who)\"\n                        let var := /** @src 1:3109:3129  \"_pendingRewards(who)\" */ fun_pendingRewards(value_4)\n                        /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, var)\n                        return(memPos_5, 32)\n                    }\n                    case 0xfc7e286d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        let _10 := and(value_5, sub(shl(160, 1), 1))\n                        if iszero(eq(value_5, _10)) { revert(0, 0) }\n                        mstore(0, _10)\n                        mstore(32, 0)\n                        let _11 := sload(keccak256(0, 64))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _11)\n                        return(memPos_6, 32)\n                    }\n                }\n                if iszero(calldatasize()) { stop() }\n                revert(0, 0)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(and(add(_1, 31), not(31)), 63), not(31)))\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ returndatasize())\n                }\n            }\n            /// @src 1:2058:2901  \"function claimRewards() external onlyHabitTracker returns (uint256 claimed) {...\"\n            function fun_claimRewards_inner() -> var_claimed\n            {\n                /// @src 1:2144:2181  \"claimed = _pendingRewards(msg.sender)\"\n                var_claimed := /** @src 1:2154:2181  \"_pendingRewards(msg.sender)\" */ fun_pendingRewards(/** @src 1:2170:2180  \"msg.sender\" */ caller())\n                /// @src 1:2262:2283  \"address(this).balance\"\n                let expr := selfbalance()\n                /// @src 1:2293:2319  \"if (balance == 0) return 0\"\n                if /** @src 1:2297:2309  \"balance == 0\" */ iszero(expr)\n                /// @src 1:2293:2319  \"if (balance == 0) return 0\"\n                {\n                    /// @src 1:2311:2319  \"return 0\"\n                    var_claimed := /** @src 1:2308:2309  \"0\" */ 0x00\n                    /// @src 1:2311:2319  \"return 0\"\n                    leave\n                }\n                /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                let r := div(expr, /** @src 1:2418:2420  \"10\" */ 0x0a)\n                /// @src 1:2430:2472  \"if (claimed > maxClaim) claimed = maxClaim\"\n                if /** @src 1:2434:2452  \"claimed > maxClaim\" */ gt(var_claimed, r)\n                /// @src 1:2430:2472  \"if (claimed > maxClaim) claimed = maxClaim\"\n                {\n                    /// @src 1:2454:2472  \"claimed = maxClaim\"\n                    var_claimed := r\n                }\n                /// @src 1:2542:2582  \"if (claimed > balance) claimed = balance\"\n                if /** @src 1:2546:2563  \"claimed > balance\" */ gt(var_claimed, expr)\n                /// @src 1:2542:2582  \"if (claimed > balance) claimed = balance\"\n                {\n                    /// @src 1:2565:2582  \"claimed = balance\"\n                    var_claimed := expr\n                }\n                /// @src 1:2601:2862  \"if (claimed > 0) {...\"\n                if /** @src 1:2605:2616  \"claimed > 0\" */ iszero(iszero(var_claimed))\n                /// @src 1:2601:2862  \"if (claimed > 0) {...\"\n                {\n                    /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    mstore(/** @src 1:2308:2309  \"0\" */ 0x00, /** @src 1:2170:2180  \"msg.sender\" */ caller())\n                    /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    mstore(0x20, /** @src 1:2632:2646  \"lastUpdateTime\" */ 0x01)\n                    /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    sstore(keccak256(/** @src 1:2308:2309  \"0\" */ 0x00, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x40), /** @src 1:2661:2676  \"block.timestamp\" */ timestamp())\n                    /// @src 1:2709:2746  \"habitTracker.call{value: claimed}(\\\"\\\")\"\n                    let expr_component := call(gas(), /** @src 1:2709:2721  \"habitTracker\" */ loadimmutable(\"47\"), /** @src 1:2709:2746  \"habitTracker.call{value: claimed}(\\\"\\\")\" */ var_claimed, /** @src 1:2308:2309  \"0\" */ 0x00, 0x00, 0x00, 0x00)\n                    /// @src 1:2709:2746  \"habitTracker.call{value: claimed}(\\\"\\\")\"\n                    pop(extract_returndata())\n                    /// @src 1:2760:2797  \"if (!success) revert TransferFailed()\"\n                    if /** @src 1:2764:2772  \"!success\" */ iszero(expr_component)\n                    /// @src 1:2760:2797  \"if (!success) revert TransferFailed()\"\n                    {\n                        /// @src 1:2781:2797  \"TransferFailed()\"\n                        mstore(/** @src 1:2308:2309  \"0\" */ 0x00, /** @src 1:1985:2001  \"TransferFailed()\" */ shl(227, 0x12171d83))\n                        /// @src 1:2781:2797  \"TransferFailed()\"\n                        revert(/** @src 1:2308:2309  \"0\" */ 0x00, /** @src 1:2781:2797  \"TransferFailed()\" */ 4)\n                    }\n                    /// @src 1:2816:2851  \"RewardsClaimed(msg.sender, claimed)\"\n                    let _1 := /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ mload(0x40)\n                    mstore(_1, var_claimed)\n                    /// @src 1:2816:2851  \"RewardsClaimed(msg.sender, claimed)\"\n                    log2(_1, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x20, /** @src 1:2816:2851  \"RewardsClaimed(msg.sender, claimed)\" */ 0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe, /** @src 1:2170:2180  \"msg.sender\" */ caller())\n                }\n                /// @src 1:2880:2894  \"return claimed\"\n                var_claimed := var_claimed\n            }\n            /// @ast-id 352 @src 1:3255:3412  \"function _updateRewards(address user) internal {...\"\n            function fun_updateRewards(var_user)\n            {\n                /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                let _1 := and(var_user, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ _1)\n                mstore(0x20, /** @src 1:3316:3330  \"lastUpdateTime\" */ 0x01)\n                /// @src 1:3312:3406  \"if (lastUpdateTime[user] == 0) {...\"\n                if /** @src 1:3316:3341  \"lastUpdateTime[user] == 0\" */ iszero(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x40)))\n                /// @src 1:3312:3406  \"if (lastUpdateTime[user] == 0) {...\"\n                {\n                    /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ _1)\n                    mstore(0x20, /** @src 1:3316:3330  \"lastUpdateTime\" */ 0x01)\n                    /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x40), /** @src 1:3380:3395  \"block.timestamp\" */ timestamp())\n                }\n            }\n            /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 395 @src 1:3418:3798  \"function _pendingRewards(address user) internal view returns (uint256) {...\"\n            function fun_pendingRewards(var_user) -> var\n            {\n                /// @src 1:3480:3487  \"uint256\"\n                var := /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0\n                let _1 := and(var_user, sub(shl(160, 1), 1))\n                mstore(0, _1)\n                mstore(0x20, /** @src 1:3503:3517  \"lastUpdateTime\" */ 0x01)\n                /// @src 1:3503:3551  \"lastUpdateTime[user] == 0 || deposits[user] == 0\"\n                let expr := /** @src 1:3503:3528  \"lastUpdateTime[user] == 0\" */ iszero(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(0, 0x40)))\n                /// @src 1:3503:3551  \"lastUpdateTime[user] == 0 || deposits[user] == 0\"\n                if iszero(expr)\n                {\n                    /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    mstore(0, _1)\n                    mstore(0x20, 0)\n                    /// @src 1:3503:3551  \"lastUpdateTime[user] == 0 || deposits[user] == 0\"\n                    expr := /** @src 1:3532:3551  \"deposits[user] == 0\" */ iszero(/** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(0, 0x40)))\n                }\n                /// @src 1:3499:3586  \"if (lastUpdateTime[user] == 0 || deposits[user] == 0) {...\"\n                if expr\n                {\n                    /// @src 1:3567:3575  \"return 0\"\n                    var := /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0\n                    /// @src 1:3567:3575  \"return 0\"\n                    leave\n                }\n                /// @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\"\n                mstore(0, _1)\n                mstore(0x20, /** @src 1:3503:3517  \"lastUpdateTime\" */ 0x01)\n                /// @src 1:3618:3656  \"block.timestamp - lastUpdateTime[user]\"\n                let expr_1 := checked_sub_uint256(/** @src 1:3618:3633  \"block.timestamp\" */ timestamp(), /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(0, 0x40)))\n                mstore(0, _1)\n                mstore(0x20, 0)\n                let _2 := sload(keccak256(0, 0x40))\n                /// @src 1:3731:3791  \"return (deposits[user] * ratePerSecond * timeElapsed) / 1e18\"\n                var := /** @src 1:280:3902  \"contract MockStakingRewards is IStakingAdapter {...\" */ div(/** @src 1:3739:3783  \"deposits[user] * ratePerSecond * timeElapsed\" */ checked_mul_uint256(/** @src 1:3739:3769  \"deposits[user] * ratePerSecond\" */ checked_mul_uint256(_2, /** @src 1:3756:3769  \"ratePerSecond\" */ loadimmutable(\"45\")), /** @src 1:3739:3783  \"deposits[user] * ratePerSecond * timeElapsed\" */ expr_1), /** @src 1:3787:3791  \"1e18\" */ 0x0de0b6b3a7640000)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212200dd261b3b65f7a0e39a154b35c2a1c75eba404cead03949478c6058e25c4d54e64736f6c634300081c0033\"\n    }\n}\n","hash":"02461eed42b3df9f0c47522ece3ee98433e9f704ee13dbe4f695ecd3f70098c7","factoryDependencies":{}}}}}}