{"id":"e9be6166ea6b2ac656a270e19abc93e3","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/adapters/MoonwellAdapter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"../interfaces/IStakingAdapter.sol\";\n\n/**\n * @notice Minimal ERC20 interface\n */\ninterface IERC20 {\n    function approve(address spender, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 amount) external returns (bool);\n}\n\n/**\n * @notice Moonwell mToken interface (native GLMR version - CEther-style)\n */\ninterface IMTokenNative {\n    function mint() external payable; // CEther-style: amount = msg.value\n    function redeem(uint256 redeemTokens) external returns (uint256);\n    function redeemUnderlying(uint256 redeemAmount) external returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function exchangeRateStored() external view returns (uint256);\n}\n\n/**\n * @notice Moonwell Comptroller interface\n */\ninterface IComptroller {\n    function claimReward(uint8 rewardType, address holder, address[] calldata mTokens) external;\n}\n\n/**\n * @title MoonwellAdapter\n * @notice Adapter for HabitTracker to create yield stakes in Moonwell on Moonbeam\n * @dev Supports native GLMR staking via mGLMR market\n * \n * @dev Terminology:\n * - Yield Stake: User rewards from successful habits staked here (userStakes)\n * - Yield Rewards: Additional rewards generated from Moonwell (WELL tokens + supply APY)\n * \n * @dev When user completes a habit successfully, their reward is sent here as a yield stake\n * to generate additional yield rewards over time\n */\ncontract MoonwellAdapter is IStakingAdapter {\n    address public immutable mToken;        // mGLMR address\n    address public immutable comptroller;   // Moonwell Comptroller\n    address public immutable habitTracker;  // Only HabitTracker can call\n\n    mapping(address => uint256) public userStakes; // Track per-user yield stakes (principal)\n\n    event Staked(address indexed user, uint256 amount, uint256 mTokens);\n    event Unstaked(address indexed user, uint256 amount, uint256 mTokens);\n    event RewardsClaimed(address indexed user, uint256 amount);\n\n    error OnlyHabitTracker();\n    error MintFailed();\n    error RedeemFailed();\n    error InvalidAmount();\n\n    modifier onlyHabitTracker() {\n        if (msg.sender != habitTracker) revert OnlyHabitTracker();\n        _;\n    }\n\n    /**\n     * @param _mToken Moonwell mGLMR token address\n     * @param _comptroller Moonwell Comptroller address\n     * @param _habitTracker HabitTracker contract address\n     */\n    constructor(address _mToken, address _comptroller, address _habitTracker) {\n        mToken = _mToken;\n        comptroller = _comptroller;\n        habitTracker = _habitTracker;\n    }\n\n    /**\n     * @notice Create yield stake by staking user rewards into Moonwell\n     * @param user Address of the user whose rewards are being staked\n     * @param amount Amount of GLMR to stake (user's earned reward)\n     * @dev msg.value must equal amount (native token)\n     * @dev This converts user rewards into yield stakes that generate yield rewards\n     */\n    function stake(address user, uint256 amount) external payable onlyHabitTracker {\n        if (msg.value != amount) revert InvalidAmount();\n        if (amount == 0) revert InvalidAmount();\n\n        // Mint mGLMR by sending GLMR (creates yield stake)\n        IMTokenNative(mToken).mint{value: amount}();\n\n        // Track user's yield stake (principal amount)\n        userStakes[user] += amount;\n\n        emit Staked(user, amount, IMTokenNative(mToken).balanceOf(address(this)));\n    }\n\n    /**\n     * @notice Unstake GLMR from Moonwell (redeem yield stake + accumulated yield rewards)\n     * @param user Address of the user whose rewards are being unstaked\n     * @param amount Amount of underlying GLMR to unstake\n     * @dev Redeems mGLMR and sends GLMR back to HabitTracker\n     * @dev Returns both yield stake principal and any accumulated yield rewards\n     */\n    function unstake(address user, uint256 amount) external onlyHabitTracker {\n        if (amount == 0) revert InvalidAmount();\n\n        // Redeem underlying GLMR (yield stake + yield rewards)\n        uint256 err = IMTokenNative(mToken).redeemUnderlying(amount);\n        if (err != 0) revert RedeemFailed();\n\n        // Update user's yield stake principal\n        userStakes[user] -= amount;\n\n        // Send GLMR back to HabitTracker (includes yield rewards if amount > principal)\n        (bool success, ) = habitTracker.call{value: amount}(\"\");\n        if (!success) revert RedeemFailed();\n\n        emit Unstaked(user, amount, IMTokenNative(mToken).balanceOf(address(this)));\n    }\n\n    /**\n     * @notice Claim yield rewards (WELL tokens) from Moonwell\n     * @return claimed Amount of yield rewards claimed (0 if none)\n     * @dev Best-effort claim; returns 0 if rewards not active\n     * @dev Yield rewards = WELL tokens earned from supplying to Moonwell\n     */\n    function claimRewards() external onlyHabitTracker returns (uint256 claimed) {\n        address[] memory markets = new address[](1);\n        markets[0] = mToken;\n\n        // Try to claim WELL yield rewards (rewardType 0)\n        try IComptroller(comptroller).claimReward(0, address(this), markets) {\n            // If successful, WELL yield rewards sent to this adapter\n            // HabitTracker can sweep them later\n            emit RewardsClaimed(msg.sender, 0);\n            return 0; // Don't track WELL tokens for now\n        } catch {\n            return 0; // Yield rewards not active or failed\n        }\n    }\n\n    /**\n     * @notice Get user's yield stake amount (in underlying GLMR)\n     * @param who Address to check\n     * @return staked Amount of GLMR in yield stake (principal only, excludes yield rewards)\n     */\n    function getStakedAmount(address who) external view returns (uint256 staked) {\n        // Return user's tracked yield stake principal\n        // Note: This tracks only principal, not current value including yield rewards\n        return userStakes[who];\n    }\n\n    /**\n     * @notice Get pending yield rewards (not supported by Moonwell directly)\n     * @return pending Always returns 0\n     * @dev Moonwell doesn't expose claimable yield rewards on-chain; use off-chain calculation\n     * @dev Yield rewards accumulate automatically in mToken exchange rate\n     */\n    function getPendingRewards(address /* who */) external pure returns (uint256 pending) {\n        return 0; // Not easily accessible on-chain\n    }\n\n    /**\n     * @notice Allow receiving GLMR from Moonwell redemptions\n     */\n    receive() external payable {}\n}\n\n"},"contracts/HabitTracker.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./interfaces/IStakingAdapter.sol\";\n\n/**\n * @title HabitTracker\n * @notice Gamified habit tracking with financial commitment and yield generation\n * @dev Uses epoch-based time (86400-second days) for daily cycles\n * @dev Integrates with external staking via IStakingAdapter\n * \n * @dev Two types of stakes:\n * - Funded Stake: User deposits locked during day (blockedBalance)\n * - Yield Stake: Successful rewards staked externally for yield generation\n * \n * @dev Two types of rewards:\n * - User Rewards: Base rewards from successful habit completion (claimableBalance)\n * - Yield Rewards: Additional rewards generated from external staking (tracked in adapter)\n * \n * @author HabitChain Team\n */\ncontract HabitTracker {\n    uint256 public constant STAKE_PER_DAY = 10 ether;\n    uint256 private constant SECONDS_PER_DAY = 86400;\n    address public immutable treasury;\n    IStakingAdapter public stakingAdapter;\n    address public owner;\n    \n    // Balance type identifiers\n    uint8 private constant BALANCE_DEPOSIT = 0;\n    uint8 private constant BALANCE_CLAIMABLE = 1;\n    uint8 private constant BALANCE_EXTERNAL = 2;\n    \n    // ============ Structs ============\n    \n    struct UserState {\n        uint256 depositBalance;      // Available funds for staking on habits\n        uint256 blockedBalance;      // Funded stake: locked during active day\n        uint256 claimableBalance;    // User rewards: earned from successful habits\n        uint32 activeHabitCount;\n    }\n    \n    struct Habit {\n        bytes32 text;\n        uint64 createdAtEpoch;\n        bool archived;\n    }\n    \n    mapping(address => UserState) public userStates;\n    mapping(address => mapping(uint32 => Habit)) public habits;\n    mapping(address => uint32) public userHabitCounters;\n    \n    // Bitmap storage: each bit represents a habitId (supports 256 habits per user per epoch)\n    mapping(address => mapping(uint64 => uint256)) public funded;\n    mapping(address => mapping(uint64 => uint256)) public checked;\n    mapping(address => mapping(uint64 => uint256)) public settled;\n    \n    event Deposited(address indexed user, uint256 amount);\n    event BalanceMoved(address indexed user, uint8 indexed from, uint8 indexed to, uint256 amount);\n    event HabitCreated(address indexed user, uint32 indexed habitId, bytes32 text);\n    event HabitArchived(address indexed user, uint32 indexed habitId);\n    event DayPrepared(address indexed user, uint64 indexed epoch, uint32 fundedCount, uint32 insufficientCount);\n    event CheckedIn(address indexed user, uint32 indexed habitId, uint64 indexed epoch);\n    event SettledSuccess(address indexed user, uint32 indexed habitId, uint64 indexed epoch, uint256 reward);\n    event SettledFail(address indexed user, uint32 indexed habitId, uint64 indexed epoch, uint256 slashed);\n    event StakingAdapterUpdated(address indexed oldAdapter, address indexed newAdapter);\n    \n    error InvalidTreasury();\n    error InvalidAmount();\n    error InsufficientBalance();\n    error InvalidBalanceType();\n    error HabitNotFound();\n    error HabitAlreadyArchived();\n    error InvalidEpoch();\n    error DayNotFunded();\n    error AlreadyCheckedIn();\n    error AlreadySettled();\n    error CannotSettleCurrentDay();\n    error TransferFailed();\n    error HabitTextTooLong();\n    error OnlyOwner();\n    error InvalidStakingAdapter();\n    error HabitIdTooLarge();\n    \n    modifier onlyOwner() {\n        if (msg.sender != owner) revert OnlyOwner();\n        _;\n    }\n    \n    // ============ Constructor ============\n    \n    constructor(address _treasury, address _stakingAdapter) {\n        if (_treasury == address(0)) revert InvalidTreasury();\n        treasury = _treasury;\n        owner = msg.sender;\n        \n        // Staking adapter is optional - can be address(0) initially\n        if (_stakingAdapter != address(0)) {\n            stakingAdapter = IStakingAdapter(_stakingAdapter);\n        }\n    }\n    \n    function epochNow() public view returns (uint64) {\n        return uint64(block.timestamp / SECONDS_PER_DAY);\n    }\n    \n    // ============ Admin Functions ============\n    \n    function setStakingAdapter(address _newAdapter) external onlyOwner {\n        if (_newAdapter == address(0)) revert InvalidStakingAdapter();\n        address oldAdapter = address(stakingAdapter);\n        stakingAdapter = IStakingAdapter(_newAdapter);\n        emit StakingAdapterUpdated(oldAdapter, _newAdapter);\n    }\n    \n    function transferOwnership(address newOwner) external onlyOwner {\n        if (newOwner == address(0)) revert InvalidTreasury();\n        owner = newOwner;\n    }\n    \n    // ============ Balance Management ============\n    \n    function deposit() external payable {\n        if (msg.value == 0) revert InvalidAmount();\n        userStates[msg.sender].depositBalance += msg.value;\n        emit Deposited(msg.sender, msg.value);\n    }\n    \n    /**\n     * @notice Move funds between balance types\n     * @param from Source balance type (0=deposit, 1=claimable)\n     * @param to Destination balance type (0=deposit, 1=claimable, 2=external/withdraw)\n     * @param amount Amount to move\n     * @dev Examples: withdraw from deposit: move(0,2,amt), claim: move(1,2,amt), redeposit: move(1,0,amt)\n     */\n    function move(uint8 from, uint8 to, uint256 amount) external {\n        if (amount == 0) revert InvalidAmount();\n        if (from == to) revert InvalidBalanceType();\n        if (from > BALANCE_CLAIMABLE || to > BALANCE_EXTERNAL) revert InvalidBalanceType();\n        \n        UserState storage state = userStates[msg.sender];\n        \n        // Deduct from source\n        if (from == BALANCE_DEPOSIT) {\n            if (state.depositBalance < amount) revert InsufficientBalance();\n            unchecked { state.depositBalance -= amount; }\n        } else { // BALANCE_CLAIMABLE\n            if (state.claimableBalance < amount) revert InsufficientBalance();\n            unchecked { state.claimableBalance -= amount; }\n        }\n        \n        // Add to destination\n        if (to == BALANCE_DEPOSIT) {\n            unchecked { state.depositBalance += amount; }\n        } else if (to == BALANCE_CLAIMABLE) {\n            unchecked { state.claimableBalance += amount; }\n        } else { // BALANCE_EXTERNAL\n            _transfer(msg.sender, amount);\n        }\n        \n        emit BalanceMoved(msg.sender, from, to, amount);\n    }\n    \n    function _transfer(address to, uint256 amount) private {\n        (bool success, ) = to.call{value: amount}(\"\");\n        if (!success) revert TransferFailed();\n    }\n    \n    // ============ Habit Management Functions ============\n    \n    /**\n     * @notice Create a new habit\n     * @param text Description of the habit (up to 32 bytes)\n     * @return habitId The ID of the newly created habit\n     */\n    function createHabit(bytes32 text) external returns (uint32) {\n        if (text == bytes32(0)) revert HabitTextTooLong();\n        \n        uint32 habitId = ++userHabitCounters[msg.sender];\n        if (habitId > 255) revert HabitIdTooLarge(); // Bitmap limit\n        \n        habits[msg.sender][habitId] = Habit({\n            text: text,\n            createdAtEpoch: epochNow(),\n            archived: false\n        });\n        \n        unchecked { userStates[msg.sender].activeHabitCount++; }\n        \n        emit HabitCreated(msg.sender, habitId, text);\n        return habitId;\n    }\n    \n    /**\n     * @notice Archive a habit (soft delete)\n     * @param habitId ID of the habit to archive\n     */\n    function archiveHabit(uint32 habitId) external {\n        Habit storage habit = habits[msg.sender][habitId];\n        if (habit.createdAtEpoch == 0) revert HabitNotFound();\n        if (habit.archived) revert HabitAlreadyArchived();\n        habit.archived = true;\n        unchecked { userStates[msg.sender].activeHabitCount--; }\n        emit HabitArchived(msg.sender, habitId);\n    }\n    \n    // ============ Daily Cycle Functions ============\n    \n    /**\n     * @notice Prepare the day by locking funds (funded stake) for active habits\n     * @param epoch The epoch to prepare (must be current day)\n     * @dev Moves funds from depositBalance to blockedBalance (funded stake)\n     */\n    function prepareDay(uint64 epoch) external {\n        if (epoch != epochNow()) revert InvalidEpoch();\n        \n        UserState storage state = userStates[msg.sender];\n        uint32 count = userHabitCounters[msg.sender];\n        uint32 fundedCount;\n        uint32 insufficientCount;\n        uint256 fundedBitmap = funded[msg.sender][epoch];\n        \n        for (uint32 i = 1; i <= count;) {\n            Habit storage habit = habits[msg.sender][i];\n            \n            if (!habit.archived && habit.createdAtEpoch != 0) {\n                uint256 mask = 1 << i;\n                \n                if (fundedBitmap & mask == 0) { // Check if not already funded\n                    if (state.depositBalance >= STAKE_PER_DAY) {\n                        unchecked {\n                            state.depositBalance -= STAKE_PER_DAY;\n                            state.blockedBalance += STAKE_PER_DAY; // Funded stake\n                            fundedCount++;\n                        }\n                        fundedBitmap |= mask; // Set funded bit\n                    } else {\n                        unchecked { insufficientCount++; }\n                    }\n                }\n            }\n            unchecked { i++; }\n        }\n        \n        funded[msg.sender][epoch] = fundedBitmap;\n        emit DayPrepared(msg.sender, epoch, fundedCount, insufficientCount);\n    }\n    \n    /**\n     * @notice Check in to a habit for the current day\n     * @param habitId ID of the habit\n     * @param epoch The epoch to check in (must be current day)\n     */\n    function checkIn(uint32 habitId, uint64 epoch) external {\n        if (epoch != epochNow()) revert InvalidEpoch();\n        Habit storage habit = habits[msg.sender][habitId];\n        if (habit.createdAtEpoch == 0 || habit.archived) revert HabitNotFound();\n        \n        uint256 mask = 1 << habitId;\n        if (funded[msg.sender][epoch] & mask == 0) revert DayNotFunded();\n        if (checked[msg.sender][epoch] & mask != 0) revert AlreadyCheckedIn();\n        \n        checked[msg.sender][epoch] |= mask;\n        emit CheckedIn(msg.sender, habitId, epoch);\n    }\n    \n    /**\n     * @notice Settle a specific habit for a past day\n     * @param user Address of habit owner\n     * @param epoch The epoch to settle (must be past day)\n     * @param habitId ID of the habit to settle\n     */\n    function settle(address user, uint64 epoch, uint32 habitId) public {\n        if (epoch >= epochNow()) revert CannotSettleCurrentDay();\n        _settleInternal(user, epoch, habitId);\n    }\n    \n    /**\n     * @notice Force settle a specific habit without epoch validation (TESTING ONLY)\n     * @dev Bypasses the \"cannot settle current day\" check - use with caution\n     * @param user Address of habit owner\n     * @param epoch The epoch to settle (can be any epoch, including current)\n     * @param habitId ID of the habit to settle\n     */\n    function forceSettle(address user, uint64 epoch, uint32 habitId) public {\n        _settleInternal(user, epoch, habitId);\n    }\n    \n    /**\n     * @notice Internal settlement logic without epoch validation\n     * @param user Address of habit owner\n     * @param epoch The epoch to settle\n     * @param habitId ID of the habit to settle\n     * @dev Settlement flow:\n     * - SUCCESS: User reward is staked externally (yield stake) to generate yield rewards\n     * - FAIL: Funded stake is sent to treasury (slashed)\n     */\n    function _settleInternal(address user, uint64 epoch, uint32 habitId) private {\n        if (habits[user][habitId].createdAtEpoch == 0) revert HabitNotFound();\n        \n        uint256 mask = 1 << habitId;\n        if (funded[user][epoch] & mask == 0) revert DayNotFunded();\n        if (settled[user][epoch] & mask != 0) revert AlreadySettled();\n        \n        settled[user][epoch] |= mask;\n        UserState storage state = userStates[user];\n        \n        // Release funded stake from blocked balance\n        if (state.blockedBalance < STAKE_PER_DAY) revert InsufficientBalance();\n        unchecked { state.blockedBalance -= STAKE_PER_DAY; }\n        \n        if (checked[user][epoch] & mask != 0) {\n            // SUCCESS: Create yield stake by staking user rewards externally\n            // This generates yield rewards on top of the base user reward\n            if (address(stakingAdapter) != address(0)) {\n                stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY);\n            } else {\n                // Fallback: add user reward to claimable balance (no yield generation)\n                unchecked { state.claimableBalance += STAKE_PER_DAY; }\n            }\n            emit SettledSuccess(user, habitId, epoch, STAKE_PER_DAY);\n        } else {\n            // FAIL: Slash funded stake - send to treasury\n            _transfer(treasury, STAKE_PER_DAY);\n            emit SettledFail(user, habitId, epoch, STAKE_PER_DAY);\n        }\n    }\n    \n    // ============ Receive Function ============\n    \n    /**\n     * @notice Allow receiving native tokens from staking adapter\n     */\n    receive() external payable {}\n}\n\n"},"contracts/interfaces/IStakingAdapter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * @title IStakingAdapter\n * @notice Chain-agnostic interface for external staking protocols\n * @dev Allows HabitTracker to integrate with any staking protocol\n * \n * @dev Terminology:\n * - Yield Stake: User rewards staked in external protocol (principal)\n * - Yield Rewards: Additional rewards generated from external protocol\n */\ninterface IStakingAdapter {\n    /**\n     * @notice Create yield stake by staking user rewards into external protocol\n     * @param user Address of the user whose rewards are being staked\n     * @param amount Amount to stake (user's earned rewards)\n     * @dev For native token staking, msg.value should equal amount\n     */\n    function stake(address user, uint256 amount) external payable;\n\n    /**\n     * @notice Unstake from external protocol (yield stake + yield rewards)\n     * @param user Address of the user whose rewards are being unstaked\n     * @param amount Amount to unstake\n     * @dev Unstaked tokens (principal + yield rewards) should be sent back to HabitTracker\n     */\n    function unstake(address user, uint256 amount) external;\n\n    /**\n     * @notice Claim accumulated yield rewards from external protocol\n     * @return claimed Amount of yield rewards claimed\n     * @dev Returns 0 if no yield rewards available or not supported\n     */\n    function claimRewards() external returns (uint256 claimed);\n\n    /**\n     * @notice Get total yield stake amount for an address (principal only)\n     * @param who Address to check\n     * @return staked Total yield stake by address (excludes yield rewards)\n     */\n    function getStakedAmount(address who) external view returns (uint256 staked);\n\n    /**\n     * @notice Get pending unclaimed yield rewards for an address\n     * @param who Address to check\n     * @return pending Pending yield rewards\n     * @dev Returns 0 if not supported by protocol\n     */\n    function getPendingRewards(address who) external view returns (uint256 pending);\n}\n\n"},"contracts/mocks/MockStakingRewards.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"../interfaces/IStakingAdapter.sol\";\n\n/**\n * @title MockStakingRewards\n * @notice Simple mock staking contract for testing on Passet Hub\n * @dev Linear reward rate: rewards = staked * ratePerSecond * timeStaked\n */\ncontract MockStakingRewards is IStakingAdapter {\n    uint256 public immutable ratePerSecond; // Reward rate per second (in wei per 1e18 staked)\n    address public immutable habitTracker;\n\n    mapping(address => uint256) public deposits;\n    mapping(address => uint256) public lastUpdateTime;\n\n    event Staked(address indexed user, uint256 amount);\n    event Unstaked(address indexed user, uint256 amount);\n    event RewardsClaimed(address indexed user, uint256 amount);\n\n    error OnlyHabitTracker();\n    error InsufficientBalance();\n    error TransferFailed();\n    error InvalidAmount();\n\n    modifier onlyHabitTracker() {\n        if (msg.sender != habitTracker) revert OnlyHabitTracker();\n        _;\n    }\n\n    /**\n     * @param _ratePerSecond Reward rate (e.g., 1e15 = 0.1% per second)\n     * @param _habitTracker HabitTracker contract address\n     */\n    constructor(uint256 _ratePerSecond, address _habitTracker) {\n        ratePerSecond = _ratePerSecond;\n        habitTracker = _habitTracker;\n    }\n\n    function stake(address user, uint256 amount) external payable onlyHabitTracker {\n        if (msg.value != amount) revert InvalidAmount();\n        if (amount == 0) revert InvalidAmount();\n\n        _updateRewards(user);\n        deposits[user] += amount;\n\n        emit Staked(user, amount);\n    }\n\n    function unstake(address user, uint256 amount) external onlyHabitTracker {\n        if (amount == 0) revert InvalidAmount();\n        if (deposits[user] < amount) revert InsufficientBalance();\n\n        _updateRewards(user);\n        deposits[user] -= amount;\n\n        // Send back to HabitTracker\n        (bool success, ) = habitTracker.call{value: amount}(\"\");\n        if (!success) revert TransferFailed();\n\n        emit Unstaked(user, amount);\n    }\n\n    function claimRewards() external onlyHabitTracker returns (uint256 claimed) {\n        claimed = _pendingRewards(msg.sender);\n        \n        // Safety: Check contract has funds\n        uint256 balance = address(this).balance;\n        if (balance == 0) return 0;\n        \n        // Safety: Cap at 10% of balance per claim\n        uint256 maxClaim = balance / 10;\n        if (claimed > maxClaim) claimed = maxClaim;\n        \n        // Safety: Can only claim what's available\n        if (claimed > balance) claimed = balance;\n        \n        if (claimed > 0) {\n            lastUpdateTime[msg.sender] = block.timestamp;\n            (bool success, ) = habitTracker.call{value: claimed}(\"\");\n            if (!success) revert TransferFailed();\n            emit RewardsClaimed(msg.sender, claimed);\n        }\n        \n        return claimed;\n    }\n\n    function getStakedAmount(address who) external view returns (uint256) {\n        return deposits[who];\n    }\n\n    function getPendingRewards(address who) external view returns (uint256) {\n        return _pendingRewards(who);\n    }\n\n    function getContractBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n\n    function _updateRewards(address user) internal {\n        if (lastUpdateTime[user] == 0) {\n            lastUpdateTime[user] = block.timestamp;\n        }\n    }\n\n    function _pendingRewards(address user) internal view returns (uint256) {\n        if (lastUpdateTime[user] == 0 || deposits[user] == 0) {\n            return 0;\n        }\n\n        uint256 timeElapsed = block.timestamp - lastUpdateTime[user];\n        // rewards = staked * ratePerSecond * timeElapsed / 1e18\n        return (deposits[user] * ratePerSecond * timeElapsed) / 1e18;\n    }\n\n    /**\n     * @notice Allow receiving PAS for reward pool\n     */\n    receive() external payable {}\n}\n\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"parameters":"z","fallbackOz":true,"runs":200},"outputSelection":{"*":{"*":["abi"]}},"resolc":{"version":"latest","compilerSource":"npm","settings":{"optimizer":{"enabled":true,"parameters":"z","fallbackOz":true,"runs":200}}}}},"output":{"errors":[],"version":"0.8.28","long_version":"0.8.28+commit.7893614a.Emscripten.clang","revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","sources":{"contracts/HabitTracker.sol":{"id":0,"ast":{"absolutePath":"contracts/HabitTracker.sol","exportedSymbols":{"HabitTracker":[1011],"IStakingAdapter":[1409]},"id":1012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"contracts/interfaces/IStakingAdapter.sol","file":"./interfaces/IStakingAdapter.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1012,"sourceUnit":1410,"src":"58:42:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"HabitTracker","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"102:658:0","text":" @title HabitTracker\n @notice Gamified habit tracking with financial commitment and yield generation\n @dev Uses epoch-based time (86400-second days) for daily cycles\n @dev Integrates with external staking via IStakingAdapter\n \n @dev Two types of stakes:\n - Funded Stake: User deposits locked during day (blockedBalance)\n - Yield Stake: Successful rewards staked externally for yield generation\n \n @dev Two types of rewards:\n - User Rewards: Base rewards from successful habit completion (claimableBalance)\n - Yield Rewards: Additional rewards generated from external staking (tracked in adapter)\n \n @author HabitChain Team"},"fullyImplemented":true,"id":1011,"linearizedBaseContracts":[1011],"name":"HabitTracker","nameLocation":"770:12:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"4a91f7ae","id":6,"mutability":"constant","name":"STAKE_PER_DAY","nameLocation":"813:13:0","nodeType":"VariableDeclaration","scope":1011,"src":"789:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":5,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"829:8:0","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"value":"10"},"visibility":"public"},{"constant":true,"id":9,"mutability":"constant","name":"SECONDS_PER_DAY","nameLocation":"868:15:0","nodeType":"VariableDeclaration","scope":1011,"src":"843:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3836343030","id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"886:5:0","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"visibility":"private"},{"constant":false,"functionSelector":"61d027b3","id":11,"mutability":"immutable","name":"treasury","nameLocation":"922:8:0","nodeType":"VariableDeclaration","scope":1011,"src":"897:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"4cbb98f4","id":14,"mutability":"mutable","name":"stakingAdapter","nameLocation":"959:14:0","nodeType":"VariableDeclaration","scope":1011,"src":"936:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"},"typeName":{"id":13,"nodeType":"UserDefinedTypeName","pathNode":{"id":12,"name":"IStakingAdapter","nameLocations":["936:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":1409,"src":"936:15:0"},"referencedDeclaration":1409,"src":"936:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":16,"mutability":"mutable","name":"owner","nameLocation":"994:5:0","nodeType":"VariableDeclaration","scope":1011,"src":"979:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":19,"mutability":"constant","name":"BALANCE_DEPOSIT","nameLocation":"1065:15:0","nodeType":"VariableDeclaration","scope":1011,"src":"1042:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":17,"name":"uint8","nodeType":"ElementaryTypeName","src":"1042:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1083:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":22,"mutability":"constant","name":"BALANCE_CLAIMABLE","nameLocation":"1113:17:0","nodeType":"VariableDeclaration","scope":1011,"src":"1090:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":20,"name":"uint8","nodeType":"ElementaryTypeName","src":"1090:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":21,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1133:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":25,"mutability":"constant","name":"BALANCE_EXTERNAL","nameLocation":"1163:16:0","nodeType":"VariableDeclaration","scope":1011,"src":"1140:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":23,"name":"uint8","nodeType":"ElementaryTypeName","src":"1140:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"HabitTracker.UserState","id":34,"members":[{"constant":false,"id":27,"mutability":"mutable","name":"depositBalance","nameLocation":"1275:14:0","nodeType":"VariableDeclaration","scope":34,"src":"1267:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"blockedBalance","nameLocation":"1353:14:0","nodeType":"VariableDeclaration","scope":34,"src":"1345:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"claimableBalance","nameLocation":"1432:16:0","nodeType":"VariableDeclaration","scope":34,"src":"1424:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30,"name":"uint256","nodeType":"ElementaryTypeName","src":"1424:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"activeHabitCount","nameLocation":"1515:16:0","nodeType":"VariableDeclaration","scope":34,"src":"1508:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":32,"name":"uint32","nodeType":"ElementaryTypeName","src":"1508:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"UserState","nameLocation":"1247:9:0","nodeType":"StructDefinition","scope":1011,"src":"1240:298:0","visibility":"public"},{"canonicalName":"HabitTracker.Habit","id":41,"members":[{"constant":false,"id":36,"mutability":"mutable","name":"text","nameLocation":"1579:4:0","nodeType":"VariableDeclaration","scope":41,"src":"1571:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1571:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"createdAtEpoch","nameLocation":"1600:14:0","nodeType":"VariableDeclaration","scope":41,"src":"1593:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":37,"name":"uint64","nodeType":"ElementaryTypeName","src":"1593:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"archived","nameLocation":"1629:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1624:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39,"name":"bool","nodeType":"ElementaryTypeName","src":"1624:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Habit","nameLocation":"1555:5:0","nodeType":"StructDefinition","scope":1011,"src":"1548:96:0","visibility":"public"},{"constant":false,"functionSelector":"0ecc535f","id":46,"mutability":"mutable","name":"userStates","nameLocation":"1691:10:0","nodeType":"VariableDeclaration","scope":1011,"src":"1654:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserState_$34_storage_$","typeString":"mapping(address => struct HabitTracker.UserState)"},"typeName":{"id":45,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"1662:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1654:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserState_$34_storage_$","typeString":"mapping(address => struct HabitTracker.UserState)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":44,"nodeType":"UserDefinedTypeName","pathNode":{"id":43,"name":"UserState","nameLocations":["1673:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":34,"src":"1673:9:0"},"referencedDeclaration":34,"src":"1673:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState"}}},"visibility":"public"},{"constant":false,"functionSelector":"99626634","id":53,"mutability":"mutable","name":"habits","nameLocation":"1759:6:0","nodeType":"VariableDeclaration","scope":1011,"src":"1707:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$_$","typeString":"mapping(address => mapping(uint32 => struct HabitTracker.Habit))"},"typeName":{"id":52,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"1715:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1707:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$_$","typeString":"mapping(address => mapping(uint32 => struct HabitTracker.Habit))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":51,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":48,"name":"uint32","nodeType":"ElementaryTypeName","src":"1734:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Mapping","src":"1726:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$","typeString":"mapping(uint32 => struct HabitTracker.Habit)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":50,"nodeType":"UserDefinedTypeName","pathNode":{"id":49,"name":"Habit","nameLocations":["1744:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1744:5:0"},"referencedDeclaration":41,"src":"1744:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit"}}}},"visibility":"public"},{"constant":false,"functionSelector":"0e08454a","id":57,"mutability":"mutable","name":"userHabitCounters","nameLocation":"1805:17:0","nodeType":"VariableDeclaration","scope":1011,"src":"1771:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint32_$","typeString":"mapping(address => uint32)"},"typeName":{"id":56,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1771:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint32_$","typeString":"mapping(address => uint32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":55,"name":"uint32","nodeType":"ElementaryTypeName","src":"1790:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}},"visibility":"public"},{"constant":false,"functionSelector":"319bec54","id":63,"mutability":"mutable","name":"funded","nameLocation":"1981:6:0","nodeType":"VariableDeclaration","scope":1011,"src":"1927:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"},"typeName":{"id":62,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"1935:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1927:46:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":61,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":59,"name":"uint64","nodeType":"ElementaryTypeName","src":"1954:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1946:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"a8389e0a","id":69,"mutability":"mutable","name":"checked","nameLocation":"2047:7:0","nodeType":"VariableDeclaration","scope":1011,"src":"1993:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"},"typeName":{"id":68,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2001:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1993:46:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":67,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":65,"name":"uint64","nodeType":"ElementaryTypeName","src":"2020:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"2012:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"39c51515","id":75,"mutability":"mutable","name":"settled","nameLocation":"2114:7:0","nodeType":"VariableDeclaration","scope":1011,"src":"2060:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"},"typeName":{"id":74,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2068:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2060:46:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":73,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":71,"name":"uint64","nodeType":"ElementaryTypeName","src":"2087:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"2079:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":81,"name":"Deposited","nameLocation":"2138:9:0","nodeType":"EventDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2164:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2148:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"2148:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2178:6:0","nodeType":"VariableDeclaration","scope":81,"src":"2170:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"2170:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:38:0"},"src":"2132:54:0"},{"anonymous":false,"eventSelector":"1a76aaec2e9828be3e61d555cee697fff809245531b81aeaabfc9802480b1f05","id":91,"name":"BalanceMoved","nameLocation":"2197:12:0","nodeType":"EventDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2226:4:0","nodeType":"VariableDeclaration","scope":91,"src":"2210:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2246:4:0","nodeType":"VariableDeclaration","scope":91,"src":"2232:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":84,"name":"uint8","nodeType":"ElementaryTypeName","src":"2232:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":87,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2266:2:0","nodeType":"VariableDeclaration","scope":91,"src":"2252:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":86,"name":"uint8","nodeType":"ElementaryTypeName","src":"2252:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":89,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2278:6:0","nodeType":"VariableDeclaration","scope":91,"src":"2270:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2209:76:0"},"src":"2191:95:0"},{"anonymous":false,"eventSelector":"1ef893a6ee29548c033856cb472a6c9745c5430a467e6e1d6bd3c90ea1e6b453","id":99,"name":"HabitCreated","nameLocation":"2297:12:0","nodeType":"EventDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2326:4:0","nodeType":"VariableDeclaration","scope":99,"src":"2310:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2310:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"indexed":true,"mutability":"mutable","name":"habitId","nameLocation":"2347:7:0","nodeType":"VariableDeclaration","scope":99,"src":"2332:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":94,"name":"uint32","nodeType":"ElementaryTypeName","src":"2332:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":97,"indexed":false,"mutability":"mutable","name":"text","nameLocation":"2364:4:0","nodeType":"VariableDeclaration","scope":99,"src":"2356:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2356:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2309:60:0"},"src":"2291:79:0"},{"anonymous":false,"eventSelector":"0731ac37a2c0967a9c8a91b6ca86ce30e1803b5b39201fee4ea7087db64e4ae3","id":105,"name":"HabitArchived","nameLocation":"2381:13:0","nodeType":"EventDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2411:4:0","nodeType":"VariableDeclaration","scope":105,"src":"2395:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"indexed":true,"mutability":"mutable","name":"habitId","nameLocation":"2432:7:0","nodeType":"VariableDeclaration","scope":105,"src":"2417:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":102,"name":"uint32","nodeType":"ElementaryTypeName","src":"2417:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2394:46:0"},"src":"2375:66:0"},{"anonymous":false,"eventSelector":"c3243be3f452579717c46da4c6f4efdcb6f123b63086b63e337d3984051defb5","id":115,"name":"DayPrepared","nameLocation":"2452:11:0","nodeType":"EventDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2480:4:0","nodeType":"VariableDeclaration","scope":115,"src":"2464:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"2464:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"indexed":true,"mutability":"mutable","name":"epoch","nameLocation":"2501:5:0","nodeType":"VariableDeclaration","scope":115,"src":"2486:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":108,"name":"uint64","nodeType":"ElementaryTypeName","src":"2486:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":111,"indexed":false,"mutability":"mutable","name":"fundedCount","nameLocation":"2515:11:0","nodeType":"VariableDeclaration","scope":115,"src":"2508:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":110,"name":"uint32","nodeType":"ElementaryTypeName","src":"2508:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":113,"indexed":false,"mutability":"mutable","name":"insufficientCount","nameLocation":"2535:17:0","nodeType":"VariableDeclaration","scope":115,"src":"2528:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":112,"name":"uint32","nodeType":"ElementaryTypeName","src":"2528:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2463:90:0"},"src":"2446:108:0"},{"anonymous":false,"eventSelector":"b004bd37af54c30d14936d8a5122253f9711256f1ba035cfd1788f88752ae682","id":123,"name":"CheckedIn","nameLocation":"2565:9:0","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2591:4:0","nodeType":"VariableDeclaration","scope":123,"src":"2575:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2575:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":119,"indexed":true,"mutability":"mutable","name":"habitId","nameLocation":"2612:7:0","nodeType":"VariableDeclaration","scope":123,"src":"2597:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":118,"name":"uint32","nodeType":"ElementaryTypeName","src":"2597:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":121,"indexed":true,"mutability":"mutable","name":"epoch","nameLocation":"2636:5:0","nodeType":"VariableDeclaration","scope":123,"src":"2621:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":120,"name":"uint64","nodeType":"ElementaryTypeName","src":"2621:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2574:68:0"},"src":"2559:84:0"},{"anonymous":false,"eventSelector":"ebd85bf239b4a8f2a28f2390709a11df0f198ec6857e7125e3fdab5c0dba8209","id":133,"name":"SettledSuccess","nameLocation":"2654:14:0","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2685:4:0","nodeType":"VariableDeclaration","scope":133,"src":"2669:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"habitId","nameLocation":"2706:7:0","nodeType":"VariableDeclaration","scope":133,"src":"2691:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":126,"name":"uint32","nodeType":"ElementaryTypeName","src":"2691:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"epoch","nameLocation":"2730:5:0","nodeType":"VariableDeclaration","scope":133,"src":"2715:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":128,"name":"uint64","nodeType":"ElementaryTypeName","src":"2715:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"2745:6:0","nodeType":"VariableDeclaration","scope":133,"src":"2737:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2668:84:0"},"src":"2648:105:0"},{"anonymous":false,"eventSelector":"be6be2b5187a2494043c3b540976811d976bcf8af560c95141c061bac9c206ba","id":143,"name":"SettledFail","nameLocation":"2764:11:0","nodeType":"EventDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2792:4:0","nodeType":"VariableDeclaration","scope":143,"src":"2776:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2776:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"habitId","nameLocation":"2813:7:0","nodeType":"VariableDeclaration","scope":143,"src":"2798:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":136,"name":"uint32","nodeType":"ElementaryTypeName","src":"2798:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":true,"mutability":"mutable","name":"epoch","nameLocation":"2837:5:0","nodeType":"VariableDeclaration","scope":143,"src":"2822:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":138,"name":"uint64","nodeType":"ElementaryTypeName","src":"2822:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":141,"indexed":false,"mutability":"mutable","name":"slashed","nameLocation":"2852:7:0","nodeType":"VariableDeclaration","scope":143,"src":"2844:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2775:85:0"},"src":"2758:103:0"},{"anonymous":false,"eventSelector":"258ff515b65e53911071aed3f954e1f58eca37dce2ed4a50766f00c9d0161048","id":149,"name":"StakingAdapterUpdated","nameLocation":"2872:21:0","nodeType":"EventDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"indexed":true,"mutability":"mutable","name":"oldAdapter","nameLocation":"2910:10:0","nodeType":"VariableDeclaration","scope":149,"src":"2894:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"2894:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":147,"indexed":true,"mutability":"mutable","name":"newAdapter","nameLocation":"2938:10:0","nodeType":"VariableDeclaration","scope":149,"src":"2922:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"2922:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2893:56:0"},"src":"2866:84:0"},{"errorSelector":"14bcf5c8","id":151,"name":"InvalidTreasury","nameLocation":"2966:15:0","nodeType":"ErrorDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"2981:2:0"},"src":"2960:24:0"},{"errorSelector":"2c5211c6","id":153,"name":"InvalidAmount","nameLocation":"2995:13:0","nodeType":"ErrorDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[],"src":"3008:2:0"},"src":"2989:22:0"},{"errorSelector":"f4d678b8","id":155,"name":"InsufficientBalance","nameLocation":"3022:19:0","nodeType":"ErrorDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"3041:2:0"},"src":"3016:28:0"},{"errorSelector":"fcb63a22","id":157,"name":"InvalidBalanceType","nameLocation":"3055:18:0","nodeType":"ErrorDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[],"src":"3073:2:0"},"src":"3049:27:0"},{"errorSelector":"a7a9536d","id":159,"name":"HabitNotFound","nameLocation":"3087:13:0","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"3100:2:0"},"src":"3081:22:0"},{"errorSelector":"c1c184c8","id":161,"name":"HabitAlreadyArchived","nameLocation":"3114:20:0","nodeType":"ErrorDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"3134:2:0"},"src":"3108:29:0"},{"errorSelector":"d5b25b63","id":163,"name":"InvalidEpoch","nameLocation":"3148:12:0","nodeType":"ErrorDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"3160:2:0"},"src":"3142:21:0"},{"errorSelector":"afa4e2b6","id":165,"name":"DayNotFunded","nameLocation":"3174:12:0","nodeType":"ErrorDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"3186:2:0"},"src":"3168:21:0"},{"errorSelector":"c98289f0","id":167,"name":"AlreadyCheckedIn","nameLocation":"3200:16:0","nodeType":"ErrorDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"3216:2:0"},"src":"3194:25:0"},{"errorSelector":"560ff900","id":169,"name":"AlreadySettled","nameLocation":"3230:14:0","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[],"src":"3244:2:0"},"src":"3224:23:0"},{"errorSelector":"cf114bd9","id":171,"name":"CannotSettleCurrentDay","nameLocation":"3258:22:0","nodeType":"ErrorDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"3280:2:0"},"src":"3252:31:0"},{"errorSelector":"90b8ec18","id":173,"name":"TransferFailed","nameLocation":"3294:14:0","nodeType":"ErrorDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"3308:2:0"},"src":"3288:23:0"},{"errorSelector":"cc67c13b","id":175,"name":"HabitTextTooLong","nameLocation":"3322:16:0","nodeType":"ErrorDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"3338:2:0"},"src":"3316:25:0"},{"errorSelector":"5fc483c5","id":177,"name":"OnlyOwner","nameLocation":"3352:9:0","nodeType":"ErrorDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"3361:2:0"},"src":"3346:18:0"},{"errorSelector":"dd750592","id":179,"name":"InvalidStakingAdapter","nameLocation":"3375:21:0","nodeType":"ErrorDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"3396:2:0"},"src":"3369:30:0"},{"errorSelector":"e9987cdd","id":181,"name":"HabitIdTooLarge","nameLocation":"3410:15:0","nodeType":"ErrorDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[],"src":"3425:2:0"},"src":"3404:24:0"},{"body":{"id":192,"nodeType":"Block","src":"3459:71:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":183,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3473:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3477:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3473:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":185,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"3487:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3473:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":190,"nodeType":"IfStatement","src":"3469:43:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":187,"name":"OnlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3501:9:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":189,"nodeType":"RevertStatement","src":"3494:18:0"}},{"id":191,"nodeType":"PlaceholderStatement","src":"3522:1:0"}]},"id":193,"name":"onlyOwner","nameLocation":"3447:9:0","nodeType":"ModifierDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"3456:2:0"},"src":"3438:92:0","virtual":false,"visibility":"internal"},{"body":{"id":233,"nodeType":"Block","src":"3646:324:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":200,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3660:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3681:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3673:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"3673:7:0","typeDescriptions":{}}},"id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3660:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":209,"nodeType":"IfStatement","src":"3656:53:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":206,"name":"InvalidTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3692:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":208,"nodeType":"RevertStatement","src":"3685:24:0"}},{"expression":{"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":210,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3719:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":211,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3730:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3719:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":213,"nodeType":"ExpressionStatement","src":"3719:20:0"},{"expression":{"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":214,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"3749:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":215,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3757:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3761:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3757:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3749:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":218,"nodeType":"ExpressionStatement","src":"3749:18:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":219,"name":"_stakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3859:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3886:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3878:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","typeDescriptions":{}}},"id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3878:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3859:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":232,"nodeType":"IfStatement","src":"3855:109:0","trueBody":{"id":231,"nodeType":"Block","src":"3890:74:0","statements":[{"expression":{"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":225,"name":"stakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"3904:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":227,"name":"_stakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3937:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"IStakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"3921:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStakingAdapter_$1409_$","typeString":"type(contract IStakingAdapter)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}},"src":"3904:49:0","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}},"id":230,"nodeType":"ExpressionStatement","src":"3904:49:0"}]}}]},"id":234,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"_treasury","nameLocation":"3610:9:0","nodeType":"VariableDeclaration","scope":234,"src":"3602:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"_stakingAdapter","nameLocation":"3629:15:0","nodeType":"VariableDeclaration","scope":234,"src":"3621:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3601:44:0"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"3646:0:0"},"scope":1011,"src":"3590:380:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":247,"nodeType":"Block","src":"4029:65:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":241,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4053:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"4053:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":243,"name":"SECONDS_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"4071:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4046:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":239,"name":"uint64","nodeType":"ElementaryTypeName","src":"4046:6:0","typeDescriptions":{}}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4046:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":238,"id":246,"nodeType":"Return","src":"4039:48:0"}]},"functionSelector":"222ae786","id":248,"implemented":true,"kind":"function","modifiers":[],"name":"epochNow","nameLocation":"3989:8:0","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"3997:2:0"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":248,"src":"4021:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":236,"name":"uint64","nodeType":"ElementaryTypeName","src":"4021:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4020:8:0"},"scope":1011,"src":"3980:114:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":283,"nodeType":"Block","src":"4225:248:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"_newAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"4239:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4262:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4254:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4254:7:0","typeDescriptions":{}}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4254:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4239:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":264,"nodeType":"IfStatement","src":"4235:61:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":261,"name":"InvalidStakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"4273:21:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":263,"nodeType":"RevertStatement","src":"4266:30:0"}},{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"oldAdapter","nameLocation":"4314:10:0","nodeType":"VariableDeclaration","scope":283,"src":"4306:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4306:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":271,"initialValue":{"arguments":[{"id":269,"name":"stakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4335:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}],"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4327:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"4327:7:0","typeDescriptions":{}}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4327:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4306:44:0"},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":272,"name":"stakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4360:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":274,"name":"_newAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"4393:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"IStakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"4377:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStakingAdapter_$1409_$","typeString":"type(contract IStakingAdapter)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}},"src":"4360:45:0","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}},"id":277,"nodeType":"ExpressionStatement","src":"4360:45:0"},{"eventCall":{"arguments":[{"id":279,"name":"oldAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4442:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":280,"name":"_newAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"4454:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":278,"name":"StakingAdapterUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4420:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"EmitStatement","src":"4415:51:0"}]},"functionSelector":"40729c58","id":284,"implemented":true,"kind":"function","modifiers":[{"id":253,"kind":"modifierInvocation","modifierName":{"id":252,"name":"onlyOwner","nameLocations":["4215:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":193,"src":"4215:9:0"},"nodeType":"ModifierInvocation","src":"4215:9:0"}],"name":"setStakingAdapter","nameLocation":"4167:17:0","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"_newAdapter","nameLocation":"4193:11:0","nodeType":"VariableDeclaration","scope":284,"src":"4185:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"4185:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4184:21:0"},"returnParameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"4225:0:0"},"scope":1011,"src":"4158:315:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":305,"nodeType":"Block","src":"4547:95:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4561:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4581:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4573:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"4573:7:0","typeDescriptions":{}}},"id":295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4573:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4561:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"4557:52:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":297,"name":"InvalidTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4592:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4592:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":299,"nodeType":"RevertStatement","src":"4585:24:0"}},{"expression":{"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":301,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"4619:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":302,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4619:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":304,"nodeType":"ExpressionStatement","src":"4619:16:0"}]},"functionSelector":"f2fde38b","id":306,"implemented":true,"kind":"function","modifiers":[{"id":289,"kind":"modifierInvocation","modifierName":{"id":288,"name":"onlyOwner","nameLocations":["4537:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":193,"src":"4537:9:0"},"nodeType":"ModifierInvocation","src":"4537:9:0"}],"name":"transferOwnership","nameLocation":"4492:17:0","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"newOwner","nameLocation":"4518:8:0","nodeType":"VariableDeclaration","scope":306,"src":"4510:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"4510:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4509:18:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"4547:0:0"},"scope":1011,"src":"4483:159:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":333,"nodeType":"Block","src":"4745:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4759:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4763:5:0","memberName":"value","nodeType":"MemberAccess","src":"4759:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4772:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4759:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":316,"nodeType":"IfStatement","src":"4755:42:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":313,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4782:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":315,"nodeType":"RevertStatement","src":"4775:22:0"}},{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":317,"name":"userStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4807:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserState_$34_storage_$","typeString":"mapping(address => struct HabitTracker.UserState storage ref)"}},"id":320,"indexExpression":{"expression":{"id":318,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4818:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4818:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4807:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage","typeString":"struct HabitTracker.UserState storage ref"}},"id":321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4830:14:0","memberName":"depositBalance","nodeType":"MemberAccess","referencedDeclaration":27,"src":"4807:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":322,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4848:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:5:0","memberName":"value","nodeType":"MemberAccess","src":"4848:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4807:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"4807:50:0"},{"eventCall":{"arguments":[{"expression":{"id":327,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4882:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4886:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4882:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":329,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4894:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4898:5:0","memberName":"value","nodeType":"MemberAccess","src":"4894:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":326,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"4872:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":332,"nodeType":"EmitStatement","src":"4867:37:0"}]},"functionSelector":"d0e30db0","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"4718:7:0","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"4725:2:0"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"4745:0:0"},"scope":1011,"src":"4709:202:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":452,"nodeType":"Block","src":"5341:1064:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5355:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5365:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5355:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":350,"nodeType":"IfStatement","src":"5351:39:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":347,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"5375:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":349,"nodeType":"RevertStatement","src":"5368:22:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5404:4:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":352,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5412:2:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5404:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":357,"nodeType":"IfStatement","src":"5400:43:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":354,"name":"InvalidBalanceType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"5423:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":356,"nodeType":"RevertStatement","src":"5416:27:0"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":358,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5457:4:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":359,"name":"BALANCE_CLAIMABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"5464:17:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5457:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":361,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5485:2:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":362,"name":"BALANCE_EXTERNAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"5490:16:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5485:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5457:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"5453:82:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":365,"name":"InvalidBalanceType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"5515:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5515:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":367,"nodeType":"RevertStatement","src":"5508:27:0"}},{"assignments":[371],"declarations":[{"constant":false,"id":371,"mutability":"mutable","name":"state","nameLocation":"5572:5:0","nodeType":"VariableDeclaration","scope":452,"src":"5554:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState"},"typeName":{"id":370,"nodeType":"UserDefinedTypeName","pathNode":{"id":369,"name":"UserState","nameLocations":["5554:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":34,"src":"5554:9:0"},"referencedDeclaration":34,"src":"5554:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState"}},"visibility":"internal"}],"id":376,"initialValue":{"baseExpression":{"id":372,"name":"userStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"5580:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserState_$34_storage_$","typeString":"mapping(address => struct HabitTracker.UserState storage ref)"}},"id":375,"indexExpression":{"expression":{"id":373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5591:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5595:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5591:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5580:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage","typeString":"struct HabitTracker.UserState storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5554:48:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":377,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5655:4:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":378,"name":"BALANCE_DEPOSIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"5663:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5655:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":411,"nodeType":"Block","src":"5832:171:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":396,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"5871:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5877:16:0","memberName":"claimableBalance","nodeType":"MemberAccess","referencedDeclaration":31,"src":"5871:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":398,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5896:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5871:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":403,"nodeType":"IfStatement","src":"5867:65:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":400,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"5911:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5911:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":402,"nodeType":"RevertStatement","src":"5904:28:0"}},{"id":410,"nodeType":"UncheckedBlock","src":"5946:47:0","statements":[{"expression":{"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":404,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"5958:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5964:16:0","memberName":"claimableBalance","nodeType":"MemberAccess","referencedDeclaration":31,"src":"5958:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5984:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5958:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":409,"nodeType":"ExpressionStatement","src":"5958:32:0"}]}]},"id":412,"nodeType":"IfStatement","src":"5651:352:0","trueBody":{"id":395,"nodeType":"Block","src":"5680:146:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":380,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"5698:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5704:14:0","memberName":"depositBalance","nodeType":"MemberAccess","referencedDeclaration":27,"src":"5698:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":382,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5721:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5698:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":387,"nodeType":"IfStatement","src":"5694:63:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":384,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"5736:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5736:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":386,"nodeType":"RevertStatement","src":"5729:28:0"}},{"id":394,"nodeType":"UncheckedBlock","src":"5771:45:0","statements":[{"expression":{"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":388,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"5783:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5789:14:0","memberName":"depositBalance","nodeType":"MemberAccess","referencedDeclaration":27,"src":"5783:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":391,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5807:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5783:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":393,"nodeType":"ExpressionStatement","src":"5783:30:0"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":413,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"6055:2:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":414,"name":"BALANCE_DEPOSIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"6061:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6055:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":424,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"6157:2:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":425,"name":"BALANCE_CLAIMABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"6163:17:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6157:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":441,"nodeType":"Block","src":"6259:74:0","statements":[{"expression":{"arguments":[{"expression":{"id":436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6303:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6307:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6303:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":435,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"6293:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":440,"nodeType":"ExpressionStatement","src":"6293:29:0"}]},"id":442,"nodeType":"IfStatement","src":"6153:180:0","trueBody":{"id":434,"nodeType":"Block","src":"6182:71:0","statements":[{"id":433,"nodeType":"UncheckedBlock","src":"6196:47:0","statements":[{"expression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":427,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6214:16:0","memberName":"claimableBalance","nodeType":"MemberAccess","referencedDeclaration":31,"src":"6208:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":430,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"6234:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6208:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":432,"nodeType":"ExpressionStatement","src":"6208:32:0"}]}]}},"id":443,"nodeType":"IfStatement","src":"6051:282:0","trueBody":{"id":423,"nodeType":"Block","src":"6078:69:0","statements":[{"id":422,"nodeType":"UncheckedBlock","src":"6092:45:0","statements":[{"expression":{"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":416,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6104:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6110:14:0","memberName":"depositBalance","nodeType":"MemberAccess","referencedDeclaration":27,"src":"6104:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":419,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"6128:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6104:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":421,"nodeType":"ExpressionStatement","src":"6104:30:0"}]}]}},{"eventCall":{"arguments":[{"expression":{"id":445,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6369:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6373:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6369:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6381:4:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"6387:2:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"6391:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":444,"name":"BalanceMoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"6356:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (address,uint8,uint8,uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"EmitStatement","src":"6351:47:0"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"4921:354:0","text":" @notice Move funds between balance types\n @param from Source balance type (0=deposit, 1=claimable)\n @param to Destination balance type (0=deposit, 1=claimable, 2=external/withdraw)\n @param amount Amount to move\n @dev Examples: withdraw from deposit: move(0,2,amt), claim: move(1,2,amt), redeposit: move(1,0,amt)"},"functionSelector":"4f126f03","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"move","nameLocation":"5289:4:0","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5300:4:0","nodeType":"VariableDeclaration","scope":453,"src":"5294:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":336,"name":"uint8","nodeType":"ElementaryTypeName","src":"5294:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5312:2:0","nodeType":"VariableDeclaration","scope":453,"src":"5306:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":338,"name":"uint8","nodeType":"ElementaryTypeName","src":"5306:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"amount","nameLocation":"5324:6:0","nodeType":"VariableDeclaration","scope":453,"src":"5316:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5316:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5293:38:0"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5341:0:0"},"scope":1011,"src":"5280:1125:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":475,"nodeType":"Block","src":"6470:109:0","statements":[{"assignments":[461,null],"declarations":[{"constant":false,"id":461,"mutability":"mutable","name":"success","nameLocation":"6486:7:0","nodeType":"VariableDeclaration","scope":475,"src":"6481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":460,"name":"bool","nodeType":"ElementaryTypeName","src":"6481:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":468,"initialValue":{"arguments":[{"hexValue":"","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6522:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":462,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6499:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6502:4:0","memberName":"call","nodeType":"MemberAccess","src":"6499:7:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":464,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6514:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6499:22:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6499:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6480:45:0"},{"condition":{"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6539:8:0","subExpression":{"id":469,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6540:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":474,"nodeType":"IfStatement","src":"6535:37:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":471,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"6556:14:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6556:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":473,"nodeType":"RevertStatement","src":"6549:23:0"}}]},"id":476,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6424:9:0","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"6442:2:0","nodeType":"VariableDeclaration","scope":476,"src":"6434:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"6434:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"amount","nameLocation":"6454:6:0","nodeType":"VariableDeclaration","scope":476,"src":"6446:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"6446:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6433:28:0"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"6470:0:0"},"scope":1011,"src":"6415:164:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":540,"nodeType":"Block","src":"6883:522:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":484,"name":"text","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6897:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6913:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6905:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6905:7:0","typeDescriptions":{}}},"id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6905:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6897:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":493,"nodeType":"IfStatement","src":"6893:49:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"HabitTextTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"6924:16:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":492,"nodeType":"RevertStatement","src":"6917:25:0"}},{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"habitId","nameLocation":"6968:7:0","nodeType":"VariableDeclaration","scope":540,"src":"6961:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":494,"name":"uint32","nodeType":"ElementaryTypeName","src":"6961:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":501,"initialValue":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6978:31:0","subExpression":{"baseExpression":{"id":496,"name":"userHabitCounters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"6980:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint32_$","typeString":"mapping(address => uint32)"}},"id":499,"indexExpression":{"expression":{"id":497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6998:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7002:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6998:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6980:29:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"6961:48:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":502,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7023:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"323535","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7033:3:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"7023:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"nodeType":"IfStatement","src":"7019:43:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":505,"name":"HabitIdTooLarge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"7045:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7045:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":507,"nodeType":"RevertStatement","src":"7038:24:0"}},{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":509,"name":"habits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"7097:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$_$","typeString":"mapping(address => mapping(uint32 => struct HabitTracker.Habit storage ref))"}},"id":513,"indexExpression":{"expression":{"id":510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7104:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7108:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7104:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7097:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$","typeString":"mapping(uint32 => struct HabitTracker.Habit storage ref)"}},"id":514,"indexExpression":{"id":512,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7116:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7097:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage","typeString":"struct HabitTracker.Habit storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":516,"name":"text","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"7153:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":517,"name":"epochNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"7187:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7187:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"66616c7365","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7221:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":515,"name":"Habit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"7127:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Habit_$41_storage_ptr_$","typeString":"type(struct HabitTracker.Habit storage pointer)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7147:4:0","7171:14:0","7211:8:0"],"names":["text","createdAtEpoch","archived"],"nodeType":"FunctionCall","src":"7127:110:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_memory_ptr","typeString":"struct HabitTracker.Habit memory"}},"src":"7097:140:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage","typeString":"struct HabitTracker.Habit storage ref"}},"id":522,"nodeType":"ExpressionStatement","src":"7097:140:0"},{"id":530,"nodeType":"UncheckedBlock","src":"7256:56:0","statements":[{"expression":{"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7268:41:0","subExpression":{"expression":{"baseExpression":{"id":523,"name":"userStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7268:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserState_$34_storage_$","typeString":"mapping(address => struct HabitTracker.UserState storage ref)"}},"id":526,"indexExpression":{"expression":{"id":524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7279:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7279:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7268:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage","typeString":"struct HabitTracker.UserState storage ref"}},"id":527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7291:16:0","memberName":"activeHabitCount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"7268:39:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":529,"nodeType":"ExpressionStatement","src":"7268:41:0"}]},{"eventCall":{"arguments":[{"expression":{"id":532,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7348:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7352:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7348:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7360:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":535,"name":"text","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"7369:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":531,"name":"HabitCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7335:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (address,uint32,bytes32)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7335:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":537,"nodeType":"EmitStatement","src":"7330:44:0"},{"expression":{"id":538,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7391:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":483,"id":539,"nodeType":"Return","src":"7384:14:0"}]},"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"6654:163:0","text":" @notice Create a new habit\n @param text Description of the habit (up to 32 bytes)\n @return habitId The ID of the newly created habit"},"functionSelector":"e9714e07","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"createHabit","nameLocation":"6831:11:0","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"text","nameLocation":"6851:4:0","nodeType":"VariableDeclaration","scope":541,"src":"6843:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6842:14:0"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"6875:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":481,"name":"uint32","nodeType":"ElementaryTypeName","src":"6875:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6874:8:0"},"scope":1011,"src":"6822:583:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":591,"nodeType":"Block","src":"7572:333:0","statements":[{"assignments":[549],"declarations":[{"constant":false,"id":549,"mutability":"mutable","name":"habit","nameLocation":"7596:5:0","nodeType":"VariableDeclaration","scope":591,"src":"7582:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit"},"typeName":{"id":548,"nodeType":"UserDefinedTypeName","pathNode":{"id":547,"name":"Habit","nameLocations":["7582:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"7582:5:0"},"referencedDeclaration":41,"src":"7582:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit"}},"visibility":"internal"}],"id":556,"initialValue":{"baseExpression":{"baseExpression":{"id":550,"name":"habits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"7604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$_$","typeString":"mapping(address => mapping(uint32 => struct HabitTracker.Habit storage ref))"}},"id":553,"indexExpression":{"expression":{"id":551,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7611:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7615:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7611:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7604:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$","typeString":"mapping(uint32 => struct HabitTracker.Habit storage ref)"}},"id":555,"indexExpression":{"id":554,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7623:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7604:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage","typeString":"struct HabitTracker.Habit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7582:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":557,"name":"habit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"7645:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit storage pointer"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7651:14:0","memberName":"createdAtEpoch","nodeType":"MemberAccess","referencedDeclaration":38,"src":"7645:20:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7669:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7645:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":564,"nodeType":"IfStatement","src":"7641:53:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"HabitNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7679:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":563,"nodeType":"RevertStatement","src":"7672:22:0"}},{"condition":{"expression":{"id":565,"name":"habit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"7708:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit storage pointer"}},"id":566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7714:8:0","memberName":"archived","nodeType":"MemberAccess","referencedDeclaration":40,"src":"7708:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":570,"nodeType":"IfStatement","src":"7704:49:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":567,"name":"HabitAlreadyArchived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"7731:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7731:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":569,"nodeType":"RevertStatement","src":"7724:29:0"}},{"expression":{"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":571,"name":"habit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"7763:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit storage pointer"}},"id":573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7769:8:0","memberName":"archived","nodeType":"MemberAccess","referencedDeclaration":40,"src":"7763:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7780:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7763:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"ExpressionStatement","src":"7763:21:0"},{"id":584,"nodeType":"UncheckedBlock","src":"7794:56:0","statements":[{"expression":{"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"7806:41:0","subExpression":{"expression":{"baseExpression":{"id":577,"name":"userStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7806:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserState_$34_storage_$","typeString":"mapping(address => struct HabitTracker.UserState storage ref)"}},"id":580,"indexExpression":{"expression":{"id":578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7817:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7821:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7817:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7806:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage","typeString":"struct HabitTracker.UserState storage ref"}},"id":581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7829:16:0","memberName":"activeHabitCount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"7806:39:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":583,"nodeType":"ExpressionStatement","src":"7806:41:0"}]},{"eventCall":{"arguments":[{"expression":{"id":586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7878:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7882:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7878:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7890:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":585,"name":"HabitArchived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"7864:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint32_$returns$__$","typeString":"function (address,uint32)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7864:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"EmitStatement","src":"7859:39:0"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"7415:105:0","text":" @notice Archive a habit (soft delete)\n @param habitId ID of the habit to archive"},"functionSelector":"b650673a","id":592,"implemented":true,"kind":"function","modifiers":[],"name":"archiveHabit","nameLocation":"7534:12:0","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"habitId","nameLocation":"7554:7:0","nodeType":"VariableDeclaration","scope":592,"src":"7547:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":543,"name":"uint32","nodeType":"ElementaryTypeName","src":"7547:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"7546:16:0"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"7572:0:0"},"scope":1011,"src":"7525:380:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":730,"nodeType":"Block","src":"8255:1327:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":598,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8269:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":599,"name":"epochNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"8278:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8278:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8269:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":605,"nodeType":"IfStatement","src":"8265:46:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":602,"name":"InvalidEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"8297:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8297:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":604,"nodeType":"RevertStatement","src":"8290:21:0"}},{"assignments":[608],"declarations":[{"constant":false,"id":608,"mutability":"mutable","name":"state","nameLocation":"8348:5:0","nodeType":"VariableDeclaration","scope":730,"src":"8330:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState"},"typeName":{"id":607,"nodeType":"UserDefinedTypeName","pathNode":{"id":606,"name":"UserState","nameLocations":["8330:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":34,"src":"8330:9:0"},"referencedDeclaration":34,"src":"8330:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState"}},"visibility":"internal"}],"id":613,"initialValue":{"baseExpression":{"id":609,"name":"userStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8356:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserState_$34_storage_$","typeString":"mapping(address => struct HabitTracker.UserState storage ref)"}},"id":612,"indexExpression":{"expression":{"id":610,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8367:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8371:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8367:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8356:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage","typeString":"struct HabitTracker.UserState storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8330:48:0"},{"assignments":[615],"declarations":[{"constant":false,"id":615,"mutability":"mutable","name":"count","nameLocation":"8395:5:0","nodeType":"VariableDeclaration","scope":730,"src":"8388:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":614,"name":"uint32","nodeType":"ElementaryTypeName","src":"8388:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":620,"initialValue":{"baseExpression":{"id":616,"name":"userHabitCounters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"8403:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint32_$","typeString":"mapping(address => uint32)"}},"id":619,"indexExpression":{"expression":{"id":617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8421:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8425:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8421:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8403:29:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"8388:44:0"},{"assignments":[622],"declarations":[{"constant":false,"id":622,"mutability":"mutable","name":"fundedCount","nameLocation":"8449:11:0","nodeType":"VariableDeclaration","scope":730,"src":"8442:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":621,"name":"uint32","nodeType":"ElementaryTypeName","src":"8442:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":623,"nodeType":"VariableDeclarationStatement","src":"8442:18:0"},{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"insufficientCount","nameLocation":"8477:17:0","nodeType":"VariableDeclaration","scope":730,"src":"8470:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":624,"name":"uint32","nodeType":"ElementaryTypeName","src":"8470:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":626,"nodeType":"VariableDeclarationStatement","src":"8470:24:0"},{"assignments":[628],"declarations":[{"constant":false,"id":628,"mutability":"mutable","name":"fundedBitmap","nameLocation":"8512:12:0","nodeType":"VariableDeclaration","scope":730,"src":"8504:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"8504:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":635,"initialValue":{"baseExpression":{"baseExpression":{"id":629,"name":"funded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"8527:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":632,"indexExpression":{"expression":{"id":630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8534:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8538:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8534:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8527:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":634,"indexExpression":{"id":633,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8546:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8527:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8504:48:0"},{"body":{"id":711,"nodeType":"Block","src":"8603:837:0","statements":[{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"habit","nameLocation":"8631:5:0","nodeType":"VariableDeclaration","scope":711,"src":"8617:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit"},"typeName":{"id":644,"nodeType":"UserDefinedTypeName","pathNode":{"id":643,"name":"Habit","nameLocations":["8617:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"8617:5:0"},"referencedDeclaration":41,"src":"8617:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit"}},"visibility":"internal"}],"id":652,"initialValue":{"baseExpression":{"baseExpression":{"id":646,"name":"habits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"8639:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$_$","typeString":"mapping(address => mapping(uint32 => struct HabitTracker.Habit storage ref))"}},"id":649,"indexExpression":{"expression":{"id":647,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8646:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8650:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8646:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8639:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$","typeString":"mapping(uint32 => struct HabitTracker.Habit storage ref)"}},"id":651,"indexExpression":{"id":650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8658:1:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8639:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage","typeString":"struct HabitTracker.Habit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8617:43:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8691:15:0","subExpression":{"expression":{"id":653,"name":"habit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8692:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit storage pointer"}},"id":654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8698:8:0","memberName":"archived","nodeType":"MemberAccess","referencedDeclaration":40,"src":"8692:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":656,"name":"habit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8710:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit storage pointer"}},"id":657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8716:14:0","memberName":"createdAtEpoch","nodeType":"MemberAccess","referencedDeclaration":38,"src":"8710:20:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8734:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8710:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8691:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":706,"nodeType":"IfStatement","src":"8687:712:0","trueBody":{"id":705,"nodeType":"Block","src":"8737:662:0","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"mask","nameLocation":"8763:4:0","nodeType":"VariableDeclaration","scope":705,"src":"8755:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"8755:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":666,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8770:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8775:1:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"8770:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8755:21:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"fundedBitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"8815:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":668,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"8830:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8815:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8838:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8815:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":704,"nodeType":"IfStatement","src":"8811:574:0","trueBody":{"id":703,"nodeType":"Block","src":"8841:544:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":672,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"8898:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8904:14:0","memberName":"depositBalance","nodeType":"MemberAccess","referencedDeclaration":27,"src":"8898:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":674,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"8922:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8898:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":701,"nodeType":"Block","src":"9285:82:0","statements":[{"id":700,"nodeType":"UncheckedBlock","src":"9311:34:0","statements":[{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9323:19:0","subExpression":{"id":697,"name":"insufficientCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"9323:17:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":699,"nodeType":"ExpressionStatement","src":"9323:19:0"}]}]},"id":702,"nodeType":"IfStatement","src":"8894:473:0","trueBody":{"id":696,"nodeType":"Block","src":"8937:342:0","statements":[{"id":691,"nodeType":"UncheckedBlock","src":"8963:230:0","statements":[{"expression":{"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":676,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"9003:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9009:14:0","memberName":"depositBalance","nodeType":"MemberAccess","referencedDeclaration":27,"src":"9003:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":679,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"9027:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9003:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":681,"nodeType":"ExpressionStatement","src":"9003:37:0"},{"expression":{"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":682,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"9070:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9076:14:0","memberName":"blockedBalance","nodeType":"MemberAccess","referencedDeclaration":29,"src":"9070:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":685,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"9094:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9070:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":687,"nodeType":"ExpressionStatement","src":"9070:37:0"},{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9153:13:0","subExpression":{"id":688,"name":"fundedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"9153:11:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":690,"nodeType":"ExpressionStatement","src":"9153:13:0"}]},{"expression":{"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":692,"name":"fundedBitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"9218:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":693,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"9234:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9218:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":695,"nodeType":"ExpressionStatement","src":"9218:20:0"}]}}]}}]}},{"id":710,"nodeType":"UncheckedBlock","src":"9412:18:0","statements":[{"expression":{"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9424:3:0","subExpression":{"id":707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9424:1:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":709,"nodeType":"ExpressionStatement","src":"9424:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8590:1:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":641,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8595:5:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"8590:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":712,"initializationExpression":{"assignments":[637],"declarations":[{"constant":false,"id":637,"mutability":"mutable","name":"i","nameLocation":"8583:1:0","nodeType":"VariableDeclaration","scope":712,"src":"8576:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":636,"name":"uint32","nodeType":"ElementaryTypeName","src":"8576:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":639,"initialValue":{"hexValue":"31","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"8576:12:0"},"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"8571:869:0"},{"expression":{"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":713,"name":"funded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"9458:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":717,"indexExpression":{"expression":{"id":714,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"9465:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9469:6:0","memberName":"sender","nodeType":"MemberAccess","src":"9465:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9458:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":718,"indexExpression":{"id":716,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9477:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9458:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":719,"name":"fundedBitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"9486:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9458:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":721,"nodeType":"ExpressionStatement","src":"9458:40:0"},{"eventCall":{"arguments":[{"expression":{"id":723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"9525:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9529:6:0","memberName":"sender","nodeType":"MemberAccess","src":"9525:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9537:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":726,"name":"fundedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"9544:11:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":727,"name":"insufficientCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"9557:17:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":722,"name":"DayPrepared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"9513:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint64_$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (address,uint64,uint32,uint32)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9513:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"EmitStatement","src":"9508:67:0"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"7975:232:0","text":" @notice Prepare the day by locking funds (funded stake) for active habits\n @param epoch The epoch to prepare (must be current day)\n @dev Moves funds from depositBalance to blockedBalance (funded stake)"},"functionSelector":"48cc36b8","id":731,"implemented":true,"kind":"function","modifiers":[],"name":"prepareDay","nameLocation":"8221:10:0","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"epoch","nameLocation":"8239:5:0","nodeType":"VariableDeclaration","scope":731,"src":"8232:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":594,"name":"uint64","nodeType":"ElementaryTypeName","src":"8232:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8231:14:0"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"8255:0:0"},"scope":1011,"src":"8212:1370:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":818,"nodeType":"Block","src":"9821:507:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":739,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"9835:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"epochNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"9844:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9844:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"9835:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"9831:46:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":743,"name":"InvalidEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"9863:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9863:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":745,"nodeType":"RevertStatement","src":"9856:21:0"}},{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"habit","nameLocation":"9901:5:0","nodeType":"VariableDeclaration","scope":818,"src":"9887:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit"},"typeName":{"id":748,"nodeType":"UserDefinedTypeName","pathNode":{"id":747,"name":"Habit","nameLocations":["9887:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"9887:5:0"},"referencedDeclaration":41,"src":"9887:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit"}},"visibility":"internal"}],"id":756,"initialValue":{"baseExpression":{"baseExpression":{"id":750,"name":"habits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"9909:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$_$","typeString":"mapping(address => mapping(uint32 => struct HabitTracker.Habit storage ref))"}},"id":753,"indexExpression":{"expression":{"id":751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"9916:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9920:6:0","memberName":"sender","nodeType":"MemberAccess","src":"9916:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9909:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$","typeString":"mapping(uint32 => struct HabitTracker.Habit storage ref)"}},"id":755,"indexExpression":{"id":754,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"9928:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9909:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage","typeString":"struct HabitTracker.Habit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9887:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":757,"name":"habit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"9950:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit storage pointer"}},"id":758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9956:14:0","memberName":"createdAtEpoch","nodeType":"MemberAccess","referencedDeclaration":38,"src":"9950:20:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9974:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9950:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":761,"name":"habit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"9979:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage_ptr","typeString":"struct HabitTracker.Habit storage pointer"}},"id":762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9985:8:0","memberName":"archived","nodeType":"MemberAccess","referencedDeclaration":40,"src":"9979:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9950:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":767,"nodeType":"IfStatement","src":"9946:71:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":764,"name":"HabitNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"10002:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10002:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":766,"nodeType":"RevertStatement","src":"9995:22:0"}},{"assignments":[769],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"mask","nameLocation":"10044:4:0","nodeType":"VariableDeclaration","scope":818,"src":"10036:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"10036:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":773,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10051:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":771,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"10056:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10051:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10036:27:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":774,"name":"funded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"10077:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":777,"indexExpression":{"expression":{"id":775,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10084:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10088:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10084:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10077:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":779,"indexExpression":{"id":778,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"10096:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10077:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":780,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"10105:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10077:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10113:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10077:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":787,"nodeType":"IfStatement","src":"10073:64:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":784,"name":"DayNotFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10123:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10123:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":786,"nodeType":"RevertStatement","src":"10116:21:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":788,"name":"checked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"10151:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":791,"indexExpression":{"expression":{"id":789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10159:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10163:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10159:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10151:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":793,"indexExpression":{"id":792,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"10171:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10151:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":794,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"10180:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10151:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10188:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10151:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":801,"nodeType":"IfStatement","src":"10147:69:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":798,"name":"AlreadyCheckedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"10198:16:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10198:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":800,"nodeType":"RevertStatement","src":"10191:25:0"}},{"expression":{"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":802,"name":"checked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"10235:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":806,"indexExpression":{"expression":{"id":803,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10243:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10247:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10243:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10235:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":807,"indexExpression":{"id":805,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"10255:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10235:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":808,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"10265:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10235:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":810,"nodeType":"ExpressionStatement","src":"10235:34:0"},{"eventCall":{"arguments":[{"expression":{"id":812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10294:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10298:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10294:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"10306:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":815,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"10315:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":811,"name":"CheckedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"10284:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (address,uint32,uint64)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"EmitStatement","src":"10279:42:0"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"9592:168:0","text":" @notice Check in to a habit for the current day\n @param habitId ID of the habit\n @param epoch The epoch to check in (must be current day)"},"functionSelector":"a0145927","id":819,"implemented":true,"kind":"function","modifiers":[],"name":"checkIn","nameLocation":"9774:7:0","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"habitId","nameLocation":"9789:7:0","nodeType":"VariableDeclaration","scope":819,"src":"9782:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":733,"name":"uint32","nodeType":"ElementaryTypeName","src":"9782:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"epoch","nameLocation":"9805:5:0","nodeType":"VariableDeclaration","scope":819,"src":"9798:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":735,"name":"uint64","nodeType":"ElementaryTypeName","src":"9798:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9781:30:0"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"9821:0:0"},"scope":1011,"src":"9765:563:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":843,"nodeType":"Block","src":"10624:120:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"10638:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":830,"name":"epochNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"10647:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"10638:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":836,"nodeType":"IfStatement","src":"10634:56:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":833,"name":"CannotSettleCurrentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"10666:22:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10666:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":835,"nodeType":"RevertStatement","src":"10659:31:0"}},{"expression":{"arguments":[{"id":838,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"10716:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"10722:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":840,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"10729:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":837,"name":"_settleInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10700:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint64_$_t_uint32_$returns$__$","typeString":"function (address,uint64,uint32)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":842,"nodeType":"ExpressionStatement","src":"10700:37:0"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"10338:214:0","text":" @notice Settle a specific habit for a past day\n @param user Address of habit owner\n @param epoch The epoch to settle (must be past day)\n @param habitId ID of the habit to settle"},"functionSelector":"9c14eb6e","id":844,"implemented":true,"kind":"function","modifiers":[],"name":"settle","nameLocation":"10566:6:0","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"user","nameLocation":"10581:4:0","nodeType":"VariableDeclaration","scope":844,"src":"10573:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"10573:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"epoch","nameLocation":"10594:5:0","nodeType":"VariableDeclaration","scope":844,"src":"10587:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":823,"name":"uint64","nodeType":"ElementaryTypeName","src":"10587:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"habitId","nameLocation":"10608:7:0","nodeType":"VariableDeclaration","scope":844,"src":"10601:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":825,"name":"uint32","nodeType":"ElementaryTypeName","src":"10601:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10572:44:0"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"10624:0:0"},"scope":1011,"src":"10557:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":860,"nodeType":"Block","src":"11173:54:0","statements":[{"expression":{"arguments":[{"id":855,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"11199:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":856,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"11205:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":857,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"11212:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":854,"name":"_settleInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"11183:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint64_$_t_uint32_$returns$__$","typeString":"function (address,uint64,uint32)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"ExpressionStatement","src":"11183:37:0"}]},"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"10754:342:0","text":" @notice Force settle a specific habit without epoch validation (TESTING ONLY)\n @dev Bypasses the \"cannot settle current day\" check - use with caution\n @param user Address of habit owner\n @param epoch The epoch to settle (can be any epoch, including current)\n @param habitId ID of the habit to settle"},"functionSelector":"68188762","id":861,"implemented":true,"kind":"function","modifiers":[],"name":"forceSettle","nameLocation":"11110:11:0","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"user","nameLocation":"11130:4:0","nodeType":"VariableDeclaration","scope":861,"src":"11122:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"11122:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"epoch","nameLocation":"11143:5:0","nodeType":"VariableDeclaration","scope":861,"src":"11136:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":848,"name":"uint64","nodeType":"ElementaryTypeName","src":"11136:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"habitId","nameLocation":"11157:7:0","nodeType":"VariableDeclaration","scope":861,"src":"11150:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":850,"name":"uint32","nodeType":"ElementaryTypeName","src":"11150:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11121:44:0"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[],"src":"11173:0:0"},"scope":1011,"src":"11101:126:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1004,"nodeType":"Block","src":"11704:1386:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":871,"name":"habits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"11718:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$_$","typeString":"mapping(address => mapping(uint32 => struct HabitTracker.Habit storage ref))"}},"id":873,"indexExpression":{"id":872,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"11725:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11718:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_struct$_Habit_$41_storage_$","typeString":"mapping(uint32 => struct HabitTracker.Habit storage ref)"}},"id":875,"indexExpression":{"id":874,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"11731:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11718:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_Habit_$41_storage","typeString":"struct HabitTracker.Habit storage ref"}},"id":876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11740:14:0","memberName":"createdAtEpoch","nodeType":"MemberAccess","referencedDeclaration":38,"src":"11718:36:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11758:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11718:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":882,"nodeType":"IfStatement","src":"11714:69:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":879,"name":"HabitNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"11768:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11768:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":881,"nodeType":"RevertStatement","src":"11761:22:0"}},{"assignments":[884],"declarations":[{"constant":false,"id":884,"mutability":"mutable","name":"mask","nameLocation":"11810:4:0","nodeType":"VariableDeclaration","scope":1004,"src":"11802:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"11802:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":888,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11817:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":886,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"11822:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11817:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11802:27:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":889,"name":"funded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"11843:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":891,"indexExpression":{"id":890,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"11850:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11843:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":893,"indexExpression":{"id":892,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11856:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11843:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":894,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"11865:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11843:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11873:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11843:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":901,"nodeType":"IfStatement","src":"11839:58:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":898,"name":"DayNotFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"11883:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11883:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":900,"nodeType":"RevertStatement","src":"11876:21:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":902,"name":"settled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"11911:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":904,"indexExpression":{"id":903,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"11919:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11911:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":906,"indexExpression":{"id":905,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11925:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11911:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":907,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"11934:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11911:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11942:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11911:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":914,"nodeType":"IfStatement","src":"11907:61:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":911,"name":"AlreadySettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"11952:14:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11952:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":913,"nodeType":"RevertStatement","src":"11945:23:0"}},{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":915,"name":"settled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"11987:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":918,"indexExpression":{"id":916,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"11995:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11987:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":919,"indexExpression":{"id":917,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"12001:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11987:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":920,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"12011:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11987:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":922,"nodeType":"ExpressionStatement","src":"11987:28:0"},{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"state","nameLocation":"12043:5:0","nodeType":"VariableDeclaration","scope":1004,"src":"12025:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState"},"typeName":{"id":924,"nodeType":"UserDefinedTypeName","pathNode":{"id":923,"name":"UserState","nameLocations":["12025:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":34,"src":"12025:9:0"},"referencedDeclaration":34,"src":"12025:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState"}},"visibility":"internal"}],"id":929,"initialValue":{"baseExpression":{"id":926,"name":"userStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"12051:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserState_$34_storage_$","typeString":"mapping(address => struct HabitTracker.UserState storage ref)"}},"id":928,"indexExpression":{"id":927,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"12062:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12051:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage","typeString":"struct HabitTracker.UserState storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12025:42:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":930,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"12143:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12149:14:0","memberName":"blockedBalance","nodeType":"MemberAccess","referencedDeclaration":29,"src":"12143:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":932,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"12166:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12143:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":937,"nodeType":"IfStatement","src":"12139:70:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":934,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"12188:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12188:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":936,"nodeType":"RevertStatement","src":"12181:28:0"}},{"id":944,"nodeType":"UncheckedBlock","src":"12219:52:0","statements":[{"expression":{"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":938,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"12231:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12237:14:0","memberName":"blockedBalance","nodeType":"MemberAccess","referencedDeclaration":29,"src":"12231:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":941,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"12255:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12231:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":943,"nodeType":"ExpressionStatement","src":"12231:37:0"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":945,"name":"checked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"12293:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint64 => uint256))"}},"id":947,"indexExpression":{"id":946,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"12301:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12293:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint256_$","typeString":"mapping(uint64 => uint256)"}},"id":949,"indexExpression":{"id":948,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"12307:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12293:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":950,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"12316:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12293:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12324:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12293:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1002,"nodeType":"Block","src":"12899:185:0","statements":[{"expression":{"arguments":[{"id":991,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"12982:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"12992:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":990,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"12972:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12972:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"12972:34:0"},{"eventCall":{"arguments":[{"id":996,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"13037:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":997,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"13043:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":998,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"13052:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":999,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"13059:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":995,"name":"SettledFail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"13025:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint32_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (address,uint32,uint64,uint256)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13025:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"EmitStatement","src":"13020:53:0"}]},"id":1003,"nodeType":"IfStatement","src":"12289:795:0","trueBody":{"id":989,"nodeType":"Block","src":"12327:566:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":956,"name":"stakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"12506:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}],"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12498:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"12498:7:0","typeDescriptions":{}}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12498:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12533:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12525:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"12525:7:0","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12525:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12498:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":980,"nodeType":"Block","src":"12639:174:0","statements":[{"id":979,"nodeType":"UncheckedBlock","src":"12745:54:0","statements":[{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":973,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"12757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserState_$34_storage_ptr","typeString":"struct HabitTracker.UserState storage pointer"}},"id":975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12763:16:0","memberName":"claimableBalance","nodeType":"MemberAccess","referencedDeclaration":31,"src":"12757:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":976,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"12783:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12757:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"nodeType":"ExpressionStatement","src":"12757:39:0"}]}]},"id":981,"nodeType":"IfStatement","src":"12494:319:0","trueBody":{"id":972,"nodeType":"Block","src":"12537:96:0","statements":[{"expression":{"arguments":[{"id":968,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"12598:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"12604:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":963,"name":"stakingAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"12555:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IStakingAdapter_$1409","typeString":"contract IStakingAdapter"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12570:5:0","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"12555:20:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) payable external"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":966,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"12583:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12555:42:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$returns$__$value","typeString":"function (address,uint256) payable external"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12555:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"12555:63:0"}]}},{"eventCall":{"arguments":[{"id":983,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"12846:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":984,"name":"habitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"12852:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":985,"name":"epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"12861:5:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":986,"name":"STAKE_PER_DAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"12868:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":982,"name":"SettledSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"12831:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint32_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (address,uint32,uint64,uint256)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12831:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"EmitStatement","src":"12826:56:0"}]}}]},"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"11237:385:0","text":" @notice Internal settlement logic without epoch validation\n @param user Address of habit owner\n @param epoch The epoch to settle\n @param habitId ID of the habit to settle\n @dev Settlement flow:\n - SUCCESS: User reward is staked externally (yield stake) to generate yield rewards\n - FAIL: Funded stake is sent to treasury (slashed)"},"id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"_settleInternal","nameLocation":"11636:15:0","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"user","nameLocation":"11660:4:0","nodeType":"VariableDeclaration","scope":1005,"src":"11652:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"11652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"epoch","nameLocation":"11673:5:0","nodeType":"VariableDeclaration","scope":1005,"src":"11666:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":865,"name":"uint64","nodeType":"ElementaryTypeName","src":"11666:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"habitId","nameLocation":"11687:7:0","nodeType":"VariableDeclaration","scope":1005,"src":"11680:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":867,"name":"uint32","nodeType":"ElementaryTypeName","src":"11680:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11651:44:0"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"11704:0:0"},"scope":1011,"src":"11627:1463:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"13264:2:0","statements":[]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"13155:77:0","text":" @notice Allow receiving native tokens from staking adapter"},"id":1010,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[],"src":"13244:2:0"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"13264:0:0"},"scope":1011,"src":"13237:29:0","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1012,"src":"761:12507:0","usedErrors":[151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181],"usedEvents":[81,91,99,105,115,123,133,143,149]}],"src":"32:13238:0"}},"contracts/adapters/MoonwellAdapter.sol":{"id":1,"ast":{"absolutePath":"contracts/adapters/MoonwellAdapter.sol","exportedSymbols":{"IComptroller":[1084],"IERC20":[1041],"IMTokenNative":[1072],"IStakingAdapter":[1409],"MoonwellAdapter":[1367]},"id":1368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1013,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:1"},{"absolutePath":"contracts/interfaces/IStakingAdapter.sol","file":"../interfaces/IStakingAdapter.sol","id":1014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1368,"sourceUnit":1410,"src":"58:43:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"103:42:1","text":" @notice Minimal ERC20 interface"},"fullyImplemented":false,"id":1041,"linearizedBaseContracts":[1041],"name":"IERC20","nameLocation":"156:6:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"095ea7b3","id":1024,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"178:7:1","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"spender","nameLocation":"194:7:1","nodeType":"VariableDeclaration","scope":1024,"src":"186:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"186:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"amount","nameLocation":"211:6:1","nodeType":"VariableDeclaration","scope":1024,"src":"203:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"203:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"185:33:1"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"237:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1021,"name":"bool","nodeType":"ElementaryTypeName","src":"237:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"236:6:1"},"scope":1041,"src":"169:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1031,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"257:9:1","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"account","nameLocation":"275:7:1","nodeType":"VariableDeclaration","scope":1031,"src":"267:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"267:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"266:17:1"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"307:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"306:9:1"},"scope":1041,"src":"248:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":1040,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"330:8:1","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"to","nameLocation":"347:2:1","nodeType":"VariableDeclaration","scope":1040,"src":"339:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"339:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"amount","nameLocation":"359:6:1","nodeType":"VariableDeclaration","scope":1040,"src":"351:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"338:28:1"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"385:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1037,"name":"bool","nodeType":"ElementaryTypeName","src":"385:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"384:6:1"},"scope":1041,"src":"321:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1368,"src":"146:247:1","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IMTokenNative","contractDependencies":[],"contractKind":"interface","documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"395:81:1","text":" @notice Moonwell mToken interface (native GLMR version - CEther-style)"},"fullyImplemented":false,"id":1072,"linearizedBaseContracts":[1072],"name":"IMTokenNative","nameLocation":"487:13:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1249c58b","id":1045,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"516:4:1","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"520:2:1"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"539:0:1"},"scope":1072,"src":"507:33:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"db006a75","id":1052,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"590:6:1","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"redeemTokens","nameLocation":"605:12:1","nodeType":"VariableDeclaration","scope":1052,"src":"597:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:22:1"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"637:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:9:1"},"scope":1072,"src":"581:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"852a12e3","id":1059,"implemented":false,"kind":"function","modifiers":[],"name":"redeemUnderlying","nameLocation":"660:16:1","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"redeemAmount","nameLocation":"685:12:1","nodeType":"VariableDeclaration","scope":1059,"src":"677:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"676:22:1"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"717:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"717:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"716:9:1"},"scope":1072,"src":"651:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1066,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"740:9:1","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"account","nameLocation":"758:7:1","nodeType":"VariableDeclaration","scope":1066,"src":"750:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"750:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"749:17:1"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1066,"src":"790:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"789:9:1"},"scope":1072,"src":"731:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"182df0f5","id":1071,"implemented":false,"kind":"function","modifiers":[],"name":"exchangeRateStored","nameLocation":"813:18:1","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"831:2:1"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"857:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"856:9:1"},"scope":1072,"src":"804:62:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1368,"src":"477:391:1","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IComptroller","contractDependencies":[],"contractKind":"interface","documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"870:49:1","text":" @notice Moonwell Comptroller interface"},"fullyImplemented":false,"id":1084,"linearizedBaseContracts":[1084],"name":"IComptroller","nameLocation":"930:12:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"744532ae","id":1083,"implemented":false,"kind":"function","modifiers":[],"name":"claimReward","nameLocation":"958:11:1","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"rewardType","nameLocation":"976:10:1","nodeType":"VariableDeclaration","scope":1083,"src":"970:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1074,"name":"uint8","nodeType":"ElementaryTypeName","src":"970:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"holder","nameLocation":"996:6:1","nodeType":"VariableDeclaration","scope":1083,"src":"988:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"mTokens","nameLocation":"1023:7:1","nodeType":"VariableDeclaration","scope":1083,"src":"1004:26:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"1004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1079,"nodeType":"ArrayTypeName","src":"1004:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"969:62:1"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[],"src":"1040:0:1"},"scope":1084,"src":"949:92:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1368,"src":"920:123:1","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1086,"name":"IStakingAdapter","nameLocations":["1585:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":1409,"src":"1585:15:1"},"id":1087,"nodeType":"InheritanceSpecifier","src":"1585:15:1"}],"canonicalName":"MoonwellAdapter","contractDependencies":[],"contractKind":"contract","documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"1045:511:1","text":" @title MoonwellAdapter\n @notice Adapter for HabitTracker to create yield stakes in Moonwell on Moonbeam\n @dev Supports native GLMR staking via mGLMR market\n \n @dev Terminology:\n - Yield Stake: User rewards from successful habits staked here (userStakes)\n - Yield Rewards: Additional rewards generated from Moonwell (WELL tokens + supply APY)\n \n @dev When user completes a habit successfully, their reward is sent here as a yield stake\n to generate additional yield rewards over time"},"fullyImplemented":true,"id":1367,"linearizedBaseContracts":[1367,1409],"name":"MoonwellAdapter","nameLocation":"1566:15:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c3b6f939","id":1089,"mutability":"immutable","name":"mToken","nameLocation":"1632:6:1","nodeType":"VariableDeclaration","scope":1367,"src":"1607:31:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5fe3b567","id":1091,"mutability":"immutable","name":"comptroller","nameLocation":"1693:11:1","nodeType":"VariableDeclaration","scope":1367,"src":"1668:36:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"836ee1c0","id":1093,"mutability":"immutable","name":"habitTracker","nameLocation":"1761:12:1","nodeType":"VariableDeclaration","scope":1367,"src":"1736:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"1736:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8da7ad23","id":1097,"mutability":"mutable","name":"userStakes","nameLocation":"1846:10:1","nodeType":"VariableDeclaration","scope":1367,"src":"1811:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1096,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1811:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90","id":1105,"name":"Staked","nameLocation":"1912:6:1","nodeType":"EventDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1935:4:1","nodeType":"VariableDeclaration","scope":1105,"src":"1919:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"1919:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1949:6:1","nodeType":"VariableDeclaration","scope":1105,"src":"1941:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1941:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"indexed":false,"mutability":"mutable","name":"mTokens","nameLocation":"1965:7:1","nodeType":"VariableDeclaration","scope":1105,"src":"1957:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1957:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1918:55:1"},"src":"1906:68:1"},{"anonymous":false,"eventSelector":"7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e","id":1113,"name":"Unstaked","nameLocation":"1985:8:1","nodeType":"EventDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2010:4:1","nodeType":"VariableDeclaration","scope":1113,"src":"1994:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"1994:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2024:6:1","nodeType":"VariableDeclaration","scope":1113,"src":"2016:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"indexed":false,"mutability":"mutable","name":"mTokens","nameLocation":"2040:7:1","nodeType":"VariableDeclaration","scope":1113,"src":"2032:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2032:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1993:55:1"},"src":"1979:70:1"},{"anonymous":false,"eventSelector":"fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe","id":1119,"name":"RewardsClaimed","nameLocation":"2060:14:1","nodeType":"EventDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2091:4:1","nodeType":"VariableDeclaration","scope":1119,"src":"2075:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2105:6:1","nodeType":"VariableDeclaration","scope":1119,"src":"2097:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:38:1"},"src":"2054:59:1"},{"errorSelector":"c39fa004","id":1121,"name":"OnlyHabitTracker","nameLocation":"2125:16:1","nodeType":"ErrorDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[],"src":"2141:2:1"},"src":"2119:25:1"},{"errorSelector":"07637bd8","id":1123,"name":"MintFailed","nameLocation":"2155:10:1","nodeType":"ErrorDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"2165:2:1"},"src":"2149:19:1"},{"errorSelector":"bb1205c2","id":1125,"name":"RedeemFailed","nameLocation":"2179:12:1","nodeType":"ErrorDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[],"src":"2191:2:1"},"src":"2173:21:1"},{"errorSelector":"2c5211c6","id":1127,"name":"InvalidAmount","nameLocation":"2205:13:1","nodeType":"ErrorDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[],"src":"2218:2:1"},"src":"2199:22:1"},{"body":{"id":1138,"nodeType":"Block","src":"2255:85:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2269:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2269:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1131,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2283:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2269:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"2265:57:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1133,"name":"OnlyHabitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2304:16:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2304:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1135,"nodeType":"RevertStatement","src":"2297:25:1"}},{"id":1137,"nodeType":"PlaceholderStatement","src":"2332:1:1"}]},"id":1139,"name":"onlyHabitTracker","nameLocation":"2236:16:1","nodeType":"ModifierDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"2252:2:1"},"src":"2227:113:1","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"2601:107:1","statements":[{"expression":{"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1149,"name":"mToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2611:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1150,"name":"_mToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"2620:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2611:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1152,"nodeType":"ExpressionStatement","src":"2611:16:1"},{"expression":{"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1153,"name":"comptroller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2637:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1154,"name":"_comptroller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"2651:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2637:26:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1156,"nodeType":"ExpressionStatement","src":"2637:26:1"},{"expression":{"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1157,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2673:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1158,"name":"_habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2688:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2673:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1160,"nodeType":"ExpressionStatement","src":"2673:28:1"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"2346:176:1","text":" @param _mToken Moonwell mGLMR token address\n @param _comptroller Moonwell Comptroller address\n @param _habitTracker HabitTracker contract address"},"id":1162,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"_mToken","nameLocation":"2547:7:1","nodeType":"VariableDeclaration","scope":1162,"src":"2539:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"2539:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"_comptroller","nameLocation":"2564:12:1","nodeType":"VariableDeclaration","scope":1162,"src":"2556:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"2556:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"_habitTracker","nameLocation":"2586:13:1","nodeType":"VariableDeclaration","scope":1162,"src":"2578:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"2578:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2538:62:1"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"2601:0:1"},"scope":1367,"src":"2527:181:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1378],"body":{"id":1215,"nodeType":"Block","src":"3159:403:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1172,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3173:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3177:5:1","memberName":"value","nodeType":"MemberAccess","src":"3173:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1174,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3186:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3173:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1179,"nodeType":"IfStatement","src":"3169:47:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1176,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3201:13:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3201:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1178,"nodeType":"RevertStatement","src":"3194:22:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3230:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3240:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3230:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1186,"nodeType":"IfStatement","src":"3226:39:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1183,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3250:13:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3250:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1185,"nodeType":"RevertStatement","src":"3243:22:1"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1188,"name":"mToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"3350:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1187,"name":"IMTokenNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3336:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMTokenNative_$1072_$","typeString":"type(contract IMTokenNative)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMTokenNative_$1072","typeString":"contract IMTokenNative"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3358:4:1","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"3336:26:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1191,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3370:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3336:41:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"ExpressionStatement","src":"3336:43:1"},{"expression":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1195,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"3445:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1197,"indexExpression":{"id":1196,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3456:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3445:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1198,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3465:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3445:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1200,"nodeType":"ExpressionStatement","src":"3445:26:1"},{"eventCall":{"arguments":[{"id":1202,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3494:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3500:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":1210,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3548:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_MoonwellAdapter_$1367","typeString":"contract MoonwellAdapter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MoonwellAdapter_$1367","typeString":"contract MoonwellAdapter"}],"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3540:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"3540:7:1","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1205,"name":"mToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"3522:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1204,"name":"IMTokenNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3508:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMTokenNative_$1072_$","typeString":"type(contract IMTokenNative)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMTokenNative_$1072","typeString":"contract IMTokenNative"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3530:9:1","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1066,"src":"3508:31:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1201,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"3487:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3487:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1214,"nodeType":"EmitStatement","src":"3482:73:1"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"2714:361:1","text":" @notice Create yield stake by staking user rewards into Moonwell\n @param user Address of the user whose rewards are being staked\n @param amount Amount of GLMR to stake (user's earned reward)\n @dev msg.value must equal amount (native token)\n @dev This converts user rewards into yield stakes that generate yield rewards"},"functionSelector":"adc9772e","id":1216,"implemented":true,"kind":"function","modifiers":[{"id":1170,"kind":"modifierInvocation","modifierName":{"id":1169,"name":"onlyHabitTracker","nameLocations":["3142:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"3142:16:1"},"nodeType":"ModifierInvocation","src":"3142:16:1"}],"name":"stake","nameLocation":"3089:5:1","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"user","nameLocation":"3103:4:1","nodeType":"VariableDeclaration","scope":1216,"src":"3095:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"3095:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"amount","nameLocation":"3117:6:1","nodeType":"VariableDeclaration","scope":1216,"src":"3109:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3109:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3094:30:1"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"3159:0:1"},"scope":1367,"src":"3080:482:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1386],"body":{"id":1284,"nodeType":"Block","src":"4021:606:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"4035:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4035:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"4031:39:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1229,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"4055:13:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4055:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1231,"nodeType":"RevertStatement","src":"4048:22:1"}},{"assignments":[1234],"declarations":[{"constant":false,"id":1234,"mutability":"mutable","name":"err","nameLocation":"4153:3:1","nodeType":"VariableDeclaration","scope":1284,"src":"4145:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4145:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1241,"initialValue":{"arguments":[{"id":1239,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"4198:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1236,"name":"mToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4173:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1235,"name":"IMTokenNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4159:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMTokenNative_$1072_$","typeString":"type(contract IMTokenNative)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4159:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMTokenNative_$1072","typeString":"contract IMTokenNative"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4181:16:1","memberName":"redeemUnderlying","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"4159:38:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) external returns (uint256)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4159:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4145:60:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"4219:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4226:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4219:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1248,"nodeType":"IfStatement","src":"4215:35:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1245,"name":"RedeemFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"4236:12:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1247,"nodeType":"RevertStatement","src":"4229:21:1"}},{"expression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1249,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"4308:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1251,"indexExpression":{"id":1250,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"4319:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4308:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1252,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"4328:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4308:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1254,"nodeType":"ExpressionStatement","src":"4308:26:1"},{"assignments":[1256,null],"declarations":[{"constant":false,"id":1256,"mutability":"mutable","name":"success","nameLocation":"4440:7:1","nodeType":"VariableDeclaration","scope":1284,"src":"4435:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1255,"name":"bool","nodeType":"ElementaryTypeName","src":"4435:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1263,"initialValue":{"arguments":[{"hexValue":"","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4486:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1257,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4453:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4466:4:1","memberName":"call","nodeType":"MemberAccess","src":"4453:17:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1259,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"4478:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4453:32:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4453:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4434:55:1"},{"condition":{"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4503:8:1","subExpression":{"id":1264,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"4504:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1269,"nodeType":"IfStatement","src":"4499:35:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1266,"name":"RedeemFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"4520:12:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4520:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1268,"nodeType":"RevertStatement","src":"4513:21:1"}},{"eventCall":{"arguments":[{"id":1271,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"4559:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1272,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"4565:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":1279,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"4613:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_MoonwellAdapter_$1367","typeString":"contract MoonwellAdapter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MoonwellAdapter_$1367","typeString":"contract MoonwellAdapter"}],"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4605:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"4605:7:1","typeDescriptions":{}}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4605:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1274,"name":"mToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4587:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1273,"name":"IMTokenNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4573:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMTokenNative_$1072_$","typeString":"type(contract IMTokenNative)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4573:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMTokenNative_$1072","typeString":"contract IMTokenNative"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4595:9:1","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1066,"src":"4573:31:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4573:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1270,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"4550:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"EmitStatement","src":"4545:75:1"}]},"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"3568:375:1","text":" @notice Unstake GLMR from Moonwell (redeem yield stake + accumulated yield rewards)\n @param user Address of the user whose rewards are being unstaked\n @param amount Amount of underlying GLMR to unstake\n @dev Redeems mGLMR and sends GLMR back to HabitTracker\n @dev Returns both yield stake principal and any accumulated yield rewards"},"functionSelector":"c2a672e0","id":1285,"implemented":true,"kind":"function","modifiers":[{"id":1224,"kind":"modifierInvocation","modifierName":{"id":1223,"name":"onlyHabitTracker","nameLocations":["4004:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"4004:16:1"},"nodeType":"ModifierInvocation","src":"4004:16:1"}],"name":"unstake","nameLocation":"3957:7:1","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"user","nameLocation":"3973:4:1","nodeType":"VariableDeclaration","scope":1285,"src":"3965:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"3965:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"amount","nameLocation":"3987:6:1","nodeType":"VariableDeclaration","scope":1285,"src":"3979:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"3979:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3964:30:1"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"4021:0:1"},"scope":1367,"src":"3948:679:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1392],"body":{"id":1336,"nodeType":"Block","src":"4992:539:1","statements":[{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"markets","nameLocation":"5019:7:1","nodeType":"VariableDeclaration","scope":1336,"src":"5002:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"5002:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1296,"nodeType":"ArrayTypeName","src":"5002:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1303,"initialValue":{"arguments":[{"hexValue":"31","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5043:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5029:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"5033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1299,"nodeType":"ArrayTypeName","src":"5033:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5002:43:1"},{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1304,"name":"markets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5055:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1306,"indexExpression":{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5063:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5055:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1307,"name":"mToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"5068:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5055:19:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1309,"nodeType":"ExpressionStatement","src":"5055:19:1"},{"clauses":[{"block":{"id":1329,"nodeType":"Block","src":"5212:235:1","statements":[{"eventCall":{"arguments":[{"expression":{"id":1322,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5365:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5369:6:1","memberName":"sender","nodeType":"MemberAccess","src":"5365:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5377:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1321,"name":"RewardsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"5350:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1326,"nodeType":"EmitStatement","src":"5345:34:1"},{"expression":{"hexValue":"30","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5400:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1292,"id":1328,"nodeType":"Return","src":"5393:8:1"}]},"errorName":"","id":1330,"nodeType":"TryCatchClause","src":"5212:235:1"},{"block":{"id":1333,"nodeType":"Block","src":"5454:71:1","statements":[{"expression":{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5475:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1292,"id":1332,"nodeType":"Return","src":"5468:8:1"}]},"errorName":"","id":1334,"nodeType":"TryCatchClause","src":"5448:77:1"}],"externalCall":{"arguments":[{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5185:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":1317,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5196:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_MoonwellAdapter_$1367","typeString":"contract MoonwellAdapter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MoonwellAdapter_$1367","typeString":"contract MoonwellAdapter"}],"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5188:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"5188:7:1","typeDescriptions":{}}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5188:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1319,"name":"markets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5203:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"arguments":[{"id":1311,"name":"comptroller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5160:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1310,"name":"IComptroller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"5147:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IComptroller_$1084_$","typeString":"type(contract IComptroller)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5147:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IComptroller_$1084","typeString":"contract IComptroller"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5173:11:1","memberName":"claimReward","nodeType":"MemberAccess","referencedDeclaration":1083,"src":"5147:37:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint8_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (uint8,address,address[] memory) external"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5147:64:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1335,"nodeType":"TryStatement","src":"5143:382:1"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"4633:278:1","text":" @notice Claim yield rewards (WELL tokens) from Moonwell\n @return claimed Amount of yield rewards claimed (0 if none)\n @dev Best-effort claim; returns 0 if rewards not active\n @dev Yield rewards = WELL tokens earned from supplying to Moonwell"},"functionSelector":"372500ab","id":1337,"implemented":true,"kind":"function","modifiers":[{"id":1289,"kind":"modifierInvocation","modifierName":{"id":1288,"name":"onlyHabitTracker","nameLocations":["4949:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"4949:16:1"},"nodeType":"ModifierInvocation","src":"4949:16:1"}],"name":"claimRewards","nameLocation":"4925:12:1","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[],"src":"4937:2:1"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"claimed","nameLocation":"4983:7:1","nodeType":"VariableDeclaration","scope":1337,"src":"4975:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"4975:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4974:17:1"},"scope":1367,"src":"4916:615:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1400],"body":{"id":1349,"nodeType":"Block","src":"5824:181:1","statements":[{"expression":{"baseExpression":{"id":1345,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"5983:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1347,"indexExpression":{"id":1346,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"5994:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5983:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1344,"id":1348,"nodeType":"Return","src":"5976:22:1"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"5537:205:1","text":" @notice Get user's yield stake amount (in underlying GLMR)\n @param who Address to check\n @return staked Amount of GLMR in yield stake (principal only, excludes yield rewards)"},"functionSelector":"4da6a556","id":1350,"implemented":true,"kind":"function","modifiers":[],"name":"getStakedAmount","nameLocation":"5756:15:1","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"who","nameLocation":"5780:3:1","nodeType":"VariableDeclaration","scope":1350,"src":"5772:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"5772:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5771:13:1"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"staked","nameLocation":"5816:6:1","nodeType":"VariableDeclaration","scope":1350,"src":"5808:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"5808:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5807:16:1"},"scope":1367,"src":"5747:258:1","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1408],"body":{"id":1360,"nodeType":"Block","src":"6402:59:1","statements":[{"expression":{"hexValue":"30","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6419:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1357,"id":1359,"nodeType":"Return","src":"6412:8:1"}]},"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"6011:300:1","text":" @notice Get pending yield rewards (not supported by Moonwell directly)\n @return pending Always returns 0\n @dev Moonwell doesn't expose claimable yield rewards on-chain; use off-chain calculation\n @dev Yield rewards accumulate automatically in mToken exchange rate"},"functionSelector":"f6ed2017","id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"getPendingRewards","nameLocation":"6325:17:1","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"6343:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"6343:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6342:19:1"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"pending","nameLocation":"6393:7:1","nodeType":"VariableDeclaration","scope":1361,"src":"6385:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"6385:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6384:17:1"},"scope":1367,"src":"6316:145:1","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":1365,"nodeType":"Block","src":"6572:2:1","statements":[]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"6467:73:1","text":" @notice Allow receiving GLMR from Moonwell redemptions"},"id":1366,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"6552:2:1"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"6572:0:1"},"scope":1367,"src":"6545:29:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1368,"src":"1557:5019:1","usedErrors":[1121,1123,1125,1127],"usedEvents":[1105,1113,1119]}],"src":"32:6546:1"}},"contracts/interfaces/IStakingAdapter.sol":{"id":2,"ast":{"absolutePath":"contracts/interfaces/IStakingAdapter.sol","exportedSymbols":{"IStakingAdapter":[1409]},"id":1410,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1369,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakingAdapter","contractDependencies":[],"contractKind":"interface","documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"58:335:2","text":" @title IStakingAdapter\n @notice Chain-agnostic interface for external staking protocols\n @dev Allows HabitTracker to integrate with any staking protocol\n \n @dev Terminology:\n - Yield Stake: User rewards staked in external protocol (principal)\n - Yield Rewards: Additional rewards generated from external protocol"},"fullyImplemented":false,"id":1409,"linearizedBaseContracts":[1409],"name":"IStakingAdapter","nameLocation":"404:15:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"426:291:2","text":" @notice Create yield stake by staking user rewards into external protocol\n @param user Address of the user whose rewards are being staked\n @param amount Amount to stake (user's earned rewards)\n @dev For native token staking, msg.value should equal amount"},"functionSelector":"adc9772e","id":1378,"implemented":false,"kind":"function","modifiers":[],"name":"stake","nameLocation":"731:5:2","nodeType":"FunctionDefinition","parameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"user","nameLocation":"745:4:2","nodeType":"VariableDeclaration","scope":1378,"src":"737:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"amount","nameLocation":"759:6:2","nodeType":"VariableDeclaration","scope":1378,"src":"751:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"736:30:2"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[],"src":"783:0:2"},"scope":1409,"src":"722:62:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"790:290:2","text":" @notice Unstake from external protocol (yield stake + yield rewards)\n @param user Address of the user whose rewards are being unstaked\n @param amount Amount to unstake\n @dev Unstaked tokens (principal + yield rewards) should be sent back to HabitTracker"},"functionSelector":"c2a672e0","id":1386,"implemented":false,"kind":"function","modifiers":[],"name":"unstake","nameLocation":"1094:7:2","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"user","nameLocation":"1110:4:2","nodeType":"VariableDeclaration","scope":1386,"src":"1102:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"amount","nameLocation":"1124:6:2","nodeType":"VariableDeclaration","scope":1386,"src":"1116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1101:30:2"},"returnParameters":{"id":1385,"nodeType":"ParameterList","parameters":[],"src":"1140:0:2"},"scope":1409,"src":"1085:56:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"1147:205:2","text":" @notice Claim accumulated yield rewards from external protocol\n @return claimed Amount of yield rewards claimed\n @dev Returns 0 if no yield rewards available or not supported"},"functionSelector":"372500ab","id":1392,"implemented":false,"kind":"function","modifiers":[],"name":"claimRewards","nameLocation":"1366:12:2","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"1378:2:2"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"claimed","nameLocation":"1407:7:2","nodeType":"VariableDeclaration","scope":1392,"src":"1399:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1398:17:2"},"scope":1409,"src":"1357:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"1422:198:2","text":" @notice Get total yield stake amount for an address (principal only)\n @param who Address to check\n @return staked Total yield stake by address (excludes yield rewards)"},"functionSelector":"4da6a556","id":1400,"implemented":false,"kind":"function","modifiers":[],"name":"getStakedAmount","nameLocation":"1634:15:2","nodeType":"FunctionDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"who","nameLocation":"1658:3:2","nodeType":"VariableDeclaration","scope":1400,"src":"1650:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1649:13:2"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"staked","nameLocation":"1694:6:2","nodeType":"VariableDeclaration","scope":1400,"src":"1686:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1685:16:2"},"scope":1409,"src":"1625:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"1708:208:2","text":" @notice Get pending unclaimed yield rewards for an address\n @param who Address to check\n @return pending Pending yield rewards\n @dev Returns 0 if not supported by protocol"},"functionSelector":"f6ed2017","id":1408,"implemented":false,"kind":"function","modifiers":[],"name":"getPendingRewards","nameLocation":"1930:17:2","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"who","nameLocation":"1956:3:2","nodeType":"VariableDeclaration","scope":1408,"src":"1948:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:13:2"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"pending","nameLocation":"1992:7:2","nodeType":"VariableDeclaration","scope":1408,"src":"1984:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1984:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1983:17:2"},"scope":1409,"src":"1921:80:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1410,"src":"394:1609:2","usedErrors":[],"usedEvents":[]}],"src":"32:1973:2"}},"contracts/mocks/MockStakingRewards.sol":{"id":3,"ast":{"absolutePath":"contracts/mocks/MockStakingRewards.sol","exportedSymbols":{"IStakingAdapter":[1409],"MockStakingRewards":[1770]},"id":1771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1411,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"contracts/interfaces/IStakingAdapter.sol","file":"../interfaces/IStakingAdapter.sol","id":1412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1771,"sourceUnit":1410,"src":"58:43:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1414,"name":"IStakingAdapter","nameLocations":["311:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":1409,"src":"311:15:3"},"id":1415,"nodeType":"InheritanceSpecifier","src":"311:15:3"}],"canonicalName":"MockStakingRewards","contractDependencies":[],"contractKind":"contract","documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"103:176:3","text":" @title MockStakingRewards\n @notice Simple mock staking contract for testing on Passet Hub\n @dev Linear reward rate: rewards = staked * ratePerSecond * timeStaked"},"fullyImplemented":true,"id":1770,"linearizedBaseContracts":[1770,1409],"name":"MockStakingRewards","nameLocation":"289:18:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8eff1a98","id":1417,"mutability":"immutable","name":"ratePerSecond","nameLocation":"358:13:3","nodeType":"VariableDeclaration","scope":1770,"src":"333:38:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"836ee1c0","id":1419,"mutability":"immutable","name":"habitTracker","nameLocation":"453:12:3","nodeType":"VariableDeclaration","scope":1770,"src":"428:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"fc7e286d","id":1423,"mutability":"mutable","name":"deposits","nameLocation":"507:8:3","nodeType":"VariableDeclaration","scope":1770,"src":"472:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1422,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"480:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"472:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"491:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"2ce9aead","id":1427,"mutability":"mutable","name":"lastUpdateTime","nameLocation":"556:14:3","nodeType":"VariableDeclaration","scope":1770,"src":"521:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1426,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"521:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d","id":1433,"name":"Staked","nameLocation":"583:6:3","nodeType":"EventDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"606:4:3","nodeType":"VariableDeclaration","scope":1433,"src":"590:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"590:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"620:6:3","nodeType":"VariableDeclaration","scope":1433,"src":"612:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:38:3"},"src":"577:51:3"},{"anonymous":false,"eventSelector":"0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75","id":1439,"name":"Unstaked","nameLocation":"639:8:3","nodeType":"EventDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"664:4:3","nodeType":"VariableDeclaration","scope":1439,"src":"648:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"648:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"678:6:3","nodeType":"VariableDeclaration","scope":1439,"src":"670:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"647:38:3"},"src":"633:53:3"},{"anonymous":false,"eventSelector":"fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe","id":1445,"name":"RewardsClaimed","nameLocation":"697:14:3","nodeType":"EventDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"728:4:3","nodeType":"VariableDeclaration","scope":1445,"src":"712:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"742:6:3","nodeType":"VariableDeclaration","scope":1445,"src":"734:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"711:38:3"},"src":"691:59:3"},{"errorSelector":"c39fa004","id":1447,"name":"OnlyHabitTracker","nameLocation":"762:16:3","nodeType":"ErrorDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"778:2:3"},"src":"756:25:3"},{"errorSelector":"f4d678b8","id":1449,"name":"InsufficientBalance","nameLocation":"792:19:3","nodeType":"ErrorDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[],"src":"811:2:3"},"src":"786:28:3"},{"errorSelector":"90b8ec18","id":1451,"name":"TransferFailed","nameLocation":"825:14:3","nodeType":"ErrorDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"839:2:3"},"src":"819:23:3"},{"errorSelector":"2c5211c6","id":1453,"name":"InvalidAmount","nameLocation":"853:13:3","nodeType":"ErrorDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[],"src":"866:2:3"},"src":"847:22:3"},{"body":{"id":1464,"nodeType":"Block","src":"903:85:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"917:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"921:6:3","memberName":"sender","nodeType":"MemberAccess","src":"917:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1457,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"931:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"917:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1462,"nodeType":"IfStatement","src":"913:57:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1459,"name":"OnlyHabitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"952:16:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1461,"nodeType":"RevertStatement","src":"945:25:3"}},{"id":1463,"nodeType":"PlaceholderStatement","src":"980:1:3"}]},"id":1465,"name":"onlyHabitTracker","nameLocation":"884:16:3","nodeType":"ModifierDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[],"src":"900:2:3"},"src":"875:113:3","virtual":false,"visibility":"internal"},{"body":{"id":1481,"nodeType":"Block","src":"1199:85:3","statements":[{"expression":{"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1473,"name":"ratePerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1209:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1474,"name":"_ratePerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"1225:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1209:30:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1476,"nodeType":"ExpressionStatement","src":"1209:30:3"},{"expression":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1477,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1249:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1478,"name":"_habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1264:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1249:28:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"nodeType":"ExpressionStatement","src":"1249:28:3"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"994:141:3","text":" @param _ratePerSecond Reward rate (e.g., 1e15 = 0.1% per second)\n @param _habitTracker HabitTracker contract address"},"id":1482,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"_ratePerSecond","nameLocation":"1160:14:3","nodeType":"VariableDeclaration","scope":1482,"src":"1152:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"_habitTracker","nameLocation":"1184:13:3","nodeType":"VariableDeclaration","scope":1482,"src":"1176:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1151:47:3"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[],"src":"1199:0:3"},"scope":1770,"src":"1140:144:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1378],"body":{"id":1521,"nodeType":"Block","src":"1369:214:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1383:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1387:5:3","memberName":"value","nodeType":"MemberAccess","src":"1383:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1396:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1383:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1498,"nodeType":"IfStatement","src":"1379:47:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1495,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1411:13:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1411:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1497,"nodeType":"RevertStatement","src":"1404:22:3"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1440:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1440:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1505,"nodeType":"IfStatement","src":"1436:39:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1502,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1460:13:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1460:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1504,"nodeType":"RevertStatement","src":"1453:22:3"}},{"expression":{"arguments":[{"id":1507,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1501:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1506,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"1486:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1509,"nodeType":"ExpressionStatement","src":"1486:20:3"},{"expression":{"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1510,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1516:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1512,"indexExpression":{"id":1511,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1525:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1516:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1513,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1534:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1516:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1515,"nodeType":"ExpressionStatement","src":"1516:24:3"},{"eventCall":{"arguments":[{"id":1517,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1563:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1569:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1516,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"1556:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1556:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"EmitStatement","src":"1551:25:3"}]},"functionSelector":"adc9772e","id":1522,"implemented":true,"kind":"function","modifiers":[{"id":1489,"kind":"modifierInvocation","modifierName":{"id":1488,"name":"onlyHabitTracker","nameLocations":["1352:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"1352:16:3"},"nodeType":"ModifierInvocation","src":"1352:16:3"}],"name":"stake","nameLocation":"1299:5:3","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"user","nameLocation":"1313:4:3","nodeType":"VariableDeclaration","scope":1522,"src":"1305:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"1305:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"amount","nameLocation":"1327:6:3","nodeType":"VariableDeclaration","scope":1522,"src":"1319:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1304:30:3"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[],"src":"1369:0:3"},"scope":1770,"src":"1290:293:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1386],"body":{"id":1577,"nodeType":"Block","src":"1662:376:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1676:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1686:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1676:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1537,"nodeType":"IfStatement","src":"1672:39:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1534,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1696:13:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1536,"nodeType":"RevertStatement","src":"1689:22:3"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1538,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1725:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1540,"indexExpression":{"id":1539,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1734:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1725:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1541,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1742:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1725:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1546,"nodeType":"IfStatement","src":"1721:57:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1543,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"1757:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1545,"nodeType":"RevertStatement","src":"1750:28:3"}},{"expression":{"arguments":[{"id":1548,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1804:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1547,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"1789:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1789:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1550,"nodeType":"ExpressionStatement","src":"1789:20:3"},{"expression":{"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1551,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1819:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1553,"indexExpression":{"id":1552,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1828:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1819:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1554,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1837:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1819:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"nodeType":"ExpressionStatement","src":"1819:24:3"},{"assignments":[1558,null],"declarations":[{"constant":false,"id":1558,"mutability":"mutable","name":"success","nameLocation":"1897:7:3","nodeType":"VariableDeclaration","scope":1577,"src":"1892:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1557,"name":"bool","nodeType":"ElementaryTypeName","src":"1892:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1565,"initialValue":{"arguments":[{"hexValue":"","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1943:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1559,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1910:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1923:4:3","memberName":"call","nodeType":"MemberAccess","src":"1910:17:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1935:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1910:32:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1891:55:3"},{"condition":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1960:8:3","subExpression":{"id":1566,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"1961:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1571,"nodeType":"IfStatement","src":"1956:37:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1568,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"1977:14:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1977:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1570,"nodeType":"RevertStatement","src":"1970:23:3"}},{"eventCall":{"arguments":[{"id":1573,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"2018:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1574,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2024:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1572,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"2009:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2009:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"EmitStatement","src":"2004:27:3"}]},"functionSelector":"c2a672e0","id":1578,"implemented":true,"kind":"function","modifiers":[{"id":1529,"kind":"modifierInvocation","modifierName":{"id":1528,"name":"onlyHabitTracker","nameLocations":["1645:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"1645:16:3"},"nodeType":"ModifierInvocation","src":"1645:16:3"}],"name":"unstake","nameLocation":"1598:7:3","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"user","nameLocation":"1614:4:3","nodeType":"VariableDeclaration","scope":1578,"src":"1606:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"amount","nameLocation":"1628:6:3","nodeType":"VariableDeclaration","scope":1578,"src":"1620:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1620:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1605:30:3"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[],"src":"1662:0:3"},"scope":1770,"src":"1589:449:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1392],"body":{"id":1664,"nodeType":"Block","src":"2120:767:3","statements":[{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1585,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2130:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2156:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2160:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2156:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1586,"name":"_pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"2140:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2140:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2130:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"2130:37:3"},{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"balance","nameLocation":"2238:7:3","nodeType":"VariableDeclaration","scope":1664,"src":"2230:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1599,"initialValue":{"expression":{"arguments":[{"id":1596,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2256:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_MockStakingRewards_$1770","typeString":"contract MockStakingRewards"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MockStakingRewards_$1770","typeString":"contract MockStakingRewards"}],"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2248:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:3","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2262:7:3","memberName":"balance","nodeType":"MemberAccess","src":"2248:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2230:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"2283:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2294:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2283:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1605,"nodeType":"IfStatement","src":"2279:26:3","trueBody":{"expression":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1584,"id":1604,"nodeType":"Return","src":"2297:8:3"}},{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"maxClaim","nameLocation":"2383:8:3","nodeType":"VariableDeclaration","scope":1664,"src":"2375:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2375:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1611,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"2394:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2404:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2394:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2375:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1612,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2420:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1613,"name":"maxClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2430:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2420:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1619,"nodeType":"IfStatement","src":"2416:42:3","trueBody":{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1615,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2440:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1616,"name":"maxClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2450:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ExpressionStatement","src":"2440:18:3"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2532:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1621,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"2542:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2532:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1627,"nodeType":"IfStatement","src":"2528:40:3","trueBody":{"expression":{"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1623,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2551:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1624,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"2561:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1626,"nodeType":"ExpressionStatement","src":"2551:17:3"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1628,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2591:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2601:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2591:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"IfStatement","src":"2587:261:3","trueBody":{"id":1660,"nodeType":"Block","src":"2604:244:3","statements":[{"expression":{"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1631,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"2618:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1634,"indexExpression":{"expression":{"id":1632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2633:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2637:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2633:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2618:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1635,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2647:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2653:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"2647:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2618:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1638,"nodeType":"ExpressionStatement","src":"2618:44:3"},{"assignments":[1640,null],"declarations":[{"constant":false,"id":1640,"mutability":"mutable","name":"success","nameLocation":"2682:7:3","nodeType":"VariableDeclaration","scope":1660,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1639,"name":"bool","nodeType":"ElementaryTypeName","src":"2677:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1647,"initialValue":{"arguments":[{"hexValue":"","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2729:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1641,"name":"habitTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2695:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2708:4:3","memberName":"call","nodeType":"MemberAccess","src":"2695:17:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1643,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2695:33:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2695:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2676:56:3"},{"condition":{"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2750:8:3","subExpression":{"id":1648,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2751:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"IfStatement","src":"2746:37:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1650,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2767:14:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1652,"nodeType":"RevertStatement","src":"2760:23:3"}},{"eventCall":{"arguments":[{"expression":{"id":1655,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2817:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2821:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2817:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1657,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2829:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1654,"name":"RewardsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2802:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2802:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"EmitStatement","src":"2797:40:3"}]}},{"expression":{"id":1662,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2873:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1584,"id":1663,"nodeType":"Return","src":"2866:14:3"}]},"functionSelector":"372500ab","id":1665,"implemented":true,"kind":"function","modifiers":[{"id":1581,"kind":"modifierInvocation","modifierName":{"id":1580,"name":"onlyHabitTracker","nameLocations":["2077:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"2077:16:3"},"nodeType":"ModifierInvocation","src":"2077:16:3"}],"name":"claimRewards","nameLocation":"2053:12:3","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[],"src":"2065:2:3"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"claimed","nameLocation":"2111:7:3","nodeType":"VariableDeclaration","scope":1665,"src":"2103:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2103:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2102:17:3"},"scope":1770,"src":"2044:843:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1400],"body":{"id":1676,"nodeType":"Block","src":"2963:37:3","statements":[{"expression":{"baseExpression":{"id":1672,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"2980:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1674,"indexExpression":{"id":1673,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"2989:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2980:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1671,"id":1675,"nodeType":"Return","src":"2973:20:3"}]},"functionSelector":"4da6a556","id":1677,"implemented":true,"kind":"function","modifiers":[],"name":"getStakedAmount","nameLocation":"2902:15:3","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"who","nameLocation":"2926:3:3","nodeType":"VariableDeclaration","scope":1677,"src":"2918:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"2918:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2917:13:3"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1677,"src":"2954:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2953:9:3"},"scope":1770,"src":"2893:107:3","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1408],"body":{"id":1688,"nodeType":"Block","src":"3078:44:3","statements":[{"expression":{"arguments":[{"id":1685,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"3111:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1684,"name":"_pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"3095:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3095:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1683,"id":1687,"nodeType":"Return","src":"3088:27:3"}]},"functionSelector":"f6ed2017","id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"getPendingRewards","nameLocation":"3015:17:3","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"who","nameLocation":"3041:3:3","nodeType":"VariableDeclaration","scope":1689,"src":"3033:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3032:13:3"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"3069:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:3"},"scope":1770,"src":"3006:116:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1700,"nodeType":"Block","src":"3190:45:3","statements":[{"expression":{"expression":{"arguments":[{"id":1696,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3215:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_MockStakingRewards_$1770","typeString":"contract MockStakingRewards"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MockStakingRewards_$1770","typeString":"contract MockStakingRewards"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3207:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"3207:7:3","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3207:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3221:7:3","memberName":"balance","nodeType":"MemberAccess","src":"3207:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1693,"id":1699,"nodeType":"Return","src":"3200:28:3"}]},"functionSelector":"6f9fb98a","id":1701,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"3137:18:3","nodeType":"FunctionDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"3155:2:3"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"3181:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3180:9:3"},"scope":1770,"src":"3128:107:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1720,"nodeType":"Block","src":"3288:110:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1706,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"3302:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1708,"indexExpression":{"id":1707,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"3317:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3302:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3302:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1719,"nodeType":"IfStatement","src":"3298:94:3","trueBody":{"id":1718,"nodeType":"Block","src":"3329:63:3","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1711,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"3343:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1713,"indexExpression":{"id":1712,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"3358:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3343:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1714,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3366:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3372:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3366:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1717,"nodeType":"ExpressionStatement","src":"3343:38:3"}]}}]},"id":1721,"implemented":true,"kind":"function","modifiers":[],"name":"_updateRewards","nameLocation":"3250:14:3","nodeType":"FunctionDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"user","nameLocation":"3273:4:3","nodeType":"VariableDeclaration","scope":1721,"src":"3265:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"3265:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3264:14:3"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[],"src":"3288:0:3"},"scope":1770,"src":"3241:157:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1763,"nodeType":"Block","src":"3475:309:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1728,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"3489:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1730,"indexExpression":{"id":1729,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3504:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3489:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3513:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3489:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1733,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"3518:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1735,"indexExpression":{"id":1734,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3527:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3518:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3536:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3518:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3489:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"nodeType":"IfStatement","src":"3485:87:3","trueBody":{"id":1741,"nodeType":"Block","src":"3539:33:3","statements":[{"expression":{"hexValue":"30","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3560:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1727,"id":1740,"nodeType":"Return","src":"3553:8:3"}]}},{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"timeElapsed","nameLocation":"3590:11:3","nodeType":"VariableDeclaration","scope":1763,"src":"3582:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3582:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1751,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1745,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3604:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3610:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3604:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":1747,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"3622:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1749,"indexExpression":{"id":1748,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3637:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3622:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3604:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3582:60:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1752,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"3725:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1754,"indexExpression":{"id":1753,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3734:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3725:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1755,"name":"ratePerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"3742:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3725:30:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1757,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3758:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3725:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3724:46:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3773:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3724:53:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1727,"id":1762,"nodeType":"Return","src":"3717:60:3"}]},"id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"_pendingRewards","nameLocation":"3413:15:3","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"user","nameLocation":"3437:4:3","nodeType":"VariableDeclaration","scope":1764,"src":"3429:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"3429:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3428:14:3"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"3466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:9:3"},"scope":1770,"src":"3404:380:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1768,"nodeType":"Block","src":"3884:2:3","statements":[]},"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"3790:62:3","text":" @notice Allow receiving PAS for reward pool"},"id":1769,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[],"src":"3864:2:3"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"3884:0:3"},"scope":1770,"src":"3857:29:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1771,"src":"280:3608:3","usedErrors":[1447,1449,1451,1453],"usedEvents":[1433,1439,1445]}],"src":"32:3858:3"}}},"contracts":{"contracts/HabitTracker.sol":{"HabitTracker":{"abi":[{"inputs":[{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"address","name":"_stakingAdapter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AlreadyCheckedIn","type":"error"},{"inputs":[],"name":"AlreadySettled","type":"error"},{"inputs":[],"name":"CannotSettleCurrentDay","type":"error"},{"inputs":[],"name":"DayNotFunded","type":"error"},{"inputs":[],"name":"HabitAlreadyArchived","type":"error"},{"inputs":[],"name":"HabitIdTooLarge","type":"error"},{"inputs":[],"name":"HabitNotFound","type":"error"},{"inputs":[],"name":"HabitTextTooLong","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidBalanceType","type":"error"},{"inputs":[],"name":"InvalidEpoch","type":"error"},{"inputs":[],"name":"InvalidStakingAdapter","type":"error"},{"inputs":[],"name":"InvalidTreasury","type":"error"},{"inputs":[],"name":"OnlyOwner","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint8","name":"from","type":"uint8"},{"indexed":true,"internalType":"uint8","name":"to","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BalanceMoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint32","name":"habitId","type":"uint32"},{"indexed":true,"internalType":"uint64","name":"epoch","type":"uint64"}],"name":"CheckedIn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint64","name":"epoch","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"fundedCount","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"insufficientCount","type":"uint32"}],"name":"DayPrepared","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint32","name":"habitId","type":"uint32"}],"name":"HabitArchived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint32","name":"habitId","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"text","type":"bytes32"}],"name":"HabitCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint32","name":"habitId","type":"uint32"},{"indexed":true,"internalType":"uint64","name":"epoch","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"slashed","type":"uint256"}],"name":"SettledFail","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint32","name":"habitId","type":"uint32"},{"indexed":true,"internalType":"uint64","name":"epoch","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"SettledSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAdapter","type":"address"},{"indexed":true,"internalType":"address","name":"newAdapter","type":"address"}],"name":"StakingAdapterUpdated","type":"event"},{"inputs":[],"name":"STAKE_PER_DAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"habitId","type":"uint32"}],"name":"archiveHabit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"habitId","type":"uint32"},{"internalType":"uint64","name":"epoch","type":"uint64"}],"name":"checkIn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"checked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"text","type":"bytes32"}],"name":"createHabit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"epochNow","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint64","name":"epoch","type":"uint64"},{"internalType":"uint32","name":"habitId","type":"uint32"}],"name":"forceSettle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"funded","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint32","name":"","type":"uint32"}],"name":"habits","outputs":[{"internalType":"bytes32","name":"text","type":"bytes32"},{"internalType":"uint64","name":"createdAtEpoch","type":"uint64"},{"internalType":"bool","name":"archived","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"from","type":"uint8"},{"internalType":"uint8","name":"to","type":"uint8"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"move","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"epoch","type":"uint64"}],"name":"prepareDay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newAdapter","type":"address"}],"name":"setStakingAdapter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint64","name":"epoch","type":"uint64"},{"internalType":"uint32","name":"habitId","type":"uint32"}],"name":"settle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"settled","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingAdapter","outputs":[{"internalType":"contract IStakingAdapter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userHabitCounters","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userStates","outputs":[{"internalType":"uint256","name":"depositBalance","type":"uint256"},{"internalType":"uint256","name":"blockedBalance","type":"uint256"},{"internalType":"uint256","name":"claimableBalance","type":"uint256"},{"internalType":"uint32","name":"activeHabitCount","type":"uint32"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAdapter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyCheckedIn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadySettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSettleCurrentDay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DayNotFunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HabitAlreadyArchived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HabitIdTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HabitNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HabitTextTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBalanceType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEpoch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStakingAdapter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTreasury\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"from\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"to\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BalanceMoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"}],\"name\":\"CheckedIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fundedCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"insufficientCount\",\"type\":\"uint32\"}],\"name\":\"DayPrepared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"}],\"name\":\"HabitArchived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"text\",\"type\":\"bytes32\"}],\"name\":\"HabitCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slashed\",\"type\":\"uint256\"}],\"name\":\"SettledFail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"SettledSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdapter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdapter\",\"type\":\"address\"}],\"name\":\"StakingAdapterUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"STAKE_PER_DAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"}],\"name\":\"archiveHabit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"}],\"name\":\"checkIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"checked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"text\",\"type\":\"bytes32\"}],\"name\":\"createHabit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochNow\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"}],\"name\":\"forceSettle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"funded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"habits\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"text\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"createdAtEpoch\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"archived\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"from\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"to\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"}],\"name\":\"prepareDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdapter\",\"type\":\"address\"}],\"name\":\"setStakingAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"habitId\",\"type\":\"uint32\"}],\"name\":\"settle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"settled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingAdapter\",\"outputs\":[{\"internalType\":\"contract IStakingAdapter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userHabitCounters\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"activeHabitCount\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"HabitChain Team\",\"details\":\"Uses epoch-based time (86400-second days) for daily cyclesIntegrates with external staking via IStakingAdapter Two types of stakes: - Funded Stake: User deposits locked during day (blockedBalance) - Yield Stake: Successful rewards staked externally for yield generation Two types of rewards: - User Rewards: Base rewards from successful habit completion (claimableBalance) - Yield Rewards: Additional rewards generated from external staking (tracked in adapter) \",\"kind\":\"dev\",\"methods\":{\"archiveHabit(uint32)\":{\"params\":{\"habitId\":\"ID of the habit to archive\"}},\"checkIn(uint32,uint64)\":{\"params\":{\"epoch\":\"The epoch to check in (must be current day)\",\"habitId\":\"ID of the habit\"}},\"createHabit(bytes32)\":{\"params\":{\"text\":\"Description of the habit (up to 32 bytes)\"},\"returns\":{\"_0\":\"habitId The ID of the newly created habit\"}},\"forceSettle(address,uint64,uint32)\":{\"details\":\"Bypasses the \\\"cannot settle current day\\\" check - use with caution\",\"params\":{\"epoch\":\"The epoch to settle (can be any epoch, including current)\",\"habitId\":\"ID of the habit to settle\",\"user\":\"Address of habit owner\"}},\"move(uint8,uint8,uint256)\":{\"details\":\"Examples: withdraw from deposit: move(0,2,amt), claim: move(1,2,amt), redeposit: move(1,0,amt)\",\"params\":{\"amount\":\"Amount to move\",\"from\":\"Source balance type (0=deposit, 1=claimable)\",\"to\":\"Destination balance type (0=deposit, 1=claimable, 2=external/withdraw)\"}},\"prepareDay(uint64)\":{\"details\":\"Moves funds from depositBalance to blockedBalance (funded stake)\",\"params\":{\"epoch\":\"The epoch to prepare (must be current day)\"}},\"settle(address,uint64,uint32)\":{\"params\":{\"epoch\":\"The epoch to settle (must be past day)\",\"habitId\":\"ID of the habit to settle\",\"user\":\"Address of habit owner\"}}},\"title\":\"HabitTracker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"archiveHabit(uint32)\":{\"notice\":\"Archive a habit (soft delete)\"},\"checkIn(uint32,uint64)\":{\"notice\":\"Check in to a habit for the current day\"},\"createHabit(bytes32)\":{\"notice\":\"Create a new habit\"},\"forceSettle(address,uint64,uint32)\":{\"notice\":\"Force settle a specific habit without epoch validation (TESTING ONLY)\"},\"move(uint8,uint8,uint256)\":{\"notice\":\"Move funds between balance types\"},\"prepareDay(uint64)\":{\"notice\":\"Prepare the day by locking funds (funded stake) for active habits\"},\"settle(address,uint64,uint32)\":{\"notice\":\"Settle a specific habit for a past day\"}},\"notice\":\"Gamified habit tracking with financial commitment and yield generation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HabitTracker.sol\":\"HabitTracker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HabitTracker.sol\":{\"keccak256\":\"0x7493f3ad6a57b9325f8ba2899c05daa9dc92ae8dd676e74438d466ab0bec4754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccf5428857afe906cd05dc256be7a2606039e973a459461d26e77da6c0351753\",\"dweb:/ipfs/QmbvvrtAMsbubdFFDVb9m9WdvQiw5tV5j5EJ4j5nyQ7bYB\"]},\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0xff215acb9a3b8a764a939626ef6ffd975ed411f991532ada8de923118abdb8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd9c3f4c8b956e7f11b867deb027df0e788cdf40f6c3fad3a9aae551dc6653c\",\"dweb:/ipfs/QmP48raHm1VChRAWYdgq9aSVcyG1qUWD1hawJimyJczHGk\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 332/65952 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 9887\n// Code size = 34695 bytes\n\n      : @0 (gas: 7)\n     0: sp = sp + 0xffffffffffffffe8\n     3: u64 [sp + 0x10] = ra\n     6: u64 [sp + 0x8] = s0\n     9: u64 [sp] = s1\n    11: s1 = 0x20148\n    16: s0 = i32 [0x20148]\n    21: jump @3 if s0 == 0\n      : @1 (gas: 5)\n    24: a0 = 0x30180\n    29: i32 a0 = a0 + 0\n    31: i32 a1 = s1 + 0\n    33: ecalli 7 // 'get_immutable_data'\n    35: fallthrough\n      : @2 (gas: 3)\n    36: a0 = i32 [0x20148]\n    41: u32 [0x20148] = 0\n    46: jump @4 if a0 <u s0\n      : @3 (gas: 5)\n    49: ra = u64 [sp + 0x10]\n    52: s0 = u64 [sp + 0x8]\n    55: s1 = u64 [sp]\n    57: sp = sp + 0x18\n    60: ret\n      : @4 (gas: 1)\n    62: trap\n      : @5 (gas: 2)\n    63: a1 = i32 [0x20148]\n    68: jump @57 if a1 == 0\n      : @6 (gas: 4)\n    72: a0 = 0x30180\n    77: i32 a0 = a0 + 0\n    79: ecalli 15 // 'set_immutable_data'\n    81: jump @57\n      : @7 (gas: 8)\n    84: sp = sp + 0xfffffffffffffff0\n    87: u64 [sp + 0x8] = ra\n    90: u64 [sp] = s0\n    92: a2 = a1\n    94: s0 = a0\n    96: a1 = 0x20\n    99: a0 = a2\n   101: ra = 2, jump @20\n      : @8 [@dyn 1] (gas: 100)\n   106: a1 = u8 [a0 + 0x1]\n   109: a2 = u8 [a0]\n   111: a3 = u8 [a0 + 0x2]\n   114: a4 = u8 [a0 + 0x3]\n   117: a1 = a1 << 0x8\n   120: a1 = a1 | a2\n   123: a3 = a3 << 0x10\n   126: a4 = a4 << 0x18\n   129: a3 = a3 | a4\n   132: a1 = a1 | a3\n   135: a2 = u8 [a0 + 0x5]\n   138: a3 = u8 [a0 + 0x4]\n   141: a4 = u8 [a0 + 0x6]\n   144: a5 = u8 [a0 + 0x7]\n   147: a2 = a2 << 0x8\n   150: a2 = a2 | a3\n   153: a4 = a4 << 0x10\n   156: a5 = a5 << 0x18\n   159: a4 = a4 | a5\n   162: a2 = a2 | a4\n   165: a2 = a2 << 0x20\n   168: t0 = a2 | a1\n   171: a2 = u8 [a0 + 0x9]\n   174: a3 = u8 [a0 + 0x8]\n   177: a4 = u8 [a0 + 0xa]\n   180: a5 = u8 [a0 + 0xb]\n   183: a2 = a2 << 0x8\n   186: a2 = a2 | a3\n   189: a4 = a4 << 0x10\n   192: a5 = a5 << 0x18\n   195: a4 = a4 | a5\n   198: a2 = a2 | a4\n   201: a3 = u8 [a0 + 0xd]\n   204: a4 = u8 [a0 + 0xc]\n   207: a5 = u8 [a0 + 0xe]\n   210: a1 = u8 [a0 + 0xf]\n   213: a3 = a3 << 0x8\n   216: a3 = a3 | a4\n   219: a5 = a5 << 0x10\n   222: a1 = a1 << 0x18\n   225: a1 = a1 | a5\n   228: a1 = a1 | a3\n   231: a1 = a1 << 0x20\n   234: t1 = a1 | a2\n   237: a1 = u8 [a0 + 0x11]\n   240: a3 = u8 [a0 + 0x10]\n   243: a4 = u8 [a0 + 0x12]\n   246: a5 = u8 [a0 + 0x13]\n   249: a1 = a1 << 0x8\n   252: a1 = a1 | a3\n   255: a4 = a4 << 0x10\n   258: a5 = a5 << 0x18\n   261: a4 = a4 | a5\n   264: a1 = a1 | a4\n   267: a3 = u8 [a0 + 0x15]\n   270: a4 = u8 [a0 + 0x14]\n   273: a5 = u8 [a0 + 0x16]\n   276: a2 = u8 [a0 + 0x17]\n   279: a3 = a3 << 0x8\n   282: a3 = a3 | a4\n   285: a5 = a5 << 0x10\n   288: a2 = a2 << 0x18\n   291: a2 = a2 | a5\n   294: a2 = a2 | a3\n   297: a2 = a2 << 0x20\n   300: a3 = a2 | a1\n   303: a1 = u8 [a0 + 0x19]\n   306: a2 = u8 [a0 + 0x18]\n   309: a4 = u8 [a0 + 0x1a]\n   312: a5 = u8 [a0 + 0x1b]\n   315: a1 = a1 << 0x8\n   318: a1 = a1 | a2\n   321: a4 = a4 << 0x10\n   324: a5 = a5 << 0x18\n   327: a4 = a4 | a5\n   330: a1 = a1 | a4\n   333: a2 = u8 [a0 + 0x1d]\n   336: a4 = u8 [a0 + 0x1c]\n   339: a5 = u8 [a0 + 0x1e]\n   342: a0 = u8 [a0 + 0x1f]\n   345: a2 = a2 << 0x8\n   348: a2 = a2 | a4\n   351: a5 = a5 << 0x10\n   354: a0 = a0 << 0x18\n   357: a0 = a0 | a5\n   360: a0 = a0 | a2\n   363: a0 = a0 << 0x20\n   366: a0 = a0 | a1\n   369: a0 = reverse a0\n   371: a1 = reverse a3\n   373: a2 = reverse t1\n   375: a3 = reverse t0\n   377: u64 [s0 + 0x18] = a3\n   380: u64 [s0 + 0x10] = a2\n   383: u64 [s0 + 0x8] = a1\n   386: u64 [s0] = a0\n   388: ra = u64 [sp + 0x8]\n   391: s0 = u64 [sp]\n   393: sp = sp + 0x10\n   396: ret\n      : @9 (gas: 12)\n   398: sp = sp + 0xffffffffffffffd8\n   401: u64 [sp + 0x20] = ra\n   404: u64 [sp + 0x18] = s0\n   407: u64 [sp + 0x10] = s1\n   410: a2 = u64 [a1]\n   412: u64 [sp + 0x8] = a2\n   415: a2 = u64 [a1 + 0x8]\n   418: u64 [sp] = a2\n   420: s0 = u64 [a1 + 0x10]\n   423: s1 = u64 [a1 + 0x18]\n   426: a1 = 0x20\n   429: ra = 4, jump @20\n      : @10 [@dyn 2] (gas: 71)\n   434: a1 = reverse s1\n   436: a2 = reverse s0\n   438: a3 = u64 [sp]\n   440: a3 = reverse a3\n   442: a4 = u64 [sp + 0x8]\n   445: a4 = reverse a4\n   447: u8 [a0 + 0x18] = a4\n   450: u8 [a0 + 0x10] = a3\n   453: u8 [a0 + 0x8] = a2\n   456: u8 [a0] = a1\n   458: a5 = a4 >> 0x38\n   461: u8 [a0 + 0x1f] = a5\n   464: a5 = a4 >> 0x30\n   467: u8 [a0 + 0x1e] = a5\n   470: a5 = a4 >> 0x28\n   473: u8 [a0 + 0x1d] = a5\n   476: a5 = a4 >> 0x20\n   479: u8 [a0 + 0x1c] = a5\n   482: a5 = a4 >> 0x18\n   485: u8 [a0 + 0x1b] = a5\n   488: a5 = a4 >> 0x10\n   491: u8 [a0 + 0x1a] = a5\n   494: a4 = a4 >> 0x8\n   497: u8 [a0 + 0x19] = a4\n   500: a4 = a3 >> 0x38\n   503: u8 [a0 + 0x17] = a4\n   506: a4 = a3 >> 0x30\n   509: u8 [a0 + 0x16] = a4\n   512: a4 = a3 >> 0x28\n   515: u8 [a0 + 0x15] = a4\n   518: a4 = a3 >> 0x20\n   521: u8 [a0 + 0x14] = a4\n   524: a4 = a3 >> 0x18\n   527: u8 [a0 + 0x13] = a4\n   530: a4 = a3 >> 0x10\n   533: u8 [a0 + 0x12] = a4\n   536: a3 = a3 >> 0x8\n   539: u8 [a0 + 0x11] = a3\n   542: a3 = a2 >> 0x38\n   545: u8 [a0 + 0xf] = a3\n   548: a3 = a2 >> 0x30\n   551: u8 [a0 + 0xe] = a3\n   554: a3 = a2 >> 0x28\n   557: u8 [a0 + 0xd] = a3\n   560: a3 = a2 >> 0x20\n   563: u8 [a0 + 0xc] = a3\n   566: a3 = a2 >> 0x18\n   569: u8 [a0 + 0xb] = a3\n   572: a3 = a2 >> 0x10\n   575: u8 [a0 + 0xa] = a3\n   578: a2 = a2 >> 0x8\n   581: u8 [a0 + 0x9] = a2\n   584: a2 = a1 >> 0x38\n   587: u8 [a0 + 0x7] = a2\n   590: a2 = a1 >> 0x30\n   593: u8 [a0 + 0x6] = a2\n   596: a2 = a1 >> 0x28\n   599: u8 [a0 + 0x5] = a2\n   602: a2 = a1 >> 0x20\n   605: u8 [a0 + 0x4] = a2\n   608: a2 = a1 >> 0x18\n   611: u8 [a0 + 0x3] = a2\n   614: a2 = a1 >> 0x10\n   617: u8 [a0 + 0x2] = a2\n   620: a1 = a1 >> 0x8\n   623: u8 [a0 + 0x1] = a1\n   626: ra = u64 [sp + 0x20]\n   629: s0 = u64 [sp + 0x18]\n   632: s1 = u64 [sp + 0x10]\n   635: sp = sp + 0x28\n   638: ret\n      : @11 (gas: 48)\n   640: sp = sp + 0xffffffffffffffa0\n   643: u64 [sp + 0x58] = ra\n   646: u64 [sp + 0x50] = s0\n   649: u64 [sp + 0x48] = s1\n   652: s0 = sp + 0x60\n   655: sp = sp & 0xffffffffffffffe0\n   658: s1 = a0\n   660: a0 = u64 [a1 + 0x18]\n   663: a2 = u64 [a1 + 0x10]\n   666: a3 = u64 [a1 + 0x8]\n   669: a1 = u64 [a1]\n   671: a0 = reverse a0\n   673: a2 = reverse a2\n   675: a3 = reverse a3\n   677: a1 = reverse a1\n   679: u64 [sp + 0x18] = a1\n   682: u64 [sp + 0x10] = a3\n   685: u64 [sp + 0x8] = a2\n   688: u64 [sp] = a0\n   690: u64 [sp + 56] = 0\n   693: u64 [sp + 48] = 0\n   696: u64 [sp + 40] = 0\n   699: u64 [sp + 32] = 0\n   702: u32 [sp + 64] = 0x20\n   706: i32 a1 = sp + 0\n   708: i32 a3 = sp + 0x20\n   711: i32 a4 = sp + 0x40\n   714: a2 = 0xffffffffffffffff\n   717: a0 = 0\n   719: ecalli 8 // 'get_storage'\n   721: a0 = u64 [sp + 0x38]\n   724: a1 = u64 [sp + 0x30]\n   727: a2 = u64 [sp + 0x28]\n   730: a3 = u64 [sp + 0x20]\n   733: a0 = reverse a0\n   735: a1 = reverse a1\n   737: a2 = reverse a2\n   739: a3 = reverse a3\n   741: u64 [s1 + 0x18] = a3\n   744: u64 [s1 + 0x10] = a2\n   747: u64 [s1 + 0x8] = a1\n   750: u64 [s1] = a0\n   752: sp = s0 + 0xffffffffffffffa0\n   755: ra = u64 [sp + 0x58]\n   758: s0 = u64 [sp + 0x50]\n   761: s1 = u64 [sp + 0x48]\n   764: sp = sp + 0x60\n   767: ret\n      : @12 (gas: 40)\n   769: sp = sp + 0xffffffffffffffa0\n   772: u64 [sp + 0x58] = ra\n   775: u64 [sp + 0x50] = s0\n   778: s0 = sp + 0x60\n   781: sp = sp & 0xffffffffffffffe0\n   784: t0 = u64 [a0]\n   786: a3 = u64 [a0 + 0x8]\n   789: a4 = u64 [a0 + 0x10]\n   792: a0 = u64 [a0 + 0x18]\n   795: t1 = u64 [a1]\n   797: a2 = u64 [a1 + 0x8]\n   800: a5 = u64 [a1 + 0x10]\n   803: a1 = u64 [a1 + 0x18]\n   806: t2 = reverse a0\n   808: a4 = reverse a4\n   810: a3 = reverse a3\n   812: a0 = reverse t0\n   814: t0 = reverse a1\n   816: a5 = reverse a5\n   818: a2 = reverse a2\n   820: a1 = reverse t1\n   822: u64 [sp + 0x18] = a0\n   825: u64 [sp + 0x10] = a3\n   828: u64 [sp + 0x8] = a4\n   831: u64 [sp] = t2\n   833: u64 [sp + 0x38] = a1\n   836: u64 [sp + 0x30] = a2\n   839: u64 [sp + 0x28] = a5\n   842: u64 [sp + 0x20] = t0\n   845: i32 a1 = sp + 0\n   847: i32 a3 = sp + 0x20\n   850: a2 = 0xffffffffffffffff\n   853: a4 = 0x20\n   856: a0 = 0\n   858: ecalli 16 // 'set_storage'\n   860: sp = s0 + 0xffffffffffffffa0\n   863: ra = u64 [sp + 0x58]\n   866: s0 = u64 [sp + 0x50]\n   869: sp = sp + 0x60\n   872: ret\n      : @13 [@dyn 3] (gas: 35)\n   874: a1 = u64 [sp]\n   876: a1 = reverse a1\n   878: a2 = u64 [sp + 0x8]\n   881: a2 = reverse a2\n   883: a3 = u64 [sp + 0x10]\n   886: a3 = reverse a3\n   888: a4 = u64 [sp + 0x18]\n   891: a4 = reverse a4\n   893: u64 [sp + 0x58] = a4\n   896: u64 [sp + 0x50] = a3\n   899: u64 [sp + 0x48] = a2\n   902: u64 [sp + 0x40] = a1\n   905: a1 = u64 [sp + 0x20]\n   908: a1 = reverse a1\n   910: a2 = u64 [sp + 0x28]\n   913: a2 = reverse a2\n   915: a3 = u64 [sp + 0x30]\n   918: a3 = reverse a3\n   920: a4 = u64 [sp + 0x38]\n   923: a4 = reverse a4\n   925: u64 [sp + 0x78] = a4\n   928: u64 [sp + 0x70] = a3\n   931: u64 [sp + 0x68] = a2\n   934: u64 [sp + 0x60] = a1\n   937: i32 a2 = a0 + 0\n   939: i32 a3 = s1 + 0\n   941: i32 a0 = sp + 0x40\n   944: a1 = 0x2\n   947: ecalli 6 // 'deposit_event'\n   949: sp = s0 + 0xffffffffffffff60\n   953: ra = u64 [sp + 0x98]\n   957: s0 = u64 [sp + 0x90]\n   961: s1 = u64 [sp + 0x88]\n   965: sp = sp + 0xa0\n   969: ret\n      : @14 (gas: 15)\n   971: sp = sp + 0xffffffffffffff20\n   975: u64 [sp + 0xd8] = ra\n   979: u64 [sp + 0xd0] = s0\n   983: u64 [sp + 0xc8] = s1\n   987: s0 = sp + 0xe0\n   991: sp = sp & 0xffffffffffffffe0\n   994: a5 = u64 [a4]\n   996: u64 [sp + 0x40] = a5\n   999: a5 = u64 [a4 + 0x8]\n  1002: u64 [sp + 0x48] = a5\n  1005: a5 = u64 [a4 + 0x10]\n  1008: u64 [sp + 0x50] = a5\n  1011: a4 = u64 [a4 + 0x18]\n  1014: u64 [sp + 0x58] = a4\n  1017: t0 = 8, jump @1269\n      : @15 [@dyn 4] (gas: 2)\n  1023: u64 [sp + 0x38] = a1\n  1026: ra = 10, jump @20\n      : @16 [@dyn 5] (gas: 46)\n  1031: a1 = reverse s1\n  1033: u64 [sp + 0x78] = a1\n  1036: a1 = u64 [sp]\n  1038: a1 = reverse a1\n  1040: u64 [sp + 0x70] = a1\n  1043: a1 = u64 [sp + 0x8]\n  1046: a1 = reverse a1\n  1048: u64 [sp + 0x68] = a1\n  1051: a1 = u64 [sp + 0x10]\n  1054: a1 = reverse a1\n  1056: u64 [sp + 0x60] = a1\n  1059: a1 = u64 [sp + 0x18]\n  1062: a1 = reverse a1\n  1064: u64 [sp + 0x98] = a1\n  1068: a1 = u64 [sp + 0x20]\n  1071: a1 = reverse a1\n  1073: u64 [sp + 0x90] = a1\n  1077: a1 = u64 [sp + 0x28]\n  1080: a1 = reverse a1\n  1082: u64 [sp + 0x88] = a1\n  1086: a1 = u64 [sp + 0x30]\n  1089: a1 = reverse a1\n  1091: u64 [sp + 0x80] = a1\n  1095: a1 = u64 [sp + 0x40]\n  1098: a1 = reverse a1\n  1100: u64 [sp + 0xb8] = a1\n  1104: a1 = u64 [sp + 0x48]\n  1107: a1 = reverse a1\n  1109: u64 [sp + 0xb0] = a1\n  1113: a1 = u64 [sp + 0x50]\n  1116: a1 = reverse a1\n  1118: u64 [sp + 0xa8] = a1\n  1122: a1 = u64 [sp + 0x58]\n  1125: a1 = reverse a1\n  1127: u64 [sp + 0xa0] = a1\n  1131: i32 a2 = a0 + 0\n  1133: a3 = i32 [sp + 0x38]\n  1136: i32 a0 = sp + 0x60\n  1139: a1 = 0x3\n  1142: ecalli 6 // 'deposit_event'\n  1144: sp = s0 + 0xffffffffffffff20\n  1148: ra = u64 [sp + 0xd8]\n  1152: s0 = u64 [sp + 0xd0]\n  1156: s1 = u64 [sp + 0xc8]\n  1160: sp = sp + 0xe0\n  1164: ret\n      : @17 (gas: 23)\n  1166: sp = sp + 0xfffffffffffffee0\n  1170: u64 [sp + 0x118] = ra\n  1174: u64 [sp + 0x110] = s0\n  1178: u64 [sp + 0x108] = s1\n  1182: s0 = sp + 0x120\n  1186: sp = sp & 0xffffffffffffffe0\n  1189: s1 = u64 [a5]\n  1191: u64 [sp + 0x60] = s1\n  1194: s1 = u64 [a5 + 0x8]\n  1197: u64 [sp + 0x68] = s1\n  1200: s1 = u64 [a5 + 0x10]\n  1203: u64 [sp + 0x70] = s1\n  1206: a5 = u64 [a5 + 0x18]\n  1209: u64 [sp + 0x78] = a5\n  1212: a5 = u64 [a4]\n  1214: u64 [sp + 0x38] = a5\n  1217: a5 = u64 [a4 + 0x8]\n  1220: u64 [sp + 0x40] = a5\n  1223: a5 = u64 [a4 + 0x10]\n  1226: u64 [sp + 0x48] = a5\n  1229: a4 = u64 [a4 + 0x18]\n  1232: u64 [sp + 0x50] = a4\n  1235: t0 = 12, jump @1269\n      : @18 [@dyn 6] (gas: 2)\n  1240: u64 [sp + 0x58] = a1\n  1243: ra = 14, jump @20\n      : @19 [@dyn 7] (gas: 58)\n  1248: a1 = reverse s1\n  1250: u64 [sp + 0x98] = a1\n  1254: a1 = u64 [sp]\n  1256: a1 = reverse a1\n  1258: u64 [sp + 0x90] = a1\n  1262: a1 = u64 [sp + 0x8]\n  1265: a1 = reverse a1\n  1267: u64 [sp + 0x88] = a1\n  1271: a1 = u64 [sp + 0x10]\n  1274: a1 = reverse a1\n  1276: u64 [sp + 0x80] = a1\n  1280: a1 = u64 [sp + 0x18]\n  1283: a1 = reverse a1\n  1285: u64 [sp + 0xb8] = a1\n  1289: a1 = u64 [sp + 0x20]\n  1292: a1 = reverse a1\n  1294: u64 [sp + 0xb0] = a1\n  1298: a1 = u64 [sp + 0x28]\n  1301: a1 = reverse a1\n  1303: u64 [sp + 0xa8] = a1\n  1307: a1 = u64 [sp + 0x30]\n  1310: a1 = reverse a1\n  1312: u64 [sp + 0xa0] = a1\n  1316: a1 = u64 [sp + 0x38]\n  1319: a1 = reverse a1\n  1321: u64 [sp + 0xd8] = a1\n  1325: a1 = u64 [sp + 0x40]\n  1328: a1 = reverse a1\n  1330: u64 [sp + 0xd0] = a1\n  1334: a1 = u64 [sp + 0x48]\n  1337: a1 = reverse a1\n  1339: u64 [sp + 0xc8] = a1\n  1343: a1 = u64 [sp + 0x50]\n  1346: a1 = reverse a1\n  1348: u64 [sp + 0xc0] = a1\n  1352: a1 = u64 [sp + 0x60]\n  1355: a1 = reverse a1\n  1357: u64 [sp + 0xf8] = a1\n  1361: a1 = u64 [sp + 0x68]\n  1364: a1 = reverse a1\n  1366: u64 [sp + 0xf0] = a1\n  1370: a1 = u64 [sp + 0x70]\n  1373: a1 = reverse a1\n  1375: u64 [sp + 0xe8] = a1\n  1379: a1 = u64 [sp + 0x78]\n  1382: a1 = reverse a1\n  1384: u64 [sp + 0xe0] = a1\n  1388: i32 a2 = a0 + 0\n  1390: a3 = i32 [sp + 0x58]\n  1393: i32 a0 = sp + 0x80\n  1397: a1 = 0x4\n  1400: ecalli 6 // 'deposit_event'\n  1402: sp = s0 + 0xfffffffffffffee0\n  1406: ra = u64 [sp + 0x118]\n  1410: s0 = u64 [sp + 0x110]\n  1414: s1 = u64 [sp + 0x108]\n  1418: sp = sp + 0x120\n  1422: ret\n      : @20 (gas: 2)\n  1424: i32 a2 = a0 >> 0x10\n  1427: jump @25 if a2 != 0\n      : @21 (gas: 4)\n  1430: a1 = a1 + a0\n  1433: i32 a1 = a1 + 0x1f\n  1436: a1 = a1 & 0xffffffffffffffe0\n  1439: jump @25 if a1 >u 65536\n      : @22 (gas: 3)\n  1445: a2 = 0x20150\n  1450: a3 = i32 [0x20150]\n  1455: jump @24 if a3 >=u a1\n      : @23 (gas: 2)\n  1458: u32 [0x20150] = a1\n  1463: fallthrough\n      : @24 (gas: 4)\n  1464: a1 = 0x20160\n  1469: i32 a0 = a0 + 0\n  1471: a0 = a0 + a1\n  1474: ret\n      : @25 (gas: 1)\n  1476: trap\n      : @26 (gas: 6)\n  1477: sp = sp + 0xfffffffffffffff0\n  1480: u64 [sp + 0x8] = ra\n  1483: u64 [sp] = s0\n  1485: s0 = a0 & 0x1\n  1488: ecalli 3 // 'call_data_size'\n  1490: fallthrough\n      : @27 (gas: 2)\n  1491: u32 [0x2014c] = a0\n  1496: jump @29 if s0 == 0\n      : @28 (gas: 1)\n  1499: ra = 16, jump @30\n      : @29 [@dyn 8] (gas: 1)\n  1503: ra = 18, jump @60\n      : @30 [@dyn 9] (gas: 14)\n  1508: sp = sp + 0xfffffffffffffd60\n  1512: a0 = sp + 0x200\n  1516: u64 [a0 + 0x98] = ra\n  1520: u64 [a0 + 0x90] = s0\n  1524: u64 [a0 + 0x88] = s1\n  1528: s0 = sp + 0x2a0\n  1532: sp = sp & 0xffffffffffffffe0\n  1535: u64 [sp + 440] = 0\n  1539: u64 [sp + 432] = 0\n  1543: u64 [sp + 424] = 0\n  1547: u64 [sp + 416] = 0\n  1551: i32 a0 = sp + 0x1a0\n  1555: ecalli 17 // 'value_transferred'\n  1557: fallthrough\n      : @31 (gas: 8)\n  1558: a0 = u64 [sp + 0x1b0]\n  1562: a1 = u64 [sp + 0x1b8]\n  1566: a2 = u64 [sp + 0x1a8]\n  1570: a3 = u64 [sp + 0x1a0]\n  1574: a1 = a1 | a2\n  1577: a0 = a0 | a3\n  1580: a0 = a0 | a1\n  1583: jump @48 if a0 != 0\n      : @32 (gas: 15)\n  1587: s1 = i32 [0x2014c]\n  1592: a0 = s1 << 0x20\n  1595: a0 = a0 >> 0x20\n  1598: a0 = a0 + 0x1f\n  1601: a0 = a0 & 0xffffffffffffffe0\n  1604: a1 = a0 + 0xa0\n  1608: a0 = a1 <u a0\n  1611: u64 [sp + 408] = 0\n  1615: u64 [sp + 0x180] = a1\n  1619: u64 [sp + 0x188] = a0\n  1623: a0 = 0 if a0 != 0\n  1625: u64 [sp + 0x190] = a0\n  1629: a0 = 0x40\n  1632: a1 = sp + 0x180\n  1636: ra = 20, jump @9\n      : @33 [@dyn 10] (gas: 3)\n  1641: a0 = 0xa0\n  1645: a1 = s1\n  1647: ra = 22, jump @20\n      : @34 [@dyn 11] (gas: 5)\n  1652: i32 a0 = a0 + 0\n  1654: a1 = s1\n  1656: a2 = 0\n  1658: ecalli 1 // 'call_data_copy'\n  1660: fallthrough\n      : @35 (gas: 1)\n  1661: jump @49 if s1 <u 64\n      : @36 (gas: 7)\n  1666: u64 [sp + 344] = 0\n  1670: u64 [sp + 336] = 0\n  1674: u64 [sp + 320] = 0xa0\n  1680: a0 = sp + 0x160\n  1684: a1 = sp + 0x140\n  1688: u64 [sp + 328] = 0\n  1692: ra = 24, jump @1037\n      : @37 [@dyn 12] (gas: 14)\n  1697: a0 = u64 [sp + 0x178]\n  1701: u64 [sp + 0x18] = a0\n  1704: a0 = u64 [sp + 0x170]\n  1708: u64 [sp + 0x10] = a0\n  1711: a0 = u64 [sp + 0x168]\n  1715: u64 [sp + 0x8] = a0\n  1718: s1 = u64 [sp + 0x160]\n  1722: u64 [sp + 280] = 0\n  1726: u64 [sp + 272] = 0\n  1730: u64 [sp + 256] = 0xc0\n  1736: a0 = sp + 0x120\n  1740: a1 = sp + 0x100\n  1744: u64 [sp + 264] = 0\n  1748: ra = 26, jump @1037\n      : @38 [@dyn 13] (gas: 7)\n  1753: a3 = u64 [sp + 0x8]\n  1756: a2 = u64 [sp + 0x10]\n  1759: a0 = a2 << 0x20\n  1762: a0 = a0 >> 0x20\n  1765: a1 = s1 | a3\n  1768: a0 = a0 | a1\n  1771: jump @50 if a0 == 0\n      : @39 (gas: 16)\n  1775: a0 = u64 [sp + 0x130]\n  1779: u64 [sp + 0x38] = a0\n  1782: a0 = u64 [sp + 0x128]\n  1786: u64 [sp + 0x28] = a0\n  1789: a0 = u64 [sp + 0x120]\n  1793: u64 [sp + 0x30] = a0\n  1796: a0 = 0xffffffff\n  1806: u64 [sp + 0x20] = a0\n  1809: u64 [sp + 0xe0] = s1\n  1813: u64 [sp + 0xe8] = a3\n  1817: u64 [sp + 0xf0] = a2\n  1821: a0 = 0x80\n  1825: a1 = sp + 0xe0\n  1829: a2 = u64 [sp + 0x18]\n  1832: u64 [sp + 0xf8] = a2\n  1836: ra = 28, jump @9\n      : @40 [@dyn 14] (gas: 25)\n  1841: s1 = 0x30160\n  1846: i32 a0 = s1 + 0\n  1848: ecalli 4 // 'caller'\n  1850: a0 = u64 [0x30168]\n  1855: a1 = i32 [0x30170]\n  1860: a2 = u64 [0x30160]\n  1865: a0 = reverse a0\n  1867: a3 = a0 << 0x20\n  1870: a1 = reverse a1\n  1872: a1 = a1 >> 0x20\n  1875: a1 = a1 | a3\n  1878: u64 [sp + 0x18] = a1\n  1881: a0 = a0 >> 0x20\n  1884: a1 = reverse a2\n  1886: s1 = a1 << 0x20\n  1889: a0 = a0 | s1\n  1892: u64 [sp + 0x10] = a0\n  1895: s1 = a1 >> 0x20\n  1898: u64 [sp + 472] = 0\n  1902: u64 [sp + 464] = 0\n  1906: u64 [sp + 456] = 0\n  1910: u64 [sp + 448] = 0x1\n  1915: a0 = sp + 0xc0\n  1919: a1 = sp + 0x1c0\n  1923: ra = 30, jump @11\n      : @41 [@dyn 15] (gas: 18)\n  1928: a0 = u32 [sp + 0xd4]\n  1932: a0 = a0 << 0x20\n  1935: a1 = u64 [sp + 0xd8]\n  1939: a0 = a0 | s1\n  1942: u64 [sp + 504] = 0\n  1946: u64 [sp + 496] = 0\n  1950: u64 [sp + 488] = 0\n  1954: u64 [sp + 480] = 0x1\n  1959: a2 = sp + 0x200\n  1963: u64 [a2 + 0x18] = a1\n  1966: a1 = u64 [sp + 0x10]\n  1969: u64 [a2 + 0x8] = a1\n  1972: a1 = u64 [sp + 0x18]\n  1975: u64 [a2] = a1\n  1977: u64 [a2 + 0x10] = a0\n  1980: a0 = sp + 0x1e0\n  1984: a1 = sp + 0x200\n  1988: ra = 32, jump @12\n      : @42 [@dyn 16] (gas: 10)\n  1993: a0 = u64 [sp + 0x28]\n  1996: a2 = a0 & 0xffffffffffffffff\n  1999: a0 = u64 [sp + 0x30]\n  2002: a1 = a0 & 0xffffffffffffffff\n  2005: a0 = u64 [sp + 0x38]\n  2008: s1 = u64 [sp + 0x20]\n  2011: s1 = s1 & a0\n  2014: a0 = a1 | s1\n  2017: a0 = a0 | a2\n  2020: jump @45 if a0 == 0\n      : @43 (gas: 12)\n  2023: a0 = 0xffffffff00000000\n  2033: u64 [sp + 0x38] = a0\n  2036: a0 = sp + 0x200\n  2040: u64 [a0 + 56] = 0\n  2043: u64 [a0 + 48] = 0\n  2046: u64 [a0 + 40] = 0\n  2049: u64 [a0 + 32] = 0\n  2052: a0 = sp + 0xa0\n  2056: u64 [sp + 0x30] = a1\n  2059: a1 = sp + 0x220\n  2063: u64 [sp + 0x28] = a2\n  2066: ra = 34, jump @11\n      : @44 [@dyn 17] (gas: 20)\n  2071: a0 = u64 [sp + 0xb8]\n  2075: a1 = u64 [sp + 0xb0]\n  2079: a0 = a0 & 0xffffffffffffffff\n  2082: a2 = u64 [sp + 0x38]\n  2085: a1 = a1 & a2\n  2088: a1 = a1 | s1\n  2091: a3 = sp + 0x200\n  2095: u64 [a3 + 88] = 0\n  2098: u64 [a3 + 80] = 0\n  2101: u64 [a3 + 72] = 0\n  2104: u64 [a3 + 64] = 0\n  2107: a2 = u64 [sp + 0x28]\n  2110: u64 [a3 + 0x68] = a2\n  2113: a2 = u64 [sp + 0x30]\n  2116: u64 [a3 + 0x60] = a2\n  2119: u64 [a3 + 0x78] = a0\n  2122: u64 [a3 + 0x70] = a1\n  2125: a0 = sp + 0x240\n  2129: a1 = sp + 0x260\n  2133: ra = 36, jump @12\n      : @45 [@dyn 18] (gas: 3)\n  2138: a0 = sp + 0x80\n  2142: a1 = 0x40\n  2145: ra = 38, jump @7\n      : @46 [@dyn 19] (gas: 12)\n  2150: a0 = u64 [sp + 0x98]\n  2154: a1 = u64 [sp + 0x90]\n  2158: a2 = u64 [sp + 0x88]\n  2162: s1 = u64 [sp + 0x80]\n  2166: a0 = a0 | a2\n  2169: a2 = s1 | a1\n  2172: a2 = a2 | a0\n  2175: a2 = a2 >> 0x20\n  2178: a0 = a0 | a1\n  2181: a0 = a0 << 0x20\n  2184: a0 = a0 | a2\n  2187: jump @54 if a0 == 0\n      : @47 (gas: 1)\n  2190: trap\n      : @48 (gas: 4)\n  2191: a1 = 0x20160\n  2196: i32 a1 = a1 + 0\n  2198: a0 = 0x1\n  2201: jump @59\n      : @49 (gas: 4)\n  2204: a1 = 0x20160\n  2209: i32 a1 = a1 + 0\n  2211: a0 = 0x1\n  2214: jump @59\n      : @50 (gas: 8)\n  2217: u64 [sp + 80] = 0\n  2220: u64 [sp + 72] = 0\n  2223: u64 [sp + 64] = 0\n  2226: a0 = 0x14bcf5c800000000\n  2236: a1 = sp + 0x40\n  2239: u64 [sp + 0x58] = a0\n  2242: a0 = 0\n  2244: ra = 40, jump @9\n      : @51 [@dyn 20] (gas: 2)\n  2249: a1 = i32 [0x20150]\n  2254: jump @53 if a1 >u 31\n      : @52 (gas: 2)\n  2258: u32 [0x20150] = 0x20\n  2264: fallthrough\n      : @53 (gas: 6)\n  2265: a1 = 0x20160\n  2270: i32 a1 = a1 + 0\n  2272: a0 = 0x1\n  2275: a2 = 0x4\n  2278: ecalli 14 // 'seal_return'\n  2280: fallthrough\n      : @54 (gas: 3)\n  2281: a0 = s1\n  2283: a1 = 0\n  2285: ra = 42, jump @20\n      : @55 [@dyn 21] (gas: 7)\n  2290: i32 a0 = a0 + 0\n  2292: a1 = 0\n  2294: a2 = 0\n  2296: ecalli 1 // 'call_data_copy'\n  2298: a0 = sp + 0x60\n  2301: a1 = 0x80\n  2305: ra = 44, jump @7\n      : @56 [@dyn 22] (gas: 9)\n  2310: a0 = u64 [sp + 0x78]\n  2313: a2 = u64 [sp + 0x70]\n  2316: a3 = u64 [sp + 0x68]\n  2319: a4 = u64 [sp + 0x60]\n  2322: u64 [0x30198] = a0\n  2327: u64 [0x30190] = a2\n  2332: u64 [0x30188] = a3\n  2337: u64 [0x30180] = a4\n  2342: jump @5\n      : @57 (gas: 3)\n  2345: a0 = s1\n  2347: a1 = 0\n  2349: ra = 46, jump @20\n      : @58 [@dyn 23] (gas: 6)\n  2354: i32 a1 = a0 + 0\n  2356: a0 = 0\n  2358: a2 = 0\n  2360: ra = 0x30\n  2363: ecalli 14 // 'seal_return'\n  2365: jump @60\n      : @59 (gas: 4)\n  2367: a2 = 0\n  2369: ra = 0x30\n  2372: ecalli 14 // 'seal_return'\n  2374: fallthrough\n      : @60 [@dyn 24] (gas: 11)\n  2375: sp = sp + 0xfffffffffffffe10\n  2379: u64 [sp + 0x1e8] = ra\n  2383: u64 [sp + 0x1e0] = s0\n  2387: u64 [sp + 0x1d8] = s1\n  2391: s0 = sp + 0x1f0\n  2395: sp = sp + 0xffffffffffffdaf0\n  2399: sp = sp & 0xffffffffffffffe0\n  2402: s1 = sp\n  2404: t0 = 0x32\n  2407: a2 = s1 + 0x1878\n  2411: fallthrough\n      : @61 [@dyn 25] (gas: 7)\n  2412: u64 [a2 + 1440] = 0\n  2416: u64 [a2 + 1432] = 0\n  2420: u64 [a2 + 1416] = 0x80\n  2426: a0 = 0x40\n  2429: a1 = s1 + 0x1e00\n  2433: u64 [a2 + 1424] = 0\n  2437: ra = 52, jump @9\n      : @62 [@dyn 26] (gas: 4)\n  2442: a0 = 0x2014c\n  2447: u64 [s1 + 0xf8] = a0\n  2451: a0 = i32 [0x2014c]\n  2456: jump @64 if a0 >=u 4\n      : @63 (gas: 1)\n  2460: jump @1009\n      : @64 (gas: 8)\n  2463: a0 = s1 + 0x2000\n  2467: i32 a0 = a0 + 0xfffffffffffffe20\n  2471: a1 = 0\n  2473: ra = 0x36\n  2476: ecalli 2 // 'call_data_load'\n  2478: t0 = 0x38\n  2481: a3 = s1 + 0x1878\n  2485: jump @66\n      : @65 [@dyn 27] (gas: 3)\n  2487: t0 = 0x38\n  2490: a3 = s1 + 0x1878\n  2494: fallthrough\n      : @66 [@dyn 28] (gas: 2)\n  2495: a0 = i32 [a3 + 0x5c4]\n  2499: jump @68 if a0 != 2376452955\n      : @67 (gas: 1)\n  2506: jump @337\n      : @68 (gas: 1)\n  2509: jump @175 if a0 == 2573362740\n      : @69 (gas: 2)\n  2517: a2 = s1 + 0x2078\n  2521: jump @121 if a0 == 2822282762\n      : @70 (gas: 1)\n  2529: jump @72 if a0 != 3504541104\n      : @71 (gas: 1)\n  2536: jump @379\n      : @72 (gas: 1)\n  2539: jump @211 if a0 == 3916516871\n      : @73 (gas: 1)\n  2547: jump @75 if a0 != 248271711\n      : @74 (gas: 1)\n  2554: jump @409\n      : @75 (gas: 1)\n  2557: jump @77 if a0 != 573237126\n      : @76 (gas: 1)\n  2564: jump @268\n      : @77 (gas: 1)\n  2567: jump @79 if a0 != 832302164\n      : @78 (gas: 1)\n  2574: jump @349\n      : @79 (gas: 1)\n  2577: jump @81 if a0 != 969217301\n      : @80 (gas: 1)\n  2584: jump @310\n      : @81 (gas: 1)\n  2587: jump @153 if a0 == 1221342904\n      : @82 (gas: 1)\n  2595: jump @84 if a0 != 1251080110\n      : @83 (gas: 1)\n  2602: jump @258\n      : @84 (gas: 1)\n  2605: jump @86 if a0 != 1287362804\n      : @85 (gas: 1)\n  2612: jump @247\n      : @86 (gas: 1)\n  2615: jump @88 if a0 == 1326608131\n      : @87 (gas: 1)\n  2622: jump @296\n      : @88 (gas: 8)\n  2625: u64 [a2 + 256] = 0\n  2629: u64 [a2 + 248] = 0\n  2633: u64 [a2 + 240] = 0\n  2637: u64 [a2 + 232] = 0\n  2641: a0 = s1 + 0x2000\n  2645: i32 a0 = a0 + 0x160\n  2649: ecalli 17 // 'value_transferred'\n  2651: fallthrough\n      : @89 (gas: 9)\n  2652: a3 = s1 + 0x2078\n  2656: a0 = u64 [a3 + 0xf8]\n  2660: a1 = u64 [a3 + 0x100]\n  2664: a2 = u64 [a3 + 0xf0]\n  2668: a3 = u64 [a3 + 0xe8]\n  2672: a1 = a1 | a2\n  2675: a0 = a0 | a3\n  2678: a0 = a0 | a1\n  2681: jump @91 if a0 == 0\n      : @90 (gas: 1)\n  2684: jump @651\n      : @91 (gas: 3)\n  2687: a0 = u64 [s1 + 0xf8]\n  2691: a0 = i32 [a0]\n  2693: jump @93 if a0 >u 99\n      : @92 (gas: 1)\n  2697: jump @652\n      : @93 (gas: 5)\n  2700: a0 = s1 + 0x2000\n  2704: i32 a0 = a0 + 0x180\n  2708: a1 = 0x4\n  2711: ecalli 2 // 'call_data_load'\n  2713: fallthrough\n      : @94 (gas: 12)\n  2714: a2 = s1 + 0x2078\n  2718: a4 = a2 + 0x100\n  2722: a0 = u64 [a4 + 0x20]\n  2725: a1 = u64 [a4 + 0x18]\n  2728: a3 = u64 [a4 + 0x8]\n  2731: a2 = u64 [a4 + 0x10]\n  2734: a0 = a0 | a1\n  2737: u64 [s1 + 0xf8] = a3\n  2741: a1 = a3 <u 0x100\n  2745: a1 = 0 if a2 != 0\n  2747: a1 = 0 if a0 != 0\n  2749: jump @96 if a1 != 0\n      : @95 (gas: 1)\n  2752: jump @653\n      : @96 (gas: 5)\n  2755: a0 = s1 + 0x2000\n  2759: i32 a0 = a0 + 0x1a0\n  2763: a1 = 0x24\n  2766: ecalli 2 // 'call_data_load'\n  2768: fallthrough\n      : @97 (gas: 12)\n  2769: a2 = s1 + 0x2078\n  2773: a4 = a2 + 0x100\n  2777: a0 = u64 [a4 + 0x40]\n  2780: a1 = u64 [a4 + 0x38]\n  2783: a3 = u64 [a4 + 0x28]\n  2786: a2 = u64 [a4 + 0x30]\n  2789: a0 = a0 | a1\n  2792: u64 [s1 + 0xe8] = a3\n  2796: a1 = a3 <u 0x100\n  2800: a1 = 0 if a2 != 0\n  2802: a1 = 0 if a0 != 0\n  2804: jump @99 if a1 != 0\n      : @98 (gas: 1)\n  2807: jump @654\n      : @99 (gas: 5)\n  2810: a0 = s1 + 0x2000\n  2814: i32 a0 = a0 + 0x1c0\n  2818: a1 = 0x44\n  2821: ecalli 2 // 'call_data_load'\n  2823: fallthrough\n      : @100 (gas: 10)\n  2824: a0 = s1 + 0x2078\n  2828: t0 = u64 [a0 + 0x160]\n  2832: a1 = a0 + 0x100\n  2836: a4 = u64 [a1 + 0x58]\n  2839: a5 = u64 [a1 + 0x50]\n  2842: a3 = u64 [a1 + 0x48]\n  2845: a0 = a5 | t0\n  2848: a1 = a3 | a4\n  2851: a0 = a0 | a1\n  2854: jump @102 if a0 != 0\n      : @101 (gas: 1)\n  2857: jump @655\n      : @102 (gas: 3)\n  2860: a1 = u8 [s1 + 0xf8]\n  2864: a2 = u8 [s1 + 0xe8]\n  2868: jump @104 if a1 != a2\n      : @103 (gas: 1)\n  2871: jump @659\n      : @104 (gas: 6)\n  2874: u64 [s1 + 0xf8] = a3\n  2878: u64 [s1 + 0xd0] = a5\n  2882: u64 [s1 + 0xd8] = a4\n  2886: u64 [s1 + 0xe0] = t0\n  2890: u64 [s1 + 0xc0] = a1\n  2894: jump @106 if a1 <=u 1\n      : @105 (gas: 1)\n  2898: jump @647\n      : @106 (gas: 1)\n  2901: jump @108 if a2 <u 3\n      : @107 (gas: 1)\n  2905: jump @647\n      : @108 (gas: 10)\n  2908: u64 [s1 + 0x78] = a2\n  2911: a0 = 0x30160\n  2916: u64 [s1 + 0xc8] = a0\n  2920: i32 a0 = a0 + 0\n  2922: u64 [s1 + 0xa0] = a0\n  2926: ra = 0x3a\n  2929: ecalli 4 // 'caller'\n  2931: a2 = u64 [s1 + 0xc8]\n  2935: t0 = 0x3c\n  2938: jump @1241\n      : @109 [@dyn 29] (gas: 2)\n  2941: a2 = u64 [s1 + 0xc8]\n  2945: t0 = 60, jump @1241\n      : @110 [@dyn 30] (gas: 9)\n  2950: u64 [a2 + 1248] = 0\n  2954: a4 = a2 + 0x400\n  2958: u64 [a4 + 0xd8] = a1\n  2962: u64 [a4 + 0xd0] = a0\n  2966: a1 = s1 + 0x7ff\n  2970: a1 = a1 + 0x541\n  2974: u64 [a4 + 0xc8] = a3\n  2978: a0 = 0\n  2980: ra = 62, jump @9\n      : @111 [@dyn 31] (gas: 11)\n  2985: a1 = s1 + 0x7ff\n  2989: a1 = a1 + 0x79\n  2992: u64 [a1 + 1216] = 0\n  2996: u64 [a1 + 1208] = 0\n  3000: u64 [a1 + 1192] = 0x2\n  3005: a2 = a1\n  3007: a0 = 0x20\n  3010: a1 = s1 + 0x7ff\n  3014: a1 = a1 + 0x521\n  3018: u64 [a2 + 1200] = 0\n  3022: ra = 64, jump @9\n      : @112 [@dyn 32] (gas: 7)\n  3027: a0 = sp + 0xffffffffffffffe0\n  3030: a0 = a0 & 0xffffffffffffffe0\n  3033: u64 [s1 + 0xf0] = a0\n  3037: sp = a0\n  3039: a2 = 0x20150\n  3044: a0 = i32 [0x20150]\n  3049: jump @114 if a0 >u 63\n      : @113 (gas: 2)\n  3053: u32 [0x20150] = 0x40\n  3059: fallthrough\n      : @114 (gas: 13)\n  3060: u64 [s1 + 0x70] = a2\n  3063: a0 = sp + 0xffffffffffffffe0\n  3066: a2 = a0 & 0xffffffffffffffe0\n  3069: u64 [s1 + 0xb8] = a2\n  3073: sp = a2\n  3075: a0 = 0x20160\n  3080: u64 [s1 + 0x98] = a0\n  3084: i32 a0 = a0 + 0\n  3086: i32 a2 = a2 + 0\n  3088: a1 = 0x40\n  3091: u64 [s1 + 0x80] = a0\n  3095: ecalli 9 // 'hash_keccak_256'\n  3097: fallthrough\n      : @115 (gas: 22)\n  3098: a2 = u64 [s1 + 0xb8]\n  3102: a0 = u64 [a2 + 0x18]\n  3105: a1 = u64 [a2 + 0x10]\n  3108: a4 = u64 [a2 + 0x8]\n  3111: a3 = u64 [a2]\n  3113: a2 = reverse a0\n  3115: a5 = reverse a1\n  3117: a4 = reverse a4\n  3119: a3 = reverse a3\n  3121: a1 = u64 [s1 + 0xf0]\n  3125: u64 [a1 + 0x18] = a3\n  3128: u64 [a1 + 0x10] = a4\n  3131: u64 [a1 + 0x8] = a5\n  3134: u64 [a1] = a2\n  3136: t1 = a2 + 0x2\n  3139: a0 = u64 [s1 + 0xc0]\n  3143: u64 [s1 + 0xb8] = a4\n  3147: u64 [s1 + 0x90] = a3\n  3151: u64 [s1 + 0xb0] = a5\n  3155: u64 [s1 + 0x88] = t1\n  3159: u64 [s1 + 0xa8] = a2\n  3163: jump @117 if a0 == 0\n      : @116 (gas: 1)\n  3166: jump @442\n      : @117 (gas: 3)\n  3169: a0 = s1 + 0x7ff\n  3173: a0 = a0 + 0x4c1\n  3177: ra = 66, jump @11\n      : @118 [@dyn 33] (gas: 25)\n  3182: a0 = s1 + 0x7ff\n  3186: a0 = a0 + 0x79\n  3189: ra = u64 [a0 + 0x450]\n  3193: t0 = u64 [a0 + 0x460]\n  3197: a1 = u64 [a0 + 0x448]\n  3201: a5 = u64 [a0 + 0x458]\n  3205: t2 = u64 [s1 + 0xd0]\n  3209: a0 = ra ^ t2\n  3212: a4 = ra <u t2\n  3215: u64 [s1 + 0x68] = a1\n  3218: a2 = u64 [s1 + 0xf8]\n  3222: a1 = a1 <u a2\n  3225: u64 [s1 + 0x60] = a1\n  3228: a4 = a1 if a0 == 0\n  3231: t1 = u64 [s1 + 0xd8]\n  3235: a1 = a5 <u t1\n  3238: a2 = u64 [s1 + 0xe0]\n  3242: a3 = t0 ^ a2\n  3245: a0 = t0 <u a2\n  3248: u64 [s1 + 0x58] = a1\n  3251: a0 = a1 if a3 == 0\n  3254: a1 = a5 ^ t1\n  3257: a1 = a1 | a3\n  3260: a0 = a4 if a1 == 0\n  3263: jump @120 if a0 == 0\n      : @119 (gas: 1)\n  3266: jump @727\n      : @120 (gas: 23)\n  3269: a0 = a5 - t1\n  3272: a1 = t0 - a2\n  3275: a2 = u64 [s1 + 0x58]\n  3278: a1 = a1 - a2\n  3281: a2 = a0 <u a4\n  3284: a1 = a1 - a2\n  3287: a0 = a0 - a4\n  3290: a2 = ra - t2\n  3293: a3 = u64 [s1 + 0x60]\n  3296: a2 = a2 - a3\n  3299: a3 = u64 [s1 + 0x68]\n  3302: a4 = u64 [s1 + 0xf8]\n  3306: a3 = a3 - a4\n  3309: a4 = s1 + 0x2078\n  3313: a5 = a4 + 0x100\n  3317: u64 [a5 + 0x88] = a3\n  3321: u64 [a5 + 0x90] = a2\n  3325: u64 [a5 + 0x98] = a0\n  3329: u64 [a5 + 0xa0] = a1\n  3333: a1 = s1 + 0x2200\n  3337: a0 = u64 [s1 + 0xf0]\n  3341: ra = 0x186\n  3345: jump @12\n      : @121 (gas: 10)\n  3348: u64 [a2 + 1056] = 0\n  3352: u64 [a2 + 1048] = 0\n  3356: u64 [a2 + 1040] = 0\n  3360: u64 [a2 + 1032] = 0\n  3364: a0 = s1 + 0x2000\n  3368: i32 a0 = a0 + 0x480\n  3372: ra = 0x44\n  3375: ecalli 17 // 'value_transferred'\n  3377: t0 = 0x46\n  3380: jump @1267\n      : @122 [@dyn 34] (gas: 1)\n  3383: t0 = 70, jump @1267\n      : @123 [@dyn 35] (gas: 1)\n  3388: t0 = 72, jump @1291\n      : @124 [@dyn 36] (gas: 1)\n  3393: jump @126 if a0 == 0\n      : @125 (gas: 1)\n  3396: jump @663\n      : @126 (gas: 3)\n  3399: a0 = u64 [s1 + 0xf8]\n  3403: a0 = i32 [a0]\n  3405: jump @128 if a0 >u 67\n      : @127 (gas: 1)\n  3409: jump @664\n      : @128 (gas: 4)\n  3412: a0 = s1 + 0x15e0\n  3416: ra = 0x4a\n  3419: t0 = 0x416\n  3423: jump @1286\n      : @129 [@dyn 37] (gas: 11)\n  3426: a1 = s1 + 0x1078\n  3430: a0 = u64 [a1 + 0x568]\n  3434: u64 [s1 + 0xf0] = a0\n  3438: a0 = u64 [a1 + 0x570]\n  3442: u64 [s1 + 0xe8] = a0\n  3446: a0 = u32 [a1 + 0x578]\n  3450: u64 [s1 + 0xe0] = a0\n  3454: a0 = s1 + 0x15c0\n  3458: ra = 0x4c\n  3461: t0 = 0x420\n  3465: jump @1292\n      : @130 [@dyn 38] (gas: 3)\n  3468: t0 = 0x4e\n  3471: a2 = s1 + 0x1078\n  3475: fallthrough\n      : @131 [@dyn 39] (gas: 13)\n  3476: a3 = a2 + 0x500\n  3480: a0 = u64 [a3 + 0x48]\n  3483: u64 [s1 + 0xf8] = a0\n  3487: u64 [a2 + 1344] = 0\n  3491: a0 = u64 [s1 + 0xe0]\n  3495: u64 [a3 + 0x38] = a0\n  3498: a0 = u64 [s1 + 0xe8]\n  3502: u64 [a3 + 0x30] = a0\n  3505: a1 = s1 + 0x15a0\n  3509: a0 = u64 [s1 + 0xf0]\n  3513: u64 [a3 + 0x28] = a0\n  3516: a0 = 0\n  3518: ra = 80, jump @9\n      : @132 [@dyn 40] (gas: 3)\n  3523: t0 = 0x52\n  3526: a1 = s1 + 0x1078\n  3530: fallthrough\n      : @133 [@dyn 41] (gas: 8)\n  3531: u64 [a1 + 1312] = 0\n  3535: u64 [a1 + 1304] = 0\n  3539: u64 [a1 + 1288] = 0x6\n  3544: a2 = a1\n  3546: a0 = 0x20\n  3549: a1 = s1 + 0x1580\n  3553: u64 [a2 + 1296] = 0\n  3557: ra = 84, jump @9\n      : @134 [@dyn 42] (gas: 3)\n  3562: a1 = 0x20150\n  3567: a0 = i32 [0x20150]\n  3572: jump @136 if a0 >u 63\n      : @135 (gas: 2)\n  3576: u32 [0x20150] = 0x40\n  3582: fallthrough\n      : @136 (gas: 14)\n  3583: a0 = sp + 0xffffffffffffffe0\n  3586: a2 = a0 & 0xffffffffffffffe0\n  3589: u64 [s1 + 0xe0] = a2\n  3593: sp = a2\n  3595: a0 = 0x20160\n  3600: i32 a0 = a0 + 0\n  3602: i32 a2 = a2 + 0\n  3604: u64 [s1 + 0xf0] = a1\n  3608: a1 = 0x40\n  3611: u64 [s1 + 0xe8] = a0\n  3615: ra = 0x56\n  3618: ecalli 9 // 'hash_keccak_256'\n  3620: t0 = 0x58\n  3623: jump @1245\n      : @137 [@dyn 43] (gas: 1)\n  3626: t0 = 88, jump @1245\n      : @138 [@dyn 44] (gas: 3)\n  3631: t0 = 0x5a\n  3634: a2 = s1 + 0x1078\n  3638: fallthrough\n      : @139 [@dyn 45] (gas: 8)\n  3639: u64 [a2 + 1280] = 0\n  3643: u64 [a2 + 1272] = 0\n  3647: u64 [a2 + 1264] = 0\n  3651: a1 = s1 + 0x1560\n  3655: a0 = u64 [s1 + 0xf8]\n  3659: u64 [a2 + 0x4e8] = a0\n  3663: a0 = 0\n  3665: ra = 92, jump @9\n      : @140 [@dyn 46] (gas: 14)\n  3670: a0 = u64 [s1 + 0xc0]\n  3674: a1 = s1 + 0x1078\n  3678: a2 = a1 + 0x400\n  3682: u64 [a2 + 0xe0] = a0\n  3686: a0 = u64 [s1 + 0xc8]\n  3690: u64 [a2 + 0xd8] = a0\n  3694: a0 = u64 [s1 + 0xd0]\n  3698: u64 [a2 + 0xd0] = a0\n  3702: a3 = a1\n  3704: a0 = 0x20\n  3707: a1 = s1 + 0x1540\n  3711: a2 = u64 [s1 + 0xd8]\n  3715: u64 [a3 + 0x4c8] = a2\n  3719: ra = 94, jump @9\n      : @141 [@dyn 47] (gas: 3)\n  3724: a1 = u64 [s1 + 0xf0]\n  3728: a0 = i32 [a1]\n  3730: jump @143 if a0 >u 63\n      : @142 (gas: 2)\n  3734: u32 [a1 + 0] = 0x40\n  3737: fallthrough\n      : @143 (gas: 4)\n  3738: a0 = sp + 0xffffffffffffffe0\n  3741: a0 = a0 & 0xffffffffffffffe0\n  3744: u64 [s1 + 0xf8] = a0\n  3748: t0 = 96, jump @1256\n      : @144 [@dyn 48] (gas: 4)\n  3753: ra = 0x62\n  3756: ecalli 9 // 'hash_keccak_256'\n  3758: t0 = 0x64\n  3761: jump @1248\n      : @145 [@dyn 49] (gas: 1)\n  3764: t0 = 100, jump @1248\n      : @146 [@dyn 50] (gas: 2)\n  3769: a0 = s1 + 0x1520\n  3773: ra = 102, jump @11\n      : @147 [@dyn 51] (gas: 3)\n  3778: t0 = 0x68\n  3781: a1 = s1 + 0x1078\n  3785: fallthrough\n      : @148 [@dyn 52] (gas: 12)\n  3786: a2 = a1 + 0x400\n  3790: a0 = u64 [a2 + 0xc0]\n  3794: u64 [s1 + 0xf8] = a0\n  3798: a0 = u64 [a2 + 0xb8]\n  3802: u64 [s1 + 0xf0] = a0\n  3806: a0 = u64 [a2 + 0xb0]\n  3810: u64 [s1 + 0xe8] = a0\n  3814: a0 = u64 [a2 + 0xa8]\n  3818: u64 [s1 + 0xe0] = a0\n  3822: a0 = s1 + 0x1500\n  3826: a1 = 0x40\n  3829: ra = 106, jump @7\n      : @149 [@dyn 53] (gas: 3)\n  3834: a3 = s1 + 0x1078\n  3838: a5 = a3 + 0x400\n  3842: t0 = 108, jump @1281\n      : @150 [@dyn 54] (gas: 1)\n  3847: jump @152 if a0 == 0\n      : @151 (gas: 1)\n  3850: jump @646\n      : @152 (gas: 14)\n  3853: a0 = u64 [s1 + 0xe0]\n  3857: a2 = a3 + 0x400\n  3861: u64 [a2 + 0x68] = a0\n  3864: a0 = u64 [s1 + 0xe8]\n  3868: u64 [a2 + 0x70] = a0\n  3871: a0 = u64 [s1 + 0xf0]\n  3875: u64 [a2 + 0x78] = a0\n  3878: a1 = s1 + 0x14e0\n  3882: a0 = u64 [s1 + 0xf8]\n  3886: u64 [a2 + 0x80] = a0\n  3890: a0 = a4\n  3892: u64 [s1 + 0xf8] = a4\n  3896: ra = 0x138\n  3900: jump @9\n      : @153 (gas: 10)\n  3903: u64 [a3 + 1984] = 0\n  3907: u64 [a3 + 1976] = 0\n  3911: u64 [a3 + 1968] = 0\n  3915: u64 [a3 + 1960] = 0\n  3919: a0 = s1 + 0x2000\n  3923: i32 a0 = a0 + 0x20\n  3926: ra = 0x6e\n  3929: ecalli 17 // 'value_transferred'\n  3931: t0 = 0x70\n  3934: jump @1287\n      : @154 [@dyn 55] (gas: 1)\n  3937: t0 = 112, jump @1287\n      : @155 [@dyn 56] (gas: 8)\n  3942: a0 = u64 [a4 + 0xb8]\n  3946: a1 = u64 [a4 + 0xc0]\n  3950: a2 = u64 [a4 + 0xb0]\n  3954: a3 = u64 [a4 + 0xa8]\n  3958: a1 = a1 | a2\n  3961: a0 = a0 | a3\n  3964: a0 = a0 | a1\n  3967: jump @157 if a0 == 0\n      : @156 (gas: 1)\n  3970: jump @665\n      : @157 (gas: 3)\n  3973: a0 = u64 [s1 + 0xf8]\n  3977: a0 = i32 [a0]\n  3979: jump @159 if a0 >u 35\n      : @158 (gas: 1)\n  3983: jump @666\n      : @159 (gas: 7)\n  3986: a0 = s1 + 0x2000\n  3990: i32 a0 = a0 + 0x40\n  3993: a1 = 0x4\n  3996: ra = 0x72\n  3999: ecalli 2 // 'call_data_load'\n  4001: t0 = 0x74\n  4004: jump @1287\n      : @160 [@dyn 57] (gas: 1)\n  4007: t0 = 116, jump @1287\n      : @161 [@dyn 58] (gas: 7)\n  4012: a0 = u64 [a4 + 0xe0]\n  4016: a1 = u64 [a4 + 0xd8]\n  4020: a2 = u64 [a4 + 0xd0]\n  4024: a0 = a0 | a1\n  4027: a1 = a2 <u 0x1\n  4030: a1 = 0 if a0 != 0\n  4032: jump @163 if a1 != 0\n      : @162 (gas: 1)\n  4035: jump @667\n      : @163 (gas: 6)\n  4038: a0 = u64 [a3 + 0x7c8]\n  4042: u64 [s1 + 0x38] = a0\n  4045: a0 = s1 + 0x2000\n  4049: i32 a0 = a0 + 0x60\n  4052: ecalli 10 // 'now'\n  4054: fallthrough\n      : @164 (gas: 50)\n  4055: a0 = s1 + 0x2078\n  4059: t2 = u64 [a0]\n  4061: a3 = u64 [a0 + 0xfffffffffffffff8]\n  4064: u64 [s1 + 0xb0] = a3\n  4068: a1 = s1 + 0x1878\n  4072: t0 = u64 [a1 + 0x7f0]\n  4076: ra = u64 [a0 + 0xffffffffffffffe8]\n  4079: a0 = clz t2\n  4081: a1 = clz a3\n  4083: a2 = a1 + 0x40\n  4086: a2 = a0 if t2 != 0\n  4089: a0 = clz t0\n  4091: a1 = clz ra\n  4093: a1 = a1 + 0x40\n  4096: a1 = a0 if t0 != 0\n  4099: a0 = a1 + 0x80\n  4103: a3 = a3 | t2\n  4106: a2 = a0 if a3 == 0\n  4109: a5 = a0 <u a1\n  4112: a5 = 0 if a3 != 0\n  4114: a4 = a5 >u 0\n  4116: a0 = a2 <u 0xf0\n  4120: a3 = a0 ^ 0x1\n  4123: a4 = a3 if a5 == 0\n  4126: a0 = a4 <u 0x1\n  4129: a0 = a0 + 0xffffffffffffffff\n  4132: a1 = -a4\n  4134: a5 = -a5\n  4136: a3 = a5 - a3\n  4139: t1 = 0xef - a2\n  4143: u64 [s1 + 0xf8] = a1\n  4147: a5 = a1 >u 0\n  4149: a1 = a0 >u 0\n  4151: a1 = a5 if a0 == 0\n  4154: a5 = t1 <u 0x100\n  4158: a5 = a5 ^ 0x1\n  4161: a2 = a3 >u 0\n  4163: a5 = a2 if a3 != 0\n  4166: a5 = a1 if a4 != 0\n  4169: u64 [s1 + 0xa0] = t2\n  4173: u64 [s1 + 0xb8] = t0\n  4177: a1 = t0 | t2\n  4180: t2 = u64 [s1 + 0xb0]\n  4184: a2 = ra | t2\n  4187: a1 = a1 | a2\n  4190: a1 = a1 <u 0x1\n  4193: a1 = a1 | a5\n  4196: a4 = ra\n  4198: a4 = 0 if a1 != 0\n  4200: jump @166 if a1 == 0\n      : @165 (gas: 1)\n  4203: jump @479\n      : @166 (gas: 6)\n  4206: a1 = t1 ^ 0xff\n  4210: a5 = u64 [s1 + 0xf8]\n  4214: a1 = a1 | a5\n  4217: a2 = a3 | a0\n  4220: a1 = a1 | a2\n  4223: jump @168 if a1 != 0\n      : @167 (gas: 1)\n  4226: jump @479\n      : @168 (gas: 20)\n  4229: t0 = ra\n  4231: a2 = t1 + 0x1\n  4234: u64 [s1 + 0xf0] = a2\n  4238: a1 = a2 <u 0x1\n  4241: a1 = a1 + a3\n  4244: u64 [s1 + 0xe0] = a1\n  4248: a1 = a1 | a2\n  4251: a1 = a1 <u 0x1\n  4254: a1 = a1 + a5\n  4257: u64 [s1 + 0xd0] = a1\n  4261: a1 = a1 <u a5\n  4264: a0 = a0 + a1\n  4267: u64 [s1 + 0xd8] = a0\n  4271: a1 = 0xff - t1\n  4275: u64 [s1 + 0xc8] = a1\n  4279: a2 = 0x80 - a1\n  4283: a0 = ra\n  4285: u64 [s1 + 0xa8] = t0\n  4289: a1 = u64 [s1 + 0xb8]\n  4293: ra = 118, jump @1293\n      : @169 [@dyn 59] (gas: 6)\n  4298: u64 [s1 + 0xc0] = a0\n  4302: u64 [s1 + 0xf8] = a1\n  4306: a0 = u64 [s1 + 0xb0]\n  4310: a1 = u64 [s1 + 0xa0]\n  4314: a2 = u64 [s1 + 0xc8]\n  4318: ra = 120, jump @1298\n      : @170 [@dyn 60] (gas: 7)\n  4323: u64 [s1 + 0x90] = a0\n  4327: u64 [s1 + 0x88] = a1\n  4331: a0 = u64 [s1 + 0xc8]\n  4335: a2 = a0 + 0xffffffffffffff80\n  4338: a0 = u64 [s1 + 0xa8]\n  4342: a1 = u64 [s1 + 0xb8]\n  4346: ra = 122, jump @1298\n      : @171 [@dyn 61] (gas: 8)\n  4351: u64 [s1 + 0x80] = a0\n  4355: u64 [s1 + 0x78] = a1\n  4358: a2 = u64 [s1 + 0xc8]\n  4362: a0 = a2 <u 0x80\n  4366: u64 [s1 + 0x98] = a0\n  4370: a0 = u64 [s1 + 0xa8]\n  4374: a1 = u64 [s1 + 0xb8]\n  4378: ra = 124, jump @1298\n      : @172 [@dyn 62] (gas: 11)\n  4383: a4 = u64 [s1 + 0x98]\n  4387: t0 = u64 [s1 + 0xd0]\n  4391: a5 = u64 [s1 + 0xd8]\n  4395: a2 = u64 [s1 + 0xe0]\n  4399: a5 = a5 | a2\n  4402: a3 = u64 [s1 + 0xf0]\n  4406: a3 = a3 | t0\n  4409: a3 = a3 | a5\n  4412: a0 = 0 if a4 == 0\n  4414: u64 [s1 + 0xe8] = a0\n  4418: jump @174 if a3 == 0\n      : @173 (gas: 1)\n  4421: jump @470\n      : @174 (gas: 2)\n  4424: a4 = 0\n  4426: jump @478\n      : @175 (gas: 11)\n  4429: a0 = s1 + 0x2078\n  4433: u64 [a0 + 768] = 0\n  4437: u64 [a0 + 760] = 0\n  4441: u64 [a0 + 752] = 0\n  4445: u64 [a0 + 744] = 0\n  4449: a0 = s1 + 0x2000\n  4453: i32 a0 = a0 + 0x360\n  4457: ra = 0x7e\n  4460: ecalli 17 // 'value_transferred'\n  4462: t0 = 0x80\n  4466: jump @1272\n      : @176 [@dyn 63] (gas: 1)\n  4469: t0 = 128, jump @1272\n      : @177 [@dyn 64] (gas: 8)\n  4475: a0 = u64 [a4 + 0xf8]\n  4479: a1 = u64 [a3 + 0x300]\n  4483: a2 = u64 [a4 + 0xf0]\n  4487: a3 = u64 [a4 + 0xe8]\n  4491: a1 = a1 | a2\n  4494: a0 = a0 | a3\n  4497: a0 = a0 | a1\n  4500: jump @179 if a0 == 0\n      : @178 (gas: 1)\n  4503: jump @668\n      : @179 (gas: 3)\n  4506: a0 = u64 [s1 + 0xf8]\n  4510: a0 = i32 [a0]\n  4512: jump @181 if a0 >u 67\n      : @180 (gas: 1)\n  4516: jump @669\n      : @181 (gas: 4)\n  4519: a0 = s1 + 0x1020\n  4523: ra = 0x82\n  4527: t0 = 0x416\n  4531: jump @1286\n      : @182 [@dyn 65] (gas: 14)\n  4534: a0 = s1 + 0x7ff\n  4538: a0 = a0 + 0x79\n  4541: a2 = a0 + 0x700\n  4545: a1 = u64 [a2 + 0xb8]\n  4549: u64 [s1 + 0xc8] = a1\n  4553: a1 = u64 [a2 + 0xb0]\n  4557: u64 [s1 + 0xd8] = a1\n  4561: a0 = u64 [a2 + 0xa8]\n  4565: u64 [s1 + 0xd0] = a0\n  4569: a0 = s1 + 0x2000\n  4573: i32 a0 = a0 + 0x380\n  4577: a1 = 0x24\n  4580: ecalli 2 // 'call_data_load'\n  4582: fallthrough\n      : @183 (gas: 18)\n  4583: a0 = s1 + 0x2078\n  4587: a5 = a0 + 0x300\n  4591: a4 = u64 [a5 + 0x20]\n  4594: a3 = u64 [a5 + 0x18]\n  4597: a2 = u64 [a5 + 0x10]\n  4600: a1 = u64 [a5 + 0x8]\n  4603: u64 [s1 + 0xf0] = a2\n  4607: u64 [s1 + 0xe0] = a4\n  4611: a0 = a2 | a4\n  4614: u64 [s1 + 0xf8] = a1\n  4618: a1 = a1 | a3\n  4621: a1 = a1 | a0\n  4624: a1 = a1 >> 0x20\n  4627: u64 [s1 + 0xe8] = a3\n  4631: a0 = a0 | a3\n  4634: a0 = a0 << 0x20\n  4637: a0 = a0 | a1\n  4640: jump @185 if a0 == 0\n      : @184 (gas: 1)\n  4643: jump @670\n      : @185 (gas: 15)\n  4646: a0 = u64 [s1 + 0xc8]\n  4650: a0 = a0 << 0x20\n  4653: a0 = a0 >> 0x20\n  4656: a2 = s1 + 0x7ff\n  4660: a2 = a2 + 0x79\n  4663: u64 [a2 + 1952] = 0\n  4667: a1 = u64 [s1 + 0xd0]\n  4671: a3 = a2 + 0x700\n  4675: u64 [a3 + 0x88] = a1\n  4679: a1 = u64 [s1 + 0xd8]\n  4683: u64 [a3 + 0x90] = a1\n  4687: a1 = s1 + 0x1000\n  4691: u64 [a3 + 0x98] = a0\n  4695: a0 = 0\n  4697: ra = 132, jump @9\n      : @186 [@dyn 66] (gas: 11)\n  4703: a1 = s1 + 0x7ff\n  4707: a1 = a1 + 0x79\n  4710: u64 [a1 + 1920] = 0\n  4714: u64 [a1 + 1912] = 0\n  4718: u64 [a1 + 1896] = 0x3\n  4723: a2 = a1\n  4725: a0 = 0x20\n  4728: a1 = s1 + 0x7ff\n  4732: a1 = a1 + 0x7e1\n  4736: u64 [a2 + 1904] = 0\n  4740: ra = 134, jump @9\n      : @187 [@dyn 67] (gas: 3)\n  4746: a1 = 0x20150\n  4751: a0 = i32 [0x20150]\n  4756: jump @189 if a0 >u 63\n      : @188 (gas: 2)\n  4760: u32 [0x20150] = 0x40\n  4766: fallthrough\n      : @189 (gas: 14)\n  4767: a0 = sp + 0xffffffffffffffe0\n  4770: a2 = a0 & 0xffffffffffffffe0\n  4773: u64 [s1 + 0xc8] = a2\n  4777: sp = a2\n  4779: a0 = 0x20160\n  4784: i32 a0 = a0 + 0\n  4786: i32 a2 = a2 + 0\n  4788: u64 [s1 + 0xd8] = a1\n  4792: a1 = 0x40\n  4795: u64 [s1 + 0xd0] = a0\n  4799: ra = 0x88\n  4803: ecalli 9 // 'hash_keccak_256'\n  4805: t0 = 0x8a\n  4809: jump @1273\n      : @190 [@dyn 68] (gas: 1)\n  4812: t0 = 138, jump @1273\n      : @191 [@dyn 69] (gas: 22)\n  4818: u64 [s1 + 0xb0] = a0\n  4822: a0 = reverse a3\n  4824: u64 [s1 + 0xa8] = a0\n  4828: a0 = sp + 0xffffffffffffffe0\n  4831: a0 = a0 & 0xffffffffffffffe0\n  4834: u64 [s1 + 0xc8] = a0\n  4838: sp = a0\n  4840: a2 = s1 + 0x7ff\n  4844: a2 = a2 + 0x79\n  4847: a0 = u64 [s1 + 0xe0]\n  4851: a3 = a2 + 0x700\n  4855: u64 [a3 + 0x60] = a0\n  4858: a0 = u64 [s1 + 0xe8]\n  4862: u64 [a3 + 0x58] = a0\n  4865: a0 = u64 [s1 + 0xf0]\n  4869: u64 [a3 + 0x50] = a0\n  4872: a1 = s1 + 0x7ff\n  4876: a1 = a1 + 0x7c1\n  4880: a0 = u64 [s1 + 0xf8]\n  4884: u64 [a3 + 0x48] = a0\n  4887: a0 = 0\n  4889: ra = 140, jump @9\n      : @192 [@dyn 70] (gas: 16)\n  4895: a1 = s1 + 0x7ff\n  4899: a1 = a1 + 0x79\n  4902: a0 = u64 [s1 + 0xa8]\n  4906: a2 = a1 + 0x700\n  4910: u64 [a2 + 0x40] = a0\n  4913: a0 = u64 [s1 + 0xb0]\n  4917: u64 [a2 + 0x38] = a0\n  4920: a0 = u64 [s1 + 0xb8]\n  4924: u64 [a2 + 0x30] = a0\n  4927: a3 = a1\n  4929: a0 = 0x20\n  4932: a1 = s1 + 0x7ff\n  4936: a1 = a1 + 0x7a1\n  4940: a2 = u64 [s1 + 0xc0]\n  4944: u64 [a3 + 0x728] = a2\n  4948: ra = 142, jump @9\n      : @193 [@dyn 71] (gas: 3)\n  4954: a1 = u64 [s1 + 0xd8]\n  4958: a0 = i32 [a1]\n  4960: jump @195 if a0 >u 63\n      : @194 (gas: 2)\n  4964: u32 [a1 + 0] = 0x40\n  4967: fallthrough\n      : @195 (gas: 11)\n  4968: a0 = sp + 0xffffffffffffffe0\n  4971: a0 = a0 & 0xffffffffffffffe0\n  4974: u64 [s1 + 0xf8] = a0\n  4978: sp = a0\n  4980: i32 a2 = a0 + 0\n  4982: a1 = 0x40\n  4985: a0 = u64 [s1 + 0xd0]\n  4989: ra = 0x90\n  4993: ecalli 9 // 'hash_keccak_256'\n  4995: t0 = 0x92\n  4999: jump @1288\n      : @196 [@dyn 72] (gas: 1)\n  5002: t0 = 146, jump @1288\n      : @197 [@dyn 73] (gas: 15)\n  5008: u64 [s1 + 0xe0] = a5\n  5012: a4 = reverse a1\n  5014: u64 [s1 + 0xe8] = a4\n  5018: a2 = reverse a2\n  5020: u64 [s1 + 0xf0] = a2\n  5024: a0 = reverse a3\n  5026: u64 [s1 + 0xf8] = a0\n  5030: a1 = u64 [s1 + 0xc8]\n  5034: u64 [a1 + 0x18] = a0\n  5037: u64 [a1 + 0x10] = a2\n  5040: u64 [a1 + 0x8] = a4\n  5043: u64 [a1] = a5\n  5045: a0 = s1 + 0x7ff\n  5049: a0 = a0 + 0x781\n  5053: ra = 148, jump @11\n      : @198 [@dyn 74] (gas: 34)\n  5059: a1 = s1 + 0x7ff\n  5063: a1 = a1 + 0x79\n  5066: a2 = a1 + 0x700\n  5070: a0 = u64 [a2 + 0x20]\n  5073: u64 [s1 + 0xd8] = a0\n  5077: a0 = u64 [a2 + 0x18]\n  5080: u64 [s1 + 0xd0] = a0\n  5084: a0 = u64 [a2 + 0x10]\n  5087: a5 = a1\n  5089: u64 [s1 + 0xc8] = a0\n  5093: a0 = u64 [s1 + 0xe0]\n  5097: a0 = a0 + 0x1\n  5100: a1 = a0 <u 0x1\n  5103: a2 = u64 [s1 + 0xe8]\n  5107: a1 = a1 + a2\n  5110: a2 = a0 | a1\n  5113: a2 = a2 <u 0x1\n  5116: a3 = u64 [s1 + 0xf0]\n  5120: a2 = a2 + a3\n  5123: a3 = a2 <u a3\n  5126: a4 = u64 [s1 + 0xf8]\n  5130: a3 = a3 + a4\n  5133: a4 = u64 [a5 + 0x708]\n  5137: u64 [s1 + 0xf8] = a4\n  5141: a4 = s1 + 0x2078\n  5145: a5 = a4 + 0x300\n  5149: u64 [a5 + 0x30] = a1\n  5152: u64 [a5 + 0x28] = a0\n  5155: u64 [a5 + 0x38] = a2\n  5158: u64 [a5 + 0x40] = a3\n  5161: a0 = s1 + 0x7ff\n  5165: a0 = a0 + 0x761\n  5169: a1 = s1 + 0x23a0\n  5173: ra = 150, jump @11\n      : @199 [@dyn 75] (gas: 10)\n  5179: a1 = s1 + 0x7ff\n  5183: a1 = a1 + 0x79\n  5186: a0 = u64 [a1 + 0x6f0]\n  5190: u64 [s1 + 0xc0] = a0\n  5194: a0 = u64 [a1 + 0x6e8]\n  5198: u64 [s1 + 0xe0] = a0\n  5202: a0 = s1 + 0x7ff\n  5206: a0 = a0 + 0x741\n  5210: a1 = 0x40\n  5213: ra = 152, jump @7\n      : @200 [@dyn 76] (gas: 15)\n  5219: a2 = s1 + 0x7ff\n  5223: a2 = a2 + 0x79\n  5226: t0 = u64 [a2 + 0x6e0]\n  5230: a1 = a2 + 0x600\n  5234: a5 = u64 [a1 + 0xd8]\n  5238: a4 = u64 [a1 + 0xd0]\n  5242: a0 = u64 [a1 + 0xc8]\n  5246: a3 = a4 | t0\n  5249: a1 = a0 | a5\n  5252: a1 = a1 | a3\n  5255: a1 = a1 >> 0x20\n  5258: a3 = a3 | a5\n  5261: a3 = a3 << 0x20\n  5264: a1 = a1 | a3\n  5267: jump @202 if a1 == 0\n      : @201 (gas: 1)\n  5270: jump @646\n      : @202 (gas: 15)\n  5273: a1 = u64 [s1 + 0xf8]\n  5277: u64 [a2 + 0x6a8] = a1\n  5281: a1 = u64 [s1 + 0xc8]\n  5285: u64 [a2 + 0x6b0] = a1\n  5289: a1 = u64 [s1 + 0xd0]\n  5293: u64 [a2 + 0x6b8] = a1\n  5297: a1 = s1 + 0x7ff\n  5301: a1 = a1 + 0x721\n  5305: a3 = u64 [s1 + 0xd8]\n  5309: u64 [a2 + 0x6c0] = a3\n  5313: u64 [s1 + 0xf0] = a0\n  5317: u64 [s1 + 0xe8] = a4\n  5321: u64 [s1 + 0xd8] = t0\n  5325: u64 [s1 + 0xf8] = a5\n  5329: ra = 154, jump @9\n      : @203 [@dyn 77] (gas: 11)\n  5335: a2 = u64 [s1 + 0xe8]\n  5339: a1 = u64 [s1 + 0xf0]\n  5343: a0 = u64 [s1 + 0xf8]\n  5347: a3 = u64 [s1 + 0xd8]\n  5351: a3 = a3 | a0\n  5354: a4 = 0x100000000\n  5364: a0 = 0xffffffe0\n  5374: a0 = a1 <u a0\n  5377: a0 = 0 if a2 != 0\n  5379: a0 = 0 if a3 != 0\n  5381: jump @205 if a0 != 0\n      : @204 (gas: 1)\n  5384: jump @646\n      : @205 (gas: 14)\n  5387: i32 a0 = a1 + 0x20\n  5390: a1 = s1 + 0x7ff\n  5394: a1 = a1 + 0x79\n  5397: u64 [s1 + 0xf8] = a3\n  5401: a3 = a1\n  5403: u64 [a1 + 1696] = 0\n  5407: u64 [a1 + 1688] = 0\n  5411: a1 = u64 [s1 + 0xe0]\n  5415: u64 [a3 + 0x688] = a1\n  5419: a1 = s1 + 0x7ff\n  5423: a1 = a1 + 0x701\n  5427: u64 [a3 + 1680] = 0\n  5431: u64 [s1 + 0xe0] = a4\n  5435: ra = 156, jump @9\n      : @206 [@dyn 78] (gas: 9)\n  5441: a2 = u64 [s1 + 0xf0]\n  5445: a0 = u64 [s1 + 0xe0]\n  5449: a0 = a0 + 0xffffffffffffffc0\n  5452: a0 = a2 <u a0\n  5455: a1 = u64 [s1 + 0xe8]\n  5459: a0 = 0 if a1 != 0\n  5461: a1 = u64 [s1 + 0xf8]\n  5465: a0 = 0 if a1 != 0\n  5467: jump @208 if a0 != 0\n      : @207 (gas: 1)\n  5470: jump @646\n      : @208 (gas: 12)\n  5473: a0 = u8 [s1 + 0xc0]\n  5477: a1 = a0 >u 0\n  5479: i32 a0 = a2 + 0x40\n  5482: a3 = s1 + 0x7ff\n  5486: a3 = a3 + 0x79\n  5489: u64 [a3 + 1664] = 0\n  5493: u64 [a3 + 1656] = 0\n  5497: u64 [a3 + 0x668] = a1\n  5501: a1 = s1 + 0x7ff\n  5505: a1 = a1 + 0x6e1\n  5509: u64 [a3 + 1648] = 0\n  5513: ra = 158, jump @9\n      : @209 [@dyn 79] (gas: 3)\n  5519: a1 = 0x60\n  5522: a0 = u64 [s1 + 0xf0]\n  5526: ra = 160, jump @20\n      : @210 [@dyn 80] (gas: 5)\n  5532: i32 a1 = a0 + 0\n  5534: a2 = 0x60\n  5537: a0 = 0\n  5539: ecalli 14 // 'seal_return'\n  5541: jump @379\n      : @211 (gas: 10)\n  5544: u64 [a2 + 1280] = 0\n  5548: u64 [a2 + 1272] = 0\n  5552: u64 [a2 + 1264] = 0\n  5556: u64 [a2 + 1256] = 0\n  5560: a0 = s1 + 0x2000\n  5564: i32 a0 = a0 + 0x560\n  5568: ra = 0xa2\n  5572: ecalli 17 // 'value_transferred'\n  5574: t0 = 0xa4\n  5578: jump @1267\n      : @212 [@dyn 81] (gas: 1)\n  5581: t0 = 164, jump @1267\n      : @213 [@dyn 82] (gas: 8)\n  5587: a0 = u64 [a4 + 0xf8]\n  5591: a1 = u64 [a3 + 0x500]\n  5595: a2 = u64 [a4 + 0xf0]\n  5599: a3 = u64 [a4 + 0xe8]\n  5603: a1 = a1 | a2\n  5606: a0 = a0 | a3\n  5609: a0 = a0 | a1\n  5612: jump @215 if a0 == 0\n      : @214 (gas: 1)\n  5615: jump @671\n      : @215 (gas: 3)\n  5618: a0 = u64 [s1 + 0xf8]\n  5622: a0 = i32 [a0]\n  5624: jump @217 if a0 >u 35\n      : @216 (gas: 1)\n  5628: jump @672\n      : @217 (gas: 5)\n  5631: a0 = s1 + 0x2000\n  5635: i32 a0 = a0 + 0x580\n  5639: a1 = 0x4\n  5642: ecalli 2 // 'call_data_load'\n  5644: fallthrough\n      : @218 (gas: 14)\n  5645: a0 = s1 + 0x2078\n  5649: a5 = a0 + 0x500\n  5653: a1 = u64 [a5 + 0x20]\n  5656: a2 = u64 [a5 + 0x18]\n  5659: a3 = u64 [a5 + 0x10]\n  5662: a4 = u64 [a5 + 0x8]\n  5665: u64 [s1 + 0x58] = a1\n  5668: u64 [s1 + 0x48] = a3\n  5671: a0 = a3 | a1\n  5674: u64 [s1 + 0x50] = a2\n  5677: u64 [s1 + 0x40] = a4\n  5680: a1 = a4 | a2\n  5683: a0 = a0 | a1\n  5686: jump @220 if a0 != 0\n      : @219 (gas: 1)\n  5689: jump @673\n      : @220 (gas: 9)\n  5692: a0 = 0x30160\n  5697: u64 [s1 + 0x80] = a0\n  5701: i32 a0 = a0 + 0\n  5703: u64 [s1 + 0x28] = a0\n  5706: ra = 0xa6\n  5710: ecalli 4 // 'caller'\n  5712: a2 = u64 [s1 + 0x80]\n  5716: t0 = 0xa8\n  5720: jump @1242\n      : @221 [@dyn 83] (gas: 2)\n  5723: a2 = u64 [s1 + 0x80]\n  5727: t0 = 168, jump @1242\n      : @222 [@dyn 84] (gas: 8)\n  5733: u64 [a2 + 1280] = 0\n  5737: a4 = a2 + 0x400\n  5741: u64 [a4 + 0xf8] = a1\n  5745: u64 [a4 + 0xf0] = a0\n  5749: a1 = s1 + 0x1d60\n  5753: u64 [a4 + 0xe8] = a3\n  5757: a0 = 0\n  5759: ra = 170, jump @9\n      : @223 [@dyn 85] (gas: 9)\n  5765: a1 = s1 + 0x1878\n  5769: u64 [a1 + 1248] = 0\n  5773: u64 [a1 + 1240] = 0\n  5777: u64 [a1 + 1224] = 0x4\n  5782: a2 = a1\n  5784: a0 = 0x20\n  5787: a1 = s1 + 0x1d40\n  5791: u64 [a2 + 1232] = 0\n  5795: ra = 172, jump @9\n      : @224 [@dyn 86] (gas: 7)\n  5801: a0 = sp + 0xffffffffffffffe0\n  5804: a0 = a0 & 0xffffffffffffffe0\n  5807: u64 [s1 + 0xf8] = a0\n  5811: sp = a0\n  5813: a2 = 0x20150\n  5818: a0 = i32 [0x20150]\n  5823: jump @226 if a0 >u 63\n      : @225 (gas: 2)\n  5827: u32 [0x20150] = 0x40\n  5833: fallthrough\n      : @226 (gas: 16)\n  5834: u64 [s1 + 0x30] = a2\n  5837: a0 = 0xffffffff\n  5847: u64 [s1 + 0x60] = a0\n  5850: a0 = sp + 0xffffffffffffffe0\n  5853: a2 = a0 & 0xffffffffffffffe0\n  5856: u64 [s1 + 0xf0] = a2\n  5860: sp = a2\n  5862: a0 = 0x20160\n  5867: i32 a0 = a0 + 0\n  5869: i32 a2 = a2 + 0\n  5871: a1 = 0x40\n  5874: u64 [s1 + 0x38] = a0\n  5877: ra = 0xae\n  5881: ecalli 9 // 'hash_keccak_256'\n  5883: t0 = 0xb0\n  5887: jump @1260\n      : @227 [@dyn 87] (gas: 1)\n  5890: t0 = 176, jump @1260\n      : @228 [@dyn 88] (gas: 3)\n  5896: i32 a0 = a0 + 0xfffffffffffffd20\n  5900: a0 = a0 + s1\n  5903: ra = 178, jump @11\n      : @229 [@dyn 89] (gas: 4)\n  5909: a0 = s1 + 0x1878\n  5913: a2 = u32 [a0 + 0x4a8]\n  5917: a0 = u64 [s1 + 0x60]\n  5920: jump @231 if a2 != a0\n      : @230 (gas: 1)\n  5923: jump @678\n      : @231 (gas: 11)\n  5926: a1 = a2 + 0x1\n  5929: u64 [s1 + 0x70] = a1\n  5932: a0 = a1 <u 0x1\n  5935: u64 [s1 + 0x68] = a0\n  5938: a0 = a0 | a1\n  5941: a0 = a0 <u 0x1\n  5944: u64 [s1 + 0x78] = a0\n  5947: a0 = s1 + 0x1d00\n  5951: u64 [s1 + 0xf0] = a2\n  5955: a1 = u64 [s1 + 0xf8]\n  5959: ra = 180, jump @11\n      : @232 [@dyn 90] (gas: 22)\n  5965: a3 = s1 + 0x1878\n  5969: a0 = u32 [a3 + 0x48c]\n  5973: a4 = a3 + 0x400\n  5977: a1 = u64 [a4 + 0x98]\n  5981: a0 = a0 << 0x20\n  5984: a2 = u64 [a4 + 0x90]\n  5988: a3 = u64 [a4 + 0xa0]\n  5992: a4 = u64 [s1 + 0x78]\n  5995: a1 = a1 | a4\n  5998: a4 = u64 [s1 + 0x70]\n  6001: a0 = a0 | a4\n  6004: a4 = u64 [s1 + 0x68]\n  6007: a2 = a2 | a4\n  6010: a4 = s1 + 0x2078\n  6014: a5 = a4 + 0x500\n  6018: u64 [a5 + 0x40] = a3\n  6021: u64 [a5 + 0x30] = a2\n  6024: u64 [a5 + 0x28] = a0\n  6027: u64 [a5 + 0x38] = a1\n  6030: a1 = s1 + 0x25a0\n  6034: a0 = u64 [s1 + 0xf8]\n  6038: ra = 182, jump @12\n      : @233 [@dyn 91] (gas: 2)\n  6044: a1 = u64 [s1 + 0xf0]\n  6048: jump @235 if a1 <=u 254\n      : @234 (gas: 1)\n  6053: jump @680\n      : @235 (gas: 4)\n  6056: a0 = s1 + 0x2000\n  6060: i32 a0 = a0 + 0x5c0\n  6064: ecalli 10 // 'now'\n  6066: fallthrough\n      : @236 (gas: 49)\n  6067: a0 = s1 + 0x2078\n  6071: t2 = u64 [a0 + 0x560]\n  6075: a3 = u64 [a0 + 0x558]\n  6079: u64 [s1 + 0xb8] = a3\n  6083: t0 = u64 [a0 + 0x550]\n  6087: ra = u64 [a0 + 0x548]\n  6091: a0 = clz t2\n  6093: a1 = clz a3\n  6095: a2 = a1 + 0x40\n  6098: a2 = a0 if t2 != 0\n  6101: a0 = clz t0\n  6103: a1 = clz ra\n  6105: a1 = a1 + 0x40\n  6108: a1 = a0 if t0 != 0\n  6111: a0 = a1 + 0x80\n  6115: a3 = a3 | t2\n  6118: a2 = a0 if a3 == 0\n  6121: a5 = a0 <u a1\n  6124: a5 = 0 if a3 != 0\n  6126: a4 = a5 >u 0\n  6128: a0 = a2 <u 0xf0\n  6132: a3 = a0 ^ 0x1\n  6135: a4 = a3 if a5 == 0\n  6138: a0 = a4 <u 0x1\n  6141: a0 = a0 + 0xffffffffffffffff\n  6144: a1 = -a4\n  6146: a5 = -a5\n  6148: a3 = a5 - a3\n  6151: t1 = 0xef - a2\n  6155: u64 [s1 + 0xf8] = a1\n  6159: a5 = a1 >u 0\n  6161: a1 = a0 >u 0\n  6163: a1 = a5 if a0 == 0\n  6166: a5 = t1 <u 0x100\n  6170: a5 = a5 ^ 0x1\n  6173: a2 = a3 >u 0\n  6175: a5 = a2 if a3 != 0\n  6178: a5 = a1 if a4 != 0\n  6181: u64 [s1 + 0xa0] = t2\n  6185: a1 = t0 | t2\n  6188: t2 = t0\n  6190: a4 = u64 [s1 + 0xb8]\n  6194: a2 = ra | a4\n  6197: a1 = a1 | a2\n  6200: a1 = a1 <u 0x1\n  6203: a1 = a1 | a5\n  6206: t0 = ra\n  6208: ra = 0 if a1 != 0\n  6210: jump @238 if a1 == 0\n      : @237 (gas: 1)\n  6213: jump @583\n      : @238 (gas: 6)\n  6216: a1 = t1 ^ 0xff\n  6220: a5 = u64 [s1 + 0xf8]\n  6224: a1 = a1 | a5\n  6227: a2 = a3 | a0\n  6230: a1 = a1 | a2\n  6233: jump @240 if a1 != 0\n      : @239 (gas: 1)\n  6236: jump @583\n      : @240 (gas: 20)\n  6239: a2 = t1 + 0x1\n  6242: u64 [s1 + 0xf0] = a2\n  6246: a1 = a2 <u 0x1\n  6249: a1 = a1 + a3\n  6252: u64 [s1 + 0xe0] = a1\n  6256: a1 = a1 | a2\n  6259: a1 = a1 <u 0x1\n  6262: a1 = a1 + a5\n  6265: u64 [s1 + 0xd0] = a1\n  6269: a1 = a1 <u a5\n  6272: a0 = a0 + a1\n  6275: u64 [s1 + 0xd8] = a0\n  6279: a1 = 0xff - t1\n  6283: u64 [s1 + 0xc8] = a1\n  6287: a2 = 0x80 - a1\n  6291: a0 = t0\n  6293: u64 [s1 + 0xb0] = t0\n  6297: a1 = t2\n  6299: u64 [s1 + 0xa8] = t2\n  6303: ra = 184, jump @1293\n      : @241 [@dyn 92] (gas: 6)\n  6309: u64 [s1 + 0xc0] = a0\n  6313: u64 [s1 + 0xf8] = a1\n  6317: a0 = u64 [s1 + 0xb8]\n  6321: a1 = u64 [s1 + 0xa0]\n  6325: a2 = u64 [s1 + 0xc8]\n  6329: ra = 186, jump @1298\n      : @242 [@dyn 93] (gas: 7)\n  6335: u64 [s1 + 0x90] = a0\n  6339: u64 [s1 + 0x88] = a1\n  6343: a0 = u64 [s1 + 0xc8]\n  6347: a2 = a0 + 0xffffffffffffff80\n  6350: a0 = u64 [s1 + 0xb0]\n  6354: a1 = u64 [s1 + 0xa8]\n  6358: ra = 188, jump @1298\n      : @243 [@dyn 94] (gas: 8)\n  6364: u64 [s1 + 0x20] = a0\n  6367: u64 [s1 + 0x18] = a1\n  6370: a2 = u64 [s1 + 0xc8]\n  6374: a0 = a2 <u 0x80\n  6378: u64 [s1 + 0x98] = a0\n  6382: a0 = u64 [s1 + 0xb0]\n  6386: a1 = u64 [s1 + 0xa8]\n  6390: ra = 190, jump @1298\n      : @244 [@dyn 95] (gas: 11)\n  6396: a4 = u64 [s1 + 0x98]\n  6400: t0 = u64 [s1 + 0xd0]\n  6404: a5 = u64 [s1 + 0xd8]\n  6408: a2 = u64 [s1 + 0xe0]\n  6412: a5 = a5 | a2\n  6415: a3 = u64 [s1 + 0xf0]\n  6419: a3 = a3 | t0\n  6422: a3 = a3 | a5\n  6425: a0 = 0 if a4 == 0\n  6427: u64 [s1 + 0xe8] = a0\n  6431: jump @246 if a3 == 0\n      : @245 (gas: 1)\n  6434: jump @574\n      : @246 (gas: 2)\n  6437: a5 = 0\n  6439: jump @582\n      : @247 (gas: 8)\n  6442: u64 [a2 + 192] = 0\n  6446: u64 [a2 + 184] = 0\n  6450: u64 [a2 + 176] = 0\n  6454: u64 [a2 + 168] = 0\n  6458: a0 = s1 + 0x2000\n  6462: i32 a0 = a0 + 0x120\n  6466: ecalli 17 // 'value_transferred'\n  6468: fallthrough\n      : @248 (gas: 9)\n  6469: a3 = s1 + 0x2078\n  6473: a0 = u64 [a3 + 0xb8]\n  6477: a1 = u64 [a3 + 0xc0]\n  6481: a2 = u64 [a3 + 0xb0]\n  6485: a3 = u64 [a3 + 0xa8]\n  6489: a1 = a1 | a2\n  6492: a0 = a0 | a3\n  6495: a0 = a0 | a1\n  6498: jump @250 if a0 == 0\n      : @249 (gas: 1)\n  6501: jump @685\n      : @250 (gas: 3)\n  6504: a0 = u64 [s1 + 0xf8]\n  6508: a0 = i32 [a0]\n  6510: jump @252 if a0 >u 3\n      : @251 (gas: 1)\n  6514: jump @686\n      : @252 (gas: 9)\n  6517: a0 = s1 + 0x2078\n  6521: u64 [a0 + 224] = 0\n  6525: u64 [a0 + 216] = 0\n  6529: u64 [a0 + 208] = 0\n  6533: u64 [a0 + 200] = 0\n  6537: a0 = s1 + 0x7ff\n  6541: a0 = a0 + 0x2a1\n  6545: a1 = s1 + 0x2140\n  6549: ra = 192, jump @11\n      : @253 [@dyn 96] (gas: 13)\n  6555: a1 = s1 + 0x7ff\n  6559: a1 = a1 + 0x79\n  6562: a2 = a1 + 0x200\n  6566: a0 = u64 [a2 + 0x38]\n  6569: u64 [s1 + 0xe8] = a0\n  6573: a0 = u64 [a2 + 0x30]\n  6576: u64 [s1 + 0xf8] = a0\n  6580: a0 = u64 [a2 + 0x28]\n  6583: u64 [s1 + 0xf0] = a0\n  6587: a0 = s1 + 0x7ff\n  6591: a0 = a0 + 0x281\n  6595: a1 = 0x40\n  6598: ra = 194, jump @7\n      : @254 [@dyn 97] (gas: 8)\n  6604: a3 = s1 + 0x7ff\n  6608: a3 = a3 + 0x79\n  6611: a5 = a3 + 0x200\n  6615: a4 = u64 [a5 + 0x20]\n  6618: a1 = u64 [a5 + 0x18]\n  6621: a2 = u64 [a5 + 0x10]\n  6624: a0 = u64 [a5 + 0x8]\n  6627: t0 = 196, jump @1280\n      : @255 [@dyn 98] (gas: 1)\n  6633: jump @257 if a1 == 0\n      : @256 (gas: 1)\n  6636: jump @646\n      : @257 (gas: 15)\n  6639: a1 = u64 [s1 + 0xe8]\n  6643: a1 = a1 << 0x20\n  6646: a2 = a1 >> 0x20\n  6649: u64 [a3 + 512] = 0\n  6653: a1 = u64 [s1 + 0xf0]\n  6657: a4 = a3 + 0x100\n  6661: u64 [a4 + 0xe8] = a1\n  6665: a1 = u64 [s1 + 0xf8]\n  6669: u64 [a4 + 0xf0] = a1\n  6673: a1 = s1 + 0x7ff\n  6677: a1 = a1 + 0x261\n  6681: u64 [a4 + 0xf8] = a2\n  6685: u64 [s1 + 0xf8] = a0\n  6689: ra = 0x138\n  6693: jump @9\n      : @258 (gas: 8)\n  6696: u64 [a2 + 160] = 0\n  6700: u64 [a2 + 152] = 0\n  6704: u64 [a2 + 144] = 0\n  6708: u64 [a2 + 136] = 0\n  6712: a0 = s1 + 0x2000\n  6716: i32 a0 = a0 + 0x100\n  6720: ecalli 17 // 'value_transferred'\n  6722: fallthrough\n      : @259 (gas: 9)\n  6723: a3 = s1 + 0x2078\n  6727: a0 = u64 [a3 + 0x98]\n  6731: a1 = u64 [a3 + 0xa0]\n  6735: a2 = u64 [a3 + 0x90]\n  6739: a3 = u64 [a3 + 0x88]\n  6743: a1 = a1 | a2\n  6746: a0 = a0 | a3\n  6749: a0 = a0 | a1\n  6752: jump @261 if a0 == 0\n      : @260 (gas: 1)\n  6755: jump @687\n      : @261 (gas: 3)\n  6758: a0 = u64 [s1 + 0xf8]\n  6762: a0 = i32 [a0]\n  6764: jump @263 if a0 >u 3\n      : @262 (gas: 1)\n  6768: jump @688\n      : @263 (gas: 4)\n  6771: a0 = s1 + 0x7ff\n  6775: a0 = a0 + 0x241\n  6779: a1 = 0x40\n  6782: ra = 198, jump @7\n      : @264 [@dyn 99] (gas: 8)\n  6788: a3 = s1 + 0x7ff\n  6792: a3 = a3 + 0x79\n  6795: a5 = a3 + 0x100\n  6799: a4 = u64 [a5 + 0xe0]\n  6803: a1 = u64 [a5 + 0xd8]\n  6807: a2 = u64 [a5 + 0xd0]\n  6811: a0 = u64 [a5 + 0xc8]\n  6815: t0 = 200, jump @1280\n      : @265 [@dyn 100] (gas: 1)\n  6821: jump @267 if a1 == 0\n      : @266 (gas: 1)\n  6824: jump @646\n      : @267 (gas: 10)\n  6827: a1 = u64 [0x200a0]\n  6832: u64 [a3 + 448] = 0\n  6836: u64 [a3 + 440] = 0\n  6840: u64 [a3 + 0x1a8] = a1\n  6844: a1 = s1 + 0x7ff\n  6848: a1 = a1 + 0x221\n  6852: u64 [a3 + 432] = 0\n  6856: u64 [s1 + 0xf8] = a0\n  6860: ra = 0x138\n  6864: jump @9\n      : @268 (gas: 10)\n  6867: u64 [a3 + 1696] = 0\n  6871: u64 [a3 + 1688] = 0\n  6875: u64 [a3 + 1680] = 0\n  6879: u64 [a3 + 1672] = 0\n  6883: a0 = s1 + 0x2000\n  6887: i32 a0 = a0 + 0xffffffffffffff00\n  6891: ra = 0xca\n  6895: ecalli 17 // 'value_transferred'\n  6897: t0 = 0xcc\n  6901: jump @1271\n      : @269 [@dyn 101] (gas: 1)\n  6904: t0 = 204, jump @1271\n      : @270 [@dyn 102] (gas: 1)\n  6910: t0 = 206, jump @1279\n      : @271 [@dyn 103] (gas: 1)\n  6916: jump @273 if a0 == 0\n      : @272 (gas: 1)\n  6919: jump @689\n      : @273 (gas: 3)\n  6922: a0 = u64 [s1 + 0xf8]\n  6926: a0 = i32 [a0]\n  6928: jump @275 if a0 >u 3\n      : @274 (gas: 1)\n  6932: jump @690\n      : @275 (gas: 16)\n  6935: a0 = s1 + 0x2000\n  6939: i32 a0 = a0 + 0xffffffffffffff20\n  6943: ecalli 10 // 'now'\n  6945: a0 = s1 + 0x1878\n  6949: a2 = a0 + 0x600\n  6953: a1 = u64 [a2 + 0xc0]\n  6957: u64 [s1 + 0xb8] = a1\n  6961: a1 = u64 [a2 + 0xb8]\n  6965: u64 [s1 + 0xb0] = a1\n  6969: a1 = u64 [a2 + 0xb0]\n  6973: u64 [s1 + 0xf8] = a1\n  6977: a0 = u64 [a2 + 0xa8]\n  6981: u64 [s1 + 0xf0] = a0\n  6985: a0 = s1 + 0x340\n  6989: a1 = 0x40\n  6992: ra = 208, jump @7\n      : @276 [@dyn 104] (gas: 6)\n  6998: a4 = s1 + 0x300\n  7002: a0 = u64 [a4 + 0x58]\n  7005: a1 = u64 [a4 + 0x50]\n  7008: a2 = u64 [a4 + 0x48]\n  7011: a3 = u64 [a4 + 0x40]\n  7014: t0 = 210, jump @1254\n      : @277 [@dyn 105] (gas: 1)\n  7020: jump @279 if a0 == 0\n      : @278 (gas: 1)\n  7023: jump @646\n      : @279 (gas: 46)\n  7026: u64 [s1 + 0x78] = a3\n  7029: t1 = u64 [s1 + 0xb0]\n  7033: a0 = clz t1\n  7035: a0 = a0 + 0x40\n  7038: ra = u64 [s1 + 0xb8]\n  7042: a2 = clz ra\n  7044: a2 = a0 if ra == 0\n  7047: t2 = u64 [s1 + 0xf0]\n  7051: a0 = clz t2\n  7053: a0 = a0 + 0x40\n  7056: t0 = u64 [s1 + 0xf8]\n  7060: a1 = clz t0\n  7062: a1 = a0 if t0 == 0\n  7065: a0 = a1 + 0x80\n  7069: a3 = t1 | ra\n  7072: a2 = a0 if a3 == 0\n  7075: a5 = a0 <u a1\n  7078: a5 = 0 if a3 != 0\n  7080: a4 = a5 >u 0\n  7082: a0 = a2 <u 0xf0\n  7086: a3 = a0 ^ 0x1\n  7089: a4 = a3 if a5 == 0\n  7092: a0 = a4 <u 0x1\n  7095: a0 = a0 + 0xffffffffffffffff\n  7098: a1 = -a4\n  7100: a5 = -a5\n  7102: a3 = a5 - a3\n  7105: a2 = 0xef - a2\n  7109: u64 [s1 + 0xd8] = a1\n  7113: a5 = a1 >u 0\n  7115: a1 = a0 >u 0\n  7117: a1 = a5 if a0 == 0\n  7120: a5 = a3 >u 0\n  7122: u64 [s1 + 0xc8] = a2\n  7126: a2 = a2 <u 0x100\n  7130: a2 = a2 ^ 0x1\n  7133: a2 = a5 if a3 != 0\n  7136: a2 = a1 if a4 != 0\n  7139: a1 = t2 | t1\n  7142: a4 = t0 | ra\n  7145: a1 = a1 | a4\n  7148: a1 = a1 <u 0x1\n  7151: a1 = a1 | a2\n  7154: a4 = t2\n  7156: a4 = 0 if a1 != 0\n  7158: jump @281 if a1 == 0\n      : @280 (gas: 1)\n  7161: jump @741\n      : @281 (gas: 7)\n  7164: a1 = u64 [s1 + 0xc8]\n  7168: a1 = a1 ^ 0xff\n  7172: a2 = u64 [s1 + 0xd8]\n  7176: a1 = a1 | a2\n  7179: a2 = a3 | a0\n  7182: a1 = a1 | a2\n  7185: jump @283 if a1 != 0\n      : @282 (gas: 1)\n  7188: jump @741\n      : @283 (gas: 20)\n  7191: a4 = u64 [s1 + 0xc8]\n  7195: a2 = a4 + 0x1\n  7198: u64 [s1 + 0xe8] = a2\n  7202: a1 = a2 <u 0x1\n  7205: a1 = a1 + a3\n  7208: u64 [s1 + 0xe0] = a1\n  7212: a1 = a1 | a2\n  7215: a1 = a1 <u 0x1\n  7218: a3 = u64 [s1 + 0xd8]\n  7222: a1 = a1 + a3\n  7225: u64 [s1 + 0xd0] = a1\n  7229: a1 = a1 <u a3\n  7232: a0 = a0 + a1\n  7235: u64 [s1 + 0xd8] = a0\n  7239: a1 = 0xff - a4\n  7243: u64 [s1 + 0xa0] = a1\n  7247: a2 = 0x80 - a1\n  7251: a0 = u64 [s1 + 0xf0]\n  7255: a1 = u64 [s1 + 0xf8]\n  7259: ra = 212, jump @1293\n      : @284 [@dyn 106] (gas: 6)\n  7265: u64 [s1 + 0x90] = a0\n  7269: u64 [s1 + 0xa8] = a1\n  7273: a0 = u64 [s1 + 0xb0]\n  7277: a1 = u64 [s1 + 0xb8]\n  7281: a2 = u64 [s1 + 0xa0]\n  7285: ra = 214, jump @1298\n      : @285 [@dyn 107] (gas: 7)\n  7291: u64 [s1 + 0x88] = a0\n  7295: u64 [s1 + 0x80] = a1\n  7299: a0 = u64 [s1 + 0xa0]\n  7303: a2 = a0 + 0xffffffffffffff80\n  7306: a0 = u64 [s1 + 0xf0]\n  7310: a1 = u64 [s1 + 0xf8]\n  7314: ra = 216, jump @1298\n      : @286 [@dyn 108] (gas: 8)\n  7320: u64 [s1 + 0x70] = a0\n  7323: u64 [s1 + 0x68] = a1\n  7326: a2 = u64 [s1 + 0xa0]\n  7330: a0 = a2 <u 0x80\n  7334: u64 [s1 + 0x98] = a0\n  7338: a0 = u64 [s1 + 0xf0]\n  7342: a1 = u64 [s1 + 0xf8]\n  7346: ra = 218, jump @1298\n      : @287 [@dyn 109] (gas: 12)\n  7352: u64 [s1 + 0xc0] = a1\n  7356: a1 = u64 [s1 + 0xe0]\n  7360: a2 = u64 [s1 + 0xd8]\n  7364: a2 = a2 | a1\n  7367: a1 = u64 [s1 + 0xe8]\n  7371: a3 = u64 [s1 + 0xd0]\n  7375: a1 = a1 | a3\n  7378: a1 = a1 | a2\n  7381: a3 = u64 [s1 + 0x98]\n  7385: a0 = 0 if a3 == 0\n  7387: u64 [s1 + 0xc8] = a0\n  7391: jump @289 if a1 != 0\n      : @288 (gas: 1)\n  7394: jump @739\n      : @289 (gas: 30)\n  7397: a2 = a3\n  7399: a0 = u64 [s1 + 0xa8]\n  7403: a1 = u64 [s1 + 0x80]\n  7407: a0 = a0 | a1\n  7410: a5 = a3\n  7412: a1 = u64 [s1 + 0x68]\n  7415: a0 = a1 if a2 == 0\n  7418: a2 = u64 [s1 + 0xb8]\n  7422: a3 = a2\n  7424: a1 = a2\n  7426: a2 = u64 [s1 + 0xa0]\n  7430: a3 = a0 if a2 != 0\n  7433: u64 [s1 + 0xa8] = a3\n  7437: a0 = u64 [s1 + 0x90]\n  7441: a3 = u64 [s1 + 0x88]\n  7445: a0 = a0 | a3\n  7448: a3 = u64 [s1 + 0x70]\n  7451: a0 = a3 if a5 == 0\n  7454: a4 = u64 [s1 + 0xb0]\n  7458: a3 = a4\n  7460: a3 = a0 if a2 != 0\n  7463: u64 [s1 + 0xa0] = a3\n  7467: a0 = u64 [s1 + 0xc0]\n  7471: a0 = 0 if a5 == 0\n  7473: u64 [s1 + 0xc0] = a0\n  7477: u64 [s1 + 144] = 0x15180\n  7484: a0 = u64 [s1 + 0xe8]\n  7488: a2 = a0 + 0xffffffffffffff80\n  7491: a0 = a4\n  7493: ra = 220, jump @1293\n      : @290 [@dyn 110] (gas: 6)\n  7499: u64 [s1 + 0x98] = a0\n  7503: u64 [s1 + 0x80] = a1\n  7507: a0 = u64 [s1 + 0xf0]\n  7511: a1 = u64 [s1 + 0xf8]\n  7515: a2 = u64 [s1 + 0xe8]\n  7519: ra = 222, jump @1293\n      : @291 [@dyn 111] (gas: 7)\n  7525: u64 [s1 + 0x70] = a0\n  7528: u64 [s1 + 0x88] = a1\n  7532: a1 = u64 [s1 + 0xe8]\n  7536: a2 = 0x80 - a1\n  7540: a0 = u64 [s1 + 0xb0]\n  7544: a1 = u64 [s1 + 0xb8]\n  7548: ra = 224, jump @1298\n      : @292 [@dyn 112] (gas: 20)\n  7554: a2 = u64 [s1 + 0x88]\n  7558: a1 = a1 | a2\n  7561: a2 = u64 [s1 + 0xe8]\n  7565: a3 = a2 <u 0x80\n  7569: u64 [s1 + 0x88] = a3\n  7573: a4 = u64 [s1 + 0x80]\n  7577: a1 = a4 if a3 == 0\n  7580: a4 = u64 [s1 + 0xf8]\n  7584: a4 = a1 if a2 != 0\n  7587: u64 [s1 + 0xf8] = a4\n  7591: a1 = u64 [s1 + 0x70]\n  7594: a0 = a0 | a1\n  7597: a1 = u64 [s1 + 0x98]\n  7601: a0 = a1 if a3 == 0\n  7604: a1 = u64 [s1 + 0xf0]\n  7608: a1 = a0 if a2 != 0\n  7611: u64 [s1 + 0xf0] = a1\n  7615: a0 = u64 [s1 + 0xb0]\n  7619: a1 = u64 [s1 + 0xb8]\n  7623: ra = 226, jump @1293\n      : @293 [@dyn 113] (gas: 15)\n  7629: t2 = u64 [s1 + 0xf0]\n  7633: t1 = u64 [s1 + 0xf8]\n  7637: u64 [s1 + 184] = 0\n  7641: u64 [s1 + 176] = 0\n  7645: a2 = u64 [s1 + 0x88]\n  7649: a1 = 0 if a2 == 0\n  7651: a0 = 0 if a2 == 0\n  7653: u64 [s1 + 0x98] = a0\n  7657: a3 = u64 [s1 + 0x90]\n  7661: a2 = a3 + 0xffffffffffffffff\n  7664: u64 [s1 + 0x88] = a2\n  7668: a2 = a3 >u 0\n  7670: a2 = a2 + 0xffffffffffffffff\n  7673: u64 [s1 + 0x80] = a2\n  7677: fallthrough\n      : @294 (gas: 88)\n  7678: a2 = t2 >> 0x3f\n  7681: a3 = t1 << 0x1\n  7684: a2 = a2 | a3\n  7687: a3 = t2 << 0x1\n  7690: t2 = u64 [s1 + 0xa8]\n  7694: a4 = t2 >> 0x3f\n  7697: a3 = a3 | a4\n  7700: u64 [s1 + 0xf8] = a3\n  7704: ra = u64 [s1 + 0x80]\n  7708: a0 = t1\n  7710: t1 = ra ^ a2\n  7713: t0 = ra <u a2\n  7716: a4 = u64 [s1 + 0x88]\n  7720: a5 = a4 <u a3\n  7723: a5 = t0 if t1 != 0\n  7726: a1 = a1 << 0x1\n  7729: a4 = u64 [s1 + 0x98]\n  7733: a3 = a4 >> 0x3f\n  7736: a1 = a1 | a3\n  7739: u64 [s1 + 0xf0] = a1\n  7743: a3 = a0 >> 0x3f\n  7746: a0 = a4 << 0x1\n  7749: a3 = a3 | a0\n  7752: a0 = t2 << 0x1\n  7755: a4 = u64 [s1 + 0xa0]\n  7759: a1 = a4 >> 0x3f\n  7762: t0 = a0 | a1\n  7765: a1 = a4 << 0x1\n  7768: a4 = u64 [s1 + 0xc0]\n  7772: t1 = a4 >> 0x3f\n  7775: t1 = a1 | t1\n  7778: a1 = a4 << 0x1\n  7781: a4 = u64 [s1 + 0xc8]\n  7785: t2 = a4 >> 0x3f\n  7788: a1 = a1 | t2\n  7791: a4 = a4 << 0x1\n  7794: a0 = u64 [s1 + 0xb8]\n  7798: a4 = a4 | a0\n  7801: u64 [s1 + 0xc8] = a4\n  7805: a0 = u64 [s1 + 0xb0]\n  7809: a1 = a1 | a0\n  7812: u64 [s1 + 0xc0] = a1\n  7816: a1 = a0 | t1\n  7819: u64 [s1 + 0xa0] = a1\n  7823: a0 = a0 | t0\n  7826: u64 [s1 + 0xa8] = a0\n  7830: a0 = ra - a3\n  7833: a0 = a0 <u a5\n  7836: a1 = ra <u a3\n  7839: a5 = u64 [s1 + 0xf0]\n  7843: a4 = ra - a5\n  7846: a4 = a4 - a1\n  7849: a4 = a4 - a0\n  7852: ra = a4 >>a 0x3f\n  7855: a0 = u64 [s1 + 0x90]\n  7859: a0 = ra & a0\n  7862: a1 = u64 [s1 + 0xf8]\n  7866: t2 = a1 - a0\n  7869: a1 = a1 <u a0\n  7872: t1 = a2 - a1\n  7875: a1 = 0 if a2 != 0\n  7877: a0 = a3 - a1\n  7880: u64 [s1 + 0x98] = a0\n  7884: a1 = a3 <u a1\n  7887: a1 = a5 - a1\n  7890: a3 = u64 [s1 + 0xe8]\n  7894: a5 = u64 [s1 + 0xe0]\n  7898: a2 = a3 | a5\n  7901: a2 = a2 <u 0x1\n  7904: a4 = u64 [s1 + 0xd0]\n  7908: t0 = a4 <u a2\n  7911: a2 = a4 - a2\n  7914: a4 = a3 <u 0x1\n  7917: a5 = a5 - a4\n  7920: a4 = u64 [s1 + 0xd8]\n  7924: a4 = a4 - t0\n  7927: a3 = a3 + 0xffffffffffffffff\n  7930: u64 [s1 + 0xe0] = a5\n  7934: u64 [s1 + 0xd8] = a4\n  7938: t0 = a5 | a4\n  7941: u64 [s1 + 0xe8] = a3\n  7945: a4 = a3 | a2\n  7948: a3 = a4 | t0\n  7951: a4 = ra & 0x1\n  7954: u64 [s1 + 0xb8] = a4\n  7958: u64 [s1 + 0xd0] = a2\n  7962: u64 [s1 + 176] = 0\n  7966: jump @294 if a3 != 0\n      : @295 (gas: 1)\n  7970: jump @740\n      : @296 (gas: 1)\n  7973: jump @298 if a0 == 1641031603\n      : @297 (gas: 1)\n  7980: jump @691\n      : @298 (gas: 10)\n  7983: u64 [a2 + 640] = 0\n  7987: u64 [a2 + 632] = 0\n  7991: u64 [a2 + 624] = 0\n  7995: u64 [a2 + 616] = 0\n  7999: a0 = s1 + 0x2000\n  8003: i32 a0 = a0 + 0x2e0\n  8007: ra = 0xe4\n  8011: ecalli 17 // 'value_transferred'\n  8013: t0 = 0xe6\n  8017: jump @1272\n      : @299 [@dyn 114] (gas: 1)\n  8020: t0 = 230, jump @1272\n      : @300 [@dyn 115] (gas: 8)\n  8026: a0 = u64 [a4 + 0x78]\n  8029: a1 = u64 [a4 + 0x80]\n  8033: a2 = u64 [a4 + 0x70]\n  8036: a3 = u64 [a4 + 0x68]\n  8039: a1 = a1 | a2\n  8042: a0 = a0 | a3\n  8045: a0 = a0 | a1\n  8048: jump @302 if a0 == 0\n      : @301 (gas: 1)\n  8051: jump @695\n      : @302 (gas: 3)\n  8054: a0 = u64 [s1 + 0xf8]\n  8058: a0 = i32 [a0]\n  8060: jump @304 if a0 >u 3\n      : @303 (gas: 1)\n  8064: jump @696\n      : @304 (gas: 4)\n  8067: a0 = s1 + 0x7ff\n  8071: a0 = a0 + 0x5a1\n  8075: a1 = 0x40\n  8078: ra = 232, jump @7\n      : @305 [@dyn 116] (gas: 12)\n  8084: a0 = s1 + 0x7ff\n  8088: a0 = a0 + 0x79\n  8091: a2 = a0 + 0x500\n  8095: a1 = u64 [a2 + 0x40]\n  8098: u64 [s1 + 0xf8] = a1\n  8102: a1 = u64 [a2 + 0x38]\n  8105: u64 [s1 + 0xf0] = a1\n  8109: a1 = u64 [a2 + 0x30]\n  8112: u64 [s1 + 0xe0] = a1\n  8116: a0 = u64 [a2 + 0x28]\n  8119: u64 [s1 + 0xe8] = a0\n  8123: ra = 234, jump @0\n      : @306 [@dyn 117] (gas: 13)\n  8129: a0 = u64 [s1 + 0xf8]\n  8133: a1 = u64 [s1 + 0xe0]\n  8137: a0 = a0 | a1\n  8140: a1 = u64 [s1 + 0xe8]\n  8144: a3 = a1\n  8146: a2 = u64 [s1 + 0xf0]\n  8150: a1 = a1 | a2\n  8153: a1 = a1 | a0\n  8156: a1 = a1 >> 0x20\n  8159: a0 = a0 | a2\n  8162: a0 = a0 << 0x20\n  8165: a0 = a0 | a1\n  8168: jump @308 if a0 == 0\n      : @307 (gas: 1)\n  8171: jump @646\n      : @308 (gas: 14)\n  8174: a2 = u64 [0x30180]\n  8179: a1 = u64 [0x30188]\n  8184: a0 = u32 [0x30190]\n  8189: a4 = s1 + 0x7ff\n  8193: a4 = a4 + 0x79\n  8196: u64 [a4 + 1312] = 0\n  8200: a5 = a4 + 0x500\n  8204: u64 [a5 + 0x18] = a0\n  8207: u64 [a5 + 0x10] = a1\n  8210: a1 = s1 + 0x7ff\n  8214: a1 = a1 + 0x581\n  8218: u64 [a5 + 0x8] = a2\n  8221: a0 = a3\n  8223: ra = 236, jump @9\n      : @309 [@dyn 118] (gas: 4)\n  8229: a1 = 0x20\n  8232: a0 = u64 [s1 + 0xe8]\n  8236: ra = 0x13a\n  8240: jump @20\n      : @310 (gas: 10)\n  8243: u64 [a3 + 1792] = 0\n  8247: u64 [a3 + 1784] = 0\n  8251: u64 [a3 + 1776] = 0\n  8255: u64 [a3 + 1768] = 0\n  8259: a0 = s1 + 0x2000\n  8263: i32 a0 = a0 + 0xffffffffffffff60\n  8267: ra = 0xee\n  8271: ecalli 17 // 'value_transferred'\n  8273: t0 = 0xf0\n  8277: jump @1271\n      : @311 [@dyn 119] (gas: 1)\n  8280: t0 = 240, jump @1271\n      : @312 [@dyn 120] (gas: 8)\n  8286: a0 = u64 [a4 + 0xf8]\n  8290: a1 = u64 [a3 + 0x700]\n  8294: a2 = u64 [a4 + 0xf0]\n  8298: a3 = u64 [a4 + 0xe8]\n  8302: a1 = a1 | a2\n  8305: a0 = a0 | a3\n  8308: a0 = a0 | a1\n  8311: jump @314 if a0 == 0\n      : @313 (gas: 1)\n  8314: jump @697\n      : @314 (gas: 3)\n  8317: a0 = u64 [s1 + 0xf8]\n  8321: a0 = i32 [a0]\n  8323: jump @316 if a0 >u 67\n      : @315 (gas: 1)\n  8327: jump @698\n      : @316 (gas: 4)\n  8330: a0 = s1 + 0x580\n  8334: ra = 0xf2\n  8338: t0 = 0x416\n  8342: jump @1286\n      : @317 [@dyn 121] (gas: 10)\n  8345: a0 = u64 [s1 + 0x580]\n  8349: u64 [s1 + 0xf0] = a0\n  8353: a0 = u64 [s1 + 0x588]\n  8357: u64 [s1 + 0xe8] = a0\n  8361: a0 = u32 [s1 + 0x590]\n  8365: u64 [s1 + 0xe0] = a0\n  8369: a0 = s1 + 0x560\n  8373: ra = 0xf4\n  8377: t0 = 0x420\n  8381: jump @1292\n      : @318 [@dyn 122] (gas: 12)\n  8384: a0 = u64 [s1 + 0x560]\n  8388: u64 [s1 + 0xf8] = a0\n  8392: u64 [s1 + 1368] = 0\n  8396: a0 = u64 [s1 + 0xe0]\n  8400: u64 [s1 + 0x550] = a0\n  8404: a0 = u64 [s1 + 0xe8]\n  8408: u64 [s1 + 0x548] = a0\n  8412: a1 = s1 + 0x540\n  8416: a0 = u64 [s1 + 0xf0]\n  8420: u64 [s1 + 0x540] = a0\n  8424: a0 = 0\n  8426: ra = 246, jump @9\n      : @319 [@dyn 123] (gas: 7)\n  8432: u64 [s1 + 1336] = 0\n  8436: u64 [s1 + 1328] = 0\n  8440: u64 [s1 + 1312] = 0x7\n  8445: a0 = 0x20\n  8448: a1 = s1 + 0x520\n  8452: u64 [s1 + 1320] = 0\n  8456: ra = 248, jump @9\n      : @320 [@dyn 124] (gas: 3)\n  8462: a1 = 0x20150\n  8467: a0 = i32 [0x20150]\n  8472: jump @322 if a0 >u 63\n      : @321 (gas: 2)\n  8476: u32 [0x20150] = 0x40\n  8482: fallthrough\n      : @322 (gas: 14)\n  8483: a0 = sp + 0xffffffffffffffe0\n  8486: a2 = a0 & 0xffffffffffffffe0\n  8489: u64 [s1 + 0xe0] = a2\n  8493: sp = a2\n  8495: a0 = 0x20160\n  8500: i32 a0 = a0 + 0\n  8502: i32 a2 = a2 + 0\n  8504: u64 [s1 + 0xf0] = a1\n  8508: a1 = 0x40\n  8511: u64 [s1 + 0xe8] = a0\n  8515: ra = 0xfa\n  8519: ecalli 9 // 'hash_keccak_256'\n  8521: t0 = 0xfc\n  8525: jump @1245\n      : @323 [@dyn 125] (gas: 1)\n  8528: t0 = 252, jump @1245\n      : @324 [@dyn 126] (gas: 8)\n  8534: u64 [s1 + 1304] = 0\n  8538: u64 [s1 + 1296] = 0\n  8542: u64 [s1 + 1288] = 0\n  8546: a1 = s1 + 0x500\n  8550: a0 = u64 [s1 + 0xf8]\n  8554: u64 [s1 + 0x500] = a0\n  8558: a0 = 0\n  8560: ra = 254, jump @9\n      : @325 [@dyn 127] (gas: 12)\n  8566: a0 = u64 [s1 + 0xc0]\n  8570: a3 = s1 + 0x400\n  8574: u64 [a3 + 0xf8] = a0\n  8578: a0 = u64 [s1 + 0xc8]\n  8582: u64 [a3 + 0xf0] = a0\n  8586: a0 = u64 [s1 + 0xd0]\n  8590: u64 [a3 + 0xe8] = a0\n  8594: a0 = 0x20\n  8597: a1 = s1 + 0x4e0\n  8601: a2 = u64 [s1 + 0xd8]\n  8605: u64 [a3 + 0xe0] = a2\n  8609: ra = 256, jump @9\n      : @326 [@dyn 128] (gas: 3)\n  8615: a1 = u64 [s1 + 0xf0]\n  8619: a0 = i32 [a1]\n  8621: jump @328 if a0 >u 63\n      : @327 (gas: 2)\n  8625: u32 [a1 + 0] = 0x40\n  8628: fallthrough\n      : @328 (gas: 4)\n  8629: a0 = sp + 0xffffffffffffffe0\n  8632: a0 = a0 & 0xffffffffffffffe0\n  8635: u64 [s1 + 0xf8] = a0\n  8639: t0 = 258, jump @1256\n      : @329 [@dyn 129] (gas: 4)\n  8645: ra = 0x104\n  8649: ecalli 9 // 'hash_keccak_256'\n  8651: t0 = 0x106\n  8655: jump @1248\n      : @330 [@dyn 130] (gas: 1)\n  8658: t0 = 262, jump @1248\n      : @331 [@dyn 131] (gas: 2)\n  8664: a0 = s1 + 0x4c0\n  8668: ra = 264, jump @11\n      : @332 [@dyn 132] (gas: 11)\n  8674: a0 = u64 [s1 + 0x4d8]\n  8678: u64 [s1 + 0xf8] = a0\n  8682: a0 = u64 [s1 + 0x4d0]\n  8686: u64 [s1 + 0xf0] = a0\n  8690: a0 = u64 [s1 + 0x4c8]\n  8694: u64 [s1 + 0xe8] = a0\n  8698: a0 = u64 [s1 + 0x4c0]\n  8702: u64 [s1 + 0xe0] = a0\n  8706: a0 = s1 + 0x4a0\n  8710: a1 = 0x40\n  8713: ra = 266, jump @7\n      : @333 [@dyn 133] (gas: 6)\n  8719: a4 = s1 + 0x400\n  8723: a0 = u64 [a4 + 0xb8]\n  8727: a1 = u64 [a4 + 0xb0]\n  8731: a2 = u64 [a4 + 0xa8]\n  8735: a3 = u64 [a4 + 0xa0]\n  8739: t0 = 268, jump @1254\n      : @334 [@dyn 134] (gas: 1)\n  8745: jump @336 if a0 == 0\n      : @335 (gas: 1)\n  8748: jump @646\n      : @336 (gas: 14)\n  8751: a0 = u64 [s1 + 0xe0]\n  8755: a2 = s1 + 0x400\n  8759: u64 [a2 + 0x80] = a0\n  8763: a0 = u64 [s1 + 0xe8]\n  8767: u64 [a2 + 0x88] = a0\n  8771: a0 = u64 [s1 + 0xf0]\n  8775: u64 [a2 + 0x90] = a0\n  8779: a1 = s1 + 0x480\n  8783: a0 = u64 [s1 + 0xf8]\n  8787: u64 [a2 + 0x98] = a0\n  8791: a0 = a3\n  8793: u64 [s1 + 0xf8] = a3\n  8797: ra = 0x138\n  8801: jump @9\n      : @337 (gas: 11)\n  8804: a0 = s1 + 0x2078\n  8808: u64 [a0 + 704] = 0\n  8812: u64 [a0 + 696] = 0\n  8816: u64 [a0 + 688] = 0\n  8820: u64 [a0 + 680] = 0\n  8824: a0 = s1 + 0x2000\n  8828: i32 a0 = a0 + 0x320\n  8832: ra = 0x10e\n  8836: ecalli 17 // 'value_transferred'\n  8838: t0 = 0x110\n  8842: jump @1272\n      : @338 [@dyn 135] (gas: 1)\n  8845: t0 = 272, jump @1272\n      : @339 [@dyn 136] (gas: 8)\n  8851: a0 = u64 [a4 + 0xb8]\n  8855: a1 = u64 [a4 + 0xc0]\n  8859: a2 = u64 [a4 + 0xb0]\n  8863: a3 = u64 [a4 + 0xa8]\n  8867: a1 = a1 | a2\n  8870: a0 = a0 | a3\n  8873: a0 = a0 | a1\n  8876: jump @341 if a0 == 0\n      : @340 (gas: 1)\n  8879: jump @699\n      : @341 (gas: 3)\n  8882: a0 = u64 [s1 + 0xf8]\n  8886: a0 = i32 [a0]\n  8888: jump @343 if a0 >u 3\n      : @342 (gas: 1)\n  8892: jump @700\n      : @343 (gas: 9)\n  8895: a1 = s1 + 0x2078\n  8899: u64 [a1 + 736] = 0\n  8903: u64 [a1 + 728] = 0\n  8907: u64 [a1 + 720] = 0\n  8911: u64 [a1 + 712] = 0x1\n  8916: a0 = s1 + 0x7ff\n  8920: a0 = a0 + 0x6c1\n  8924: a1 = s1 + 0x2340\n  8928: ra = 274, jump @11\n      : @344 [@dyn 137] (gas: 13)\n  8934: a1 = s1 + 0x7ff\n  8938: a1 = a1 + 0x79\n  8941: a2 = a1 + 0x600\n  8945: a0 = u64 [a2 + 0x58]\n  8948: u64 [s1 + 0xe8] = a0\n  8952: a0 = u64 [a2 + 0x50]\n  8955: u64 [s1 + 0xf8] = a0\n  8959: a0 = u64 [a2 + 0x48]\n  8962: u64 [s1 + 0xf0] = a0\n  8966: a0 = s1 + 0x7ff\n  8970: a0 = a0 + 0x6a1\n  8974: a1 = 0x40\n  8977: ra = 276, jump @7\n      : @345 [@dyn 138] (gas: 8)\n  8983: a3 = s1 + 0x7ff\n  8987: a3 = a3 + 0x79\n  8990: a5 = a3 + 0x600\n  8994: a4 = u64 [a5 + 0x40]\n  8997: a1 = u64 [a5 + 0x38]\n  9000: a2 = u64 [a5 + 0x30]\n  9003: a0 = u64 [a5 + 0x28]\n  9006: t0 = 278, jump @1280\n      : @346 [@dyn 139] (gas: 1)\n  9012: jump @348 if a1 == 0\n      : @347 (gas: 1)\n  9015: jump @646\n      : @348 (gas: 15)\n  9018: a1 = u64 [s1 + 0xe8]\n  9022: a1 = a1 << 0x20\n  9025: a2 = a1 >> 0x20\n  9028: u64 [a3 + 1568] = 0\n  9032: a1 = u64 [s1 + 0xf0]\n  9036: a4 = a3 + 0x600\n  9040: u64 [a4 + 0x8] = a1\n  9043: a1 = u64 [s1 + 0xf8]\n  9047: u64 [a4 + 0x10] = a1\n  9050: a1 = s1 + 0x7ff\n  9054: a1 = a1 + 0x681\n  9058: u64 [a4 + 0x18] = a2\n  9061: u64 [s1 + 0xf8] = a0\n  9065: ra = 0x138\n  9069: jump @9\n      : @349 (gas: 10)\n  9072: u64 [a3 + 1760] = 0\n  9076: u64 [a3 + 1752] = 0\n  9080: u64 [a3 + 1744] = 0\n  9084: u64 [a3 + 1736] = 0\n  9088: a0 = s1 + 0x2000\n  9092: i32 a0 = a0 + 0xffffffffffffff40\n  9096: ra = 0x118\n  9100: ecalli 17 // 'value_transferred'\n  9102: t0 = 0x11a\n  9106: jump @1271\n      : @350 [@dyn 140] (gas: 1)\n  9109: t0 = 282, jump @1271\n      : @351 [@dyn 141] (gas: 8)\n  9115: a0 = u64 [a4 + 0xd8]\n  9119: a1 = u64 [a4 + 0xe0]\n  9123: a2 = u64 [a4 + 0xd0]\n  9127: a3 = u64 [a4 + 0xc8]\n  9131: a1 = a1 | a2\n  9134: a0 = a0 | a3\n  9137: a0 = a0 | a1\n  9140: jump @353 if a0 == 0\n      : @352 (gas: 1)\n  9143: jump @701\n      : @353 (gas: 3)\n  9146: a0 = u64 [s1 + 0xf8]\n  9150: a0 = i32 [a0]\n  9152: jump @355 if a0 >u 67\n      : @354 (gas: 1)\n  9156: jump @702\n      : @355 (gas: 4)\n  9159: a0 = s1 + 0x460\n  9163: ra = 0x11c\n  9167: t0 = 0x416\n  9171: jump @1286\n      : @356 [@dyn 142] (gas: 10)\n  9174: a0 = u64 [s1 + 0x460]\n  9178: u64 [s1 + 0xf0] = a0\n  9182: a0 = u64 [s1 + 0x468]\n  9186: u64 [s1 + 0xe8] = a0\n  9190: a0 = u32 [s1 + 0x470]\n  9194: u64 [s1 + 0xe0] = a0\n  9198: a0 = s1 + 0x440\n  9202: ra = 0x11e\n  9206: t0 = 0x420\n  9210: jump @1292\n      : @357 [@dyn 143] (gas: 12)\n  9213: a0 = u64 [s1 + 0x440]\n  9217: u64 [s1 + 0xf8] = a0\n  9221: u64 [s1 + 1080] = 0\n  9225: a0 = u64 [s1 + 0xe0]\n  9229: u64 [s1 + 0x430] = a0\n  9233: a0 = u64 [s1 + 0xe8]\n  9237: u64 [s1 + 0x428] = a0\n  9241: a1 = s1 + 0x420\n  9245: a0 = u64 [s1 + 0xf0]\n  9249: u64 [s1 + 0x420] = a0\n  9253: a0 = 0\n  9255: ra = 288, jump @9\n      : @358 [@dyn 144] (gas: 7)\n  9261: u64 [s1 + 1048] = 0\n  9265: u64 [s1 + 1040] = 0\n  9269: u64 [s1 + 1024] = 0x5\n  9274: a0 = 0x20\n  9277: a1 = s1 + 0x400\n  9281: u64 [s1 + 1032] = 0\n  9285: ra = 290, jump @9\n      : @359 [@dyn 145] (gas: 3)\n  9291: a1 = 0x20150\n  9296: a0 = i32 [0x20150]\n  9301: jump @361 if a0 >u 63\n      : @360 (gas: 2)\n  9305: u32 [0x20150] = 0x40\n  9311: fallthrough\n      : @361 (gas: 14)\n  9312: a0 = sp + 0xffffffffffffffe0\n  9315: a2 = a0 & 0xffffffffffffffe0\n  9318: u64 [s1 + 0xe0] = a2\n  9322: sp = a2\n  9324: a0 = 0x20160\n  9329: i32 a0 = a0 + 0\n  9331: i32 a2 = a2 + 0\n  9333: u64 [s1 + 0xf0] = a1\n  9337: a1 = 0x40\n  9340: u64 [s1 + 0xe8] = a0\n  9344: ra = 0x124\n  9348: ecalli 9 // 'hash_keccak_256'\n  9350: t0 = 0x126\n  9354: jump @1245\n      : @362 [@dyn 146] (gas: 1)\n  9357: t0 = 294, jump @1245\n      : @363 [@dyn 147] (gas: 8)\n  9363: u64 [s1 + 1016] = 0\n  9367: u64 [s1 + 1008] = 0\n  9371: u64 [s1 + 1000] = 0\n  9375: a1 = s1 + 0x3e0\n  9379: a0 = u64 [s1 + 0xf8]\n  9383: u64 [s1 + 0x3e0] = a0\n  9387: a0 = 0\n  9389: ra = 296, jump @9\n      : @364 [@dyn 148] (gas: 12)\n  9395: a0 = u64 [s1 + 0xc0]\n  9399: a3 = s1 + 0x300\n  9403: u64 [a3 + 0xd8] = a0\n  9407: a0 = u64 [s1 + 0xc8]\n  9411: u64 [a3 + 0xd0] = a0\n  9415: a0 = u64 [s1 + 0xd0]\n  9419: u64 [a3 + 0xc8] = a0\n  9423: a0 = 0x20\n  9426: a1 = s1 + 0x3c0\n  9430: a2 = u64 [s1 + 0xd8]\n  9434: u64 [a3 + 0xc0] = a2\n  9438: ra = 298, jump @9\n      : @365 [@dyn 149] (gas: 3)\n  9444: a1 = u64 [s1 + 0xf0]\n  9448: a0 = i32 [a1]\n  9450: jump @367 if a0 >u 63\n      : @366 (gas: 2)\n  9454: u32 [a1 + 0] = 0x40\n  9457: fallthrough\n      : @367 (gas: 4)\n  9458: a0 = sp + 0xffffffffffffffe0\n  9461: a0 = a0 & 0xffffffffffffffe0\n  9464: u64 [s1 + 0xf8] = a0\n  9468: t0 = 300, jump @1256\n      : @368 [@dyn 150] (gas: 4)\n  9474: ra = 0x12e\n  9478: ecalli 9 // 'hash_keccak_256'\n  9480: t0 = 0x130\n  9484: jump @1248\n      : @369 [@dyn 151] (gas: 1)\n  9487: t0 = 304, jump @1248\n      : @370 [@dyn 152] (gas: 2)\n  9493: a0 = s1 + 0x3a0\n  9497: ra = 306, jump @11\n      : @371 [@dyn 153] (gas: 11)\n  9503: a0 = u64 [s1 + 0x3b8]\n  9507: u64 [s1 + 0xf8] = a0\n  9511: a0 = u64 [s1 + 0x3b0]\n  9515: u64 [s1 + 0xf0] = a0\n  9519: a0 = u64 [s1 + 0x3a8]\n  9523: u64 [s1 + 0xe8] = a0\n  9527: a0 = u64 [s1 + 0x3a0]\n  9531: u64 [s1 + 0xe0] = a0\n  9535: a0 = s1 + 0x380\n  9539: a1 = 0x40\n  9542: ra = 308, jump @7\n      : @372 [@dyn 154] (gas: 6)\n  9548: a4 = s1 + 0x300\n  9552: a0 = u64 [a4 + 0x98]\n  9556: a1 = u64 [a4 + 0x90]\n  9560: a2 = u64 [a4 + 0x88]\n  9564: a3 = u64 [a4 + 0x80]\n  9568: t0 = 310, jump @1254\n      : @373 [@dyn 155] (gas: 1)\n  9574: jump @375 if a0 == 0\n      : @374 (gas: 1)\n  9577: jump @646\n      : @375 (gas: 13)\n  9580: a0 = u64 [s1 + 0xe0]\n  9584: a2 = s1 + 0x300\n  9588: u64 [a2 + 0x60] = a0\n  9591: a0 = u64 [s1 + 0xe8]\n  9595: u64 [a2 + 0x68] = a0\n  9598: a0 = u64 [s1 + 0xf0]\n  9602: u64 [a2 + 0x70] = a0\n  9605: a1 = s1 + 0x360\n  9609: a0 = u64 [s1 + 0xf8]\n  9613: u64 [a2 + 0x78] = a0\n  9616: a0 = a3\n  9618: u64 [s1 + 0xf8] = a3\n  9622: ra = 312, jump @9\n      : @376 [@dyn 156] (gas: 3)\n  9628: a1 = 0x20\n  9631: a0 = u64 [s1 + 0xf8]\n  9635: ra = 314, jump @20\n      : @377 [@dyn 157] (gas: 5)\n  9641: i32 a1 = a0 + 0\n  9643: a2 = 0x20\n  9646: a0 = 0\n  9648: ecalli 14 // 'seal_return'\n  9650: jump @379\n      : @378 (gas: 4)\n  9652: a2 = 0x20\n  9655: a0 = 0\n  9657: ecalli 14 // 'seal_return'\n  9659: fallthrough\n      : @379 (gas: 3)\n  9660: a0 = u64 [s1 + 0xf8]\n  9664: a0 = i32 [a0]\n  9666: jump @381 if a0 >u 3\n      : @380 (gas: 1)\n  9670: jump @703\n      : @381 (gas: 10)\n  9673: u64 [a2 + 1184] = 0\n  9677: u64 [a2 + 1176] = 0\n  9681: u64 [a2 + 1168] = 0\n  9685: u64 [a2 + 1160] = 0\n  9689: a0 = s1 + 0x2000\n  9693: i32 a0 = a0 + 0x500\n  9697: ra = 0x13c\n  9701: ecalli 17 // 'value_transferred'\n  9703: t0 = 0x13e\n  9707: jump @1267\n      : @382 [@dyn 158] (gas: 1)\n  9710: t0 = 318, jump @1267\n      : @383 [@dyn 159] (gas: 1)\n  9716: t0 = 320, jump @1279\n      : @384 [@dyn 160] (gas: 1)\n  9722: jump @386 if a0 != 0\n      : @385 (gas: 1)\n  9725: jump @704\n      : @386 (gas: 9)\n  9728: a0 = 0x30160\n  9733: u64 [s1 + 0xe0] = a0\n  9737: i32 a0 = a0 + 0\n  9739: u64 [s1 + 0xb8] = a0\n  9743: ra = 0x142\n  9747: ecalli 4 // 'caller'\n  9749: a2 = u64 [s1 + 0xe0]\n  9753: t0 = 0x144\n  9757: jump @1242\n      : @387 [@dyn 161] (gas: 2)\n  9760: a2 = u64 [s1 + 0xe0]\n  9764: t0 = 324, jump @1242\n      : @388 [@dyn 162] (gas: 7)\n  9770: u64 [a2 + 160] = 0\n  9774: u64 [a2 + 0x98] = a1\n  9778: u64 [a2 + 0x90] = a0\n  9782: a1 = s1 + 0x1900\n  9786: u64 [a2 + 0x88] = a3\n  9790: a0 = 0\n  9792: ra = 326, jump @9\n      : @389 [@dyn 163] (gas: 9)\n  9798: a1 = s1 + 0x1878\n  9802: u64 [a1 + 128] = 0\n  9806: u64 [a1 + 120] = 0\n  9809: u64 [a1 + 104] = 0x2\n  9813: a2 = a1\n  9815: a0 = 0x20\n  9818: a1 = s1 + 0x18e0\n  9822: u64 [a2 + 112] = 0\n  9825: ra = 328, jump @9\n      : @390 [@dyn 164] (gas: 7)\n  9831: a0 = sp + 0xffffffffffffffe0\n  9834: a0 = a0 & 0xffffffffffffffe0\n  9837: u64 [s1 + 0xf8] = a0\n  9841: sp = a0\n  9843: a2 = 0x20150\n  9848: a0 = i32 [0x20150]\n  9853: jump @392 if a0 >u 63\n      : @391 (gas: 2)\n  9857: u32 [0x20150] = 0x40\n  9863: fallthrough\n      : @392 (gas: 14)\n  9864: u64 [s1 + 0xb0] = a2\n  9868: a0 = sp + 0xffffffffffffffe0\n  9871: a2 = a0 & 0xffffffffffffffe0\n  9874: u64 [s1 + 0xf0] = a2\n  9878: sp = a2\n  9880: a0 = 0x20160\n  9885: i32 a0 = a0 + 0\n  9887: i32 a2 = a2 + 0\n  9889: a1 = 0x40\n  9892: u64 [s1 + 0xc0] = a0\n  9896: ra = 0x14a\n  9900: ecalli 9 // 'hash_keccak_256'\n  9902: t0 = 0x14c\n  9906: jump @1260\n      : @393 [@dyn 165] (gas: 1)\n  9909: t0 = 332, jump @1260\n      : @394 [@dyn 166] (gas: 3)\n  9915: i32 a0 = a0 + 0xfffffffffffff8c0\n  9919: a0 = a0 + s1\n  9922: ra = 334, jump @11\n      : @395 [@dyn 167] (gas: 22)\n  9928: a0 = s1 + 0x1878\n  9932: a1 = u64 [a0 + 0x60]\n  9935: u64 [s1 + 0xd0] = a1\n  9939: a1 = u64 [a0 + 0x58]\n  9942: u64 [s1 + 0xf0] = a1\n  9946: a1 = u64 [a0 + 0x48]\n  9949: u64 [s1 + 0xc8] = a1\n  9953: a0 = u64 [a0 + 0x50]\n  9956: u64 [s1 + 0xe8] = a0\n  9960: a0 = sp + 0xffffffffffffffe0\n  9963: a0 = a0 & 0xffffffffffffffe0\n  9966: u64 [s1 + 0xd8] = a0\n  9970: sp = a0\n  9972: a0 = s1 + 0x2078\n  9976: u64 [a0 + 1216] = 0\n  9980: u64 [a0 + 1208] = 0\n  9984: u64 [a0 + 1200] = 0\n  9988: u64 [a0 + 1192] = 0\n  9992: a0 = s1 + 0x2000\n  9996: i32 a0 = a0 + 0x520\n 10000: ecalli 17 // 'value_transferred'\n 10002: fallthrough\n      : @396 (gas: 43)\n 10003: a0 = s1 + 0x2078\n 10007: a3 = a0 + 0x400\n 10011: a2 = u64 [a3 + 0xb0]\n 10015: a1 = u64 [a3 + 0xa8]\n 10019: t0 = u64 [a0 + 0x4c0]\n 10023: a4 = u64 [a3 + 0xb8]\n 10027: a5 = u64 [s1 + 0xe8]\n 10031: a5 = a5 + a2\n 10034: a0 = u64 [s1 + 0xc8]\n 10038: t1 = a1 + a0\n 10041: a1 = t1 <u a1\n 10044: a5 = a5 + a1\n 10047: a3 = a5 ^ a2\n 10050: a2 = a5 <u a2\n 10053: a2 = a1 if a3 == 0\n 10056: a1 = u64 [s1 + 0xf0]\n 10060: a1 = a1 + a4\n 10063: ra = u64 [s1 + 0xd0]\n 10067: t0 = t0 + ra\n 10070: a3 = a1 <u a4\n 10073: a3 = a3 + t0\n 10076: a2 = a2 + a1\n 10079: a1 = a2 <u a1\n 10082: t2 = a3 + a1\n 10085: a3 = u64 [s1 + 0xe8]\n 10089: a1 = a3 ^ a5\n 10092: a4 = a5 <u a3\n 10095: a0 = t1 <u a0\n 10098: a0 = a4 if a1 != 0\n 10101: a3 = u64 [s1 + 0xf0]\n 10105: t0 = a2 <u a3\n 10108: a4 = ra ^ t2\n 10111: a1 = t2 <u ra\n 10114: a1 = t0 if a4 == 0\n 10117: a3 = a3 ^ a2\n 10120: a3 = a3 | a4\n 10123: a0 = a1 if a3 != 0\n 10126: a1 = u64 [s1 + 0xd8]\n 10130: u64 [a1] = t1\n 10132: u64 [a1 + 0x8] = a5\n 10135: u64 [a1 + 0x10] = a2\n 10138: u64 [a1 + 0x18] = t2\n 10141: jump @398 if a0 == 0\n      : @397 (gas: 1)\n 10144: jump @709\n      : @398 (gas: 2)\n 10147: a0 = u64 [s1 + 0xf8]\n 10151: ra = 336, jump @12\n      : @399 [@dyn 168] (gas: 3)\n 10157: a0 = s1 + 0x18a0\n 10161: a1 = 0x40\n 10164: ra = 338, jump @7\n      : @400 [@dyn 169] (gas: 19)\n 10170: a0 = s1 + 0x1878\n 10174: a1 = u64 [a0 + 0x40]\n 10177: u64 [s1 + 0xf0] = a1\n 10181: a1 = u64 [a0 + 0x38]\n 10184: u64 [s1 + 0xe8] = a1\n 10188: a1 = u64 [a0 + 0x30]\n 10191: u64 [s1 + 0xd8] = a1\n 10195: a0 = u64 [a0 + 0x28]\n 10198: u64 [s1 + 0xf8] = a0\n 10202: a0 = s1 + 0x2078\n 10206: u64 [a0 + 1248] = 0\n 10210: u64 [a0 + 1240] = 0\n 10214: u64 [a0 + 1232] = 0\n 10218: u64 [a0 + 1224] = 0\n 10222: a0 = s1 + 0x2000\n 10226: i32 a0 = a0 + 0x540\n 10230: ra = 0x154\n 10234: ecalli 17 // 'value_transferred'\n 10236: fallthrough\n      : @401 [@dyn 170] (gas: 13)\n 10237: a0 = u64 [s1 + 0xf0]\n 10241: a1 = u64 [s1 + 0xd8]\n 10245: a0 = a0 | a1\n 10248: a1 = u64 [s1 + 0xf8]\n 10252: a5 = a1\n 10254: a2 = u64 [s1 + 0xe8]\n 10258: a1 = a1 | a2\n 10261: a1 = a1 | a0\n 10264: a1 = a1 >> 0x20\n 10267: a0 = a0 | a2\n 10270: a0 = a0 << 0x20\n 10273: a0 = a0 | a1\n 10276: jump @403 if a0 == 0\n      : @402 (gas: 1)\n 10279: jump @646\n      : @403 (gas: 1)\n 10282: t0 = 342, jump @1267\n      : @404 [@dyn 171] (gas: 12)\n 10288: a0 = u64 [a4 + 0xc8]\n 10292: a1 = u64 [a4 + 0xd0]\n 10296: a2 = u64 [a4 + 0xd8]\n 10300: a3 = u64 [a4 + 0xe0]\n 10304: a4 = s1 + 0x1878\n 10308: u64 [a4 + 0x20] = a3\n 10311: u64 [a4 + 0x18] = a2\n 10314: u64 [a4 + 0x10] = a1\n 10317: a1 = s1 + 0x1880\n 10321: u64 [a4 + 0x8] = a0\n 10324: a0 = a5\n 10326: ra = 344, jump @9\n      : @405 [@dyn 172] (gas: 6)\n 10332: a0 = u64 [s1 + 0xb8]\n 10336: ra = 0x15a\n 10340: ecalli 4 // 'caller'\n 10342: a2 = u64 [s1 + 0xe0]\n 10346: t0 = 0x15c\n 10350: jump @1257\n      : @406 [@dyn 173] (gas: 2)\n 10353: a2 = u64 [s1 + 0xe0]\n 10357: t0 = 348, jump @1257\n      : @407 [@dyn 174] (gas: 51)\n 10363: t0 = a1 | a0\n 10366: a3 = a3 >> 0x20\n 10369: a2 = reverse a2\n 10371: a1 = a2 << 0x20\n 10374: t2 = a1 | a3\n 10377: a2 = a2 >> 0x20\n 10380: t1 = s1 + 0x1078\n 10384: u64 [t1 + 2016] = 0\n 10388: a3 = u64 [0x20020]\n 10393: a4 = u64 [0x20028]\n 10398: a5 = u64 [0x20030]\n 10403: a0 = u64 [0x20038]\n 10408: a1 = s1 + 0x1878\n 10412: u64 [a1] = a3\n 10414: a3 = a1 + 0xffffffffffffff00\n 10418: u64 [a3 + 0xf8] = a4\n 10422: u64 [a3 + 0xf0] = a5\n 10426: u64 [a3 + 0xe8] = a0\n 10430: u64 [t1 + 0x7d8] = a2\n 10434: u64 [t1 + 0x7d0] = t2\n 10438: a1 = 0x20\n 10441: a2 = s1 + 0x1860\n 10445: a3 = s1 + 0x1840\n 10449: u64 [t1 + 0x7c8] = t0\n 10453: a0 = u64 [s1 + 0xf8]\n 10457: ra = 0x15e\n 10461: sp = sp + 0xffffffffffffff60\n 10465: u64 [sp + 0x98] = ra\n 10469: u64 [sp + 0x90] = s0\n 10473: u64 [sp + 0x88] = s1\n 10477: s0 = sp + 0xa0\n 10481: sp = sp & 0xffffffffffffffe0\n 10484: a4 = u64 [a3]\n 10486: u64 [sp + 0x38] = a4\n 10489: a4 = u64 [a3 + 0x8]\n 10492: u64 [sp + 0x30] = a4\n 10495: a4 = u64 [a3 + 0x10]\n 10498: u64 [sp + 0x28] = a4\n 10501: a3 = u64 [a3 + 0x18]\n 10504: u64 [sp + 0x20] = a3\n 10507: a3 = u64 [a2]\n 10509: u64 [sp + 0x18] = a3\n 10512: a3 = u64 [a2 + 0x8]\n 10515: u64 [sp + 0x10] = a3\n 10518: a3 = u64 [a2 + 0x10]\n 10521: u64 [sp + 0x8] = a3\n 10524: a2 = u64 [a2 + 0x18]\n 10527: u64 [sp] = a2\n 10529: s1 = a1\n 10531: ra = 0x6\n 10534: jump @20\n      : @408 [@dyn 175] (gas: 5)\n 10537: a0 = 0\n 10539: a1 = u64 [s1 + 0xc0]\n 10543: a2 = 0\n 10545: ecalli 14 // 'seal_return'\n 10547: jump @1011\n      : @409 (gas: 10)\n 10550: u64 [a3 + 1568] = 0\n 10554: u64 [a3 + 1560] = 0\n 10558: u64 [a3 + 1552] = 0\n 10562: u64 [a3 + 1544] = 0\n 10566: a0 = s1 + 0x2000\n 10570: i32 a0 = a0 + 0xfffffffffffffe80\n 10574: ra = 0x160\n 10578: ecalli 17 // 'value_transferred'\n 10580: t0 = 0x162\n 10584: jump @1271\n      : @410 [@dyn 176] (gas: 1)\n 10587: t0 = 354, jump @1271\n      : @411 [@dyn 177] (gas: 1)\n 10593: t0 = 356, jump @1291\n      : @412 [@dyn 178] (gas: 1)\n 10599: jump @414 if a0 == 0\n      : @413 (gas: 1)\n 10602: jump @715\n      : @414 (gas: 3)\n 10605: a0 = u64 [s1 + 0xf8]\n 10609: a0 = i32 [a0]\n 10611: jump @416 if a0 >u 35\n      : @415 (gas: 1)\n 10615: jump @716\n      : @416 (gas: 4)\n 10618: a0 = s1 + 0x300\n 10622: ra = 0x166\n 10626: t0 = 0x416\n 10630: jump @1286\n      : @417 [@dyn 179] (gas: 10)\n 10633: a0 = u64 [s1 + 0x300]\n 10637: a1 = u64 [s1 + 0x308]\n 10641: a2 = u32 [s1 + 0x310]\n 10645: u64 [s1 + 760] = 0\n 10649: u64 [s1 + 0x2f0] = a2\n 10653: u64 [s1 + 0x2e8] = a1\n 10657: a1 = s1 + 0x2e0\n 10661: u64 [s1 + 0x2e0] = a0\n 10665: a0 = 0\n 10667: ra = 360, jump @9\n      : @418 [@dyn 180] (gas: 7)\n 10673: u64 [s1 + 728] = 0\n 10677: u64 [s1 + 720] = 0\n 10681: u64 [s1 + 704] = 0x2\n 10686: a0 = 0x20\n 10689: a1 = s1 + 0x2c0\n 10693: u64 [s1 + 712] = 0\n 10697: ra = 362, jump @9\n      : @419 [@dyn 181] (gas: 6)\n 10703: a0 = sp + 0xffffffffffffffe0\n 10706: a0 = a0 & 0xffffffffffffffe0\n 10709: u64 [s1 + 0xd8] = a0\n 10713: sp = a0\n 10715: a1 = i32 [0x20150]\n 10720: jump @421 if a1 >u 63\n      : @420 (gas: 2)\n 10724: u32 [0x20150] = 0x40\n 10730: fallthrough\n      : @421 (gas: 12)\n 10731: a0 = sp + 0xffffffffffffffe0\n 10734: a2 = a0 & 0xffffffffffffffe0\n 10737: u64 [s1 + 0xf8] = a2\n 10741: sp = a2\n 10743: a0 = 0x20160\n 10748: i32 a0 = a0 + 0\n 10750: i32 a2 = a2 + 0\n 10752: a1 = 0x40\n 10755: ra = 0x16c\n 10759: ecalli 9 // 'hash_keccak_256'\n 10761: t0 = 0x16e\n 10765: jump @1288\n      : @422 [@dyn 182] (gas: 1)\n 10768: t0 = 366, jump @1288\n      : @423 [@dyn 183] (gas: 14)\n 10774: u64 [s1 + 0xe8] = a5\n 10778: a4 = reverse a1\n 10780: u64 [s1 + 0xf0] = a4\n 10784: a2 = reverse a2\n 10786: u64 [s1 + 0xe0] = a2\n 10790: a0 = reverse a3\n 10792: u64 [s1 + 0xf8] = a0\n 10796: a1 = u64 [s1 + 0xd8]\n 10800: u64 [a1 + 0x18] = a0\n 10803: u64 [a1 + 0x10] = a2\n 10806: u64 [a1 + 0x8] = a4\n 10809: u64 [a1] = a5\n 10811: a0 = s1 + 0x2a0\n 10815: ra = 368, jump @11\n      : @424 [@dyn 184] (gas: 29)\n 10821: a0 = u64 [s1 + 0x2b8]\n 10825: u64 [s1 + 0xd8] = a0\n 10829: a0 = u64 [s1 + 0x2b0]\n 10833: u64 [s1 + 0xd0] = a0\n 10837: a0 = u64 [s1 + 0x2a8]\n 10841: u64 [s1 + 0xc8] = a0\n 10845: a0 = u64 [s1 + 0x2a0]\n 10849: u64 [s1 + 0xc0] = a0\n 10853: a0 = u64 [s1 + 0xe8]\n 10857: a0 = a0 + 0x1\n 10860: a1 = a0 <u 0x1\n 10863: a2 = u64 [s1 + 0xf0]\n 10867: a1 = a1 + a2\n 10870: a2 = s1 + 0x1878\n 10874: a3 = a2 + 0x600\n 10878: u64 [a3 + 0x30] = a1\n 10881: a1 = a1 | a0\n 10884: u64 [a3 + 0x28] = a0\n 10887: a0 = a1 <u 0x1\n 10890: a1 = u64 [s1 + 0xe0]\n 10894: a0 = a0 + a1\n 10897: u64 [a3 + 0x38] = a0\n 10900: a0 = a0 <u a1\n 10903: a1 = u64 [s1 + 0xf8]\n 10907: a0 = a0 + a1\n 10910: u64 [a3 + 0x40] = a0\n 10913: a0 = s1 + 0x280\n 10917: a1 = s1 + 0x1ea0\n 10921: ra = 370, jump @11\n      : @425 [@dyn 185] (gas: 29)\n 10927: a0 = u64 [s1 + 0x298]\n 10931: u64 [s1 + 0xb8] = a0\n 10935: a0 = u64 [s1 + 0x290]\n 10939: u64 [s1 + 0xb0] = a0\n 10943: a0 = u64 [s1 + 0x288]\n 10947: u64 [s1 + 0xa8] = a0\n 10951: a0 = u64 [s1 + 0x280]\n 10955: u64 [s1 + 0xa0] = a0\n 10959: a1 = u64 [s1 + 0xe8]\n 10963: a0 = a1 + 0x2\n 10966: a1 = a0 <u a1\n 10969: a3 = u64 [s1 + 0xf0]\n 10973: a2 = a3 + a1\n 10976: a3 = a2 <u a3\n 10979: a3 = a1 if a1 == 0\n 10982: a1 = u64 [s1 + 0xe0]\n 10986: a3 = a3 + a1\n 10989: a1 = a3 <u a1\n 10992: a4 = u64 [s1 + 0xf8]\n 10996: a1 = a1 + a4\n 10999: a4 = s1 + 0x1878\n 11003: a5 = a4 + 0x600\n 11007: u64 [a5 + 0x60] = a1\n 11010: u64 [a5 + 0x58] = a3\n 11013: u64 [a5 + 0x50] = a2\n 11016: u64 [a5 + 0x48] = a0\n 11019: a0 = s1 + 0x260\n 11023: a1 = s1 + 0x1ec0\n 11027: ra = 372, jump @11\n      : @426 [@dyn 186] (gas: 29)\n 11033: a0 = u64 [s1 + 0x278]\n 11037: u64 [s1 + 0x98] = a0\n 11041: a0 = u64 [s1 + 0x270]\n 11045: u64 [s1 + 0x90] = a0\n 11049: a1 = u64 [s1 + 0xe8]\n 11053: a0 = a1 + 0x3\n 11056: a1 = a0 <u a1\n 11059: a3 = u64 [s1 + 0xf0]\n 11063: a2 = a3 + a1\n 11066: a3 = a2 <u a3\n 11069: a3 = a1 if a1 == 0\n 11072: a1 = u64 [s1 + 0x268]\n 11076: u64 [s1 + 0xe8] = a1\n 11080: a1 = u64 [s1 + 0xe0]\n 11084: a3 = a3 + a1\n 11087: a1 = a3 <u a1\n 11090: a4 = u64 [s1 + 0xf8]\n 11094: a1 = a1 + a4\n 11097: a4 = u64 [s1 + 0x260]\n 11101: u64 [s1 + 0xe0] = a4\n 11105: a4 = s1 + 0x1878\n 11109: a5 = a4 + 0x600\n 11113: u64 [a5 + 0x80] = a1\n 11117: u64 [a5 + 0x78] = a3\n 11120: u64 [a5 + 0x70] = a2\n 11123: u64 [a5 + 0x68] = a0\n 11126: a0 = s1 + 0x240\n 11130: a1 = s1 + 0x1ee0\n 11134: ra = 374, jump @11\n      : @427 [@dyn 187] (gas: 5)\n 11140: a0 = u64 [s1 + 0x240]\n 11144: u64 [s1 + 0x88] = a0\n 11148: a0 = s1 + 0x220\n 11152: a1 = 0x40\n 11155: ra = 376, jump @7\n      : @428 [@dyn 188] (gas: 13)\n 11161: a0 = s1 + 0x200\n 11165: a4 = u64 [a0 + 0x38]\n 11168: a5 = u64 [a0 + 0x30]\n 11171: a3 = u64 [a0 + 0x28]\n 11174: a2 = u64 [a0 + 0x20]\n 11177: a0 = a3 | a4\n 11180: a1 = a2 | a5\n 11183: a1 = a1 | a0\n 11186: a1 = a1 >> 0x20\n 11189: a0 = a0 | a5\n 11192: a0 = a0 << 0x20\n 11195: a0 = a0 | a1\n 11198: jump @430 if a0 == 0\n      : @429 (gas: 1)\n 11201: jump @646\n      : @430 (gas: 15)\n 11204: a0 = u64 [s1 + 0xc0]\n 11208: u64 [s1 + 0x200] = a0\n 11212: a0 = u64 [s1 + 0xc8]\n 11216: u64 [s1 + 0x208] = a0\n 11220: a0 = u64 [s1 + 0xd0]\n 11224: u64 [s1 + 0x210] = a0\n 11228: a1 = s1 + 0x200\n 11232: a0 = u64 [s1 + 0xd8]\n 11236: u64 [s1 + 0x218] = a0\n 11240: a0 = a2\n 11242: u64 [s1 + 0xf8] = a2\n 11246: u64 [s1 + 0xf0] = a3\n 11250: u64 [s1 + 0xd8] = a4\n 11254: u64 [s1 + 0xd0] = a5\n 11258: ra = 378, jump @9\n      : @431 [@dyn 189] (gas: 11)\n 11264: a1 = u64 [s1 + 0xf8]\n 11268: a0 = u64 [s1 + 0xd8]\n 11272: a3 = u64 [s1 + 0xd0]\n 11276: a3 = a3 | a0\n 11279: a4 = 0x100000000\n 11289: a0 = 0xffffffe0\n 11299: a0 = a1 <u a0\n 11302: a2 = u64 [s1 + 0xf0]\n 11306: a0 = 0 if a2 != 0\n 11308: a0 = 0 if a3 != 0\n 11310: jump @433 if a0 != 0\n      : @432 (gas: 1)\n 11313: jump @646\n      : @433 (gas: 14)\n 11316: i32 a0 = a1 + 0x20\n 11319: a1 = u64 [s1 + 0xa0]\n 11323: a5 = s1 + 0x100\n 11327: u64 [a5 + 0xe0] = a1\n 11331: a1 = u64 [s1 + 0xa8]\n 11335: u64 [a5 + 0xe8] = a1\n 11339: a1 = u64 [s1 + 0xb0]\n 11343: u64 [a5 + 0xf0] = a1\n 11347: a1 = s1 + 0x1e0\n 11351: a2 = u64 [s1 + 0xb8]\n 11355: u64 [a5 + 0xf8] = a2\n 11359: u64 [s1 + 0xd8] = a3\n 11363: u64 [s1 + 0xd0] = a4\n 11367: ra = 380, jump @9\n      : @434 [@dyn 190] (gas: 9)\n 11373: a4 = u64 [s1 + 0xd8]\n 11377: a3 = u64 [s1 + 0xf0]\n 11381: a1 = u64 [s1 + 0xf8]\n 11385: a0 = u64 [s1 + 0xd0]\n 11389: a0 = a0 + 0xffffffffffffffc0\n 11392: a0 = a1 <u a0\n 11395: a0 = 0 if a3 != 0\n 11397: a0 = 0 if a4 != 0\n 11399: jump @436 if a0 != 0\n      : @435 (gas: 1)\n 11402: jump @646\n      : @436 (gas: 12)\n 11405: i32 a0 = a1 + 0x40\n 11408: a1 = u64 [s1 + 0xe0]\n 11412: a3 = s1 + 0x100\n 11416: u64 [a3 + 0xc0] = a1\n 11420: a1 = u64 [s1 + 0xe8]\n 11424: u64 [a3 + 0xc8] = a1\n 11428: a1 = u64 [s1 + 0x90]\n 11432: u64 [a3 + 0xd0] = a1\n 11436: a1 = s1 + 0x1c0\n 11440: a2 = u64 [s1 + 0x98]\n 11444: u64 [a3 + 0xd8] = a2\n 11448: ra = 382, jump @9\n      : @437 [@dyn 191] (gas: 8)\n 11454: a2 = u64 [s1 + 0xf8]\n 11458: a0 = 0xffffffa0\n 11468: a0 = a2 <u a0\n 11471: a1 = u64 [s1 + 0xf0]\n 11475: a0 = 0 if a1 != 0\n 11477: a1 = u64 [s1 + 0xd8]\n 11481: a0 = 0 if a1 != 0\n 11483: jump @439 if a0 != 0\n      : @438 (gas: 1)\n 11486: jump @646\n      : @439 (gas: 10)\n 11489: a0 = u64 [s1 + 0x88]\n 11493: a0 = a0 << 0x20\n 11496: a1 = a0 >> 0x20\n 11499: i32 a0 = a2 + 0x60\n 11502: u64 [s1 + 440] = 0\n 11506: u64 [s1 + 432] = 0\n 11510: u64 [s1 + 0x1a0] = a1\n 11514: a1 = s1 + 0x1a0\n 11518: u64 [s1 + 424] = 0\n 11522: ra = 384, jump @9\n      : @440 [@dyn 192] (gas: 3)\n 11528: a1 = 0x80\n 11532: a0 = u64 [s1 + 0xf8]\n 11536: ra = 386, jump @20\n      : @441 [@dyn 193] (gas: 5)\n 11542: i32 a1 = a0 + 0\n 11544: a2 = 0x80\n 11548: a0 = 0\n 11550: ecalli 14 // 'seal_return'\n 11552: jump @379\n      : @442 (gas: 18)\n 11555: a0 = sp + 0xffffffffffffffe0\n 11558: a1 = a0 & 0xffffffffffffffe0\n 11561: sp = a1\n 11563: a0 = t1 <u a2\n 11566: t0 = a5 + a0\n 11569: a2 = t0 <u a5\n 11572: a2 = a0 if a0 == 0\n 11575: a2 = a2 + a4\n 11578: a0 = a2 <u a4\n 11581: a0 = a0 + a3\n 11584: u64 [a1 + 0x8] = t0\n 11587: u64 [a1] = t1\n 11589: u64 [a1 + 0x10] = a2\n 11592: u64 [a1 + 0x18] = a0\n 11595: a0 = s1 + 0x7ff\n 11599: a0 = a0 + 0x501\n 11603: u64 [s1 + 0x68] = a1\n 11606: ra = 388, jump @11\n      : @443 [@dyn 194] (gas: 27)\n 11612: a1 = s1 + 0x7ff\n 11616: a1 = a1 + 0x79\n 11619: a2 = a1 + 0x400\n 11623: a3 = u64 [a2 + 0xa0]\n 11627: ra = u64 [a1 + 0x498]\n 11631: a0 = u64 [a2 + 0x90]\n 11635: a1 = u64 [a2 + 0x88]\n 11639: a4 = u64 [s1 + 0xe0]\n 11643: a2 = a3 ^ a4\n 11646: u64 [s1 + 0x48] = a3\n 11649: a5 = a3 <u a4\n 11652: t1 = u64 [s1 + 0xd8]\n 11656: a3 = ra <u t1\n 11659: u64 [s1 + 0x50] = a3\n 11662: a5 = a3 if a2 == 0\n 11665: t2 = u64 [s1 + 0xd0]\n 11669: a3 = a0 ^ t2\n 11672: u64 [s1 + 0x58] = a0\n 11675: a0 = a0 <u t2\n 11678: u64 [s1 + 0x60] = a1\n 11681: t0 = u64 [s1 + 0xf8]\n 11685: t0 = a1 <u t0\n 11688: a0 = t0 if a3 == 0\n 11691: a1 = ra ^ t1\n 11694: a1 = a1 | a2\n 11697: a5 = a0 if a1 == 0\n 11700: jump @445 if a5 == 0\n      : @444 (gas: 1)\n 11703: jump @728\n      : @445 (gas: 23)\n 11706: a1 = ra - t1\n 11709: a2 = u64 [s1 + 0x48]\n 11712: a2 = a2 - a4\n 11715: a3 = u64 [s1 + 0x50]\n 11718: a2 = a2 - a3\n 11721: a3 = a1 <u a0\n 11724: a2 = a2 - a3\n 11727: a1 = a1 - a0\n 11730: a0 = u64 [s1 + 0x58]\n 11733: a0 = a0 - t2\n 11736: a0 = a0 - t0\n 11739: a3 = u64 [s1 + 0x60]\n 11742: a4 = u64 [s1 + 0xf8]\n 11746: a3 = a3 - a4\n 11749: a4 = s1 + 0x2078\n 11753: a5 = a4 + 0x100\n 11757: u64 [a5 + 0x68] = a3\n 11760: u64 [a5 + 0x70] = a0\n 11763: u64 [a5 + 0x78] = a1\n 11766: u64 [a5 + 0x80] = a2\n 11770: a1 = s1 + 0x21e0\n 11774: a0 = u64 [s1 + 0x68]\n 11777: ra = 390, jump @12\n      : @446 [@dyn 195] (gas: 6)\n 11783: a0 = u64 [s1 + 0xe8]\n 11787: a0 = a0 & 0x3\n 11790: a3 = u64 [s1 + 0xb8]\n 11794: a2 = u64 [s1 + 0xb0]\n 11798: a5 = u64 [s1 + 0xa8]\n 11802: jump @451 if a0 == 0\n      : @447 (gas: 1)\n 11806: jump @456 if a0 != 1\n      : @448 (gas: 20)\n 11811: a0 = sp + 0xffffffffffffffe0\n 11814: a1 = a0 & 0xffffffffffffffe0\n 11817: sp = a1\n 11819: a4 = u64 [s1 + 0x88]\n 11823: a0 = a4 <u a5\n 11826: a5 = a2 + a0\n 11829: a2 = a5 <u a2\n 11832: a2 = a0 if a0 == 0\n 11835: a2 = a2 + a3\n 11838: a0 = a2 <u a3\n 11841: a3 = u64 [s1 + 0x90]\n 11845: a0 = a0 + a3\n 11848: u64 [s1 + 0xf0] = a1\n 11852: u64 [a1 + 0x8] = a5\n 11855: u64 [a1] = a4\n 11857: u64 [a1 + 0x10] = a2\n 11860: u64 [a1 + 0x18] = a0\n 11863: a0 = s1 + 0x7ff\n 11867: a0 = a0 + 0x4a1\n 11871: ra = 392, jump @11\n      : @449 [@dyn 196] (gas: 23)\n 11877: a2 = s1 + 0x7ff\n 11881: a2 = a2 + 0x79\n 11884: a4 = a2 + 0x400\n 11888: a0 = u64 [a4 + 0x30]\n 11891: a1 = u64 [a4 + 0x28]\n 11894: t0 = u64 [a2 + 0x440]\n 11898: a3 = u64 [a4 + 0x38]\n 11901: a4 = u64 [s1 + 0xd0]\n 11905: a4 = a4 + a0\n 11908: a5 = u64 [s1 + 0xf8]\n 11912: a5 = a5 + a1\n 11915: a1 = a5 <u a1\n 11918: a4 = a4 + a1\n 11921: a2 = a4 ^ a0\n 11924: a0 = a4 <u a0\n 11927: a0 = a1 if a2 == 0\n 11930: a1 = u64 [s1 + 0xd8]\n 11934: a1 = a1 + a3\n 11937: a2 = u64 [s1 + 0xe0]\n 11941: t0 = t0 + a2\n 11944: a2 = a1 <u a3\n 11947: a2 = a2 + t0\n 11950: t0 = 394, jump @1289\n      : @450 [@dyn 197] (gas: 6)\n 11956: u64 [a3 + 0x28] = a5\n 11959: u64 [a3 + 0x30] = a4\n 11962: u64 [a3 + 0x38] = a0\n 11965: u64 [a3 + 0x40] = a1\n 11968: a0 = 0x22a0\n 11972: jump @454\n      : @451 (gas: 4)\n 11974: a0 = s1 + 0x7ff\n 11978: a0 = a0 + 0x481\n 11982: a1 = u64 [s1 + 0xf0]\n 11986: ra = 396, jump @11\n      : @452 [@dyn 198] (gas: 23)\n 11992: a2 = s1 + 0x7ff\n 11996: a2 = a2 + 0x79\n 11999: a4 = a2 + 0x400\n 12003: a0 = u64 [a4 + 0x10]\n 12006: a1 = u64 [a4 + 0x8]\n 12009: t0 = u64 [a2 + 0x420]\n 12013: a3 = u64 [a4 + 0x18]\n 12016: a4 = u64 [s1 + 0xd0]\n 12020: a4 = a4 + a0\n 12023: a5 = u64 [s1 + 0xf8]\n 12027: a5 = a5 + a1\n 12030: a1 = a5 <u a1\n 12033: a4 = a4 + a1\n 12036: a2 = a4 ^ a0\n 12039: a0 = a4 <u a0\n 12042: a0 = a1 if a2 == 0\n 12045: a1 = u64 [s1 + 0xd8]\n 12049: a1 = a1 + a3\n 12052: a2 = a1 <u a3\n 12055: a3 = u64 [s1 + 0xe0]\n 12059: t0 = t0 + a3\n 12062: a2 = a2 + t0\n 12065: t0 = 398, jump @1289\n      : @453 [@dyn 199] (gas: 6)\n 12071: u64 [a3 + 0x48] = a5\n 12074: u64 [a3 + 0x50] = a4\n 12077: u64 [a3 + 0x58] = a0\n 12080: u64 [a3 + 0x60] = a1\n 12083: a0 = 0x22c0\n 12087: fallthrough\n      : @454 (gas: 3)\n 12088: a1 = s1 + a0\n 12091: a0 = u64 [s1 + 0xf0]\n 12095: ra = 400, jump @12\n      : @455 [@dyn 200] (gas: 1)\n 12101: jump @461\n      : @456 (gas: 57)\n 12104: a0 = u64 [s1 + 0xa0]\n 12108: ecalli 4 // 'caller'\n 12110: a1 = u64 [s1 + 0xc8]\n 12114: a0 = i32 [a1 + 0x10]\n 12117: u64 [s1 + 0xf0] = a0\n 12121: a0 = u64 [a1]\n 12123: u64 [s1 + 0xe8] = a0\n 12127: a0 = u64 [a1 + 0x8]\n 12130: u64 [s1 + 0xb8] = a0\n 12134: ecalli 11 // 'ref_time_left'\n 12136: a1 = u64 [s1 + 0xc8]\n 12140: a2 = u64 [s1 + 0xb8]\n 12144: u64 [a1 + 0x8] = a2\n 12147: a2 = u64 [s1 + 0xe8]\n 12151: u64 [a1] = a2\n 12153: a2 = u64 [s1 + 0xf0]\n 12157: u32 [a1 + 0x10] = a2\n 12160: a3 = a1\n 12162: a2 = s1 + 0x2078\n 12166: a1 = u64 [s1 + 0xe0]\n 12170: a4 = a2 + 0x100\n 12174: u64 [a4 + 0xc0] = a1\n 12178: a1 = u64 [s1 + 0xd8]\n 12182: u64 [a4 + 0xb8] = a1\n 12186: a1 = u64 [s1 + 0xd0]\n 12190: u64 [a4 + 0xb0] = a1\n 12194: a1 = u64 [s1 + 0xf8]\n 12198: u64 [a4 + 0xa8] = a1\n 12202: u32 [a2 + 456] = 0\n 12206: a0 = a0 >u 0x8fc\n 12210: a1 = -a0\n 12212: u64 [a2 + 0x200] = a1\n 12216: u64 [a4 + 0xf8] = a1\n 12220: u64 [a4 + 0xf0] = a1\n 12224: u64 [a4 + 0xe8] = a1\n 12228: a1 = a3 << 0x20\n 12231: a1 = a1 >> 0x20\n 12234: a0 = a0 << 0x23\n 12237: a0 = a0 | a1\n 12240: a1 = s1 + 0x2220\n 12244: a1 = a1 << 0x20\n 12247: a1 = a1 >> 0x20\n 12250: a2 = s1 + 0x2260\n 12254: a2 = a2 << 0x20\n 12257: a3 = a2 | a1\n 12260: a4 = u64 [s1 + 0x98]\n 12264: a4 = a4 << 0x20\n 12267: a4 = a4 >> 0x20\n 12270: a1 = s1 + 0x2240\n 12274: a1 = a1 << 0x20\n 12277: a5 = a1 | a4\n 12280: a1 = 0xffffffffffffffff\n 12283: a2 = 0xffffffffffffffff\n 12286: ecalli 0 // 'call'\n 12287: u64 [s1 + 0xf0] = a0\n 12291: ecalli 13 // 'return_data_size'\n 12293: fallthrough\n      : @457 (gas: 2)\n 12294: a2 = u64 [s1 + 0xf0]\n 12298: jump @459 if a0 == 0\n      : @458 (gas: 1)\n 12301: jump @635\n      : @459 (gas: 1)\n 12304: jump @461 if a2 == 0\n      : @460 (gas: 1)\n 12307: jump @743\n      : @461 (gas: 4)\n 12310: a0 = s1 + 0x7ff\n 12314: a0 = a0 + 0x3c1\n 12318: a1 = 0x40\n 12321: ra = 402, jump @7\n      : @462 [@dyn 201] (gas: 8)\n 12327: a3 = s1 + 0x7ff\n 12331: a3 = a3 + 0x79\n 12334: a4 = a3 + 0x300\n 12338: a0 = u64 [a4 + 0x60]\n 12341: a1 = u64 [a4 + 0x58]\n 12344: a2 = u64 [a4 + 0x50]\n 12347: a3 = u64 [a4 + 0x48]\n 12350: t0 = 404, jump @1254\n      : @463 [@dyn 202] (gas: 1)\n 12356: jump @465 if a0 == 0\n      : @464 (gas: 1)\n 12359: jump @646\n      : @465 (gas: 16)\n 12362: a0 = u64 [s1 + 0xf8]\n 12366: a2 = s1 + 0x7ff\n 12370: a2 = a2 + 0x79\n 12373: a4 = a2 + 0x300\n 12377: u64 [a4 + 0x28] = a0\n 12380: a0 = u64 [s1 + 0xd0]\n 12384: u64 [a4 + 0x30] = a0\n 12387: a0 = u64 [s1 + 0xd8]\n 12391: u64 [a4 + 0x38] = a0\n 12394: a1 = s1 + 0x7ff\n 12398: a1 = a1 + 0x3a1\n 12402: a0 = u64 [s1 + 0xe0]\n 12406: u64 [a4 + 0x40] = a0\n 12409: a0 = a3\n 12411: u64 [s1 + 0xf8] = a3\n 12415: ra = 406, jump @9\n      : @466 [@dyn 203] (gas: 6)\n 12421: a0 = u64 [s1 + 0xa0]\n 12425: ra = 0x198\n 12429: ecalli 4 // 'caller'\n 12431: a2 = u64 [s1 + 0xc8]\n 12435: t0 = 0x19a\n 12439: jump @1262\n      : @467 [@dyn 204] (gas: 2)\n 12442: a2 = u64 [s1 + 0xc8]\n 12446: t0 = 410, jump @1262\n      : @468 [@dyn 205] (gas: 37)\n 12452: a5 = s1 + 0x7ff\n 12456: a5 = a5 + 0x79\n 12459: u64 [a5 + 704] = 0\n 12463: u64 [a5 + 696] = 0\n 12467: a3 = u64 [s1 + 0x78]\n 12470: u64 [a5 + 0x2a8] = a3\n 12474: a3 = u64 [s1 + 0xc0]\n 12478: u64 [a5 + 0x2c8] = a3\n 12482: a3 = u64 [0x20080]\n 12487: a4 = u64 [0x20088]\n 12492: u64 [a5 + 688] = 0\n 12496: u64 [a5 + 736] = 0\n 12500: u64 [a5 + 0x320] = a3\n 12504: u64 [a5 + 0x318] = a4\n 12508: a3 = u64 [0x20090]\n 12513: a4 = u64 [0x20098]\n 12518: u64 [a5 + 728] = 0\n 12522: u64 [a5 + 720] = 0\n 12526: u64 [a5 + 0x310] = a3\n 12530: u64 [a5 + 0x308] = a4\n 12534: a3 = a5 + 0x200\n 12538: u64 [a3 + 0xf8] = a2\n 12542: u64 [a3 + 0xf0] = a1\n 12546: u64 [a3 + 0xe8] = a0\n 12550: a0 = a5\n 12552: a1 = 0x20\n 12555: a2 = s1 + 0x7ff\n 12559: a2 = a2 + 0x381\n 12563: a3 = s1 + 0x7ff\n 12567: a3 = a3 + 0x361\n 12571: a4 = s1 + 0x7ff\n 12575: a4 = a4 + 0x341\n 12579: a5 = s1 + 0x7ff\n 12583: a5 = a5 + 0x321\n 12587: u64 [a0 + 768] = 0\n 12591: a0 = u64 [s1 + 0xf8]\n 12595: ra = 412, jump @17\n      : @469 [@dyn 206] (gas: 5)\n 12601: a0 = 0\n 12603: a1 = u64 [s1 + 0x80]\n 12607: a2 = 0\n 12609: ecalli 14 // 'seal_return'\n 12611: jump @1011\n      : @470 (gas: 19)\n 12614: a0 = u64 [s1 + 0xf8]\n 12618: a2 = u64 [s1 + 0x88]\n 12622: a0 = a0 | a2\n 12625: a2 = u64 [s1 + 0x78]\n 12628: a0 = a2 if a4 == 0\n 12631: t1 = u64 [s1 + 0xa0]\n 12635: a3 = t1\n 12637: t0 = u64 [s1 + 0xc8]\n 12641: a3 = a0 if t0 != 0\n 12644: u64 [s1 + 0xf8] = a3\n 12648: a0 = u64 [s1 + 0xc0]\n 12652: a2 = u64 [s1 + 0x90]\n 12656: a0 = a0 | a2\n 12659: a2 = u64 [s1 + 0x80]\n 12663: a0 = a2 if a4 == 0\n 12666: a5 = u64 [s1 + 0xb0]\n 12670: a3 = a5\n 12672: a3 = a0 if t0 != 0\n 12675: t0 = 414, jump @1274\n      : @471 [@dyn 207] (gas: 1)\n 12681: ra = 416, jump @1293\n      : @472 [@dyn 208] (gas: 6)\n 12687: u64 [s1 + 0x90] = a0\n 12691: u64 [s1 + 0x80] = a1\n 12695: a0 = u64 [s1 + 0xa8]\n 12699: a1 = u64 [s1 + 0xb8]\n 12703: a2 = u64 [s1 + 0xf0]\n 12707: ra = 418, jump @1293\n      : @473 [@dyn 209] (gas: 7)\n 12713: u64 [s1 + 0x78] = a0\n 12716: u64 [s1 + 0x88] = a1\n 12720: a1 = u64 [s1 + 0xf0]\n 12724: a2 = 0x80 - a1\n 12728: a0 = u64 [s1 + 0xb0]\n 12732: a1 = u64 [s1 + 0xa0]\n 12736: ra = 420, jump @1298\n      : @474 [@dyn 210] (gas: 21)\n 12742: a2 = u64 [s1 + 0x88]\n 12746: a1 = a1 | a2\n 12749: a3 = u64 [s1 + 0xf0]\n 12753: a4 = a3 <u 0x80\n 12757: u64 [s1 + 0x88] = a4\n 12761: a2 = u64 [s1 + 0x80]\n 12765: a1 = a2 if a4 == 0\n 12768: a2 = u64 [s1 + 0xb8]\n 12772: a2 = a1 if a3 != 0\n 12775: u64 [s1 + 0xb8] = a2\n 12779: a1 = u64 [s1 + 0x78]\n 12782: a0 = a0 | a1\n 12785: a1 = u64 [s1 + 0x90]\n 12789: a0 = a1 if a4 == 0\n 12792: a1 = u64 [s1 + 0xa8]\n 12796: a1 = a0 if a3 != 0\n 12799: a2 = a3\n 12801: u64 [s1 + 0xa8] = a1\n 12805: a0 = u64 [s1 + 0xb0]\n 12809: a1 = u64 [s1 + 0xa0]\n 12813: ra = 422, jump @1293\n      : @475 [@dyn 211] (gas: 3)\n 12819: a4 = 0\n 12821: a5 = 0\n 12823: t0 = 424, jump @1277\n      : @476 [@dyn 212] (gas: 3)\n 12829: t1 = u64 [s1 + 0xb8]\n 12833: t2 = u64 [s1 + 0xa8]\n 12837: fallthrough\n      : @477 (gas: 89)\n 12838: u64 [s1 + 0xb8] = a4\n 12842: a2 = t2 >> 0x3f\n 12845: a3 = t1 << 0x1\n 12848: t0 = a3 | a2\n 12851: a3 = t2 << 0x1\n 12854: a4 = u64 [s1 + 0xf8]\n 12858: a4 = a4 >> 0x3f\n 12861: a3 = a3 | a4\n 12864: u64 [s1 + 0xa8] = a3\n 12868: a2 = u64 [s1 + 0x88]\n 12872: t2 = a1\n 12874: u64 [s1 + 0xb0] = t0\n 12878: a1 = a2 ^ t0\n 12881: ra = t1\n 12883: t1 = a2 <u t0\n 12886: a4 = u64 [s1 + 0x90]\n 12890: t0 = a4 <u a3\n 12893: t0 = t1 if a1 != 0\n 12896: a1 = t2 << 0x1\n 12899: a3 = a0 >> 0x3f\n 12902: a1 = a1 | a3\n 12905: u64 [s1 + 0xa0] = a1\n 12909: a3 = ra >> 0x3f\n 12912: a0 = a0 << 0x1\n 12915: a3 = a3 | a0\n 12918: a0 = u64 [s1 + 0xf8]\n 12922: a0 = a0 << 0x1\n 12925: a4 = u64 [s1 + 0xc0]\n 12929: a1 = a4 >> 0x3f\n 12932: ra = a0 | a1\n 12935: a1 = a4 << 0x1\n 12938: a4 = u64 [s1 + 0xc8]\n 12942: t1 = a4 >> 0x3f\n 12945: t1 = a1 | t1\n 12948: a1 = a4 << 0x1\n 12951: a4 = u64 [s1 + 0xe8]\n 12955: t2 = a4 >> 0x3f\n 12958: a1 = a1 | t2\n 12961: a4 = a4 << 0x1\n 12964: a0 = u64 [s1 + 0xb8]\n 12968: a4 = a4 | a0\n 12971: u64 [s1 + 0xe8] = a4\n 12975: a1 = a1 | a5\n 12978: u64 [s1 + 0xc8] = a1\n 12982: a1 = a5 | t1\n 12985: u64 [s1 + 0xc0] = a1\n 12989: a0 = a5 | ra\n 12992: u64 [s1 + 0xf8] = a0\n 12996: a0 = a2 - a3\n 12999: a0 = a0 <u t0\n 13002: a1 = a2 <u a3\n 13005: t0 = u64 [s1 + 0xa0]\n 13009: a4 = a2 - t0\n 13012: a4 = a4 - a1\n 13015: a4 = a4 - a0\n 13018: a5 = a4 >>a 0x3f\n 13021: a0 = u64 [s1 + 0x98]\n 13025: a0 = a0 & a5\n 13028: a1 = u64 [s1 + 0xa8]\n 13032: t2 = a1 - a0\n 13035: a1 = a1 <u a0\n 13038: a0 = u64 [s1 + 0xb0]\n 13042: t1 = a0 - a1\n 13045: a1 = 0 if a0 != 0\n 13047: a0 = a3 - a1\n 13050: a1 = a3 <u a1\n 13053: a1 = t0 - a1\n 13056: a3 = u64 [s1 + 0xf0]\n 13060: ra = u64 [s1 + 0xe0]\n 13064: a2 = a3 | ra\n 13067: a2 = a2 <u 0x1\n 13070: a4 = u64 [s1 + 0xd0]\n 13074: t0 = a4 <u a2\n 13077: a2 = a4 - a2\n 13080: a4 = a3 <u 0x1\n 13083: ra = ra - a4\n 13086: a4 = u64 [s1 + 0xd8]\n 13090: a4 = a4 - t0\n 13093: a3 = a3 + 0xffffffffffffffff\n 13096: u64 [s1 + 0xe0] = ra\n 13100: u64 [s1 + 0xd8] = a4\n 13104: t0 = ra | a4\n 13107: u64 [s1 + 0xf0] = a3\n 13111: a4 = a3 | a2\n 13114: a3 = a4 | t0\n 13117: a4 = a5 & 0x1\n 13120: u64 [s1 + 0xd0] = a2\n 13124: a5 = 0\n 13126: jump @477 if a3 != 0\n      : @478 (gas: 4)\n 13130: a0 = u64 [s1 + 0xe8]\n 13134: a0 = a0 << 0x1\n 13137: a4 = a4 | a0\n 13140: fallthrough\n      : @479 (gas: 3)\n 13141: a0 = a4 & 0xffffffffffffffff\n 13144: a1 = u64 [s1 + 0x38]\n 13147: jump @481 if a1 == a0\n      : @480 (gas: 1)\n 13150: jump @717\n      : @481 (gas: 9)\n 13153: a0 = 0x30160\n 13158: u64 [s1 + 0xb0] = a0\n 13162: i32 a0 = a0 + 0\n 13164: u64 [s1 + 0xa8] = a0\n 13168: ra = 0x1aa\n 13172: ecalli 4 // 'caller'\n 13174: a2 = u64 [s1 + 0xb0]\n 13178: t0 = 0x1ac\n 13182: jump @1241\n      : @482 [@dyn 213] (gas: 2)\n 13185: a2 = u64 [s1 + 0xb0]\n 13189: t0 = 428, jump @1241\n      : @483 [@dyn 214] (gas: 9)\n 13195: u64 [a2 + 384] = 0\n 13199: a4 = a2 + 0x100\n 13203: u64 [a4 + 0x78] = a1\n 13206: u64 [a4 + 0x70] = a0\n 13209: a1 = s1 + 0x7ff\n 13213: a1 = a1 + 0x1e1\n 13217: u64 [a4 + 0x68] = a3\n 13220: a0 = 0\n 13222: ra = 430, jump @9\n      : @484 [@dyn 215] (gas: 11)\n 13228: a1 = s1 + 0x7ff\n 13232: a1 = a1 + 0x79\n 13235: u64 [a1 + 352] = 0\n 13239: u64 [a1 + 344] = 0\n 13243: u64 [a1 + 328] = 0x2\n 13248: a2 = a1\n 13250: a0 = 0x20\n 13253: a1 = s1 + 0x7ff\n 13257: a1 = a1 + 0x1c1\n 13261: u64 [a2 + 336] = 0\n 13265: ra = 432, jump @9\n      : @485 [@dyn 216] (gas: 7)\n 13271: a0 = sp + 0xffffffffffffffe0\n 13274: a0 = a0 & 0xffffffffffffffe0\n 13277: u64 [s1 + 0x70] = a0\n 13280: sp = a0\n 13282: a1 = 0x20150\n 13287: a0 = i32 [0x20150]\n 13292: jump @487 if a0 >u 63\n      : @486 (gas: 2)\n 13296: u32 [0x20150] = 0x40\n 13302: fallthrough\n      : @487 (gas: 14)\n 13303: a0 = sp + 0xffffffffffffffe0\n 13306: a2 = a0 & 0xffffffffffffffe0\n 13309: u64 [s1 + 0xf8] = a2\n 13313: sp = a2\n 13315: a0 = 0x20160\n 13320: i32 a0 = a0 + 0\n 13322: i32 a2 = a2 + 0\n 13324: u64 [s1 + 0xe0] = a1\n 13328: a1 = 0x40\n 13331: u64 [s1 + 0xe8] = a0\n 13335: ra = 0x1b2\n 13339: ecalli 9 // 'hash_keccak_256'\n 13341: t0 = 0x1b4\n 13345: jump @1288\n      : @488 [@dyn 217] (gas: 1)\n 13348: t0 = 436, jump @1288\n      : @489 [@dyn 218] (gas: 18)\n 13354: a4 = reverse a1\n 13356: a1 = reverse a2\n 13358: a2 = reverse a3\n 13360: a0 = u64 [s1 + 0x70]\n 13363: u64 [s1 + 0xf0] = a2\n 13367: u64 [a0 + 0x18] = a2\n 13370: u64 [s1 + 0xf8] = a1\n 13374: u64 [a0 + 0x10] = a1\n 13377: u64 [s1 + 0xd8] = a4\n 13381: u64 [a0 + 0x8] = a4\n 13384: u64 [s1 + 0xd0] = a5\n 13388: u64 [a0] = a5\n 13390: a0 = u64 [s1 + 0xa8]\n 13394: ra = 0x1b6\n 13398: ecalli 4 // 'caller'\n 13400: a2 = u64 [s1 + 0xb0]\n 13404: t0 = 0x1b8\n 13408: jump @1241\n      : @490 [@dyn 219] (gas: 2)\n 13411: a2 = u64 [s1 + 0xb0]\n 13415: t0 = 440, jump @1241\n      : @491 [@dyn 220] (gas: 9)\n 13421: u64 [a2 + 320] = 0\n 13425: a4 = a2 + 0x100\n 13429: u64 [a4 + 0x38] = a1\n 13432: u64 [a4 + 0x30] = a0\n 13435: a1 = s1 + 0x7ff\n 13439: a1 = a1 + 0x1a1\n 13443: u64 [a4 + 0x28] = a3\n 13446: a0 = 0\n 13448: ra = 442, jump @9\n      : @492 [@dyn 221] (gas: 11)\n 13454: a1 = s1 + 0x7ff\n 13458: a1 = a1 + 0x79\n 13461: u64 [a1 + 288] = 0\n 13465: u64 [a1 + 280] = 0\n 13469: u64 [a1 + 264] = 0x4\n 13474: a2 = a1\n 13476: a0 = 0x20\n 13479: a1 = s1 + 0x7ff\n 13483: a1 = a1 + 0x181\n 13487: u64 [a2 + 272] = 0\n 13491: ra = 444, jump @9\n      : @493 [@dyn 222] (gas: 3)\n 13497: a1 = u64 [s1 + 0xe0]\n 13501: a0 = i32 [a1]\n 13503: jump @495 if a0 >u 63\n      : @494 (gas: 2)\n 13507: u32 [a1 + 0] = 0x40\n 13510: fallthrough\n      : @495 (gas: 4)\n 13511: a0 = sp + 0xffffffffffffffe0\n 13514: a0 = a0 & 0xffffffffffffffe0\n 13517: u64 [s1 + 0xc8] = a0\n 13521: t0 = 446, jump @1256\n      : @496 [@dyn 223] (gas: 5)\n 13527: ra = 0x1c0\n 13531: ecalli 9 // 'hash_keccak_256'\n 13533: a3 = u64 [s1 + 0xc8]\n 13537: t0 = 0x1c2\n 13541: jump @1275\n      : @497 [@dyn 224] (gas: 2)\n 13544: a3 = u64 [s1 + 0xc8]\n 13548: t0 = 450, jump @1275\n      : @498 [@dyn 225] (gas: 10)\n 13554: i32 a4 = a4 + 0x78\n 13557: a4 = a4 + s1\n 13560: u64 [a4 + 0x20] = a3\n 13563: u64 [a4 + 0x18] = a2\n 13566: u64 [a4 + 0x10] = a1\n 13569: u64 [a4 + 0x8] = a0\n 13572: a0 = s1 + 0x7ff\n 13576: a0 = a0 + 0x161\n 13580: a1 = s1 + 0x2080\n 13584: ra = 452, jump @11\n      : @499 [@dyn 226] (gas: 10)\n 13590: a0 = s1 + 0x7ff\n 13594: a0 = a0 + 0x79\n 13597: a0 = u32 [a0 + 0xe8]\n 13601: u64 [s1 + 0xa0] = a0\n 13605: a0 = u64 [s1 + 0xa8]\n 13609: ra = 0x1c6\n 13613: ecalli 4 // 'caller'\n 13615: a2 = u64 [s1 + 0xb0]\n 13619: t0 = 0x1c8\n 13623: jump @1241\n      : @500 [@dyn 227] (gas: 2)\n 13626: a2 = u64 [s1 + 0xb0]\n 13630: t0 = 456, jump @1241\n      : @501 [@dyn 228] (gas: 8)\n 13636: u64 [a2 + 224] = 0\n 13640: u64 [a2 + 0xd8] = a1\n 13644: u64 [a2 + 0xd0] = a0\n 13648: a1 = s1 + 0x7ff\n 13652: a1 = a1 + 0x141\n 13656: u64 [a2 + 0xc8] = a3\n 13660: a0 = 0\n 13662: ra = 458, jump @9\n      : @502 [@dyn 229] (gas: 11)\n 13668: a1 = s1 + 0x7ff\n 13672: a1 = a1 + 0x79\n 13675: u64 [a1 + 192] = 0\n 13679: u64 [a1 + 184] = 0\n 13683: u64 [a1 + 168] = 0x5\n 13688: a2 = a1\n 13690: a0 = 0x20\n 13693: a1 = s1 + 0x7ff\n 13697: a1 = a1 + 0x121\n 13701: u64 [a2 + 176] = 0\n 13705: ra = 460, jump @9\n      : @503 [@dyn 230] (gas: 3)\n 13711: a1 = u64 [s1 + 0xe0]\n 13715: a0 = i32 [a1]\n 13717: jump @505 if a0 >u 63\n      : @504 (gas: 2)\n 13721: u32 [a1 + 0] = 0x40\n 13724: fallthrough\n      : @505 (gas: 4)\n 13725: a0 = sp + 0xffffffffffffffe0\n 13728: a0 = a0 & 0xffffffffffffffe0\n 13731: u64 [s1 + 0xc8] = a0\n 13735: t0 = 462, jump @1256\n      : @506 [@dyn 231] (gas: 4)\n 13741: ra = 0x1d0\n 13745: ecalli 9 // 'hash_keccak_256'\n 13747: t0 = 0x1d2\n 13751: jump @1273\n      : @507 [@dyn 232] (gas: 1)\n 13754: t0 = 466, jump @1273\n      : @508 [@dyn 233] (gas: 18)\n 13760: u64 [s1 + 0x98] = a0\n 13764: a0 = reverse a3\n 13766: u64 [s1 + 0x90] = a0\n 13770: a0 = sp + 0xffffffffffffffe0\n 13773: a0 = a0 & 0xffffffffffffffe0\n 13776: u64 [s1 + 0xc8] = a0\n 13780: sp = a0\n 13782: a2 = s1 + 0x7ff\n 13786: a2 = a2 + 0x79\n 13789: u64 [a2 + 160] = 0\n 13793: u64 [a2 + 152] = 0\n 13797: u64 [a2 + 144] = 0\n 13801: a1 = s1 + 0x7ff\n 13805: a1 = a1 + 0x101\n 13809: a0 = u64 [s1 + 0x38]\n 13812: u64 [a2 + 0x88] = a0\n 13816: a0 = 0\n 13818: ra = 468, jump @9\n      : @509 [@dyn 234] (gas: 15)\n 13824: a0 = u64 [s1 + 0x90]\n 13828: a1 = s1 + 0x7ff\n 13832: a1 = a1 + 0x79\n 13835: u64 [a1 + 0x80] = a0\n 13839: a0 = u64 [s1 + 0x98]\n 13843: u64 [a1 + 0x78] = a0\n 13846: a0 = u64 [s1 + 0xb8]\n 13850: u64 [a1 + 0x70] = a0\n 13853: a3 = a1\n 13855: a0 = 0x20\n 13858: a1 = s1 + 0x7ff\n 13862: a1 = a1 + 0xe1\n 13866: a2 = u64 [s1 + 0xc0]\n 13870: u64 [a3 + 0x68] = a2\n 13873: ra = 470, jump @9\n      : @510 [@dyn 235] (gas: 3)\n 13879: a1 = u64 [s1 + 0xe0]\n 13883: a0 = i32 [a1]\n 13885: jump @512 if a0 >u 63\n      : @511 (gas: 2)\n 13889: u32 [a1 + 0] = 0x40\n 13892: fallthrough\n      : @512 (gas: 6)\n 13893: a0 = 0xffffffff\n 13903: u64 [s1 + 0x98] = a0\n 13907: a0 = sp + 0xffffffffffffffe0\n 13910: a0 = a0 & 0xffffffffffffffe0\n 13913: u64 [s1 + 0xc0] = a0\n 13917: t0 = 472, jump @1256\n      : @513 [@dyn 236] (gas: 5)\n 13923: ra = 0x1da\n 13927: ecalli 9 // 'hash_keccak_256'\n 13929: a3 = u64 [s1 + 0xc0]\n 13933: t0 = 0x1dc\n 13937: jump @1283\n      : @514 [@dyn 237] (gas: 2)\n 13940: a3 = u64 [s1 + 0xc0]\n 13944: t0 = 476, jump @1283\n      : @515 [@dyn 238] (gas: 12)\n 13950: a1 = u64 [s1 + 0xc8]\n 13954: u64 [a1 + 0x18] = a3\n 13957: u64 [a1 + 0x10] = a2\n 13960: u64 [a1 + 0x8] = a4\n 13963: u64 [a1] = a0\n 13965: a0 = sp + 0xffffffffffffffe0\n 13968: a0 = a0 & 0xffffffffffffffe0\n 13971: u64 [s1 + 0x30] = a0\n 13974: sp = a0\n 13976: a0 = s1 + 0x7ff\n 13980: a0 = a0 + 0xc1\n 13984: ra = 478, jump @11\n      : @516 [@dyn 239] (gas: 31)\n 13990: a3 = 0x1\n 13993: u64 [s1 + 96] = 0\n 13996: u64 [s1 + 104] = 0\n 13999: a5 = 0\n 14001: a1 = s1 + 0x7ff\n 14005: a1 = a1 + 0x79\n 14008: a0 = u64 [a1 + 0x60]\n 14011: u64 [s1 + 0x90] = a0\n 14015: a0 = u64 [a1 + 0x58]\n 14018: u64 [s1 + 0x88] = a0\n 14022: a2 = u64 [s1 + 0xd0]\n 14026: a2 = a2 + a3\n 14029: a0 = a2 <u a3\n 14032: a4 = u64 [s1 + 0xd8]\n 14036: a0 = a0 + a4\n 14039: u64 [s1 + 0x58] = a2\n 14042: u64 [s1 + 0x50] = a0\n 14045: a0 = a0 | a2\n 14048: a0 = a0 <u a3\n 14051: a2 = u64 [s1 + 0xf8]\n 14055: a0 = a0 + a2\n 14058: u64 [s1 + 0x48] = a0\n 14061: a0 = a0 <u a2\n 14064: a2 = u64 [s1 + 0xf0]\n 14068: a0 = a0 + a2\n 14071: u64 [s1 + 0x40] = a0\n 14074: a0 = u64 [a1 + 0x50]\n 14077: u64 [s1 + 0x80] = a0\n 14081: a0 = u64 [a1 + 0x48]\n 14084: u64 [s1 + 0x78] = a0\n 14087: fallthrough\n      : @517 (gas: 10)\n 14088: a1 = 0x1\n 14091: a1 = a1 if a5 == 0\n 14094: a0 = u64 [s1 + 0xa0]\n 14098: a0 = a0 <u a3\n 14101: a0 = a0 ^ 0x1\n 14104: a2 = 0x1\n 14107: a2 = a0 if a5 == 0\n 14110: a0 = 0\n 14112: a2 = a1 if a0 != 0\n 14115: jump @552 if a2 == 0\n      : @518 (gas: 9)\n 14119: u64 [s1 + 184] = 0\n 14123: u64 [s1 + 240] = 0\n 14127: u64 [s1 + 0xf8] = a3\n 14131: a0 = u64 [s1 + 0xa8]\n 14135: ra = 0x1e0\n 14139: ecalli 4 // 'caller'\n 14141: a2 = u64 [s1 + 0xb0]\n 14145: t0 = 0x1e2\n 14149: jump @1241\n      : @519 [@dyn 240] (gas: 2)\n 14152: a2 = u64 [s1 + 0xb0]\n 14156: t0 = 482, jump @1241\n      : @520 [@dyn 241] (gas: 8)\n 14162: u64 [a2 + 64] = 0\n 14165: u64 [a2 + 0x38] = a1\n 14168: u64 [a2 + 0x30] = a0\n 14171: a1 = s1 + 0x7ff\n 14175: a1 = a1 + 0xa1\n 14179: u64 [a2 + 0x28] = a3\n 14182: a0 = 0\n 14184: ra = 484, jump @9\n      : @521 [@dyn 242] (gas: 11)\n 14190: a0 = s1 + 0x7ff\n 14194: a0 = a0 + 0x79\n 14197: u64 [a0 + 32] = 0\n 14200: u64 [a0 + 24] = 0\n 14203: u64 [a0 + 16] = 0\n 14206: a3 = a0\n 14208: a0 = 0x20\n 14211: a1 = s1 + 0x7ff\n 14215: a1 = a1 + 0x81\n 14219: u64 [a3 + 8] = 0x3\n 14223: ra = 486, jump @9\n      : @522 [@dyn 243] (gas: 3)\n 14229: a1 = u64 [s1 + 0xe0]\n 14233: a0 = i32 [a1]\n 14235: jump @524 if a0 >u 63\n      : @523 (gas: 2)\n 14239: u32 [a1 + 0] = 0x40\n 14242: fallthrough\n      : @524 (gas: 4)\n 14243: a0 = sp + 0xffffffffffffffe0\n 14246: a0 = a0 & 0xffffffffffffffe0\n 14249: u64 [s1 + 0xd8] = a0\n 14253: t0 = 488, jump @1256\n      : @525 [@dyn 244] (gas: 4)\n 14259: ra = 0x1ea\n 14263: ecalli 9 // 'hash_keccak_256'\n 14265: t0 = 0x1ec\n 14269: jump @1265\n      : @526 [@dyn 245] (gas: 1)\n 14272: t0 = 492, jump @1265\n      : @527 [@dyn 246] (gas: 14)\n 14278: a0 = s1 + 0x7ff\n 14282: a0 = a0 + 0x79\n 14285: a1 = u64 [s1 + 0xf0]\n 14289: u64 [a0] = a1\n 14291: u64 [a0 + 0xfffffffffffffff8] = a1\n 14294: a0 = s1 + 0x1000\n 14298: u64 [a0 + 0xfffffffffffff868] = a1\n 14302: a1 = s1 + 0x7ff\n 14306: a1 = a1 + 0x61\n 14309: a0 = u64 [s1 + 0xf8]\n 14313: a2 = s1 + 0x1000\n 14317: u64 [a2 + 0xfffffffffffff860] = a0\n 14321: a0 = 0\n 14323: ra = 494, jump @9\n      : @528 [@dyn 247] (gas: 16)\n 14329: a0 = u64 [s1 + 0xc0]\n 14333: a1 = s1 + 0x1000\n 14337: u64 [a1 + 0xfffffffffffff858] = a0\n 14341: a0 = u64 [s1 + 0xc8]\n 14345: a1 = s1 + 0x1000\n 14349: u64 [a1 + 0xfffffffffffff850] = a0\n 14353: a0 = u64 [s1 + 0xd0]\n 14357: a1 = s1 + 0x1000\n 14361: u64 [a1 + 0xfffffffffffff848] = a0\n 14365: a0 = 0x20\n 14368: a1 = s1 + 0x7ff\n 14372: a1 = a1 + 0x41\n 14375: a2 = u64 [s1 + 0xd8]\n 14379: a3 = s1 + 0x1000\n 14383: u64 [a3 + 0xfffffffffffff840] = a2\n 14387: ra = 496, jump @9\n      : @529 [@dyn 248] (gas: 3)\n 14393: a1 = u64 [s1 + 0xe0]\n 14397: a0 = i32 [a1]\n 14399: jump @531 if a0 >u 63\n      : @530 (gas: 2)\n 14403: u32 [a1 + 0] = 0x40\n 14406: fallthrough\n      : @531 (gas: 4)\n 14407: a0 = sp + 0xffffffffffffffe0\n 14410: a0 = a0 & 0xffffffffffffffe0\n 14413: u64 [s1 + 0xd8] = a0\n 14417: t0 = 498, jump @1256\n      : @532 [@dyn 249] (gas: 4)\n 14423: ra = 0x1f4\n 14427: ecalli 9 // 'hash_keccak_256'\n 14429: t0 = 0x1f6\n 14433: jump @1251\n      : @533 [@dyn 250] (gas: 1)\n 14436: t0 = 502, jump @1251\n      : @534 [@dyn 251] (gas: 8)\n 14442: u64 [a1 + 0x28] = a3\n 14445: u64 [a1 + 0x30] = a2\n 14448: u64 [a1 + 0x38] = a4\n 14451: u64 [a1 + 0x40] = a0\n 14454: a0 = s1 + 0x7ff\n 14458: a0 = a0 + 0x21\n 14461: a1 = s1 + 0x20a0\n 14465: ra = 504, jump @11\n      : @535 [@dyn 252] (gas: 4)\n 14471: a0 = s1 + 0x1000\n 14475: a0 = u64 [a0 + 0xfffffffffffff828]\n 14479: a0 = a0 & 0xff\n 14483: jump @542 if a0 != 0\n      : @536 (gas: 5)\n 14487: a0 = s1 + 0x1000\n 14491: a0 = u64 [a0 + 0xfffffffffffff820]\n 14495: a0 = a0 & 0xffffffffffffffff\n 14498: a3 = u64 [s1 + 0xf8]\n 14502: jump @543 if a0 == 0\n      : @537 (gas: 15)\n 14506: a2 = u64 [s1 + 0xf0]\n 14510: a0 = a2 >u 0\n 14512: a1 = a3 <u 0x100\n 14516: a1 = a1 ^ 0x1\n 14519: a1 = a0 if a2 != 0\n 14522: a0 = a2 >u 0\n 14524: a4 = a2 >u 0\n 14526: a4 = a0 if a2 == 0\n 14529: a0 = u64 [s1 + 0xb8]\n 14533: a4 = a1 if a0 == 0\n 14536: u64 [s1 + 0xd0] = a4\n 14540: i32 a2 = a3 + 0xffffffffffffff80\n 14543: a0 = 0x1\n 14546: a1 = 0\n 14548: ra = 506, jump @1298\n      : @538 [@dyn 253] (gas: 7)\n 14554: u64 [s1 + 0xf0] = a0\n 14558: u64 [s1 + 0xd8] = a1\n 14562: a1 = u64 [s1 + 0xf8]\n 14566: i32 a2 = 0x80 - a1\n 14570: a0 = 0x1\n 14573: a1 = 0\n 14575: ra = 508, jump @1293\n      : @539 [@dyn 254] (gas: 7)\n 14581: u64 [s1 + 0xb8] = a0\n 14585: u64 [s1 + 0xc0] = a1\n 14589: a2 = i32 [s1 + 0xf8]\n 14593: u64 [s1 + 0xc8] = a2\n 14597: a0 = 0\n 14599: a1 = 0\n 14601: ra = 510, jump @1298\n      : @540 [@dyn 255] (gas: 19)\n 14607: a4 = u64 [s1 + 0xb8]\n 14611: a4 = a4 | a0\n 14614: a0 = u64 [s1 + 0xf8]\n 14618: a3 = a0 <u 0x80\n 14622: u64 [s1 + 0xb8] = a3\n 14626: a2 = u64 [s1 + 0xf0]\n 14630: a4 = a2 if a3 == 0\n 14633: a4 = 0 if a0 == 0\n 14635: u64 [s1 + 0xf0] = a4\n 14639: a2 = u64 [s1 + 0xc0]\n 14643: a2 = a2 | a1\n 14646: a1 = u64 [s1 + 0xd8]\n 14650: a2 = a1 if a3 == 0\n 14653: a2 = 0 if a0 == 0\n 14655: u64 [s1 + 0xd8] = a2\n 14659: a0 = 0x1\n 14662: a1 = 0\n 14664: a2 = u64 [s1 + 0xc8]\n 14668: ra = 512, jump @1298\n      : @541 [@dyn 256] (gas: 24)\n 14674: a4 = u64 [s1 + 0xd8]\n 14678: t0 = u64 [s1 + 0xf0]\n 14682: a5 = a0\n 14684: a3 = a1\n 14686: a0 = u64 [s1 + 0xb8]\n 14690: a5 = 0 if a0 == 0\n 14692: a3 = 0 if a0 == 0\n 14694: a0 = u64 [s1 + 0xd0]\n 14698: a4 = 0 if a0 != 0\n 14700: t0 = 0 if a0 != 0\n 14702: a3 = 0 if a0 != 0\n 14704: a5 = 0 if a0 != 0\n 14706: a0 = u64 [s1 + 0x88]\n 14710: a0 = a0 & t0\n 14713: a1 = u64 [s1 + 0x90]\n 14717: a1 = a1 & a4\n 14720: a2 = u64 [s1 + 0x80]\n 14724: a2 = a2 & a3\n 14727: a1 = a1 | a2\n 14730: a2 = u64 [s1 + 0x78]\n 14733: a2 = a2 & a5\n 14736: a0 = a0 | a2\n 14739: a0 = a0 | a1\n 14742: jump @545 if a0 == 0\n      : @542 (gas: 3)\n 14745: a1 = u64 [s1 + 0x98]\n 14749: a3 = u64 [s1 + 0xf8]\n 14753: jump @544\n      : @543 (gas: 2)\n 14755: a1 = u64 [s1 + 0x98]\n 14759: fallthrough\n      : @544 (gas: 4)\n 14760: a5 = 0\n 14762: a0 = a3 + 0x1\n 14765: a3 = a0 & a1\n 14768: jump @517\n      : @545 (gas: 8)\n 14771: u64 [s1 + 0xc8] = a3\n 14775: u64 [s1 + 0xd0] = a5\n 14779: u64 [s1 + 0xd8] = a4\n 14783: u64 [s1 + 0xf0] = t0\n 14787: a0 = s1 + 0x7ff\n 14791: a0 = a0 + 0x1\n 14794: a1 = u64 [s1 + 0x70]\n 14797: ra = 514, jump @11\n      : @546 [@dyn 257] (gas: 18)\n 14803: a0 = s1 + 0x1000\n 14807: a0 = u64 [a0 + 0xfffffffffffff818]\n 14811: a1 = s1 + 0x1000\n 14815: a1 = u64 [a1 + 0xfffffffffffff810]\n 14819: a2 = s1 + 0x1000\n 14823: a2 = u64 [a2 + 0xfffffffffffff808]\n 14827: a3 = s1 + 0x1000\n 14831: t0 = u64 [a3 + 0xfffffffffffff800]\n 14835: a4 = u64 [0x200a8]\n 14840: a5 = a0 >u 0\n 14842: a3 = a1 >u 0\n 14844: a3 = a5 if a0 != 0\n 14847: a4 = a4 <u t0\n 14850: a5 = a2 >u 0\n 14852: a5 = a4 if a2 == 0\n 14855: a4 = a1 | a0\n 14858: a5 = a3 if a4 != 0\n 14861: jump @548 if a5 != 0\n      : @547 (gas: 7)\n 14864: a0 = u64 [s1 + 0x60]\n 14867: a0 = a0 + 0x1\n 14870: a1 = u64 [s1 + 0x98]\n 14874: a0 = a0 & a1\n 14877: u64 [s1 + 0x60] = a0\n 14880: a3 = u64 [s1 + 0xf8]\n 14884: jump @544\n      : @548 (gas: 22)\n 14886: a3 = u64 [0x200b0]\n 14891: a3 = a3 + t0\n 14894: a4 = a3 <u t0\n 14897: a5 = a2 + a4\n 14900: a5 = a5 + 0xffffffffffffffff\n 14903: t0 = a5 ^ a2\n 14906: a2 = a5 <u a2\n 14909: a2 = a4 if t0 == 0\n 14912: a4 = a1 + 0xffffffffffffffff\n 14915: a2 = a2 + a4\n 14918: a4 = a2 <u a4\n 14921: a1 = a1 <u 0x1\n 14924: a0 = a0 - a1\n 14927: a0 = a0 + a4\n 14930: a1 = s1 + 0x2078\n 14934: u64 [a1 + 0x48] = a3\n 14937: u64 [a1 + 0x50] = a5\n 14940: u64 [a1 + 0x58] = a2\n 14943: u64 [a1 + 0x60] = a0\n 14946: a1 = s1 + 0x20c0\n 14950: a0 = u64 [s1 + 0x70]\n 14953: ra = 516, jump @12\n      : @549 [@dyn 258] (gas: 14)\n 14959: a0 = sp + 0xffffffffffffffe0\n 14962: a1 = a0 & 0xffffffffffffffe0\n 14965: u64 [s1 + 0xc0] = a1\n 14969: sp = a1\n 14971: a0 = u64 [s1 + 0x40]\n 14974: u64 [a1 + 0x18] = a0\n 14977: a0 = u64 [s1 + 0x48]\n 14980: u64 [a1 + 0x10] = a0\n 14983: a0 = u64 [s1 + 0x50]\n 14986: u64 [a1 + 0x8] = a0\n 14989: a0 = u64 [s1 + 0x58]\n 14992: u64 [a1] = a0\n 14994: a0 = s1 + 0x7e0\n 14998: ra = 518, jump @11\n      : @550 [@dyn 259] (gas: 22)\n 15004: a5 = s1 + 0x700\n 15008: a0 = u64 [a5 + 0xe0]\n 15012: a1 = u64 [0x200a0]\n 15017: a2 = u64 [a5 + 0xf8]\n 15021: a3 = u64 [a5 + 0xe8]\n 15025: a4 = u64 [a5 + 0xf0]\n 15029: a1 = a1 + a0\n 15032: a0 = a1 <u a0\n 15035: a5 = a3 + a0\n 15038: a3 = a5 <u a3\n 15041: a3 = a0 if a0 == 0\n 15044: a3 = a3 + a4\n 15047: a0 = a3 <u a4\n 15050: a0 = a0 + a2\n 15053: a2 = s1 + 0x2078\n 15057: u64 [a2 + 0x68] = a1\n 15060: u64 [a2 + 0x70] = a5\n 15063: u64 [a2 + 0x78] = a3\n 15066: u64 [a2 + 0x80] = a0\n 15070: a1 = s1 + 0x20e0\n 15074: a0 = u64 [s1 + 0xc0]\n 15078: ra = 520, jump @12\n      : @551 [@dyn 260] (gas: 23)\n 15084: a0 = u64 [s1 + 0x68]\n 15087: a0 = a0 + 0x1\n 15090: a1 = u64 [s1 + 0x98]\n 15094: a0 = a0 & a1\n 15097: u64 [s1 + 0x68] = a0\n 15100: a0 = u64 [s1 + 0x78]\n 15103: a2 = u64 [s1 + 0xd0]\n 15107: a0 = a0 | a2\n 15110: u64 [s1 + 0x78] = a0\n 15113: a0 = u64 [s1 + 0x80]\n 15117: a2 = u64 [s1 + 0xc8]\n 15121: a0 = a0 | a2\n 15124: u64 [s1 + 0x80] = a0\n 15128: a0 = u64 [s1 + 0x88]\n 15132: a2 = u64 [s1 + 0xf0]\n 15136: a0 = a0 | a2\n 15139: u64 [s1 + 0x88] = a0\n 15143: a0 = u64 [s1 + 0x90]\n 15147: a2 = u64 [s1 + 0xd8]\n 15151: a0 = a0 | a2\n 15154: u64 [s1 + 0x90] = a0\n 15158: a3 = u64 [s1 + 0xf8]\n 15162: jump @544\n      : @552 (gas: 32)\n 15165: a0 = u64 [s1 + 0x30]\n 15168: a1 = u64 [s1 + 0x78]\n 15171: u64 [a0] = a1\n 15173: a1 = u64 [s1 + 0x80]\n 15177: u64 [a0 + 0x8] = a1\n 15180: a1 = u64 [s1 + 0x88]\n 15184: u64 [a0 + 0x10] = a1\n 15187: a1 = u64 [s1 + 0x90]\n 15191: u64 [a0 + 0x18] = a1\n 15194: a0 = u64 [s1 + 0xa8]\n 15198: ecalli 4 // 'caller'\n 15200: a2 = u64 [s1 + 0xb0]\n 15204: a0 = u64 [a2 + 0x8]\n 15207: a1 = i32 [a2 + 0x10]\n 15210: a2 = u64 [a2]\n 15212: a0 = reverse a0\n 15214: a3 = a0 << 0x20\n 15217: a1 = reverse a1\n 15219: a1 = a1 >> 0x20\n 15222: a3 = a3 | a1\n 15225: a0 = a0 >> 0x20\n 15228: a1 = reverse a2\n 15230: a2 = a1 << 0x20\n 15233: a0 = a0 | a2\n 15236: a1 = a1 >> 0x20\n 15239: u64 [s1 + 2008] = 0\n 15243: u64 [s1 + 0x7d0] = a1\n 15247: u64 [s1 + 0x7c8] = a0\n 15251: a1 = s1 + 0x7c0\n 15255: u64 [s1 + 0x7c0] = a3\n 15259: a0 = 0\n 15261: ra = 522, jump @9\n      : @553 [@dyn 261] (gas: 7)\n 15267: u64 [s1 + 1976] = 0\n 15271: u64 [s1 + 1968] = 0\n 15275: u64 [s1 + 1952] = 0x5\n 15280: a0 = 0x20\n 15283: a1 = s1 + 0x7a0\n 15287: u64 [s1 + 1960] = 0\n 15291: ra = 524, jump @9\n      : @554 [@dyn 262] (gas: 3)\n 15297: a1 = u64 [s1 + 0xe0]\n 15301: a0 = i32 [a1]\n 15303: jump @556 if a0 >u 63\n      : @555 (gas: 2)\n 15307: u32 [a1 + 0] = 0x40\n 15310: fallthrough\n      : @556 (gas: 4)\n 15311: a0 = sp + 0xffffffffffffffe0\n 15314: a0 = a0 & 0xffffffffffffffe0\n 15317: u64 [s1 + 0xf8] = a0\n 15321: t0 = 526, jump @1256\n      : @557 [@dyn 263] (gas: 5)\n 15327: ra = 0x210\n 15331: ecalli 9 // 'hash_keccak_256'\n 15333: a3 = u64 [s1 + 0xf8]\n 15337: t0 = 0x212\n 15341: jump @1282\n      : @558 [@dyn 264] (gas: 2)\n 15344: a3 = u64 [s1 + 0xf8]\n 15348: t0 = 530, jump @1282\n      : @559 [@dyn 265] (gas: 19)\n 15354: u64 [s1 + 0xf0] = a0\n 15358: a0 = reverse a1\n 15360: u64 [s1 + 0xd8] = a0\n 15364: a0 = reverse a2\n 15366: u64 [s1 + 0xd0] = a0\n 15370: a0 = reverse a3\n 15372: u64 [s1 + 0xc8] = a0\n 15376: a0 = sp + 0xffffffffffffffe0\n 15379: a0 = a0 & 0xffffffffffffffe0\n 15382: u64 [s1 + 0xf8] = a0\n 15386: sp = a0\n 15388: u64 [s1 + 1944] = 0\n 15392: u64 [s1 + 1936] = 0\n 15396: u64 [s1 + 1928] = 0\n 15400: a1 = s1 + 0x780\n 15404: a0 = u64 [s1 + 0x38]\n 15407: u64 [s1 + 0x780] = a0\n 15411: a0 = 0\n 15413: ra = 532, jump @9\n      : @560 [@dyn 266] (gas: 12)\n 15419: a0 = u64 [s1 + 0xc8]\n 15423: a3 = s1 + 0x700\n 15427: u64 [a3 + 0x78] = a0\n 15430: a0 = u64 [s1 + 0xd0]\n 15434: u64 [a3 + 0x70] = a0\n 15437: a0 = u64 [s1 + 0xd8]\n 15441: u64 [a3 + 0x68] = a0\n 15444: a0 = 0x20\n 15447: a1 = s1 + 0x760\n 15451: a2 = u64 [s1 + 0xf0]\n 15455: u64 [a3 + 0x60] = a2\n 15458: ra = 534, jump @9\n      : @561 [@dyn 267] (gas: 3)\n 15464: a1 = u64 [s1 + 0xe0]\n 15468: a0 = i32 [a1]\n 15470: jump @563 if a0 >u 63\n      : @562 (gas: 2)\n 15474: u32 [a1 + 0] = 0x40\n 15477: fallthrough\n      : @563 (gas: 4)\n 15478: a0 = sp + 0xffffffffffffffe0\n 15481: a0 = a0 & 0xffffffffffffffe0\n 15484: u64 [s1 + 0xf0] = a0\n 15488: t0 = 536, jump @1256\n      : @564 [@dyn 268] (gas: 17)\n 15494: ecalli 9 // 'hash_keccak_256'\n 15496: a3 = u64 [s1 + 0xf0]\n 15500: a0 = u64 [a3 + 0x18]\n 15503: a1 = u64 [a3 + 0x10]\n 15506: a2 = u64 [a3 + 0x8]\n 15509: a3 = u64 [a3]\n 15511: a4 = reverse a0\n 15513: a1 = reverse a1\n 15515: a2 = reverse a2\n 15517: a3 = reverse a3\n 15519: a0 = u64 [s1 + 0xf8]\n 15523: u64 [a0 + 0x18] = a3\n 15526: u64 [a0 + 0x10] = a2\n 15529: u64 [a0 + 0x8] = a1\n 15532: u64 [a0] = a4\n 15534: a1 = u64 [s1 + 0x30]\n 15537: ra = 538, jump @12\n      : @565 [@dyn 269] (gas: 3)\n 15543: a0 = s1 + 0x740\n 15547: a1 = 0x40\n 15550: ra = 540, jump @7\n      : @566 [@dyn 270] (gas: 13)\n 15556: a0 = s1 + 0x700\n 15560: a4 = u64 [a0 + 0x58]\n 15563: a5 = u64 [a0 + 0x50]\n 15566: a3 = u64 [a0 + 0x48]\n 15569: a2 = u64 [a0 + 0x40]\n 15572: a0 = a3 | a4\n 15575: a1 = a2 | a5\n 15578: a1 = a1 | a0\n 15581: a1 = a1 >> 0x20\n 15584: a0 = a0 | a5\n 15587: a0 = a0 << 0x20\n 15590: a0 = a0 | a1\n 15593: jump @646 if a0 != 0\n      : @567 (gas: 14)\n 15597: a0 = u64 [s1 + 0x68]\n 15600: a1 = u64 [s1 + 0x98]\n 15604: a0 = a0 & a1\n 15607: u64 [s1 + 1848] = 0\n 15611: u64 [s1 + 1840] = 0\n 15615: u64 [s1 + 1832] = 0\n 15619: a1 = s1 + 0x720\n 15623: u64 [s1 + 0x720] = a0\n 15627: a0 = a2\n 15629: u64 [s1 + 0xf8] = a2\n 15633: u64 [s1 + 0xf0] = a3\n 15637: u64 [s1 + 0xe0] = a4\n 15641: u64 [s1 + 0xd8] = a5\n 15645: ra = 542, jump @9\n      : @568 [@dyn 271] (gas: 10)\n 15651: a2 = u64 [s1 + 0xf8]\n 15655: a0 = u64 [s1 + 0xe0]\n 15659: a1 = u64 [s1 + 0xd8]\n 15663: a0 = a0 | a1\n 15666: a1 = 0xffffffe0\n 15676: a1 = a2 <u a1\n 15679: a3 = u64 [s1 + 0xf0]\n 15683: a1 = 0 if a3 != 0\n 15685: a1 = 0 if a0 != 0\n 15687: jump @646 if a1 == 0\n      : @569 (gas: 10)\n 15691: a0 = u64 [s1 + 0x60]\n 15694: a1 = u64 [s1 + 0x98]\n 15698: a1 = a1 & a0\n 15701: i32 a0 = a2 + 0x20\n 15704: u64 [s1 + 1816] = 0\n 15708: u64 [s1 + 1808] = 0\n 15712: u64 [s1 + 0x700] = a1\n 15716: a1 = s1 + 0x700\n 15720: u64 [s1 + 1800] = 0\n 15724: ra = 544, jump @9\n      : @570 [@dyn 272] (gas: 6)\n 15730: a0 = u64 [s1 + 0xa8]\n 15734: ra = 0x222\n 15738: ecalli 4 // 'caller'\n 15740: a2 = u64 [s1 + 0xb0]\n 15744: t0 = 0x224\n 15748: jump @1257\n      : @571 [@dyn 273] (gas: 2)\n 15751: a2 = u64 [s1 + 0xb0]\n 15755: t0 = 548, jump @1257\n      : @572 [@dyn 274] (gas: 30)\n 15761: t0 = a1 | a0\n 15764: a3 = a3 >> 0x20\n 15767: a2 = reverse a2\n 15769: a1 = a2 << 0x20\n 15772: a1 = a1 | a3\n 15775: a2 = a2 >> 0x20\n 15778: u64 [s1 + 1720] = 0\n 15782: u64 [s1 + 1712] = 0\n 15786: u64 [s1 + 1704] = 0\n 15790: a0 = u64 [s1 + 0x38]\n 15793: u64 [s1 + 0x6a0] = a0\n 15797: u64 [s1 + 1752] = 0\n 15801: a3 = u64 [0x200b8]\n 15806: a4 = u64 [0x200c0]\n 15811: a5 = u64 [0x200c8]\n 15816: a0 = u64 [0x200d0]\n 15821: u64 [s1 + 0x6f8] = a3\n 15825: a3 = s1 + 0x600\n 15829: u64 [a3 + 0xf0] = a4\n 15833: u64 [a3 + 0xe8] = a5\n 15837: u64 [a3 + 0xe0] = a0\n 15841: u64 [a3 + 0xd0] = a2\n 15845: u64 [a3 + 0xc8] = a1\n 15849: a1 = 0x40\n 15852: a2 = s1 + 0x6e0\n 15856: a3 = s1 + 0x6c0\n 15860: a4 = s1 + 0x6a0\n 15864: u64 [s1 + 0x6c0] = t0\n 15868: a0 = u64 [s1 + 0xf8]\n 15872: ra = 550, jump @14\n      : @573 [@dyn 275] (gas: 5)\n 15878: a0 = 0\n 15880: a1 = u64 [s1 + 0xe8]\n 15884: a2 = 0\n 15886: ecalli 14 // 'seal_return'\n 15888: jump @1011\n      : @574 (gas: 19)\n 15891: a0 = u64 [s1 + 0xf8]\n 15895: a2 = u64 [s1 + 0x88]\n 15899: a0 = a0 | a2\n 15902: a2 = u64 [s1 + 0x18]\n 15905: a0 = a2 if a4 == 0\n 15908: t1 = u64 [s1 + 0xa0]\n 15912: a3 = t1\n 15914: t0 = u64 [s1 + 0xc8]\n 15918: a3 = a0 if t0 != 0\n 15921: u64 [s1 + 0xf8] = a3\n 15925: a0 = u64 [s1 + 0xc0]\n 15929: a2 = u64 [s1 + 0x90]\n 15933: a0 = a0 | a2\n 15936: a2 = u64 [s1 + 0x20]\n 15939: a0 = a2 if a4 == 0\n 15942: a5 = u64 [s1 + 0xb8]\n 15946: a3 = a5\n 15948: a3 = a0 if t0 != 0\n 15951: t0 = 552, jump @1274\n      : @575 [@dyn 276] (gas: 1)\n 15957: ra = 554, jump @1293\n      : @576 [@dyn 277] (gas: 6)\n 15963: u64 [s1 + 0x90] = a0\n 15967: u64 [s1 + 0x20] = a1\n 15970: a0 = u64 [s1 + 0xb0]\n 15974: a1 = u64 [s1 + 0xa8]\n 15978: a2 = u64 [s1 + 0xf0]\n 15982: ra = 556, jump @1293\n      : @577 [@dyn 278] (gas: 7)\n 15988: u64 [s1 + 0x18] = a0\n 15991: u64 [s1 + 0x88] = a1\n 15995: a1 = u64 [s1 + 0xf0]\n 15999: a2 = 0x80 - a1\n 16003: a0 = u64 [s1 + 0xb8]\n 16007: a1 = u64 [s1 + 0xa0]\n 16011: ra = 558, jump @1298\n      : @578 [@dyn 279] (gas: 21)\n 16017: a2 = u64 [s1 + 0x88]\n 16021: a1 = a1 | a2\n 16024: a3 = u64 [s1 + 0xf0]\n 16028: a4 = a3 <u 0x80\n 16032: u64 [s1 + 0x88] = a4\n 16036: a2 = u64 [s1 + 0x20]\n 16039: a1 = a2 if a4 == 0\n 16042: a2 = u64 [s1 + 0xa8]\n 16046: a2 = a1 if a3 != 0\n 16049: u64 [s1 + 0xa8] = a2\n 16053: a1 = u64 [s1 + 0x18]\n 16056: a0 = a0 | a1\n 16059: a1 = u64 [s1 + 0x90]\n 16063: a0 = a1 if a4 == 0\n 16066: a1 = u64 [s1 + 0xb0]\n 16070: a1 = a0 if a3 != 0\n 16073: a2 = a3\n 16075: u64 [s1 + 0xb0] = a1\n 16079: a0 = u64 [s1 + 0xb8]\n 16083: a1 = u64 [s1 + 0xa0]\n 16087: ra = 560, jump @1293\n      : @579 [@dyn 280] (gas: 3)\n 16093: a5 = 0\n 16095: ra = 0\n 16097: t0 = 562, jump @1277\n      : @580 [@dyn 281] (gas: 3)\n 16103: t1 = u64 [s1 + 0xa8]\n 16107: t2 = u64 [s1 + 0xb0]\n 16111: fallthrough\n      : @581 (gas: 88)\n 16112: u64 [s1 + 0xb8] = a5\n 16116: a2 = t2 >> 0x3f\n 16119: a3 = t1 << 0x1\n 16122: a5 = a3 | a2\n 16125: a3 = t2 << 0x1\n 16128: a4 = u64 [s1 + 0xf8]\n 16132: a4 = a4 >> 0x3f\n 16135: a3 = a3 | a4\n 16138: u64 [s1 + 0xa8] = a3\n 16142: a2 = u64 [s1 + 0x88]\n 16146: u64 [s1 + 0xb0] = a5\n 16150: t2 = t1\n 16152: t1 = a2 ^ a5\n 16155: t0 = a2 <u a5\n 16158: a4 = u64 [s1 + 0x90]\n 16162: a5 = a4 <u a3\n 16165: a5 = t0 if t1 != 0\n 16168: a1 = a1 << 0x1\n 16171: a3 = a0 >> 0x3f\n 16174: a1 = a1 | a3\n 16177: u64 [s1 + 0xa0] = a1\n 16181: a3 = t2 >> 0x3f\n 16184: a0 = a0 << 0x1\n 16187: a3 = a3 | a0\n 16190: a0 = u64 [s1 + 0xf8]\n 16194: a0 = a0 << 0x1\n 16197: a4 = u64 [s1 + 0xc0]\n 16201: a1 = a4 >> 0x3f\n 16204: t0 = a0 | a1\n 16207: a1 = a4 << 0x1\n 16210: a4 = u64 [s1 + 0xc8]\n 16214: t1 = a4 >> 0x3f\n 16217: t1 = a1 | t1\n 16220: a1 = a4 << 0x1\n 16223: a4 = u64 [s1 + 0xe8]\n 16227: t2 = a4 >> 0x3f\n 16230: a1 = a1 | t2\n 16233: a4 = a4 << 0x1\n 16236: a0 = u64 [s1 + 0xb8]\n 16240: a4 = a4 | a0\n 16243: u64 [s1 + 0xe8] = a4\n 16247: a1 = ra | a1\n 16250: u64 [s1 + 0xc8] = a1\n 16254: a1 = ra | t1\n 16257: u64 [s1 + 0xc0] = a1\n 16261: a0 = ra | t0\n 16264: u64 [s1 + 0xf8] = a0\n 16268: a0 = a2 - a3\n 16271: a0 = a0 <u a5\n 16274: a1 = a2 <u a3\n 16277: t0 = u64 [s1 + 0xa0]\n 16281: a4 = a2 - t0\n 16284: a4 = a4 - a1\n 16287: a4 = a4 - a0\n 16290: a5 = a4 >>a 0x3f\n 16293: a0 = u64 [s1 + 0x98]\n 16297: a0 = a0 & a5\n 16300: a1 = u64 [s1 + 0xa8]\n 16304: t2 = a1 - a0\n 16307: a1 = a1 <u a0\n 16310: a0 = u64 [s1 + 0xb0]\n 16314: t1 = a0 - a1\n 16317: a1 = 0 if a0 != 0\n 16319: a0 = a3 - a1\n 16322: a1 = a3 <u a1\n 16325: a1 = t0 - a1\n 16328: a3 = u64 [s1 + 0xf0]\n 16332: ra = u64 [s1 + 0xe0]\n 16336: a2 = a3 | ra\n 16339: a2 = a2 <u 0x1\n 16342: a4 = u64 [s1 + 0xd0]\n 16346: t0 = a4 <u a2\n 16349: a2 = a4 - a2\n 16352: a4 = a3 <u 0x1\n 16355: ra = ra - a4\n 16358: a4 = u64 [s1 + 0xd8]\n 16362: a4 = a4 - t0\n 16365: a3 = a3 + 0xffffffffffffffff\n 16368: u64 [s1 + 0xe0] = ra\n 16372: u64 [s1 + 0xd8] = a4\n 16376: t0 = ra | a4\n 16379: u64 [s1 + 0xf0] = a3\n 16383: a4 = a3 | a2\n 16386: a3 = a4 | t0\n 16389: a5 = a5 & 0x1\n 16392: u64 [s1 + 0xd0] = a2\n 16396: ra = 0\n 16398: jump @581 if a3 != 0\n      : @582 (gas: 4)\n 16402: a0 = u64 [s1 + 0xe8]\n 16406: a0 = a0 << 0x1\n 16409: ra = a5 | a0\n 16412: fallthrough\n      : @583 (gas: 4)\n 16413: u64 [s1 + 0xd0] = ra\n 16417: a0 = s1 + 0x1ce0\n 16421: a1 = 0x40\n 16424: ra = 564, jump @7\n      : @584 [@dyn 282] (gas: 18)\n 16430: t0 = s1 + 0x1878\n 16434: t1 = u64 [t0 + 0x480]\n 16438: a0 = t0 + 0x400\n 16442: a5 = u64 [a0 + 0x78]\n 16445: a4 = u64 [a0 + 0x70]\n 16448: a3 = u64 [a0 + 0x68]\n 16451: a0 = t1 >u 0\n 16453: a1 = a5 >u 0\n 16455: a1 = a0 if t1 != 0\n 16458: a0 = a4 >u 0\n 16460: a2 = a3 <u 0xffffffffffffffa0\n 16463: a2 = a2 ^ 0x1\n 16466: u64 [s1 + 0xf8] = a4\n 16470: a2 = a0 if a4 != 0\n 16473: a0 = a5 | t1\n 16476: u64 [s1 + 0xd8] = a0\n 16480: a2 = a1 if a0 != 0\n 16483: jump @722 if a2 != 0\n      : @585 (gas: 19)\n 16487: a0 = a3 + 0x60\n 16490: a1 = a0 <u a3\n 16493: a4 = u64 [s1 + 0xf8]\n 16497: a2 = a4 + a1\n 16500: u64 [s1 + 0xf0] = a3\n 16504: a3 = a2 <u a4\n 16507: a3 = a1 if a1 == 0\n 16510: a3 = a3 + a5\n 16513: a1 = a3 <u a5\n 16516: a4 = t1 + a1\n 16519: u64 [t0 + 0x448] = a0\n 16523: u64 [t0 + 0x450] = a2\n 16527: u64 [t0 + 0x458] = a3\n 16531: a0 = 0x40\n 16534: a1 = s1 + 0x1cc0\n 16538: u64 [t0 + 0x460] = a4\n 16542: u64 [s1 + 0xe0] = a5\n 16546: u64 [s1 + 0xe8] = t1\n 16550: ra = 566, jump @9\n      : @586 [@dyn 283] (gas: 12)\n 16556: a2 = u64 [s1 + 0xf0]\n 16560: a3 = u64 [s1 + 0xe0]\n 16564: a0 = a2 | a3\n 16567: a1 = u64 [s1 + 0xf8]\n 16571: a4 = u64 [s1 + 0xe8]\n 16575: a1 = a1 | a4\n 16578: a0 = a0 | a1\n 16581: a0 = a0 >> 0x20\n 16584: a1 = a1 | a3\n 16587: a1 = a1 << 0x20\n 16590: a0 = a0 | a1\n 16593: jump @646 if a0 != 0\n      : @587 (gas: 13)\n 16597: a0 = u64 [s1 + 0x40]\n 16600: a3 = s1 + 0x1878\n 16604: a4 = a3 + 0x400\n 16608: u64 [a4 + 0x28] = a0\n 16611: a0 = u64 [s1 + 0x48]\n 16614: u64 [a4 + 0x30] = a0\n 16617: a0 = u64 [s1 + 0x50]\n 16620: u64 [a4 + 0x38] = a0\n 16623: a1 = s1 + 0x1ca0\n 16627: a0 = u64 [s1 + 0x58]\n 16630: u64 [a4 + 0x40] = a0\n 16633: a0 = a2\n 16635: ra = 568, jump @9\n      : @588 [@dyn 284] (gas: 9)\n 16641: a1 = u64 [s1 + 0xf0]\n 16645: a3 = 0x100000000\n 16655: a0 = 0xffffffe0\n 16665: a0 = a1 <u a0\n 16668: a2 = u64 [s1 + 0xf8]\n 16672: a0 = 0 if a2 != 0\n 16674: a2 = u64 [s1 + 0xd8]\n 16678: a0 = 0 if a2 != 0\n 16680: jump @646 if a0 == 0\n      : @589 (gas: 11)\n 16684: i32 a0 = a1 + 0x20\n 16687: a2 = s1 + 0x1878\n 16691: u64 [a2 + 1056] = 0\n 16695: u64 [a2 + 1048] = 0\n 16699: u64 [a2 + 1040] = 0\n 16703: a1 = s1 + 0x1c80\n 16707: u64 [s1 + 0xe8] = a3\n 16711: a3 = u64 [s1 + 0xd0]\n 16715: u64 [a2 + 0x408] = a3\n 16719: u64 [s1 + 0xe0] = a0\n 16723: ra = 570, jump @9\n      : @590 [@dyn 285] (gas: 9)\n 16729: a1 = u64 [s1 + 0xf0]\n 16733: a0 = u64 [s1 + 0xe8]\n 16737: a0 = a0 + 0xffffffffffffffc0\n 16740: a0 = a1 <u a0\n 16743: a2 = u64 [s1 + 0xf8]\n 16747: a0 = 0 if a2 != 0\n 16749: a2 = u64 [s1 + 0xd8]\n 16753: a0 = 0 if a2 != 0\n 16755: jump @646 if a0 == 0\n      : @591 (gas: 9)\n 16759: i32 a0 = a1 + 0x40\n 16762: a2 = s1 + 0x1878\n 16766: u64 [a2 + 1024] = 0\n 16770: u64 [a2 + 1016] = 0\n 16774: u64 [a2 + 1008] = 0\n 16778: a1 = s1 + 0x1c60\n 16782: u64 [a2 + 1000] = 0\n 16786: u64 [s1 + 0xd8] = a0\n 16790: ra = 572, jump @9\n      : @592 [@dyn 286] (gas: 6)\n 16796: a0 = u64 [s1 + 0x28]\n 16799: ra = 0x23e\n 16803: ecalli 4 // 'caller'\n 16805: a2 = u64 [s1 + 0x80]\n 16809: t0 = 0x240\n 16813: jump @1242\n      : @593 [@dyn 287] (gas: 2)\n 16816: a2 = u64 [s1 + 0x80]\n 16820: t0 = 576, jump @1242\n      : @594 [@dyn 288] (gas: 8)\n 16826: u64 [a2 + 992] = 0\n 16830: a4 = a2 + 0x300\n 16834: u64 [a4 + 0xd8] = a1\n 16838: u64 [a4 + 0xd0] = a0\n 16842: a1 = s1 + 0x1c40\n 16846: u64 [a4 + 0xc8] = a3\n 16850: a0 = 0\n 16852: ra = 578, jump @9\n      : @595 [@dyn 289] (gas: 9)\n 16858: a1 = s1 + 0x1878\n 16862: u64 [a1 + 960] = 0\n 16866: u64 [a1 + 952] = 0\n 16870: u64 [a1 + 936] = 0x3\n 16875: a2 = a1\n 16877: a0 = 0x20\n 16880: a1 = s1 + 0x1c20\n 16884: u64 [a2 + 944] = 0\n 16888: ra = 580, jump @9\n      : @596 [@dyn 290] (gas: 3)\n 16894: a1 = u64 [s1 + 0x30]\n 16897: a0 = i32 [a1]\n 16899: jump @598 if a0 >u 63\n      : @597 (gas: 2)\n 16903: u32 [a1 + 0] = 0x40\n 16906: fallthrough\n      : @598 (gas: 12)\n 16907: a0 = sp + 0xffffffffffffffe0\n 16910: a0 = a0 & 0xffffffffffffffe0\n 16913: u64 [s1 + 0xf8] = a0\n 16917: sp = a0\n 16919: i32 a2 = a0 + 0\n 16921: a1 = 0x40\n 16924: a0 = u64 [s1 + 0x38]\n 16927: ra = 0x246\n 16931: ecalli 9 // 'hash_keccak_256'\n 16933: a3 = u64 [s1 + 0xf8]\n 16937: t0 = 0x248\n 16941: jump @1282\n      : @599 [@dyn 291] (gas: 2)\n 16944: a3 = u64 [s1 + 0xf8]\n 16948: t0 = 584, jump @1282\n      : @600 [@dyn 292] (gas: 14)\n 16954: u64 [s1 + 0xe8] = a0\n 16958: a0 = reverse a1\n 16960: u64 [s1 + 0xd0] = a0\n 16964: a0 = reverse a2\n 16966: u64 [s1 + 0xc8] = a0\n 16970: a0 = reverse a3\n 16972: u64 [s1 + 0xc0] = a0\n 16976: a0 = sp + 0xffffffffffffffe0\n 16979: a0 = a0 & 0xffffffffffffffe0\n 16982: u64 [s1 + 0xf8] = a0\n 16986: sp = a0\n 16988: t0 = 0x24a\n 16992: a2 = s1 + 0x1878\n 16996: fallthrough\n      : @601 [@dyn 293] (gas: 11)\n 16997: u64 [a2 + 928] = 0\n 17001: a0 = u64 [s1 + 0x78]\n 17004: a3 = a2 + 0x300\n 17008: u64 [a3 + 0x98] = a0\n 17012: a0 = u64 [s1 + 0x68]\n 17015: u64 [a3 + 0x90] = a0\n 17019: a1 = s1 + 0x1c00\n 17023: a0 = u64 [s1 + 0x70]\n 17026: u64 [a3 + 0x88] = a0\n 17030: a0 = 0\n 17032: ra = 588, jump @9\n      : @602 [@dyn 294] (gas: 14)\n 17038: a0 = u64 [s1 + 0xc0]\n 17042: a1 = s1 + 0x1878\n 17046: a2 = a1 + 0x300\n 17050: u64 [a2 + 0x80] = a0\n 17054: a0 = u64 [s1 + 0xc8]\n 17058: u64 [a2 + 0x78] = a0\n 17061: a0 = u64 [s1 + 0xd0]\n 17065: u64 [a2 + 0x70] = a0\n 17068: a3 = a1\n 17070: a0 = 0x20\n 17073: a1 = s1 + 0x1be0\n 17077: a2 = u64 [s1 + 0xe8]\n 17081: u64 [a3 + 0x368] = a2\n 17085: ra = 590, jump @9\n      : @603 [@dyn 295] (gas: 3)\n 17091: a1 = u64 [s1 + 0x30]\n 17094: a0 = i32 [a1]\n 17096: jump @605 if a0 >u 63\n      : @604 (gas: 2)\n 17100: u32 [a1 + 0] = 0x40\n 17103: fallthrough\n      : @605 (gas: 31)\n 17104: a0 = 0xffffffff00000000\n 17114: u64 [s1 + 0xe8] = a0\n 17118: a0 = sp + 0xffffffffffffffe0\n 17121: a0 = a0 & 0xffffffffffffffe0\n 17124: u64 [s1 + 0xd0] = a0\n 17128: sp = a0\n 17130: i32 a2 = a0 + 0\n 17132: a1 = 0x40\n 17135: a0 = u64 [s1 + 0x38]\n 17138: ecalli 9 // 'hash_keccak_256'\n 17140: a3 = u64 [s1 + 0xd0]\n 17144: a0 = u64 [a3 + 0x18]\n 17147: a1 = u64 [a3 + 0x10]\n 17150: a2 = u64 [a3 + 0x8]\n 17153: a3 = u64 [a3]\n 17155: a5 = reverse a0\n 17157: u64 [s1 + 0xb8] = a5\n 17161: a4 = reverse a1\n 17163: u64 [s1 + 0xc0] = a4\n 17167: a1 = reverse a2\n 17169: u64 [s1 + 0xc8] = a1\n 17173: a0 = reverse a3\n 17175: u64 [s1 + 0xd0] = a0\n 17179: a2 = u64 [s1 + 0xf8]\n 17183: u64 [a2 + 0x18] = a0\n 17186: u64 [a2 + 0x10] = a1\n 17189: u64 [a2 + 0x8] = a4\n 17192: u64 [a2] = a5\n 17194: a0 = s1 + 0x1bc0\n 17198: a1 = u64 [s1 + 0xf0]\n 17202: ra = 592, jump @7\n      : @606 [@dyn 296] (gas: 15)\n 17208: a3 = s1 + 0x1878\n 17212: a4 = a3 + 0x300\n 17216: a0 = u64 [a4 + 0x60]\n 17219: a1 = u64 [a4 + 0x58]\n 17222: a2 = u64 [a4 + 0x50]\n 17225: a3 = u64 [a4 + 0x48]\n 17228: a4 = s1 + 0x2078\n 17232: a5 = a4 + 0x500\n 17236: u64 [a5 + 0x80] = a0\n 17240: u64 [a5 + 0x78] = a1\n 17243: u64 [a5 + 0x70] = a2\n 17246: u64 [a5 + 0x68] = a3\n 17249: a1 = s1 + 0x25e0\n 17253: a0 = u64 [s1 + 0xf8]\n 17257: ra = 594, jump @12\n      : @607 [@dyn 297] (gas: 23)\n 17263: a0 = sp + 0xffffffffffffffe0\n 17266: a4 = a0 & 0xffffffffffffffe0\n 17269: u64 [s1 + 0xf8] = a4\n 17273: sp = a4\n 17275: a0 = u64 [s1 + 0xb8]\n 17279: a0 = a0 + 0x1\n 17282: a1 = a0 <u 0x1\n 17285: a2 = u64 [s1 + 0xc0]\n 17289: a1 = a1 + a2\n 17292: a2 = a0 | a1\n 17295: a2 = a2 <u 0x1\n 17298: a3 = u64 [s1 + 0xc8]\n 17302: a2 = a2 + a3\n 17305: a3 = a2 <u a3\n 17308: a5 = u64 [s1 + 0xd0]\n 17312: a3 = a3 + a5\n 17315: u64 [a4 + 0x18] = a3\n 17318: u64 [a4 + 0x10] = a2\n 17321: u64 [a4 + 0x8] = a1\n 17324: u64 [a4] = a0\n 17326: a0 = s1 + 0x1ba0\n 17330: a1 = u64 [s1 + 0xe0]\n 17334: ra = 596, jump @7\n      : @608 [@dyn 298] (gas: 7)\n 17340: a0 = s1 + 0x1878\n 17344: a0 = u64 [a0 + 0x328]\n 17348: a0 = a0 & 0xffffffffffffffff\n 17351: u64 [s1 + 0xf0] = a0\n 17355: a0 = s1 + 0x1b80\n 17359: a1 = u64 [s1 + 0xf8]\n 17363: ra = 598, jump @11\n      : @609 [@dyn 299] (gas: 15)\n 17369: a2 = s1 + 0x1878\n 17373: a3 = a2 + 0x300\n 17377: a0 = u64 [a3 + 0x20]\n 17380: a1 = u64 [a3 + 0x18]\n 17383: a2 = u64 [a3 + 0x10]\n 17386: a3 = s1 + 0x2078\n 17390: a4 = u64 [s1 + 0xf0]\n 17394: a5 = a3 + 0x500\n 17398: u64 [a5 + 0x88] = a4\n 17402: u64 [a5 + 0xa0] = a0\n 17406: u64 [a5 + 0x98] = a1\n 17410: u64 [a5 + 0x90] = a2\n 17414: a1 = s1 + 0x2600\n 17418: a0 = u64 [s1 + 0xf8]\n 17422: ra = 600, jump @12\n      : @610 [@dyn 300] (gas: 3)\n 17428: a0 = s1 + 0x1b60\n 17432: a1 = u64 [s1 + 0xd8]\n 17436: ra = 602, jump @7\n      : @611 [@dyn 301] (gas: 14)\n 17442: a3 = s1 + 0x1878\n 17446: a0 = u64 [a3 + 0x300]\n 17450: a4 = a3 + 0x200\n 17454: a1 = u64 [a4 + 0xf0]\n 17458: a2 = u64 [a4 + 0xf8]\n 17462: a3 = u64 [a4 + 0xe8]\n 17466: a0 = a0 | a1\n 17469: a2 = a2 | a3\n 17472: a0 = a0 | a2\n 17475: a0 = a0 >u 0\n 17477: u64 [s1 + 0xf0] = a0\n 17481: a0 = s1 + 0x1b40\n 17485: a1 = u64 [s1 + 0xf8]\n 17489: ra = 604, jump @11\n      : @612 [@dyn 302] (gas: 18)\n 17495: a3 = s1 + 0x1878\n 17499: a4 = a3 + 0x200\n 17503: a0 = u64 [a4 + 0xd0]\n 17507: a1 = u64 [a4 + 0xc8]\n 17511: a2 = u64 [a4 + 0xe0]\n 17515: a3 = u64 [a4 + 0xd8]\n 17519: a0 = a0 & 0xffffffffffffff00\n 17523: a4 = u64 [s1 + 0xf0]\n 17527: a0 = a0 | a4\n 17530: a4 = s1 + 0x2078\n 17534: a5 = a4 + 0x500\n 17538: u64 [a5 + 0xc0] = a2\n 17542: u64 [a5 + 0xb8] = a3\n 17546: u64 [a5 + 0xa8] = a1\n 17550: u64 [a5 + 0xb0] = a0\n 17554: a1 = s1 + 0x2620\n 17558: a0 = u64 [s1 + 0xf8]\n 17562: ra = 606, jump @12\n      : @613 [@dyn 303] (gas: 6)\n 17568: a0 = u64 [s1 + 0x28]\n 17571: ra = 0x260\n 17575: ecalli 4 // 'caller'\n 17577: a2 = u64 [s1 + 0x80]\n 17581: t0 = 0x262\n 17585: jump @1242\n      : @614 [@dyn 304] (gas: 2)\n 17588: a2 = u64 [s1 + 0x80]\n 17592: t0 = 610, jump @1242\n      : @615 [@dyn 305] (gas: 8)\n 17598: u64 [a2 + 704] = 0\n 17602: a4 = a2 + 0x200\n 17606: u64 [a4 + 0xb8] = a1\n 17610: u64 [a4 + 0xb0] = a0\n 17614: a1 = s1 + 0x1b20\n 17618: u64 [a4 + 0xa8] = a3\n 17622: a0 = 0\n 17624: ra = 612, jump @9\n      : @616 [@dyn 306] (gas: 9)\n 17630: a1 = s1 + 0x1878\n 17634: u64 [a1 + 672] = 0\n 17638: u64 [a1 + 664] = 0\n 17642: u64 [a1 + 648] = 0x2\n 17647: a2 = a1\n 17649: a0 = 0x20\n 17652: a1 = s1 + 0x1b00\n 17656: u64 [a2 + 656] = 0\n 17660: ra = 614, jump @9\n      : @617 [@dyn 307] (gas: 7)\n 17666: a1 = u64 [s1 + 0x30]\n 17669: a0 = sp + 0xffffffffffffffe0\n 17672: a0 = a0 & 0xffffffffffffffe0\n 17675: u64 [s1 + 0xf8] = a0\n 17679: sp = a0\n 17681: a0 = i32 [a1]\n 17683: jump @619 if a0 >=u 64\n      : @618 (gas: 2)\n 17687: u32 [a1 + 0] = 0x40\n 17690: fallthrough\n      : @619 (gas: 12)\n 17691: a0 = sp + 0xffffffffffffffe0\n 17694: a0 = a0 & 0xffffffffffffffe0\n 17697: u64 [s1 + 0xf0] = a0\n 17701: sp = a0\n 17703: i32 a2 = a0 + 0\n 17705: a1 = 0x40\n 17708: a0 = u64 [s1 + 0x38]\n 17711: ra = 0x268\n 17715: ecalli 9 // 'hash_keccak_256'\n 17717: a3 = u64 [s1 + 0xf0]\n 17721: t0 = 0x26a\n 17725: jump @1253\n      : @620 [@dyn 308] (gas: 2)\n 17728: a3 = u64 [s1 + 0xf0]\n 17732: t0 = 618, jump @1253\n      : @621 [@dyn 309] (gas: 7)\n 17738: a1 = u64 [s1 + 0xf8]\n 17742: u64 [a1] = a4\n 17744: u64 [a1 + 0x8] = a5\n 17747: u64 [a1 + 0x10] = a2\n 17750: u64 [a1 + 0x18] = a0\n 17753: a0 = s1 + 0x1ae0\n 17757: ra = 620, jump @11\n      : @622 [@dyn 310] (gas: 9)\n 17763: a0 = s1 + 0x1878\n 17767: a0 = u64 [a0 + 0x268]\n 17771: a0 = a0 + 0x1\n 17774: a1 = u64 [s1 + 0x60]\n 17777: a0 = a0 & a1\n 17780: u64 [s1 + 0xf0] = a0\n 17784: a0 = s1 + 0x1ac0\n 17788: a1 = u64 [s1 + 0xf8]\n 17792: ra = 622, jump @11\n      : @623 [@dyn 311] (gas: 22)\n 17798: a3 = s1 + 0x1878\n 17802: a4 = a3 + 0x200\n 17806: a0 = u64 [a4 + 0x50]\n 17809: a1 = u64 [a4 + 0x58]\n 17812: a2 = u64 [a4 + 0x60]\n 17815: a3 = u64 [a4 + 0x48]\n 17818: a0 = a0 & 0xffffffffffffffff\n 17821: a1 = a1 & 0xffffffffffffffff\n 17824: a2 = a2 & 0xffffffffffffffff\n 17827: a4 = u64 [s1 + 0xe8]\n 17831: a3 = a3 & a4\n 17834: a4 = u64 [s1 + 0xf0]\n 17838: a3 = a3 | a4\n 17841: a4 = s1 + 0x2078\n 17845: a5 = a4 + 0x500\n 17849: u64 [a5 + 0xe0] = a2\n 17853: u64 [a5 + 0xd8] = a1\n 17857: u64 [a5 + 0xd0] = a0\n 17861: u64 [a5 + 0xc8] = a3\n 17865: a1 = s1 + 0x2640\n 17869: a0 = u64 [s1 + 0xf8]\n 17873: ra = 624, jump @12\n      : @624 [@dyn 312] (gas: 3)\n 17879: a0 = s1 + 0x1aa0\n 17883: a1 = 0x40\n 17886: ra = 626, jump @7\n      : @625 [@dyn 313] (gas: 3)\n 17892: t0 = 0x274\n 17896: a3 = s1 + 0x1878\n 17900: fallthrough\n      : @626 [@dyn 314] (gas: 13)\n 17901: a5 = a3 + 0x200\n 17905: a0 = u64 [a5 + 0x40]\n 17908: a1 = u64 [a5 + 0x38]\n 17911: a2 = u64 [a5 + 0x30]\n 17914: a4 = u64 [a5 + 0x28]\n 17917: a0 = a0 | a2\n 17920: a2 = a4 | a1\n 17923: a2 = a2 | a0\n 17926: a2 = a2 >> 0x20\n 17929: a0 = a0 | a1\n 17932: a0 = a0 << 0x20\n 17935: a0 = a0 | a2\n 17938: jump @646 if a0 != 0\n      : @627 (gas: 13)\n 17942: a0 = u64 [s1 + 0x40]\n 17945: a2 = a3 + 0x200\n 17949: u64 [a2 + 0x8] = a0\n 17952: a0 = u64 [s1 + 0x48]\n 17955: u64 [a2 + 0x10] = a0\n 17958: a0 = u64 [s1 + 0x50]\n 17961: u64 [a2 + 0x18] = a0\n 17964: a1 = s1 + 0x1a80\n 17968: a0 = u64 [s1 + 0x58]\n 17971: u64 [a2 + 0x20] = a0\n 17974: a0 = a4\n 17976: u64 [s1 + 0xf8] = a4\n 17980: ra = 630, jump @9\n      : @628 [@dyn 315] (gas: 6)\n 17986: a0 = u64 [s1 + 0x28]\n 17989: ra = 0x278\n 17993: ecalli 4 // 'caller'\n 17995: a2 = u64 [s1 + 0x80]\n 17999: t0 = 0x27a\n 18003: jump @1257\n      : @629 [@dyn 316] (gas: 2)\n 18006: a2 = u64 [s1 + 0x80]\n 18010: t0 = 634, jump @1257\n      : @630 [@dyn 317] (gas: 43)\n 18016: t0 = a1 | a0\n 18019: a3 = a3 >> 0x20\n 18022: a2 = reverse a2\n 18024: a1 = a2 << 0x20\n 18027: a1 = a1 | a3\n 18030: a2 = a2 >> 0x20\n 18033: a3 = u64 [0x20000]\n 18038: a4 = u64 [0x20008]\n 18043: a5 = u64 [0x20010]\n 18048: a0 = s1 + 0x1878\n 18052: u64 [a0 + 0x200] = a3\n 18056: a0 = s1 + 0x1878\n 18060: u64 [a0 + 0x1f8] = a4\n 18064: a3 = s1 + 0x1878\n 18068: u64 [a3 + 448] = 0\n 18072: a0 = s1 + 0x1878\n 18076: u64 [a0 + 0x1f0] = a5\n 18080: a3 = u64 [0x20018]\n 18085: a4 = s1 + 0x1878\n 18089: a0 = u64 [s1 + 0x78]\n 18092: u64 [a4 + 0x1b8] = a0\n 18096: a4 = s1 + 0x1878\n 18100: a0 = u64 [s1 + 0x68]\n 18103: u64 [a4 + 0x1b0] = a0\n 18107: a4 = s1 + 0x1878\n 18111: a0 = u64 [s1 + 0x70]\n 18114: u64 [a4 + 0x1a8] = a0\n 18118: a0 = s1 + 0x1878\n 18122: u64 [a0 + 0x1e8] = a3\n 18126: a3 = s1 + 0x1878\n 18130: u64 [a3 + 0x1d8] = a2\n 18134: a2 = s1 + 0x1878\n 18138: u64 [a2 + 0x1d0] = a1\n 18142: a1 = s1 + 0x1878\n 18146: u64 [a1 + 0x1c8] = t0\n 18150: a1 = 0x20\n 18153: a2 = s1 + 0x1a60\n 18157: a3 = s1 + 0x1a40\n 18161: a4 = s1 + 0x1a20\n 18165: a0 = s1 + 0x1878\n 18169: u64 [a0 + 480] = 0\n 18173: a0 = u64 [s1 + 0xf8]\n 18177: ra = 636, jump @14\n      : @631 [@dyn 318] (gas: 3)\n 18183: a0 = s1 + 0x1a00\n 18187: a1 = 0x40\n 18190: ra = 638, jump @7\n      : @632 [@dyn 319] (gas: 3)\n 18196: a3 = s1 + 0x1878\n 18200: a5 = a3 + 0x100\n 18204: t0 = 640, jump @1281\n      : @633 [@dyn 320] (gas: 1)\n 18210: jump @646 if a0 != 0\n      : @634 (gas: 13)\n 18214: u64 [a3 + 384] = 0\n 18218: a0 = u64 [s1 + 0x70]\n 18221: a2 = a3 + 0x100\n 18225: u64 [a2 + 0x68] = a0\n 18228: a0 = u64 [s1 + 0x68]\n 18231: u64 [a2 + 0x70] = a0\n 18234: a1 = s1 + 0x19e0\n 18238: a0 = u64 [s1 + 0x78]\n 18241: u64 [a2 + 0x78] = a0\n 18244: a0 = a4\n 18246: u64 [s1 + 0xf8] = a4\n 18250: ra = 0x138\n 18254: jump @9\n      : @635 (gas: 6)\n 18257: ecalli 13 // 'return_data_size'\n 18259: u64 [s1 + 0xa8] = a0\n 18263: a0 = s1 + 0x7ff\n 18267: a0 = a0 + 0x461\n 18271: a1 = 0x40\n 18274: ra = 642, jump @7\n      : @636 [@dyn 321] (gas: 32)\n 18280: a5 = s1 + 0x7ff\n 18284: a5 = a5 + 0x79\n 18287: t0 = u64 [a5 + 0x400]\n 18291: u64 [s1 + 0xb0] = t0\n 18295: t1 = u64 [a5 + 0x3f8]\n 18299: u64 [s1 + 0x98] = t1\n 18303: t2 = u64 [a5 + 0x3f0]\n 18307: u64 [s1 + 0xb8] = t2\n 18311: ra = u64 [a5 + 0x3e8]\n 18315: u64 [s1 + 0xe8] = ra\n 18319: a1 = u64 [s1 + 0xa8]\n 18323: a0 = a1 + 0x1f\n 18326: a1 = a0 <u a1\n 18329: a0 = a0 & 0xffffffffffffffe0\n 18332: a2 = a0 + 0x20\n 18335: a0 = a2 <u a0\n 18338: a3 = a1 + a0\n 18341: a4 = a3 <u a1\n 18344: a4 = a0 if a0 == 0\n 18347: u64 [a5 + 960] = 0\n 18351: u64 [a5 + 0x3a8] = a2\n 18355: u64 [a5 + 0x3e0] = t0\n 18359: u64 [a5 + 0x3d8] = t1\n 18363: u64 [a5 + 0x3d0] = t2\n 18367: u64 [a5 + 0x3c8] = ra\n 18371: u64 [a5 + 0x3b0] = a3\n 18375: a0 = s1 + 0x7ff\n 18379: a0 = a0 + 0x441\n 18383: a1 = s1 + 0x7ff\n 18387: a1 = a1 + 0x421\n 18391: u64 [a5 + 0x3b8] = a4\n 18395: ra = 644, jump @1072\n      : @637 [@dyn 322] (gas: 12)\n 18401: a0 = u64 [s1 + 0xe8]\n 18405: a1 = u64 [s1 + 0xb0]\n 18409: a2 = u64 [s1 + 0xb8]\n 18413: a2 = a2 | a1\n 18416: a3 = u64 [s1 + 0x98]\n 18420: a1 = a0 | a3\n 18423: a1 = a1 | a2\n 18426: a1 = a1 >> 0x20\n 18429: a2 = a2 | a3\n 18432: a2 = a2 << 0x20\n 18435: a1 = a1 | a2\n 18438: jump @646 if a1 != 0\n      : @638 (gas: 10)\n 18442: a3 = s1 + 0x7ff\n 18446: a3 = a3 + 0x79\n 18449: u64 [a3 + 928] = 0\n 18453: u64 [a3 + 920] = 0\n 18457: u64 [a3 + 912] = 0\n 18461: a1 = s1 + 0x7ff\n 18465: a1 = a1 + 0x401\n 18469: a2 = u64 [s1 + 0xa8]\n 18473: u64 [a3 + 0x388] = a2\n 18477: ra = 646, jump @9\n      : @639 [@dyn 323] (gas: 2)\n 18483: ecalli 13 // 'return_data_size'\n 18485: fallthrough\n      : @640 (gas: 10)\n 18486: a3 = u64 [s1 + 0xe8]\n 18490: a1 = u64 [s1 + 0xb0]\n 18494: a2 = u64 [s1 + 0x98]\n 18498: a1 = a1 | a2\n 18501: a2 = 0xffffffe0\n 18511: a2 = a3 <u a2\n 18514: a4 = u64 [s1 + 0xb8]\n 18518: a2 = 0 if a4 != 0\n 18520: a2 = 0 if a1 != 0\n 18522: jump @646 if a2 == 0\n      : @641 (gas: 3)\n 18525: a1 = a0\n 18527: a0 = a0 >> 0x20\n 18530: jump @646 if a0 != 0\n      : @642 (gas: 7)\n 18533: i32 a0 = a3 + 0x20\n 18536: a2 = a1\n 18538: u64 [s1 + 0xb8] = a1\n 18542: i32 a1 = a1 + 0\n 18544: u64 [s1 + 0xe8] = a1\n 18548: a1 = a2\n 18550: ra = 648, jump @20\n      : @643 [@dyn 324] (gas: 9)\n 18556: a1 = s1 + 0x2078\n 18560: a2 = u64 [s1 + 0xb8]\n 18564: u32 [a1 + 0x208] = a2\n 18568: i32 a0 = a0 + 0\n 18570: a1 = s1 + 0x2000\n 18574: i32 a1 = a1 + 0x280\n 18578: a2 = 0\n 18580: ecalli 12 // 'return_data_copy'\n 18582: fallthrough\n      : @644 (gas: 5)\n 18583: a0 = s1 + 0x2078\n 18587: a0 = i32 [a0 + 0x208]\n 18591: a2 = u64 [s1 + 0xf0]\n 18595: a1 = u64 [s1 + 0xe8]\n 18599: jump @646 if a0 <u a1\n      : @645 (gas: 1)\n 18602: jump @459\n      : @646 (gas: 1)\n 18605: trap\n      : @647 (gas: 11)\n 18606: a2 = s1 + 0x7ff\n 18610: a2 = a2 + 0x79\n 18613: u64 [a2 + 1272] = 0\n 18617: u64 [a2 + 1264] = 0\n 18621: a0 = 0xfcb63a2200000000\n 18631: u64 [a2 + 0x500] = a0\n 18635: a1 = s1 + 0x7ff\n 18639: a1 = a1 + 0x561\n 18643: u64 [a2 + 1256] = 0\n 18647: a0 = 0\n 18649: ra = 650, jump @9\n      : @648 [@dyn 325] (gas: 2)\n 18655: a1 = i32 [0x20150]\n 18660: jump @650 if a1 >u 31\n      : @649 (gas: 3)\n 18664: u32 [0x20150] = 0x20\n 18670: a1 = 0x20160\n 18675: jump @721\n      : @650 (gas: 2)\n 18678: a1 = 0x20160\n 18683: jump @721\n      : @651 (gas: 6)\n 18686: a1 = 0x20160\n 18691: i32 a1 = a1 + 0\n 18693: a0 = 0x1\n 18696: a2 = 0\n 18698: ecalli 14 // 'seal_return'\n 18700: jump @1011\n      : @652 (gas: 6)\n 18703: a1 = 0x20160\n 18708: i32 a1 = a1 + 0\n 18710: a0 = 0x1\n 18713: a2 = 0\n 18715: ecalli 14 // 'seal_return'\n 18717: jump @1011\n      : @653 (gas: 6)\n 18720: a1 = 0x20160\n 18725: i32 a1 = a1 + 0\n 18727: a0 = 0x1\n 18730: a2 = 0\n 18732: ecalli 14 // 'seal_return'\n 18734: jump @1011\n      : @654 (gas: 6)\n 18737: a1 = 0x20160\n 18742: i32 a1 = a1 + 0\n 18744: a0 = 0x1\n 18747: a2 = 0\n 18749: ecalli 14 // 'seal_return'\n 18751: jump @1011\n      : @655 (gas: 11)\n 18754: a2 = s1 + 0x7ff\n 18758: a2 = a2 + 0x79\n 18761: u64 [a2 + 600] = 0\n 18765: u64 [a2 + 592] = 0\n 18769: a0 = 0x2c5211c600000000\n 18779: u64 [a2 + 0x260] = a0\n 18783: a1 = s1 + 0x7ff\n 18787: a1 = a1 + 0x2c1\n 18791: u64 [a2 + 584] = 0\n 18795: a0 = 0\n 18797: ra = 652, jump @9\n      : @656 [@dyn 326] (gas: 2)\n 18803: a1 = i32 [0x20150]\n 18808: jump @658 if a1 >u 31\n      : @657 (gas: 3)\n 18812: u32 [0x20150] = 0x20\n 18818: a1 = 0x20160\n 18823: jump @721\n      : @658 (gas: 2)\n 18826: a1 = 0x20160\n 18831: jump @721\n      : @659 (gas: 11)\n 18834: a2 = s1 + 0x7ff\n 18838: a2 = a2 + 0x79\n 18841: u64 [a2 + 632] = 0\n 18845: u64 [a2 + 624] = 0\n 18849: a0 = 0xfcb63a2200000000\n 18859: u64 [a2 + 0x280] = a0\n 18863: a1 = s1 + 0x7ff\n 18867: a1 = a1 + 0x2e1\n 18871: u64 [a2 + 616] = 0\n 18875: a0 = 0\n 18877: ra = 654, jump @9\n      : @660 [@dyn 327] (gas: 2)\n 18883: a1 = i32 [0x20150]\n 18888: jump @662 if a1 >u 31\n      : @661 (gas: 3)\n 18892: u32 [0x20150] = 0x20\n 18898: a1 = 0x20160\n 18903: jump @721\n      : @662 (gas: 2)\n 18906: a1 = 0x20160\n 18911: jump @721\n      : @663 (gas: 6)\n 18914: a1 = 0x20160\n 18919: i32 a1 = a1 + 0\n 18921: a0 = 0x1\n 18924: a2 = 0\n 18926: ecalli 14 // 'seal_return'\n 18928: jump @1011\n      : @664 (gas: 6)\n 18931: a1 = 0x20160\n 18936: i32 a1 = a1 + 0\n 18938: a0 = 0x1\n 18941: a2 = 0\n 18943: ecalli 14 // 'seal_return'\n 18945: jump @1011\n      : @665 (gas: 6)\n 18948: a1 = 0x20160\n 18953: i32 a1 = a1 + 0\n 18955: a0 = 0x1\n 18958: a2 = 0\n 18960: ecalli 14 // 'seal_return'\n 18962: jump @1011\n      : @666 (gas: 6)\n 18965: a1 = 0x20160\n 18970: i32 a1 = a1 + 0\n 18972: a0 = 0x1\n 18975: a2 = 0\n 18977: ecalli 14 // 'seal_return'\n 18979: jump @1011\n      : @667 (gas: 6)\n 18982: a1 = 0x20160\n 18987: i32 a1 = a1 + 0\n 18989: a0 = 0x1\n 18992: a2 = 0\n 18994: ecalli 14 // 'seal_return'\n 18996: jump @1011\n      : @668 (gas: 6)\n 18999: a1 = 0x20160\n 19004: i32 a1 = a1 + 0\n 19006: a0 = 0x1\n 19009: a2 = 0\n 19011: ecalli 14 // 'seal_return'\n 19013: jump @1011\n      : @669 (gas: 6)\n 19016: a1 = 0x20160\n 19021: i32 a1 = a1 + 0\n 19023: a0 = 0x1\n 19026: a2 = 0\n 19028: ecalli 14 // 'seal_return'\n 19030: jump @1011\n      : @670 (gas: 6)\n 19033: a1 = 0x20160\n 19038: i32 a1 = a1 + 0\n 19040: a0 = 0x1\n 19043: a2 = 0\n 19045: ecalli 14 // 'seal_return'\n 19047: jump @1011\n      : @671 (gas: 6)\n 19050: a1 = 0x20160\n 19055: i32 a1 = a1 + 0\n 19057: a0 = 0x1\n 19060: a2 = 0\n 19062: ecalli 14 // 'seal_return'\n 19064: jump @1011\n      : @672 (gas: 6)\n 19067: a1 = 0x20160\n 19072: i32 a1 = a1 + 0\n 19074: a0 = 0x1\n 19077: a2 = 0\n 19079: ecalli 14 // 'seal_return'\n 19081: jump @1011\n      : @673 (gas: 3)\n 19084: t0 = 0x290\n 19088: a2 = s1 + 0x1878\n 19092: fallthrough\n      : @674 [@dyn 328] (gas: 8)\n 19093: u64 [a2 + 184] = 0\n 19097: u64 [a2 + 176] = 0\n 19101: a0 = 0xcc67c13b00000000\n 19111: u64 [a2 + 0xc0] = a0\n 19115: a1 = s1 + 0x1920\n 19119: u64 [a2 + 168] = 0\n 19123: a0 = 0\n 19125: ra = 658, jump @9\n      : @675 [@dyn 329] (gas: 2)\n 19131: a1 = i32 [0x20150]\n 19136: jump @677 if a1 >u 31\n      : @676 (gas: 3)\n 19140: u32 [0x20150] = 0x20\n 19146: a1 = 0x20160\n 19151: jump @721\n      : @677 (gas: 2)\n 19154: a1 = 0x20160\n 19159: jump @721\n      : @678 (gas: 10)\n 19162: a0 = s1 + 0x1878\n 19166: u64 [a0 + 248] = 0\n 19170: u64 [a0 + 240] = 0\n 19174: u64 [a0 + 232] = 0\n 19178: a2 = a0\n 19180: a0 = 0x4e487b7100000000\n 19190: a1 = s1 + 0x1960\n 19194: u64 [a2 + 0x100] = a0\n 19198: a0 = 0\n 19200: ra = 660, jump @9\n      : @679 [@dyn 330] (gas: 10)\n 19206: a1 = s1 + 0x1878\n 19210: u64 [a1 + 224] = 0\n 19214: u64 [a1 + 216] = 0\n 19218: u64 [a1 + 200] = 0x11\n 19223: a2 = a1\n 19225: a0 = 0x4\n 19228: a1 = s1 + 0x1940\n 19232: u64 [a2 + 208] = 0\n 19236: ra = 0x2a8\n 19240: jump @9\n      : @680 (gas: 3)\n 19243: t0 = 0x296\n 19247: a2 = s1 + 0x1878\n 19251: fallthrough\n      : @681 [@dyn 331] (gas: 8)\n 19252: u64 [a2 + 280] = 0\n 19256: u64 [a2 + 272] = 0\n 19260: a0 = 0xe9987cdd00000000\n 19270: u64 [a2 + 0x120] = a0\n 19274: a1 = s1 + 0x1980\n 19278: u64 [a2 + 264] = 0\n 19282: a0 = 0\n 19284: ra = 664, jump @9\n      : @682 [@dyn 332] (gas: 3)\n 19290: a0 = u64 [s1 + 0x30]\n 19293: a0 = i32 [a0]\n 19295: jump @684 if a0 >u 31\n      : @683 (gas: 7)\n 19299: a1 = u64 [s1 + 0x30]\n 19302: u32 [a1 + 0] = 0x20\n 19305: a0 = 0x1\n 19308: a2 = 0x4\n 19311: a1 = u64 [s1 + 0x38]\n 19314: ecalli 14 // 'seal_return'\n 19316: jump @727\n      : @684 (gas: 5)\n 19319: a0 = 0x1\n 19322: a2 = 0x4\n 19325: a1 = u64 [s1 + 0x38]\n 19328: ecalli 14 // 'seal_return'\n 19330: jump @727\n      : @685 (gas: 6)\n 19333: a1 = 0x20160\n 19338: i32 a1 = a1 + 0\n 19340: a0 = 0x1\n 19343: a2 = 0\n 19345: ecalli 14 // 'seal_return'\n 19347: jump @1011\n      : @686 (gas: 6)\n 19350: a1 = 0x20160\n 19355: i32 a1 = a1 + 0\n 19357: a0 = 0x1\n 19360: a2 = 0\n 19362: ecalli 14 // 'seal_return'\n 19364: jump @1011\n      : @687 (gas: 6)\n 19367: a1 = 0x20160\n 19372: i32 a1 = a1 + 0\n 19374: a0 = 0x1\n 19377: a2 = 0\n 19379: ecalli 14 // 'seal_return'\n 19381: jump @1011\n      : @688 (gas: 6)\n 19384: a1 = 0x20160\n 19389: i32 a1 = a1 + 0\n 19391: a0 = 0x1\n 19394: a2 = 0\n 19396: ecalli 14 // 'seal_return'\n 19398: jump @1011\n      : @689 (gas: 6)\n 19401: a1 = 0x20160\n 19406: i32 a1 = a1 + 0\n 19408: a0 = 0x1\n 19411: a2 = 0\n 19413: ecalli 14 // 'seal_return'\n 19415: jump @1011\n      : @690 (gas: 6)\n 19418: a1 = 0x20160\n 19423: i32 a1 = a1 + 0\n 19425: a0 = 0x1\n 19428: a2 = 0\n 19430: ecalli 14 // 'seal_return'\n 19432: jump @1011\n      : @691 (gas: 1)\n 19435: jump @729 if a0 != 2618616686\n      : @692 (gas: 9)\n 19443: a0 = s1 + 0x2078\n 19447: u64 [a0 + 864] = 0\n 19451: u64 [a0 + 856] = 0\n 19455: u64 [a0 + 848] = 0\n 19459: u64 [a0 + 840] = 0\n 19463: a0 = s1 + 0x2000\n 19467: i32 a0 = a0 + 0x3c0\n 19471: ecalli 17 // 'value_transferred'\n 19473: fallthrough\n      : @693 (gas: 10)\n 19474: a3 = s1 + 0x2078\n 19478: a4 = a3 + 0x300\n 19482: a0 = u64 [a4 + 0x58]\n 19485: a1 = u64 [a4 + 0x60]\n 19488: a2 = u64 [a4 + 0x50]\n 19491: a3 = u64 [a4 + 0x48]\n 19494: a1 = a1 | a2\n 19497: a0 = a0 | a3\n 19500: a0 = a0 | a1\n 19503: jump @747 if a0 == 0\n      : @694 (gas: 6)\n 19507: a1 = 0x20160\n 19512: i32 a1 = a1 + 0\n 19514: a0 = 0x1\n 19517: a2 = 0\n 19519: ecalli 14 // 'seal_return'\n 19521: jump @1011\n      : @695 (gas: 6)\n 19524: a1 = 0x20160\n 19529: i32 a1 = a1 + 0\n 19531: a0 = 0x1\n 19534: a2 = 0\n 19536: ecalli 14 // 'seal_return'\n 19538: jump @1011\n      : @696 (gas: 6)\n 19541: a1 = 0x20160\n 19546: i32 a1 = a1 + 0\n 19548: a0 = 0x1\n 19551: a2 = 0\n 19553: ecalli 14 // 'seal_return'\n 19555: jump @1011\n      : @697 (gas: 6)\n 19558: a1 = 0x20160\n 19563: i32 a1 = a1 + 0\n 19565: a0 = 0x1\n 19568: a2 = 0\n 19570: ecalli 14 // 'seal_return'\n 19572: jump @1011\n      : @698 (gas: 6)\n 19575: a1 = 0x20160\n 19580: i32 a1 = a1 + 0\n 19582: a0 = 0x1\n 19585: a2 = 0\n 19587: ecalli 14 // 'seal_return'\n 19589: jump @1011\n      : @699 (gas: 6)\n 19592: a1 = 0x20160\n 19597: i32 a1 = a1 + 0\n 19599: a0 = 0x1\n 19602: a2 = 0\n 19604: ecalli 14 // 'seal_return'\n 19606: jump @1011\n      : @700 (gas: 6)\n 19609: a1 = 0x20160\n 19614: i32 a1 = a1 + 0\n 19616: a0 = 0x1\n 19619: a2 = 0\n 19621: ecalli 14 // 'seal_return'\n 19623: jump @1011\n      : @701 (gas: 6)\n 19626: a1 = 0x20160\n 19631: i32 a1 = a1 + 0\n 19633: a0 = 0x1\n 19636: a2 = 0\n 19638: ecalli 14 // 'seal_return'\n 19640: jump @1011\n      : @702 (gas: 6)\n 19643: a1 = 0x20160\n 19648: i32 a1 = a1 + 0\n 19650: a0 = 0x1\n 19653: a2 = 0\n 19655: ecalli 14 // 'seal_return'\n 19657: jump @1011\n      : @703 (gas: 6)\n 19660: a1 = 0x20160\n 19665: i32 a1 = a1 + 0\n 19667: a0 = 0x1\n 19670: a2 = 0\n 19672: ecalli 14 // 'seal_return'\n 19674: jump @1011\n      : @704 (gas: 3)\n 19677: t0 = 0x29a\n 19681: a2 = s1 + 0x1078\n 19685: fallthrough\n      : @705 [@dyn 333] (gas: 8)\n 19686: u64 [a2 + 1912] = 0\n 19690: u64 [a2 + 1904] = 0\n 19694: a0 = 0x2c5211c600000000\n 19704: u64 [a2 + 0x780] = a0\n 19708: a1 = s1 + 0x17e0\n 19712: u64 [a2 + 1896] = 0\n 19716: a0 = 0\n 19718: ra = 668, jump @9\n      : @706 [@dyn 334] (gas: 2)\n 19724: a1 = i32 [0x20150]\n 19729: jump @708 if a1 >u 31\n      : @707 (gas: 3)\n 19733: u32 [0x20150] = 0x20\n 19739: a1 = 0x20160\n 19744: jump @721\n      : @708 (gas: 2)\n 19747: a1 = 0x20160\n 19752: jump @721\n      : @709 (gas: 10)\n 19755: a0 = s1 + 0x1078\n 19759: u64 [a0 + 1976] = 0\n 19763: u64 [a0 + 1968] = 0\n 19767: u64 [a0 + 1960] = 0\n 19771: a2 = a0\n 19773: a0 = 0x4e487b7100000000\n 19783: a1 = s1 + 0x1820\n 19787: u64 [a2 + 0x7c0] = a0\n 19791: a0 = 0\n 19793: ra = 670, jump @9\n      : @710 [@dyn 335] (gas: 3)\n 19799: t0 = 0x2a0\n 19803: a1 = s1 + 0x1078\n 19807: fallthrough\n      : @711 [@dyn 336] (gas: 8)\n 19808: u64 [a1 + 1952] = 0\n 19812: u64 [a1 + 1944] = 0\n 19816: u64 [a1 + 1928] = 0x11\n 19821: a2 = a1\n 19823: a0 = 0x4\n 19826: a1 = s1 + 0x1800\n 19830: u64 [a2 + 1936] = 0\n 19834: ra = 674, jump @9\n      : @712 [@dyn 337] (gas: 3)\n 19840: a0 = u64 [s1 + 0xb0]\n 19844: a0 = i32 [a0]\n 19846: jump @714 if a0 >u 63\n      : @713 (gas: 3)\n 19850: a1 = u64 [s1 + 0xb0]\n 19854: u32 [a1 + 0] = 0x40\n 19857: fallthrough\n      : @714 (gas: 5)\n 19858: a0 = 0x1\n 19861: a2 = 0x24\n 19864: a1 = u64 [s1 + 0xc0]\n 19868: ecalli 14 // 'seal_return'\n 19870: fallthrough\n      : @715 (gas: 6)\n 19871: a1 = 0x20160\n 19876: i32 a1 = a1 + 0\n 19878: a0 = 0x1\n 19881: a2 = 0\n 19883: ecalli 14 // 'seal_return'\n 19885: jump @1011\n      : @716 (gas: 6)\n 19888: a1 = 0x20160\n 19893: i32 a1 = a1 + 0\n 19895: a0 = 0x1\n 19898: a2 = 0\n 19900: ecalli 14 // 'seal_return'\n 19902: jump @1011\n      : @717 (gas: 11)\n 19905: a2 = s1 + 0x7ff\n 19909: a2 = a2 + 0x79\n 19912: u64 [a2 + 408] = 0\n 19916: u64 [a2 + 400] = 0\n 19920: a0 = 0xd5b25b6300000000\n 19930: u64 [a2 + 0x1a0] = a0\n 19934: a1 = s1 + 0x7ff\n 19938: a1 = a1 + 0x201\n 19942: u64 [a2 + 392] = 0\n 19946: a0 = 0\n 19948: ra = 676, jump @9\n      : @718 [@dyn 338] (gas: 2)\n 19954: a1 = i32 [0x20150]\n 19959: jump @720 if a1 >u 31\n      : @719 (gas: 3)\n 19963: u32 [0x20150] = 0x20\n 19969: a1 = 0x20160\n 19974: jump @721\n      : @720 (gas: 2)\n 19976: a1 = 0x20160\n 19981: fallthrough\n      : @721 (gas: 5)\n 19982: i32 a1 = a1 + 0\n 19984: a0 = 0x1\n 19987: a2 = 0x4\n 19990: ecalli 14 // 'seal_return'\n 19992: fallthrough\n      : @722 (gas: 8)\n 19993: u64 [t0 + 344] = 0\n 19997: u64 [t0 + 336] = 0\n 20001: u64 [t0 + 328] = 0\n 20005: a0 = 0x4e487b7100000000\n 20015: a1 = s1 + 0x19c0\n 20019: u64 [t0 + 0x160] = a0\n 20023: a0 = 0\n 20025: ra = 678, jump @9\n      : @723 [@dyn 339] (gas: 9)\n 20031: a1 = s1 + 0x1878\n 20035: u64 [a1 + 320] = 0\n 20039: u64 [a1 + 312] = 0\n 20043: u64 [a1 + 296] = 0x41\n 20048: a2 = a1\n 20050: a0 = 0x4\n 20053: a1 = s1 + 0x19a0\n 20057: u64 [a2 + 304] = 0\n 20061: ra = 680, jump @9\n      : @724 [@dyn 340] (gas: 3)\n 20067: a0 = u64 [s1 + 0x30]\n 20070: a0 = i32 [a0]\n 20072: jump @726 if a0 >u 63\n      : @725 (gas: 7)\n 20076: a1 = u64 [s1 + 0x30]\n 20079: u32 [a1 + 0] = 0x40\n 20082: a0 = 0x1\n 20085: a2 = 0x24\n 20088: a1 = u64 [s1 + 0x38]\n 20091: ecalli 14 // 'seal_return'\n 20093: jump @727\n      : @726 (gas: 5)\n 20095: a0 = 0x1\n 20098: a2 = 0x24\n 20101: a1 = u64 [s1 + 0x38]\n 20104: ecalli 14 // 'seal_return'\n 20106: fallthrough\n      : @727 (gas: 12)\n 20107: a2 = s1 + 0x7ff\n 20111: a2 = a2 + 0x79\n 20114: u64 [a2 + 664] = 0\n 20118: u64 [a2 + 656] = 0\n 20122: a0 = 0xf4d678b800000000\n 20132: u64 [a2 + 0x2a0] = a0\n 20136: a1 = s1 + 0x7ff\n 20140: a1 = a1 + 0x301\n 20144: u64 [a2 + 648] = 0\n 20148: a0 = 0\n 20150: ra = 0x2b4\n 20154: jump @9\n      : @728 (gas: 12)\n 20157: a2 = s1 + 0x7ff\n 20161: a2 = a2 + 0x79\n 20164: u64 [a2 + 1144] = 0\n 20168: u64 [a2 + 1136] = 0\n 20172: a0 = 0xf4d678b800000000\n 20182: u64 [a2 + 0x480] = a0\n 20186: a1 = s1 + 0x7ff\n 20190: a1 = a1 + 0x4e1\n 20194: u64 [a2 + 1128] = 0\n 20198: a0 = 0\n 20200: ra = 0x2b4\n 20204: jump @9\n      : @729 (gas: 1)\n 20207: jump @734 if a0 != 2685688103\n      : @730 (gas: 10)\n 20214: a0 = s1 + 0x2078\n 20218: u64 [a0 + 928] = 0\n 20222: u64 [a0 + 920] = 0\n 20226: u64 [a0 + 912] = 0\n 20230: u64 [a0 + 904] = 0\n 20234: a0 = s1 + 0x2000\n 20238: i32 a0 = a0 + 0x400\n 20242: ra = 0x2aa\n 20246: ecalli 17 // 'value_transferred'\n 20248: fallthrough\n      : @731 [@dyn 341] (gas: 3)\n 20249: a3 = s1 + 0x2078\n 20253: a4 = a3 + 0x300\n 20257: t0 = 684, jump @1279\n      : @732 [@dyn 342] (gas: 1)\n 20263: jump @749 if a0 == 0\n      : @733 (gas: 6)\n 20267: a1 = 0x20160\n 20272: i32 a1 = a1 + 0\n 20274: a0 = 0x1\n 20277: a2 = 0\n 20279: ecalli 14 // 'seal_return'\n 20281: jump @1011\n      : @734 (gas: 1)\n 20284: jump @751 if a0 != 3058722618\n      : @735 (gas: 11)\n 20292: a0 = s1 + 0x2078\n 20296: u64 [a0 + 1088] = 0\n 20300: u64 [a0 + 1080] = 0\n 20304: u64 [a0 + 1072] = 0\n 20308: u64 [a0 + 1064] = 0\n 20312: a0 = s1 + 0x2000\n 20316: i32 a0 = a0 + 0x4a0\n 20320: ra = 0x2ae\n 20324: ecalli 17 // 'value_transferred'\n 20326: t0 = 0x2b0\n 20330: jump @1267\n      : @736 [@dyn 343] (gas: 1)\n 20333: t0 = 688, jump @1267\n      : @737 [@dyn 344] (gas: 8)\n 20339: a0 = u64 [a4 + 0x38]\n 20342: a1 = u64 [a4 + 0x40]\n 20345: a2 = u64 [a4 + 0x30]\n 20348: a3 = u64 [a4 + 0x28]\n 20351: a1 = a1 | a2\n 20354: a0 = a0 | a3\n 20357: a0 = a0 | a1\n 20360: jump @755 if a0 == 0\n      : @738 (gas: 6)\n 20364: a1 = 0x20160\n 20369: i32 a1 = a1 + 0\n 20371: a0 = 0x1\n 20374: a2 = 0\n 20376: ecalli 14 // 'seal_return'\n 20378: jump @1011\n      : @739 (gas: 2)\n 20381: u64 [s1 + 184] = 0\n 20385: fallthrough\n      : @740 (gas: 5)\n 20386: a0 = u64 [s1 + 0xc8]\n 20390: a0 = a0 << 0x1\n 20393: a4 = u64 [s1 + 0xb8]\n 20397: a4 = a4 | a0\n 20400: fallthrough\n      : @741 (gas: 7)\n 20401: u64 [s1 + 824] = 0\n 20405: u64 [s1 + 816] = 0\n 20409: u64 [s1 + 808] = 0\n 20413: a1 = s1 + 0x320\n 20417: u64 [s1 + 0x320] = a4\n 20421: a0 = u64 [s1 + 0x78]\n 20424: ra = 690, jump @9\n      : @742 [@dyn 345] (gas: 4)\n 20430: a1 = 0x20\n 20433: a0 = u64 [s1 + 0x78]\n 20436: ra = 0x13a\n 20440: jump @20\n      : @743 (gas: 11)\n 20443: a2 = s1 + 0x7ff\n 20447: a2 = a2 + 0x79\n 20450: u64 [a2 + 888] = 0\n 20454: u64 [a2 + 880] = 0\n 20458: a0 = 0x90b8ec1800000000\n 20468: u64 [a2 + 0x380] = a0\n 20472: a1 = s1 + 0x7ff\n 20476: a1 = a1 + 0x3e1\n 20480: u64 [a2 + 872] = 0\n 20484: a0 = 0\n 20486: ra = 692, jump @9\n      : @744 [@dyn 346] (gas: 3)\n 20492: a0 = u64 [s1 + 0x70]\n 20495: a0 = i32 [a0]\n 20497: jump @746 if a0 >u 31\n      : @745 (gas: 3)\n 20501: a1 = u64 [s1 + 0x70]\n 20504: u32 [a1 + 0] = 0x20\n 20507: fallthrough\n      : @746 (gas: 5)\n 20508: a0 = 0x1\n 20511: a2 = 0x4\n 20514: a1 = u64 [s1 + 0x80]\n 20518: ecalli 14 // 'seal_return'\n 20520: fallthrough\n      : @747 (gas: 3)\n 20521: a0 = u64 [s1 + 0xf8]\n 20525: a0 = i32 [a0]\n 20527: jump @757 if a0 >u 99\n      : @748 (gas: 6)\n 20532: a1 = 0x20160\n 20537: i32 a1 = a1 + 0\n 20539: a0 = 0x1\n 20542: a2 = 0\n 20544: ecalli 14 // 'seal_return'\n 20546: jump @1011\n      : @749 (gas: 3)\n 20549: a0 = u64 [s1 + 0xf8]\n 20553: a0 = i32 [a0]\n 20555: jump @782 if a0 >u 67\n      : @750 (gas: 6)\n 20560: a1 = 0x20160\n 20565: i32 a1 = a1 + 0\n 20567: a0 = 0x1\n 20570: a2 = 0\n 20572: ecalli 14 // 'seal_return'\n 20574: jump @1011\n      : @751 (gas: 1)\n 20577: jump @806 if a0 != 4076725131\n      : @752 (gas: 9)\n 20585: a0 = s1 + 0x2078\n 20589: u64 [a0 + 1536] = 0\n 20593: u64 [a0 + 1528] = 0\n 20597: u64 [a0 + 1520] = 0\n 20601: u64 [a0 + 1512] = 0\n 20605: a0 = s1 + 0x2000\n 20609: i32 a0 = a0 + 0x660\n 20613: ecalli 17 // 'value_transferred'\n 20615: fallthrough\n      : @753 (gas: 10)\n 20616: a3 = s1 + 0x2078\n 20620: a4 = a3 + 0x500\n 20624: a0 = u64 [a4 + 0xf8]\n 20628: a1 = u64 [a3 + 0x600]\n 20632: a2 = u64 [a4 + 0xf0]\n 20636: a3 = u64 [a4 + 0xe8]\n 20640: a1 = a1 | a2\n 20643: a0 = a0 | a3\n 20646: a0 = a0 | a1\n 20649: jump @810 if a0 == 0\n      : @754 (gas: 6)\n 20653: a1 = 0x20160\n 20658: i32 a1 = a1 + 0\n 20660: a0 = 0x1\n 20663: a2 = 0\n 20665: ecalli 14 // 'seal_return'\n 20667: jump @1011\n      : @755 (gas: 3)\n 20670: a0 = u64 [s1 + 0xf8]\n 20674: a0 = i32 [a0]\n 20676: jump @812 if a0 >u 35\n      : @756 (gas: 6)\n 20681: a1 = 0x20160\n 20686: i32 a1 = a1 + 0\n 20688: a0 = 0x1\n 20691: a2 = 0\n 20693: ecalli 14 // 'seal_return'\n 20695: jump @1011\n      : @757 (gas: 4)\n 20698: a0 = s1 + 0x1100\n 20702: ra = 0x2b6\n 20706: t0 = 0x416\n 20710: jump @1286\n      : @758 [@dyn 347] (gas: 13)\n 20713: a1 = s1 + 0x1078\n 20717: a0 = u64 [a1 + 0xa0]\n 20721: u64 [s1 + 0x70] = a0\n 20724: a0 = u64 [a1 + 0x98]\n 20728: u64 [s1 + 0x68] = a0\n 20731: a0 = u64 [a1 + 0x90]\n 20735: u64 [s1 + 0x60] = a0\n 20738: a0 = u64 [a1 + 0x88]\n 20742: u64 [s1 + 0x50] = a0\n 20745: a0 = s1 + 0x10e0\n 20749: ra = 0x2b8\n 20753: t0 = 0x420\n 20757: jump @1292\n      : @759 [@dyn 348] (gas: 13)\n 20760: a1 = s1 + 0x1078\n 20764: a0 = u64 [a1 + 0x80]\n 20768: u64 [s1 + 0x58] = a0\n 20771: a0 = u64 [a1 + 0x78]\n 20774: u64 [s1 + 0x48] = a0\n 20777: a0 = u64 [a1 + 0x70]\n 20780: u64 [s1 + 0x40] = a0\n 20783: a0 = u64 [a1 + 0x68]\n 20786: u64 [s1 + 0x78] = a0\n 20789: a0 = s1 + 0x10c0\n 20793: ra = 0x2ba\n 20797: t0 = 0x426\n 20801: jump @1292\n      : @760 [@dyn 349] (gas: 13)\n 20804: a1 = s1 + 0x1078\n 20808: a0 = u64 [a1 + 0x60]\n 20811: u64 [s1 + 0x38] = a0\n 20814: a0 = u64 [a1 + 0x58]\n 20817: u64 [s1 + 0x30] = a0\n 20820: a0 = u64 [a1 + 0x50]\n 20823: u64 [s1 + 0x28] = a0\n 20826: a0 = u64 [a1 + 0x48]\n 20829: u64 [s1 + 0x20] = a0\n 20832: a0 = s1 + 0x2000\n 20836: i32 a0 = a0 + 0x3e0\n 20840: ecalli 10 // 'now'\n 20842: fallthrough\n      : @761 (gas: 49)\n 20843: a0 = s1 + 0x2078\n 20847: t0 = u64 [a0 + 0x380]\n 20851: a4 = u64 [a0 + 0x378]\n 20855: u64 [s1 + 0xb8] = a4\n 20859: t2 = u64 [a0 + 0x370]\n 20863: a3 = u64 [a0 + 0x368]\n 20867: u64 [s1 + 0xa0] = a3\n 20871: a0 = clz t0\n 20873: a1 = clz a4\n 20875: a2 = a1 + 0x40\n 20878: a2 = a0 if t0 != 0\n 20881: a0 = clz t2\n 20883: a1 = clz a3\n 20885: a1 = a1 + 0x40\n 20888: a1 = a0 if t2 != 0\n 20891: a0 = a1 + 0x80\n 20895: a3 = a4 | t0\n 20898: a2 = a0 if a3 == 0\n 20901: a5 = a0 <u a1\n 20904: a5 = 0 if a3 != 0\n 20906: a4 = a5 >u 0\n 20908: a0 = a2 <u 0xf0\n 20912: a3 = a0 ^ 0x1\n 20915: a4 = a3 if a5 == 0\n 20918: a0 = a4 <u 0x1\n 20921: ra = a0 + 0xffffffffffffffff\n 20924: t1 = -a4\n 20926: a5 = -a5\n 20928: a3 = a5 - a3\n 20931: a2 = 0xef - a2\n 20935: a5 = t1 >u 0\n 20937: a0 = ra >u 0\n 20939: a0 = a5 if ra == 0\n 20942: a5 = a2 <u 0x100\n 20946: a5 = a5 ^ 0x1\n 20949: a1 = a3 >u 0\n 20951: a5 = a1 if a3 != 0\n 20954: a5 = a0 if a4 != 0\n 20957: u64 [s1 + 0x98] = t2\n 20961: u64 [s1 + 0xb0] = t0\n 20965: a0 = t2 | t0\n 20968: a4 = u64 [s1 + 0xa0]\n 20972: a1 = u64 [s1 + 0xb8]\n 20976: a1 = a1 | a4\n 20979: a0 = a0 | a1\n 20982: a0 = a0 <u 0x1\n 20985: a0 = a0 | a5\n 20988: a4 = 0 if a0 != 0\n 20990: jump @834 if a0 != 0\n      : @762 (gas: 5)\n 20994: a0 = a2 ^ 0xff\n 20998: a0 = a0 | t1\n 21001: a1 = a3 | ra\n 21004: a0 = a0 | a1\n 21007: jump @834 if a0 == 0\n      : @763 (gas: 1)\n 21011: t0 = 700, jump @1252\n      : @764 [@dyn 350] (gas: 1)\n 21017: ra = 702, jump @1293\n      : @765 [@dyn 351] (gas: 6)\n 21023: u64 [s1 + 0xa8] = a0\n 21027: u64 [s1 + 0xc8] = a1\n 21031: a0 = u64 [s1 + 0xb8]\n 21035: a1 = u64 [s1 + 0xb0]\n 21039: a2 = u64 [s1 + 0xc0]\n 21043: ra = 704, jump @1298\n      : @766 [@dyn 352] (gas: 7)\n 21049: u64 [s1 + 0x90] = a0\n 21053: u64 [s1 + 0x88] = a1\n 21057: a0 = u64 [s1 + 0xc0]\n 21061: a2 = a0 + 0xffffffffffffff80\n 21064: a0 = u64 [s1 + 0xa0]\n 21068: a1 = u64 [s1 + 0x98]\n 21072: ra = 706, jump @1298\n      : @767 [@dyn 353] (gas: 8)\n 21078: u64 [s1 + 0x80] = a0\n 21082: u64 [s1 + 0x18] = a1\n 21085: a2 = u64 [s1 + 0xc0]\n 21089: a0 = a2 <u 0x80\n 21093: u64 [s1 + 0x10] = a0\n 21096: a0 = u64 [s1 + 0xa0]\n 21100: a1 = u64 [s1 + 0x98]\n 21104: ra = 708, jump @1298\n      : @768 [@dyn 354] (gas: 12)\n 21110: u64 [s1 + 0xd0] = a1\n 21114: a1 = u64 [s1 + 0xf0]\n 21118: a2 = u64 [s1 + 0xe8]\n 21122: a2 = a2 | a1\n 21125: a1 = u64 [s1 + 0xf8]\n 21129: a3 = u64 [s1 + 0xe0]\n 21133: a1 = a1 | a3\n 21136: a1 = a1 | a2\n 21139: a3 = u64 [s1 + 0x10]\n 21142: a0 = 0 if a3 == 0\n 21144: u64 [s1 + 0xd8] = a0\n 21148: jump @832 if a1 == 0\n      : @769 (gas: 7)\n 21152: a2 = a3\n 21154: a0 = u64 [s1 + 0xc8]\n 21158: a1 = u64 [s1 + 0x88]\n 21162: a0 = a0 | a1\n 21165: a5 = a3\n 21167: a1 = u64 [s1 + 0x18]\n 21170: t0 = 710, jump @1250\n      : @770 [@dyn 355] (gas: 1)\n 21176: ra = 712, jump @1293\n      : @771 [@dyn 356] (gas: 6)\n 21182: u64 [s1 + 0xa8] = a0\n 21186: u64 [s1 + 0x80] = a1\n 21190: a0 = u64 [s1 + 0xa0]\n 21194: a1 = u64 [s1 + 0x98]\n 21198: a2 = u64 [s1 + 0xf8]\n 21202: ra = 714, jump @1293\n      : @772 [@dyn 357] (gas: 7)\n 21208: u64 [s1 + 0x18] = a0\n 21211: u64 [s1 + 0x88] = a1\n 21215: a1 = u64 [s1 + 0xf8]\n 21219: a2 = 0x80 - a1\n 21223: a0 = u64 [s1 + 0xb8]\n 21227: a1 = u64 [s1 + 0xb0]\n 21231: ra = 716, jump @1298\n      : @773 [@dyn 358] (gas: 1)\n 21237: t0 = 718, jump @1276\n      : @774 [@dyn 359] (gas: 2)\n 21243: a1 = u64 [s1 + 0x18]\n 21246: t0 = 720, jump @1290\n      : @775 [@dyn 360] (gas: 1)\n 21252: ra = 722, jump @1293\n      : @776 [@dyn 361] (gas: 1)\n 21258: t0 = 724, jump @1258\n      : @777 [@dyn 362] (gas: 1)\n 21264: t0 = 726, jump @1263\n      : @778 [@dyn 363] (gas: 5)\n 21270: t0 = ra <u a2\n 21273: a4 = u64 [s1 + 0x88]\n 21277: a5 = a4 <u a3\n 21280: a5 = t0 if t1 != 0\n 21283: t0 = 728, jump @1268\n      : @779 [@dyn 364] (gas: 20)\n 21289: t0 = a0 | a1\n 21292: a1 = a4 << 0x1\n 21295: a4 = u64 [s1 + 0xd0]\n 21299: t1 = a4 >> 0x3f\n 21302: t1 = a1 | t1\n 21305: a1 = a4 << 0x1\n 21308: a4 = u64 [s1 + 0xd8]\n 21312: t2 = a4 >> 0x3f\n 21315: a1 = a1 | t2\n 21318: a4 = a4 << 0x1\n 21321: a0 = u64 [s1 + 0xb8]\n 21325: a4 = a4 | a0\n 21328: u64 [s1 + 0xd8] = a4\n 21332: a0 = u64 [s1 + 0xb0]\n 21336: a1 = a1 | a0\n 21339: u64 [s1 + 0xd0] = a1\n 21343: a1 = a0 | t1\n 21346: u64 [s1 + 0xc0] = a1\n 21350: a0 = a0 | t0\n 21353: t0 = 730, jump @1244\n      : @780 [@dyn 365] (gas: 18)\n 21359: t0 = a4 <u a2\n 21362: a2 = a4 - a2\n 21365: a4 = a3 <u 0x1\n 21368: a5 = a5 - a4\n 21371: a4 = u64 [s1 + 0xe8]\n 21375: a4 = a4 - t0\n 21378: a3 = a3 + 0xffffffffffffffff\n 21381: u64 [s1 + 0xf0] = a5\n 21385: u64 [s1 + 0xe8] = a4\n 21389: t0 = a5 | a4\n 21392: u64 [s1 + 0xf8] = a3\n 21396: a4 = a3 | a2\n 21399: a3 = a4 | t0\n 21402: a4 = ra & 0x1\n 21405: u64 [s1 + 0xb8] = a4\n 21409: u64 [s1 + 0xe0] = a2\n 21413: u64 [s1 + 176] = 0\n 21417: jump @777 if a3 != 0\n      : @781 (gas: 1)\n 21421: jump @833\n      : @782 (gas: 4)\n 21424: a0 = s1 + 0x14c0\n 21428: ra = 0x2dc\n 21432: t0 = 0x430\n 21436: jump @1286\n      : @783 [@dyn 366] (gas: 7)\n 21439: a0 = s1 + 0x1078\n 21443: a0 = u64 [a0 + 0x448]\n 21447: u64 [s1 + 0x78] = a0\n 21450: a0 = s1 + 0x14a0\n 21454: ra = 0x2de\n 21458: t0 = 0x420\n 21462: jump @1292\n      : @784 [@dyn 367] (gas: 7)\n 21465: a0 = s1 + 0x1078\n 21469: a0 = u64 [a0 + 0x428]\n 21473: u64 [s1 + 0x70] = a0\n 21476: a0 = s1 + 0x2000\n 21480: i32 a0 = a0 + 0x420\n 21484: ecalli 10 // 'now'\n 21486: fallthrough\n      : @785 (gas: 51)\n 21487: a0 = s1 + 0x2078\n 21491: t0 = u64 [a0 + 0x3c0]\n 21495: a4 = u64 [a0 + 0x3b8]\n 21499: u64 [s1 + 0xb8] = a4\n 21503: t2 = u64 [a0 + 0x3b0]\n 21507: a3 = u64 [a0 + 0x3a8]\n 21511: u64 [s1 + 0xa0] = a3\n 21515: a0 = clz t0\n 21517: a1 = clz a4\n 21519: a2 = a1 + 0x40\n 21522: a2 = a0 if t0 != 0\n 21525: a0 = clz t2\n 21527: a1 = clz a3\n 21529: a1 = a1 + 0x40\n 21532: a1 = a0 if t2 != 0\n 21535: a0 = a1 + 0x80\n 21539: a3 = a4 | t0\n 21542: a2 = a0 if a3 == 0\n 21545: a5 = a0 <u a1\n 21548: a5 = 0 if a3 != 0\n 21550: a4 = a5 >u 0\n 21552: a0 = a2 <u 0xf0\n 21556: a3 = a0 ^ 0x1\n 21559: a4 = a3 if a5 == 0\n 21562: a0 = a4 <u 0x1\n 21565: ra = a0 + 0xffffffffffffffff\n 21568: t1 = -a4\n 21570: a5 = -a5\n 21572: a3 = a5 - a3\n 21575: a2 = 0xef - a2\n 21579: a5 = t1 >u 0\n 21581: a0 = ra >u 0\n 21583: a0 = a5 if ra == 0\n 21586: a5 = a2 <u 0x100\n 21590: a5 = a5 ^ 0x1\n 21593: a1 = a3 >u 0\n 21595: a5 = a1 if a3 != 0\n 21598: a5 = a0 if a4 != 0\n 21601: u64 [s1 + 0x98] = t2\n 21605: u64 [s1 + 0xb0] = t0\n 21609: a0 = t2 | t0\n 21612: a4 = u64 [s1 + 0xa0]\n 21616: a1 = u64 [s1 + 0xb8]\n 21620: a1 = a1 | a4\n 21623: a0 = a0 | a1\n 21626: a0 = a0 <u 0x1\n 21629: a0 = a0 | a5\n 21632: a1 = a4\n 21634: a1 = 0 if a0 != 0\n 21636: u64 [s1 + 0xe8] = a1\n 21640: jump @839 if a0 != 0\n      : @786 (gas: 5)\n 21644: a0 = a2 ^ 0xff\n 21648: a0 = a0 | t1\n 21651: a1 = a3 | ra\n 21654: a0 = a0 | a1\n 21657: jump @839 if a0 == 0\n      : @787 (gas: 1)\n 21661: t0 = 736, jump @1252\n      : @788 [@dyn 368] (gas: 1)\n 21667: ra = 738, jump @1293\n      : @789 [@dyn 369] (gas: 6)\n 21673: u64 [s1 + 0xa8] = a0\n 21677: u64 [s1 + 0xc8] = a1\n 21681: a0 = u64 [s1 + 0xb8]\n 21685: a1 = u64 [s1 + 0xb0]\n 21689: a2 = u64 [s1 + 0xc0]\n 21693: ra = 740, jump @1298\n      : @790 [@dyn 370] (gas: 7)\n 21699: u64 [s1 + 0x90] = a0\n 21703: u64 [s1 + 0x88] = a1\n 21707: a0 = u64 [s1 + 0xc0]\n 21711: a2 = a0 + 0xffffffffffffff80\n 21714: a0 = u64 [s1 + 0xa0]\n 21718: a1 = u64 [s1 + 0x98]\n 21722: ra = 742, jump @1298\n      : @791 [@dyn 371] (gas: 8)\n 21728: u64 [s1 + 0x80] = a0\n 21732: u64 [s1 + 0x68] = a1\n 21735: a2 = u64 [s1 + 0xc0]\n 21739: a0 = a2 <u 0x80\n 21743: u64 [s1 + 0x60] = a0\n 21746: a0 = u64 [s1 + 0xa0]\n 21750: a1 = u64 [s1 + 0x98]\n 21754: ra = 744, jump @1298\n      : @792 [@dyn 372] (gas: 12)\n 21760: u64 [s1 + 0xd0] = a1\n 21764: a1 = u64 [s1 + 0xf0]\n 21768: a2 = u64 [s1 + 0xe8]\n 21772: a2 = a2 | a1\n 21775: a1 = u64 [s1 + 0xf8]\n 21779: a3 = u64 [s1 + 0xe0]\n 21783: a1 = a1 | a3\n 21786: a1 = a1 | a2\n 21789: a3 = u64 [s1 + 0x60]\n 21792: a0 = 0 if a3 == 0\n 21794: u64 [s1 + 0xd8] = a0\n 21798: jump @837 if a1 == 0\n      : @793 (gas: 7)\n 21802: a2 = a3\n 21804: a0 = u64 [s1 + 0xc8]\n 21808: a1 = u64 [s1 + 0x88]\n 21812: a0 = a0 | a1\n 21815: a5 = a3\n 21817: a1 = u64 [s1 + 0x68]\n 21820: t0 = 746, jump @1250\n      : @794 [@dyn 373] (gas: 1)\n 21826: ra = 748, jump @1293\n      : @795 [@dyn 374] (gas: 6)\n 21832: u64 [s1 + 0xa8] = a0\n 21836: u64 [s1 + 0x80] = a1\n 21840: a0 = u64 [s1 + 0xa0]\n 21844: a1 = u64 [s1 + 0x98]\n 21848: a2 = u64 [s1 + 0xf8]\n 21852: ra = 750, jump @1293\n      : @796 [@dyn 375] (gas: 7)\n 21858: u64 [s1 + 0x68] = a0\n 21861: u64 [s1 + 0x88] = a1\n 21865: a1 = u64 [s1 + 0xf8]\n 21869: a2 = 0x80 - a1\n 21873: a0 = u64 [s1 + 0xb8]\n 21877: a1 = u64 [s1 + 0xb0]\n 21881: ra = 752, jump @1298\n      : @797 [@dyn 376] (gas: 1)\n 21887: t0 = 754, jump @1276\n      : @798 [@dyn 377] (gas: 2)\n 21893: a1 = u64 [s1 + 0x68]\n 21896: t0 = 756, jump @1290\n      : @799 [@dyn 378] (gas: 1)\n 21902: ra = 758, jump @1293\n      : @800 [@dyn 379] (gas: 1)\n 21908: t0 = 760, jump @1258\n      : @801 [@dyn 380] (gas: 1)\n 21914: t0 = 762, jump @1263\n      : @802 [@dyn 381] (gas: 5)\n 21920: t0 = ra <u a2\n 21923: a4 = u64 [s1 + 0x88]\n 21927: a5 = a4 <u a3\n 21930: a5 = t0 if t1 != 0\n 21933: t0 = 764, jump @1268\n      : @803 [@dyn 382] (gas: 20)\n 21939: t0 = a0 | a1\n 21942: a1 = a4 << 0x1\n 21945: a4 = u64 [s1 + 0xd0]\n 21949: t1 = a4 >> 0x3f\n 21952: t1 = a1 | t1\n 21955: a1 = a4 << 0x1\n 21958: a4 = u64 [s1 + 0xd8]\n 21962: t2 = a4 >> 0x3f\n 21965: a1 = a1 | t2\n 21968: a4 = a4 << 0x1\n 21971: a0 = u64 [s1 + 0xb8]\n 21975: a4 = a4 | a0\n 21978: u64 [s1 + 0xd8] = a4\n 21982: a0 = u64 [s1 + 0xb0]\n 21986: a1 = a1 | a0\n 21989: u64 [s1 + 0xd0] = a1\n 21993: a1 = a0 | t1\n 21996: u64 [s1 + 0xc0] = a1\n 22000: a0 = a0 | t0\n 22003: t0 = 766, jump @1244\n      : @804 [@dyn 383] (gas: 18)\n 22009: t0 = a4 <u a2\n 22012: a2 = a4 - a2\n 22015: a4 = a3 <u 0x1\n 22018: a5 = a5 - a4\n 22021: a4 = u64 [s1 + 0xe8]\n 22025: a4 = a4 - t0\n 22028: a3 = a3 + 0xffffffffffffffff\n 22031: u64 [s1 + 0xf0] = a5\n 22035: u64 [s1 + 0xe8] = a4\n 22039: t0 = a5 | a4\n 22042: u64 [s1 + 0xf8] = a3\n 22046: a4 = a3 | a2\n 22049: a3 = a4 | t0\n 22052: a4 = ra & 0x1\n 22055: u64 [s1 + 0xb8] = a4\n 22059: u64 [s1 + 0xe0] = a2\n 22063: u64 [s1 + 176] = 0\n 22067: jump @801 if a3 != 0\n      : @805 (gas: 1)\n 22071: jump @838\n      : @806 (gas: 1)\n 22074: jump @904 if a0 != 235423050\n      : @807 (gas: 10)\n 22082: a0 = s1 + 0x1878\n 22086: u64 [a0 + 1504] = 0\n 22090: u64 [a0 + 1496] = 0\n 22094: u64 [a0 + 1488] = 0\n 22098: u64 [a0 + 1480] = 0\n 22102: a0 = s1 + 0x2000\n 22106: i32 a0 = a0 + 0xfffffffffffffe40\n 22110: ecalli 17 // 'value_transferred'\n 22112: a3 = s1 + 0x1878\n 22116: fallthrough\n      : @808 (gas: 9)\n 22117: a4 = a3 + 0x500\n 22121: a0 = u64 [a4 + 0xd8]\n 22125: a1 = u64 [a4 + 0xe0]\n 22129: a2 = u64 [a4 + 0xd0]\n 22133: a3 = u64 [a4 + 0xc8]\n 22137: a1 = a1 | a2\n 22140: a0 = a0 | a3\n 22143: a0 = a0 | a1\n 22146: jump @910 if a0 == 0\n      : @809 (gas: 6)\n 22150: a1 = 0x20160\n 22155: i32 a1 = a1 + 0\n 22157: a0 = 0x1\n 22160: a2 = 0\n 22162: ecalli 14 // 'seal_return'\n 22164: jump @1011\n      : @810 (gas: 3)\n 22167: a0 = u64 [s1 + 0xf8]\n 22171: a0 = i32 [a0]\n 22173: jump @912 if a0 >u 35\n      : @811 (gas: 6)\n 22178: a1 = 0x20160\n 22183: i32 a1 = a1 + 0\n 22185: a0 = 0x1\n 22188: a2 = 0\n 22190: ecalli 14 // 'seal_return'\n 22192: jump @1011\n      : @812 (gas: 4)\n 22195: a0 = s1 + 0x17c0\n 22199: ra = 0x300\n 22203: t0 = 0x430\n 22207: jump @1286\n      : @813 [@dyn 384] (gas: 12)\n 22210: a0 = s1 + 0x1078\n 22214: a0 = u64 [a0 + 0x748]\n 22218: u64 [s1 + 0xe0] = a0\n 22222: a0 = 0x30160\n 22227: u64 [s1 + 0xe8] = a0\n 22231: i32 a0 = a0 + 0\n 22233: u64 [s1 + 0xd8] = a0\n 22237: ra = 0x302\n 22241: ecalli 4 // 'caller'\n 22243: a2 = u64 [s1 + 0xe8]\n 22247: t0 = 0x304\n 22251: jump @1240\n      : @814 [@dyn 385] (gas: 2)\n 22254: a2 = u64 [s1 + 0xe8]\n 22258: t0 = 772, jump @1240\n      : @815 [@dyn 386] (gas: 8)\n 22264: u64 [a2 + 1856] = 0\n 22268: a4 = a2 + 0x700\n 22272: u64 [a4 + 0x38] = a1\n 22275: u64 [a4 + 0x30] = a0\n 22278: a1 = s1 + 0x17a0\n 22282: u64 [a4 + 0x28] = a3\n 22285: a0 = 0\n 22287: ra = 774, jump @9\n      : @816 [@dyn 387] (gas: 3)\n 22293: t0 = 0x308\n 22297: a1 = s1 + 0x1078\n 22301: fallthrough\n      : @817 [@dyn 388] (gas: 8)\n 22302: u64 [a1 + 1824] = 0\n 22306: u64 [a1 + 1816] = 0\n 22310: u64 [a1 + 1800] = 0x3\n 22315: a2 = a1\n 22317: a0 = 0x20\n 22320: a1 = s1 + 0x1780\n 22324: u64 [a2 + 1808] = 0\n 22328: ra = 778, jump @9\n      : @818 [@dyn 389] (gas: 4)\n 22334: a0 = 0x20150\n 22339: u64 [s1 + 0xf8] = a0\n 22343: a0 = i32 [0x20150]\n 22348: jump @820 if a0 >u 63\n      : @819 (gas: 3)\n 22352: a1 = u64 [s1 + 0xf8]\n 22356: u32 [a1 + 0] = 0x40\n 22359: fallthrough\n      : @820 (gas: 14)\n 22360: a0 = sp + 0xffffffffffffffe0\n 22363: a2 = a0 & 0xffffffffffffffe0\n 22366: u64 [s1 + 0xd0] = a2\n 22370: sp = a2\n 22372: a0 = 0x20160\n 22377: i32 a0 = a0 + 0\n 22379: i32 a2 = a2 + 0\n 22381: a1 = 0x40\n 22384: u64 [s1 + 0xf0] = a0\n 22388: ra = 0x30c\n 22392: ecalli 9 // 'hash_keccak_256'\n 22394: a3 = u64 [s1 + 0xd0]\n 22398: t0 = 0x30e\n 22402: jump @1282\n      : @821 [@dyn 390] (gas: 2)\n 22405: a3 = u64 [s1 + 0xd0]\n 22409: t0 = 782, jump @1282\n      : @822 [@dyn 391] (gas: 19)\n 22415: u64 [s1 + 0xc8] = a0\n 22419: a0 = reverse a1\n 22421: u64 [s1 + 0xc0] = a0\n 22425: a0 = reverse a2\n 22427: u64 [s1 + 0xb8] = a0\n 22431: a0 = reverse a3\n 22433: u64 [s1 + 0xb0] = a0\n 22437: a0 = u64 [s1 + 0xe0]\n 22441: a0 = a0 << 0x20\n 22444: a2 = a0 >> 0x20\n 22447: a0 = s1 + 0x1078\n 22451: u64 [a0 + 1792] = 0\n 22455: u64 [a0 + 1784] = 0\n 22459: u64 [a0 + 1776] = 0\n 22463: a1 = s1 + 0x1760\n 22467: u64 [s1 + 0xd0] = a2\n 22471: u64 [a0 + 0x6e8] = a2\n 22475: a0 = 0\n 22477: ra = 784, jump @9\n      : @823 [@dyn 392] (gas: 14)\n 22483: a0 = u64 [s1 + 0xb0]\n 22487: a1 = s1 + 0x1078\n 22491: a2 = a1 + 0x600\n 22495: u64 [a2 + 0xe0] = a0\n 22499: a0 = u64 [s1 + 0xb8]\n 22503: u64 [a2 + 0xd8] = a0\n 22507: a0 = u64 [s1 + 0xc0]\n 22511: u64 [a2 + 0xd0] = a0\n 22515: a3 = a1\n 22517: a0 = 0x20\n 22520: a1 = s1 + 0x1740\n 22524: a2 = u64 [s1 + 0xc8]\n 22528: u64 [a3 + 0x6c8] = a2\n 22532: ra = 786, jump @9\n      : @824 [@dyn 393] (gas: 3)\n 22538: a0 = u64 [s1 + 0xf8]\n 22542: a0 = i32 [a0]\n 22544: jump @826 if a0 >u 63\n      : @825 (gas: 3)\n 22548: a0 = u64 [s1 + 0xf8]\n 22552: u32 [a0 + 0] = 0x40\n 22555: fallthrough\n      : @826 (gas: 4)\n 22556: a0 = sp + 0xffffffffffffffe0\n 22559: a0 = a0 & 0xffffffffffffffe0\n 22562: u64 [s1 + 0xe0] = a0\n 22566: t0 = 788, jump @1259\n      : @827 [@dyn 394] (gas: 28)\n 22572: ecalli 9 // 'hash_keccak_256'\n 22574: a3 = u64 [s1 + 0xe0]\n 22578: a0 = u64 [a3]\n 22580: a1 = u64 [a3 + 0x8]\n 22583: a2 = u64 [a3 + 0x10]\n 22586: a3 = u64 [a3 + 0x18]\n 22589: a0 = reverse a0\n 22591: a5 = reverse a1\n 22593: a2 = reverse a2\n 22595: a3 = reverse a3\n 22597: a4 = sp + 0xffffffffffffffe0\n 22600: a1 = a4 & 0xffffffffffffffe0\n 22603: sp = a1\n 22605: a3 = a3 + 0x1\n 22608: a4 = a3 <u 0x1\n 22611: a2 = a2 + a4\n 22614: a4 = a3 | a2\n 22617: a4 = a4 <u 0x1\n 22620: a4 = a4 + a5\n 22623: a5 = a4 <u a5\n 22626: a0 = a0 + a5\n 22629: u64 [a1 + 0x8] = a2\n 22632: u64 [a1] = a3\n 22634: u64 [a1 + 0x10] = a4\n 22637: u64 [a1 + 0x18] = a0\n 22640: a0 = s1 + 0x1720\n 22644: u64 [s1 + 0xe0] = a1\n 22648: ra = 790, jump @11\n      : @828 [@dyn 395] (gas: 3)\n 22654: a0 = s1 + 0x1078\n 22658: a0 = u64 [a0 + 0x6a8]\n 22662: jump @920 if a0 == 0\n      : @829 (gas: 4)\n 22666: a1 = s1 + 0x1078\n 22670: a1 = u64 [a1 + 0x6b0]\n 22674: a2 = a1 & 0xff\n 22678: jump @922 if a2 == 0\n      : @830 (gas: 3)\n 22682: t0 = 0x318\n 22686: a2 = s1 + 0x1078\n 22690: fallthrough\n      : @831 [@dyn 396] (gas: 9)\n 22691: u64 [a2 + 1688] = 0\n 22695: u64 [a2 + 1680] = 0\n 22699: a0 = 0xc1c184c800000000\n 22709: u64 [a2 + 0x6a0] = a0\n 22713: a1 = s1 + 0x1700\n 22717: u64 [a2 + 1672] = 0\n 22721: a0 = 0\n 22723: ra = 0x3b2\n 22727: jump @9\n      : @832 (gas: 2)\n 22730: u64 [s1 + 184] = 0\n 22734: fallthrough\n      : @833 (gas: 5)\n 22735: a0 = u64 [s1 + 0xd8]\n 22739: a0 = a0 << 0x1\n 22742: a4 = u64 [s1 + 0xb8]\n 22746: a4 = a4 | a0\n 22749: fallthrough\n      : @834 (gas: 2)\n 22750: a0 = u64 [s1 + 0x78]\n 22753: jump @940 if a0 >=u a4\n      : @835 (gas: 32)\n 22757: a0 = s1 + 0x7ff\n 22761: a0 = a0 + 0x79\n 22764: a1 = u64 [s1 + 0x20]\n 22767: a2 = a0 + 0x700\n 22771: u64 [a2 + 0xc8] = a1\n 22775: a1 = u64 [s1 + 0x78]\n 22778: u64 [a2 + 0xe8] = a1\n 22782: a3 = s1 + 0x1078\n 22786: a1 = u64 [s1 + 0x50]\n 22789: u64 [a3 + 0x8] = a1\n 22792: a1 = u64 [s1 + 0x28]\n 22795: u64 [a2 + 0xd0] = a1\n 22799: a1 = u64 [s1 + 0x40]\n 22802: u64 [a2 + 0xf0] = a1\n 22806: a1 = u64 [s1 + 0x60]\n 22809: u64 [a3 + 0x10] = a1\n 22812: a1 = u64 [s1 + 0x30]\n 22815: u64 [a2 + 0xd8] = a1\n 22819: a1 = u64 [s1 + 0x48]\n 22822: u64 [a2 + 0xf8] = a1\n 22826: a1 = u64 [s1 + 0x68]\n 22829: u64 [a3 + 0x18] = a1\n 22832: a1 = u64 [s1 + 0x38]\n 22835: u64 [a2 + 0xe0] = a1\n 22839: a0 = u64 [s1 + 0x58]\n 22842: u64 [a3] = a0\n 22844: a0 = s1 + 0x1080\n 22848: a1 = s1 + 0x1060\n 22852: a2 = s1 + 0x1040\n 22856: a4 = u64 [s1 + 0x70]\n 22859: u64 [a3 + 0x20] = a4\n 22862: ra = 794, jump @1081\n      : @836 [@dyn 397] (gas: 6)\n 22868: a1 = 0x20160\n 22873: i32 a1 = a1 + 0\n 22875: a0 = 0\n 22877: a2 = 0\n 22879: ecalli 14 // 'seal_return'\n 22881: jump @1011\n      : @837 (gas: 2)\n 22884: u64 [s1 + 184] = 0\n 22888: fallthrough\n      : @838 (gas: 6)\n 22889: a0 = u64 [s1 + 0xd8]\n 22893: a0 = a0 << 0x1\n 22896: a1 = u64 [s1 + 0xb8]\n 22900: a0 = a0 | a1\n 22903: u64 [s1 + 0xe8] = a0\n 22907: fallthrough\n      : @839 (gas: 3)\n 22908: a0 = u64 [s1 + 0xe8]\n 22912: a1 = u64 [s1 + 0x70]\n 22915: jump @944 if a1 != a0\n      : @840 (gas: 9)\n 22919: a0 = 0x30160\n 22924: u64 [s1 + 0xe0] = a0\n 22928: i32 a0 = a0 + 0\n 22930: u64 [s1 + 0xb8] = a0\n 22934: ra = 0x31c\n 22938: ecalli 4 // 'caller'\n 22940: a2 = u64 [s1 + 0xe0]\n 22944: t0 = 0x31e\n 22948: jump @1240\n      : @841 [@dyn 398] (gas: 2)\n 22951: a2 = u64 [s1 + 0xe0]\n 22955: t0 = 798, jump @1240\n      : @842 [@dyn 399] (gas: 8)\n 22961: u64 [a2 + 1024] = 0\n 22965: a4 = a2 + 0x300\n 22969: u64 [a4 + 0xf8] = a1\n 22973: u64 [a4 + 0xf0] = a0\n 22977: a1 = s1 + 0x1460\n 22981: u64 [a4 + 0xe8] = a3\n 22985: a0 = 0\n 22987: ra = 800, jump @9\n      : @843 [@dyn 400] (gas: 3)\n 22993: t0 = 0x322\n 22997: a1 = s1 + 0x1078\n 23001: fallthrough\n      : @844 [@dyn 401] (gas: 8)\n 23002: u64 [a1 + 992] = 0\n 23006: u64 [a1 + 984] = 0\n 23010: u64 [a1 + 968] = 0x3\n 23015: a2 = a1\n 23017: a0 = 0x20\n 23020: a1 = s1 + 0x1440\n 23024: u64 [a2 + 976] = 0\n 23028: ra = 804, jump @9\n      : @845 [@dyn 402] (gas: 4)\n 23034: a0 = 0x20150\n 23039: u64 [s1 + 0xf8] = a0\n 23043: a0 = i32 [0x20150]\n 23048: jump @847 if a0 >u 63\n      : @846 (gas: 3)\n 23052: a1 = u64 [s1 + 0xf8]\n 23056: u32 [a1 + 0] = 0x40\n 23059: fallthrough\n      : @847 (gas: 13)\n 23060: a0 = sp + 0xffffffffffffffe0\n 23063: a2 = a0 & 0xffffffffffffffe0\n 23066: u64 [s1 + 0xd8] = a2\n 23070: sp = a2\n 23072: a0 = 0x20160\n 23077: i32 a0 = a0 + 0\n 23079: i32 a2 = a2 + 0\n 23081: a1 = 0x40\n 23084: u64 [s1 + 0xf0] = a0\n 23088: ra = 0x326\n 23092: ecalli 9 // 'hash_keccak_256'\n 23094: t0 = 0x328\n 23098: jump @1265\n      : @848 [@dyn 403] (gas: 1)\n 23101: t0 = 808, jump @1265\n      : @849 [@dyn 404] (gas: 12)\n 23107: a0 = u64 [s1 + 0x78]\n 23110: a0 = a0 << 0x20\n 23113: a2 = a0 >> 0x20\n 23116: a0 = s1 + 0x1078\n 23120: u64 [a0 + 960] = 0\n 23124: u64 [a0 + 952] = 0\n 23128: u64 [a0 + 944] = 0\n 23132: a1 = s1 + 0x1420\n 23136: u64 [s1 + 0xb0] = a2\n 23140: u64 [a0 + 0x3a8] = a2\n 23144: a0 = 0\n 23146: ra = 810, jump @9\n      : @850 [@dyn 405] (gas: 14)\n 23152: a0 = u64 [s1 + 0xc0]\n 23156: a1 = s1 + 0x1078\n 23160: a2 = a1 + 0x300\n 23164: u64 [a2 + 0xa0] = a0\n 23168: a0 = u64 [s1 + 0xc8]\n 23172: u64 [a2 + 0x98] = a0\n 23176: a0 = u64 [s1 + 0xd0]\n 23180: u64 [a2 + 0x90] = a0\n 23184: a3 = a1\n 23186: a0 = 0x20\n 23189: a1 = s1 + 0x1400\n 23193: a2 = u64 [s1 + 0xd8]\n 23197: u64 [a3 + 0x388] = a2\n 23201: ra = 812, jump @9\n      : @851 [@dyn 406] (gas: 3)\n 23207: a0 = u64 [s1 + 0xf8]\n 23211: a0 = i32 [a0]\n 23213: jump @853 if a0 >u 63\n      : @852 (gas: 3)\n 23217: a0 = u64 [s1 + 0xf8]\n 23221: u32 [a0 + 0] = 0x40\n 23224: fallthrough\n      : @853 (gas: 4)\n 23225: a0 = sp + 0xffffffffffffffe0\n 23228: a0 = a0 & 0xffffffffffffffe0\n 23231: u64 [s1 + 0xd8] = a0\n 23235: t0 = 814, jump @1259\n      : @854 [@dyn 407] (gas: 4)\n 23241: ra = 0x330\n 23245: ecalli 9 // 'hash_keccak_256'\n 23247: t0 = 0x332\n 23251: jump @1251\n      : @855 [@dyn 408] (gas: 1)\n 23254: t0 = 818, jump @1251\n      : @856 [@dyn 409] (gas: 8)\n 23260: a5 = a1 + 0x300\n 23264: u64 [a5 + 0xc8] = a3\n 23268: u64 [a5 + 0xd0] = a2\n 23272: u64 [a5 + 0xd8] = a4\n 23276: u64 [a5 + 0xe0] = a0\n 23280: a0 = s1 + 0x13e0\n 23284: a1 = s1 + 0x2440\n 23288: ra = 820, jump @11\n      : @857 [@dyn 410] (gas: 4)\n 23294: a0 = s1 + 0x1078\n 23298: a0 = u64 [a0 + 0x368]\n 23302: a0 = a0 & 0xffffffffffffffff\n 23305: jump @949 if a0 == 0\n      : @858 (gas: 3)\n 23309: a0 = s1 + 0x1078\n 23313: a0 = u8 [a0 + 0x370]\n 23317: jump @949 if a0 != 0\n      : @859 (gas: 7)\n 23321: a1 = u64 [s1 + 0xb0]\n 23325: a0 = a1 <u 0x100\n 23329: u64 [s1 + 0xa8] = a0\n 23333: i32 a2 = a1 + 0xffffffffffffff80\n 23336: a0 = 0x1\n 23339: a1 = 0\n 23341: ra = 822, jump @1298\n      : @860 [@dyn 411] (gas: 7)\n 23347: u64 [s1 + 0xd8] = a0\n 23351: u64 [s1 + 0xd0] = a1\n 23355: a1 = u64 [s1 + 0xb0]\n 23359: i32 a2 = 0x80 - a1\n 23363: a0 = 0x1\n 23366: a1 = 0\n 23368: ra = 824, jump @1293\n      : @861 [@dyn 412] (gas: 15)\n 23374: a2 = u64 [s1 + 0xb0]\n 23378: a3 = a2 <u 0x80\n 23382: u64 [s1 + 0xc0] = a3\n 23386: a4 = u64 [s1 + 0xd8]\n 23390: a0 = a4 if a3 == 0\n 23393: a0 = 0 if a2 == 0\n 23395: u64 [s1 + 0xd8] = a0\n 23399: a0 = u64 [s1 + 0xd0]\n 23403: a1 = a0 if a3 == 0\n 23406: a1 = 0 if a2 == 0\n 23408: u64 [s1 + 0xd0] = a1\n 23412: i32 a2 = a2 + 0\n 23414: a0 = 0x1\n 23417: a1 = 0\n 23419: ra = 826, jump @1298\n      : @862 [@dyn 413] (gas: 11)\n 23425: a2 = u64 [s1 + 0xc0]\n 23429: a0 = 0 if a2 == 0\n 23431: u64 [s1 + 0xc8] = a0\n 23435: a1 = 0 if a2 == 0\n 23437: u64 [s1 + 0xc0] = a1\n 23441: a0 = u64 [s1 + 0xb8]\n 23445: ra = 0x33c\n 23449: ecalli 4 // 'caller'\n 23451: a2 = u64 [s1 + 0xe0]\n 23455: t0 = 0x33e\n 23459: jump @1240\n      : @863 [@dyn 414] (gas: 2)\n 23462: a2 = u64 [s1 + 0xe0]\n 23466: t0 = 830, jump @1240\n      : @864 [@dyn 415] (gas: 8)\n 23472: u64 [a2 + 832] = 0\n 23476: a4 = a2 + 0x300\n 23480: u64 [a4 + 0x38] = a1\n 23483: u64 [a4 + 0x30] = a0\n 23486: a1 = s1 + 0x13a0\n 23490: u64 [a4 + 0x28] = a3\n 23493: a0 = 0\n 23495: ra = 832, jump @9\n      : @865 [@dyn 416] (gas: 3)\n 23501: t0 = 0x342\n 23505: a1 = s1 + 0x1078\n 23509: fallthrough\n      : @866 [@dyn 417] (gas: 8)\n 23510: u64 [a1 + 800] = 0\n 23514: u64 [a1 + 792] = 0\n 23518: u64 [a1 + 776] = 0x5\n 23523: a2 = a1\n 23525: a0 = 0x20\n 23528: a1 = s1 + 0x1380\n 23532: u64 [a2 + 784] = 0\n 23536: ra = 836, jump @9\n      : @867 [@dyn 418] (gas: 3)\n 23542: a0 = u64 [s1 + 0xf8]\n 23546: a0 = i32 [a0]\n 23548: jump @869 if a0 >u 63\n      : @868 (gas: 3)\n 23552: a1 = u64 [s1 + 0xf8]\n 23556: u32 [a1 + 0] = 0x40\n 23559: fallthrough\n      : @869 (gas: 17)\n 23560: a0 = u64 [s1 + 0xc0]\n 23564: a1 = u64 [s1 + 0xa8]\n 23568: a0 = 0 if a1 == 0\n 23570: u64 [s1 + 0xc0] = a0\n 23574: a0 = u64 [s1 + 0xc8]\n 23578: a0 = 0 if a1 == 0\n 23580: u64 [s1 + 0xc8] = a0\n 23584: a0 = u64 [s1 + 0xd0]\n 23588: a0 = 0 if a1 == 0\n 23590: u64 [s1 + 0xd0] = a0\n 23594: a0 = u64 [s1 + 0xd8]\n 23598: a0 = 0 if a1 == 0\n 23600: u64 [s1 + 0xd8] = a0\n 23604: a0 = sp + 0xffffffffffffffe0\n 23607: a0 = a0 & 0xffffffffffffffe0\n 23610: u64 [s1 + 0xa8] = a0\n 23614: t0 = 838, jump @1259\n      : @870 [@dyn 419] (gas: 4)\n 23620: ra = 0x348\n 23624: ecalli 9 // 'hash_keccak_256'\n 23626: t0 = 0x34a\n 23630: jump @1243\n      : @871 [@dyn 420] (gas: 1)\n 23633: t0 = 842, jump @1243\n      : @872 [@dyn 421] (gas: 8)\n 23639: u64 [a2 + 768] = 0\n 23643: u64 [a2 + 760] = 0\n 23647: u64 [a2 + 752] = 0\n 23651: a1 = s1 + 0x1360\n 23655: a0 = u64 [s1 + 0xe8]\n 23659: u64 [a2 + 0x2e8] = a0\n 23663: a0 = 0\n 23665: ra = 844, jump @9\n      : @873 [@dyn 422] (gas: 14)\n 23671: a0 = u64 [s1 + 0x88]\n 23675: a1 = s1 + 0x1078\n 23679: a2 = a1 + 0x200\n 23683: u64 [a2 + 0xe0] = a0\n 23687: a0 = u64 [s1 + 0x90]\n 23691: u64 [a2 + 0xd8] = a0\n 23695: a0 = u64 [s1 + 0x98]\n 23699: u64 [a2 + 0xd0] = a0\n 23703: a3 = a1\n 23705: a0 = 0x20\n 23708: a1 = s1 + 0x1340\n 23712: a2 = u64 [s1 + 0xa0]\n 23716: u64 [a3 + 0x2c8] = a2\n 23720: ra = 846, jump @9\n      : @874 [@dyn 423] (gas: 3)\n 23726: a0 = u64 [s1 + 0xf8]\n 23730: a0 = i32 [a0]\n 23732: jump @876 if a0 >u 63\n      : @875 (gas: 3)\n 23736: a0 = u64 [s1 + 0xf8]\n 23740: u32 [a0 + 0] = 0x40\n 23743: fallthrough\n      : @876 (gas: 4)\n 23744: a0 = sp + 0xffffffffffffffe0\n 23747: a0 = a0 & 0xffffffffffffffe0\n 23750: u64 [s1 + 0xa0] = a0\n 23754: t0 = 848, jump @1259\n      : @877 [@dyn 424] (gas: 5)\n 23760: ra = 0x352\n 23764: ecalli 9 // 'hash_keccak_256'\n 23766: a3 = u64 [s1 + 0xa0]\n 23770: t0 = 0x354\n 23774: jump @1249\n      : @878 [@dyn 425] (gas: 2)\n 23777: a3 = u64 [s1 + 0xa0]\n 23781: t0 = 852, jump @1249\n      : @879 [@dyn 426] (gas: 3)\n 23787: i32 a0 = a0 + 0x320\n 23791: a0 = a0 + s1\n 23794: ra = 854, jump @11\n      : @880 [@dyn 427] (gas: 7)\n 23800: a3 = s1 + 0x1078\n 23804: a4 = a3 + 0x200\n 23808: a0 = u64 [a4 + 0xb8]\n 23812: a1 = u64 [a4 + 0xa8]\n 23816: a2 = u64 [a4 + 0xc0]\n 23820: a3 = u64 [a4 + 0xb0]\n 23824: t0 = 856, jump @1285\n      : @881 [@dyn 428] (gas: 1)\n 23830: jump @951 if a0 == 0\n      : @882 (gas: 6)\n 23834: a0 = u64 [s1 + 0xb8]\n 23838: ra = 0x35a\n 23842: ecalli 4 // 'caller'\n 23844: a2 = u64 [s1 + 0xe0]\n 23848: t0 = 0x35c\n 23852: jump @1240\n      : @883 [@dyn 429] (gas: 2)\n 23855: a2 = u64 [s1 + 0xe0]\n 23859: t0 = 860, jump @1240\n      : @884 [@dyn 430] (gas: 8)\n 23865: u64 [a2 + 672] = 0\n 23869: a4 = a2 + 0x200\n 23873: u64 [a4 + 0x98] = a1\n 23877: u64 [a4 + 0x90] = a0\n 23881: a1 = s1 + 0x1300\n 23885: u64 [a4 + 0x88] = a3\n 23889: a0 = 0\n 23891: ra = 862, jump @9\n      : @885 [@dyn 431] (gas: 3)\n 23897: t0 = 0x360\n 23901: a1 = s1 + 0x1078\n 23905: fallthrough\n      : @886 [@dyn 432] (gas: 8)\n 23906: u64 [a1 + 640] = 0\n 23910: u64 [a1 + 632] = 0\n 23914: u64 [a1 + 616] = 0x6\n 23919: a2 = a1\n 23921: a0 = 0x20\n 23924: a1 = s1 + 0x12e0\n 23928: u64 [a2 + 624] = 0\n 23932: ra = 866, jump @9\n      : @887 [@dyn 433] (gas: 3)\n 23938: a0 = u64 [s1 + 0xf8]\n 23942: a0 = i32 [a0]\n 23944: jump @889 if a0 >u 63\n      : @888 (gas: 3)\n 23948: a1 = u64 [s1 + 0xf8]\n 23952: u32 [a1 + 0] = 0x40\n 23955: fallthrough\n      : @889 (gas: 4)\n 23956: a0 = sp + 0xffffffffffffffe0\n 23959: a0 = a0 & 0xffffffffffffffe0\n 23962: u64 [s1 + 0xa8] = a0\n 23966: t0 = 868, jump @1259\n      : @890 [@dyn 434] (gas: 4)\n 23972: ra = 0x366\n 23976: ecalli 9 // 'hash_keccak_256'\n 23978: t0 = 0x368\n 23982: jump @1243\n      : @891 [@dyn 435] (gas: 1)\n 23985: t0 = 872, jump @1243\n      : @892 [@dyn 436] (gas: 8)\n 23991: u64 [a2 + 608] = 0\n 23995: u64 [a2 + 600] = 0\n 23999: u64 [a2 + 592] = 0\n 24003: a1 = s1 + 0x12c0\n 24007: a0 = u64 [s1 + 0xe8]\n 24011: u64 [a2 + 0x248] = a0\n 24015: a0 = 0\n 24017: ra = 874, jump @9\n      : @893 [@dyn 437] (gas: 14)\n 24023: a0 = u64 [s1 + 0x88]\n 24027: a1 = s1 + 0x1078\n 24031: a2 = a1 + 0x200\n 24035: u64 [a2 + 0x40] = a0\n 24038: a0 = u64 [s1 + 0x90]\n 24042: u64 [a2 + 0x38] = a0\n 24045: a0 = u64 [s1 + 0x98]\n 24049: u64 [a2 + 0x30] = a0\n 24052: a3 = a1\n 24054: a0 = 0x20\n 24057: a1 = s1 + 0x12a0\n 24061: a2 = u64 [s1 + 0xa0]\n 24065: u64 [a3 + 0x228] = a2\n 24069: ra = 876, jump @9\n      : @894 [@dyn 438] (gas: 3)\n 24075: a0 = u64 [s1 + 0xf8]\n 24079: a0 = i32 [a0]\n 24081: jump @896 if a0 >u 63\n      : @895 (gas: 3)\n 24085: a0 = u64 [s1 + 0xf8]\n 24089: u32 [a0 + 0] = 0x40\n 24092: fallthrough\n      : @896 (gas: 4)\n 24093: a0 = sp + 0xffffffffffffffe0\n 24096: a0 = a0 & 0xffffffffffffffe0\n 24099: u64 [s1 + 0xa0] = a0\n 24103: t0 = 878, jump @1259\n      : @897 [@dyn 439] (gas: 5)\n 24109: ra = 0x370\n 24113: ecalli 9 // 'hash_keccak_256'\n 24115: a3 = u64 [s1 + 0xa0]\n 24119: t0 = 0x372\n 24123: jump @1249\n      : @898 [@dyn 440] (gas: 2)\n 24126: a3 = u64 [s1 + 0xa0]\n 24130: t0 = 882, jump @1249\n      : @899 [@dyn 441] (gas: 3)\n 24136: i32 a0 = a0 + 0x280\n 24140: a0 = a0 + s1\n 24143: ra = 884, jump @11\n      : @900 [@dyn 442] (gas: 7)\n 24149: a3 = s1 + 0x1078\n 24153: a4 = a3 + 0x200\n 24157: a0 = u64 [a4 + 0x18]\n 24160: a1 = u64 [a4 + 0x8]\n 24163: a2 = u64 [a4 + 0x20]\n 24166: a3 = u64 [a4 + 0x10]\n 24169: t0 = 886, jump @1285\n      : @901 [@dyn 443] (gas: 1)\n 24175: jump @955 if a0 == 0\n      : @902 (gas: 3)\n 24179: t0 = 0x378\n 24183: a2 = s1 + 0x1078\n 24187: fallthrough\n      : @903 [@dyn 444] (gas: 9)\n 24188: u64 [a2 + 504] = 0\n 24192: u64 [a2 + 496] = 0\n 24196: a0 = 0xc98289f000000000\n 24206: u64 [a2 + 0x200] = a0\n 24210: a1 = s1 + 0x1260\n 24214: u64 [a2 + 488] = 0\n 24218: a0 = 0\n 24220: ra = 0x3b2\n 24224: jump @9\n      : @904 (gas: 1)\n 24227: jump @978 if a0 != 1081252952\n      : @905 (gas: 11)\n 24235: a0 = s1 + 0x1878\n 24239: u64 [a0 + 1824] = 0\n 24243: u64 [a0 + 1816] = 0\n 24247: u64 [a0 + 1808] = 0\n 24251: u64 [a0 + 1800] = 0\n 24255: a0 = s1 + 0x2000\n 24259: i32 a0 = a0 + 0xffffffffffffff80\n 24262: ra = 0x37a\n 24266: ecalli 17 // 'value_transferred'\n 24268: t0 = 0x37c\n 24272: jump @1287\n      : @906 [@dyn 445] (gas: 1)\n 24275: t0 = 892, jump @1287\n      : @907 [@dyn 446] (gas: 1)\n 24281: t0 = 894, jump @1291\n      : @908 [@dyn 447] (gas: 1)\n 24287: jump @984 if a0 == 0\n      : @909 (gas: 6)\n 24291: a1 = 0x20160\n 24296: i32 a1 = a1 + 0\n 24298: a0 = 0x1\n 24301: a2 = 0\n 24303: ecalli 14 // 'seal_return'\n 24305: jump @1011\n      : @910 (gas: 3)\n 24308: a0 = u64 [s1 + 0xf8]\n 24312: a0 = i32 [a0]\n 24314: jump @986 if a0 >u 35\n      : @911 (gas: 6)\n 24319: a1 = 0x20160\n 24324: i32 a1 = a1 + 0\n 24326: a0 = 0x1\n 24329: a2 = 0\n 24331: ecalli 14 // 'seal_return'\n 24333: jump @1011\n      : @912 (gas: 4)\n 24336: a0 = s1 + 0x1de0\n 24340: ra = 0x380\n 24344: t0 = 0x416\n 24348: jump @1286\n      : @913 [@dyn 448] (gas: 16)\n 24351: a1 = s1 + 0x1878\n 24355: a2 = a1 + 0x500\n 24359: a0 = u64 [a2 + 0x78]\n 24362: u64 [s1 + 0xe0] = a0\n 24366: a0 = u64 [a2 + 0x70]\n 24369: u64 [s1 + 0xf8] = a0\n 24373: a0 = u64 [a2 + 0x68]\n 24376: u64 [s1 + 0xf0] = a0\n 24380: a1 = s1 + 0x2078\n 24384: u64 [a1 + 1568] = 0\n 24388: u64 [a1 + 1560] = 0\n 24392: u64 [a1 + 1552] = 0\n 24396: u64 [a1 + 1544] = 0x1\n 24401: a0 = s1 + 0x1dc0\n 24405: a1 = s1 + 0x2680\n 24409: ra = 898, jump @11\n      : @914 [@dyn 449] (gas: 18)\n 24415: a1 = s1 + 0x1878\n 24419: a2 = a1 + 0x500\n 24423: a0 = u64 [a2 + 0x60]\n 24426: u64 [s1 + 0xe8] = a0\n 24430: a0 = u64 [a2 + 0x58]\n 24433: u64 [s1 + 0xc8] = a0\n 24437: a0 = u64 [a2 + 0x50]\n 24440: u64 [s1 + 0xd8] = a0\n 24444: a0 = u64 [a2 + 0x48]\n 24447: u64 [s1 + 0xd0] = a0\n 24451: a0 = 0x30160\n 24456: u64 [s1 + 0xc0] = a0\n 24460: i32 a0 = a0 + 0\n 24462: ra = 0x384\n 24466: ecalli 4 // 'caller'\n 24468: a2 = u64 [s1 + 0xc0]\n 24472: t0 = 0x386\n 24476: jump @1261\n      : @915 [@dyn 450] (gas: 2)\n 24479: a2 = u64 [s1 + 0xc0]\n 24483: t0 = 902, jump @1261\n      : @916 [@dyn 451] (gas: 12)\n 24489: a2 = u64 [s1 + 0xc8]\n 24493: a4 = a2\n 24495: a2 = a2 << 0x20\n 24498: a2 = a2 >> 0x20\n 24501: a1 = a1 ^ a2\n 24504: a2 = u64 [s1 + 0xd0]\n 24508: a0 = a0 ^ a2\n 24511: a0 = a0 | a1\n 24514: a1 = u64 [s1 + 0xd8]\n 24518: a1 = a1 ^ a3\n 24521: a0 = a0 | a1\n 24524: jump @998 if a0 != 0\n      : @917 (gas: 8)\n 24528: a0 = u64 [s1 + 0xe0]\n 24532: a0 = a0 << 0x20\n 24535: a0 = a0 >> 0x20\n 24538: a1 = u64 [s1 + 0xf8]\n 24542: a2 = u64 [s1 + 0xf0]\n 24546: a1 = a1 | a2\n 24549: a1 = a1 | a0\n 24552: jump @1003 if a1 == 0\n      : @918 (gas: 19)\n 24556: a1 = a4 >> 0x20\n 24559: a1 = a1 << 0x20\n 24562: a0 = a0 | a1\n 24565: a2 = s1 + 0x2078\n 24569: u64 [a2 + 1600] = 0\n 24573: u64 [a2 + 1592] = 0\n 24577: u64 [a2 + 1584] = 0\n 24581: a3 = a2 + 0x600\n 24585: u64 [a3 + 40] = 0x1\n 24589: a1 = u64 [s1 + 0xf0]\n 24593: u64 [a3 + 0x48] = a1\n 24596: a1 = u64 [s1 + 0xf8]\n 24600: u64 [a3 + 0x50] = a1\n 24603: a1 = u64 [s1 + 0xe8]\n 24607: u64 [a3 + 0x60] = a1\n 24610: u64 [a3 + 0x58] = a0\n 24613: a0 = s1 + 0x26a0\n 24617: a1 = s1 + 0x26c0\n 24621: ra = 904, jump @12\n      : @919 [@dyn 452] (gas: 6)\n 24627: a1 = 0x20160\n 24632: i32 a1 = a1 + 0\n 24634: a0 = 0\n 24636: a2 = 0\n 24638: ecalli 14 // 'seal_return'\n 24640: jump @1011\n      : @920 (gas: 3)\n 24643: t0 = 0x38a\n 24647: a2 = s1 + 0x1078\n 24651: fallthrough\n      : @921 [@dyn 453] (gas: 9)\n 24652: u64 [a2 + 1432] = 0\n 24656: u64 [a2 + 1424] = 0\n 24660: a0 = 0xa7a9536d00000000\n 24670: u64 [a2 + 0x5a0] = a0\n 24674: a1 = s1 + 0x1600\n 24678: u64 [a2 + 1416] = 0\n 24682: a0 = 0\n 24684: ra = 0x3b2\n 24688: jump @9\n      : @922 (gas: 15)\n 24691: a2 = 0xffffffff\n 24701: u64 [s1 + 0xc8] = a2\n 24705: a3 = s1 + 0x1078\n 24709: a2 = u64 [a3 + 0x6b8]\n 24713: a3 = u64 [a3 + 0x6c0]\n 24717: a1 = a1 | 0x1\n 24720: a4 = s1 + 0x2078\n 24724: a5 = a4 + 0x400\n 24728: u64 [a5 + 0x48] = a0\n 24731: u64 [a5 + 0x58] = a2\n 24734: u64 [a5 + 0x50] = a1\n 24737: u64 [a5 + 0x60] = a3\n 24740: a1 = s1 + 0x24c0\n 24744: a0 = u64 [s1 + 0xe0]\n 24748: ra = 908, jump @12\n      : @923 [@dyn 454] (gas: 6)\n 24754: a0 = u64 [s1 + 0xd8]\n 24758: ra = 0x38e\n 24762: ecalli 4 // 'caller'\n 24764: a2 = u64 [s1 + 0xe8]\n 24768: t0 = 0x390\n 24772: jump @1240\n      : @924 [@dyn 455] (gas: 2)\n 24775: a2 = u64 [s1 + 0xe8]\n 24779: t0 = 912, jump @1240\n      : @925 [@dyn 456] (gas: 8)\n 24785: u64 [a2 + 1664] = 0\n 24789: a4 = a2 + 0x600\n 24793: u64 [a4 + 0x78] = a1\n 24796: u64 [a4 + 0x70] = a0\n 24799: a1 = s1 + 0x16e0\n 24803: u64 [a4 + 0x68] = a3\n 24806: a0 = 0\n 24808: ra = 914, jump @9\n      : @926 [@dyn 457] (gas: 3)\n 24814: t0 = 0x394\n 24818: a1 = s1 + 0x1078\n 24822: fallthrough\n      : @927 [@dyn 458] (gas: 8)\n 24823: u64 [a1 + 1632] = 0\n 24827: u64 [a1 + 1624] = 0\n 24831: u64 [a1 + 1608] = 0x2\n 24836: a2 = a1\n 24838: a0 = 0x20\n 24841: a1 = s1 + 0x16c0\n 24845: u64 [a2 + 1616] = 0\n 24849: ra = 918, jump @9\n      : @928 [@dyn 459] (gas: 7)\n 24855: a0 = sp + 0xffffffffffffffe0\n 24858: a0 = a0 & 0xffffffffffffffe0\n 24861: u64 [s1 + 0xe0] = a0\n 24865: sp = a0\n 24867: a0 = u64 [s1 + 0xf8]\n 24871: a0 = i32 [a0]\n 24873: jump @930 if a0 >u 63\n      : @929 (gas: 3)\n 24877: a1 = u64 [s1 + 0xf8]\n 24881: u32 [a1 + 0] = 0x40\n 24884: fallthrough\n      : @930 (gas: 4)\n 24885: a0 = sp + 0xffffffffffffffe0\n 24888: a0 = a0 & 0xffffffffffffffe0\n 24891: u64 [s1 + 0xf8] = a0\n 24895: t0 = 920, jump @1259\n      : @931 [@dyn 460] (gas: 5)\n 24901: ra = 0x39a\n 24905: ecalli 9 // 'hash_keccak_256'\n 24907: a3 = u64 [s1 + 0xf8]\n 24911: t0 = 0x39c\n 24915: jump @1253\n      : @932 [@dyn 461] (gas: 2)\n 24918: a3 = u64 [s1 + 0xf8]\n 24922: t0 = 924, jump @1253\n      : @933 [@dyn 462] (gas: 7)\n 24928: a1 = u64 [s1 + 0xe0]\n 24932: u64 [a1] = a4\n 24934: u64 [a1 + 0x8] = a5\n 24937: u64 [a1 + 0x10] = a2\n 24940: u64 [a1 + 0x18] = a0\n 24943: a0 = s1 + 0x16a0\n 24947: ra = 926, jump @11\n      : @934 [@dyn 463] (gas: 9)\n 24953: a0 = s1 + 0x1078\n 24957: a0 = u64 [a0 + 0x628]\n 24961: a1 = u64 [s1 + 0xc8]\n 24965: a0 = a0 + a1\n 24968: a0 = a0 & a1\n 24971: u64 [s1 + 0xf8] = a0\n 24975: a0 = s1 + 0x1680\n 24979: a1 = u64 [s1 + 0xe0]\n 24983: ra = 928, jump @11\n      : @935 [@dyn 464] (gas: 18)\n 24989: a3 = s1 + 0x1078\n 24993: a0 = u32 [a3 + 0x60c]\n 24997: a0 = a0 << 0x20\n 25000: a4 = a3 + 0x600\n 25004: a1 = u64 [a4 + 0x20]\n 25007: a2 = u64 [a4 + 0x18]\n 25010: a3 = u64 [a4 + 0x10]\n 25013: a4 = u64 [s1 + 0xf8]\n 25017: a0 = a0 | a4\n 25020: a4 = s1 + 0x2078\n 25024: a5 = a4 + 0x400\n 25028: u64 [a5 + 0x80] = a1\n 25032: u64 [a5 + 0x78] = a2\n 25035: u64 [a5 + 0x70] = a3\n 25038: u64 [a5 + 0x68] = a0\n 25041: a1 = s1 + 0x24e0\n 25045: a0 = u64 [s1 + 0xe0]\n 25049: ra = 930, jump @12\n      : @936 [@dyn 465] (gas: 6)\n 25055: a0 = u64 [s1 + 0xd8]\n 25059: ra = 0x3a4\n 25063: ecalli 4 // 'caller'\n 25065: a2 = u64 [s1 + 0xe8]\n 25069: t0 = 0x3a6\n 25073: jump @1257\n      : @937 [@dyn 466] (gas: 2)\n 25076: a2 = u64 [s1 + 0xe8]\n 25080: t0 = 934, jump @1257\n      : @938 [@dyn 467] (gas: 31)\n 25086: t0 = a1 | a0\n 25089: a3 = a3 >> 0x20\n 25092: a2 = reverse a2\n 25094: a1 = a2 << 0x20\n 25097: a1 = a1 | a3\n 25100: a2 = a2 >> 0x20\n 25103: a3 = u64 [s1 + 0xd0]\n 25107: a0 = s1 + 0x1078\n 25111: u64 [a0 + 0x5a8] = a3\n 25115: a3 = u64 [0x20040]\n 25120: a4 = u64 [0x20048]\n 25125: a5 = u64 [0x20050]\n 25130: u64 [a0 + 0x600] = a3\n 25134: u64 [a0 + 0x5f8] = a4\n 25138: u64 [a0 + 1472] = 0\n 25142: a4 = a0 + 0x500\n 25146: u64 [a4 + 0xf0] = a5\n 25150: a3 = u64 [0x20058]\n 25155: u64 [a0 + 1464] = 0\n 25159: u64 [a0 + 1456] = 0\n 25163: u64 [a0 + 1504] = 0\n 25167: u64 [a4 + 0xe8] = a3\n 25171: u64 [a4 + 0xd8] = a2\n 25175: u64 [a4 + 0xd0] = a1\n 25179: a2 = s1 + 0x1660\n 25183: a3 = s1 + 0x1640\n 25187: a4 = s1 + 0x1620\n 25191: u64 [a0 + 0x5c8] = t0\n 25195: a0 = 0\n 25197: a1 = 0\n 25199: ra = 936, jump @14\n      : @939 [@dyn 468] (gas: 1)\n 25205: jump @977\n      : @940 (gas: 9)\n 25208: a2 = s1 + 0x1078\n 25212: u64 [a2 + 56] = 0\n 25215: u64 [a2 + 48] = 0\n 25218: a0 = 0xcf114bd900000000\n 25228: u64 [a2 + 0x40] = a0\n 25231: a1 = s1 + 0x10a0\n 25235: u64 [a2 + 40] = 0\n 25238: a0 = 0\n 25240: ra = 938, jump @9\n      : @941 [@dyn 469] (gas: 2)\n 25246: a1 = i32 [0x20150]\n 25251: jump @943 if a1 >u 31\n      : @942 (gas: 3)\n 25255: u32 [0x20150] = 0x20\n 25261: a1 = 0x20160\n 25266: jump @721\n      : @943 (gas: 2)\n 25269: a1 = 0x20160\n 25274: jump @721\n      : @944 (gas: 3)\n 25277: t0 = 0x3ac\n 25281: a2 = s1 + 0x1078\n 25285: fallthrough\n      : @945 [@dyn 470] (gas: 8)\n 25286: u64 [a2 + 1048] = 0\n 25290: u64 [a2 + 1040] = 0\n 25294: a0 = 0xd5b25b6300000000\n 25304: u64 [a2 + 0x420] = a0\n 25308: a1 = s1 + 0x1480\n 25312: u64 [a2 + 1032] = 0\n 25316: a0 = 0\n 25318: ra = 942, jump @9\n      : @946 [@dyn 471] (gas: 2)\n 25324: a1 = i32 [0x20150]\n 25329: jump @948 if a1 >u 31\n      : @947 (gas: 3)\n 25333: u32 [0x20150] = 0x20\n 25339: a1 = 0x20160\n 25344: jump @721\n      : @948 (gas: 2)\n 25347: a1 = 0x20160\n 25352: jump @721\n      : @949 (gas: 3)\n 25355: t0 = 0x3b0\n 25359: a2 = s1 + 0x1078\n 25363: fallthrough\n      : @950 [@dyn 472] (gas: 9)\n 25364: u64 [a2 + 856] = 0\n 25368: u64 [a2 + 848] = 0\n 25372: a0 = 0xa7a9536d00000000\n 25382: u64 [a2 + 0x360] = a0\n 25386: a1 = s1 + 0x13c0\n 25390: u64 [a2 + 840] = 0\n 25394: a0 = 0\n 25396: ra = 0x3b2\n 25400: jump @9\n      : @951 (gas: 9)\n 25403: a2 = s1 + 0x1078\n 25407: u64 [a2 + 184] = 0\n 25411: u64 [a2 + 176] = 0\n 25415: a0 = 0xafa4e2b600000000\n 25425: u64 [a2 + 0xc0] = a0\n 25429: a1 = s1 + 0x1120\n 25433: u64 [a2 + 168] = 0\n 25437: a0 = 0\n 25439: ra = 946, jump @9\n      : @952 [@dyn 473] (gas: 3)\n 25445: a0 = u64 [s1 + 0xf8]\n 25449: a0 = i32 [a0]\n 25451: jump @954 if a0 >u 31\n      : @953 (gas: 3)\n 25455: a1 = u64 [s1 + 0xf8]\n 25459: u32 [a1 + 0] = 0x20\n 25462: fallthrough\n      : @954 (gas: 5)\n 25463: a0 = 0x1\n 25466: a2 = 0x4\n 25469: a1 = u64 [s1 + 0xf0]\n 25473: ecalli 14 // 'seal_return'\n 25475: fallthrough\n      : @955 (gas: 6)\n 25476: a0 = u64 [s1 + 0xb8]\n 25480: ra = 0x3b4\n 25484: ecalli 4 // 'caller'\n 25486: a2 = u64 [s1 + 0xe0]\n 25490: t0 = 0x3b6\n 25494: jump @1240\n      : @956 [@dyn 474] (gas: 2)\n 25497: a2 = u64 [s1 + 0xe0]\n 25501: t0 = 950, jump @1240\n      : @957 [@dyn 475] (gas: 8)\n 25507: u64 [a2 + 480] = 0\n 25511: a4 = a2 + 0x100\n 25515: u64 [a4 + 0xd8] = a1\n 25519: u64 [a4 + 0xd0] = a0\n 25523: a1 = s1 + 0x1240\n 25527: u64 [a4 + 0xc8] = a3\n 25531: a0 = 0\n 25533: ra = 952, jump @9\n      : @958 [@dyn 476] (gas: 3)\n 25539: t0 = 0x3ba\n 25543: a1 = s1 + 0x1078\n 25547: fallthrough\n      : @959 [@dyn 477] (gas: 8)\n 25548: u64 [a1 + 448] = 0\n 25552: u64 [a1 + 440] = 0\n 25556: u64 [a1 + 424] = 0x6\n 25561: a2 = a1\n 25563: a0 = 0x20\n 25566: a1 = s1 + 0x1220\n 25570: u64 [a2 + 432] = 0\n 25574: ra = 956, jump @9\n      : @960 [@dyn 478] (gas: 3)\n 25580: a0 = u64 [s1 + 0xf8]\n 25584: a0 = i32 [a0]\n 25586: jump @962 if a0 >u 63\n      : @961 (gas: 3)\n 25590: a1 = u64 [s1 + 0xf8]\n 25594: u32 [a1 + 0] = 0x40\n 25597: fallthrough\n      : @962 (gas: 4)\n 25598: a0 = sp + 0xffffffffffffffe0\n 25601: a0 = a0 & 0xffffffffffffffe0\n 25604: u64 [s1 + 0xa8] = a0\n 25608: t0 = 958, jump @1259\n      : @963 [@dyn 479] (gas: 4)\n 25614: ra = 0x3c0\n 25618: ecalli 9 // 'hash_keccak_256'\n 25620: t0 = 0x3c2\n 25624: jump @1243\n      : @964 [@dyn 480] (gas: 1)\n 25627: t0 = 962, jump @1243\n      : @965 [@dyn 481] (gas: 8)\n 25633: u64 [a2 + 416] = 0\n 25637: u64 [a2 + 408] = 0\n 25641: u64 [a2 + 400] = 0\n 25645: a1 = s1 + 0x1200\n 25649: a0 = u64 [s1 + 0xe8]\n 25653: u64 [a2 + 0x188] = a0\n 25657: a0 = 0\n 25659: ra = 964, jump @9\n      : @966 [@dyn 482] (gas: 14)\n 25665: a0 = u64 [s1 + 0x88]\n 25669: a1 = s1 + 0x1078\n 25673: a2 = a1 + 0x100\n 25677: u64 [a2 + 0x80] = a0\n 25681: a0 = u64 [s1 + 0x90]\n 25685: u64 [a2 + 0x78] = a0\n 25688: a0 = u64 [s1 + 0x98]\n 25692: u64 [a2 + 0x70] = a0\n 25695: a3 = a1\n 25697: a0 = 0x20\n 25700: a1 = s1 + 0x11e0\n 25704: a2 = u64 [s1 + 0xa0]\n 25708: u64 [a3 + 0x168] = a2\n 25712: ra = 966, jump @9\n      : @967 [@dyn 483] (gas: 3)\n 25718: a0 = u64 [s1 + 0xf8]\n 25722: a0 = i32 [a0]\n 25724: jump @969 if a0 >u 63\n      : @968 (gas: 3)\n 25728: a0 = u64 [s1 + 0xf8]\n 25732: u32 [a0 + 0] = 0x40\n 25735: fallthrough\n      : @969 (gas: 4)\n 25736: a0 = sp + 0xffffffffffffffe0\n 25739: a0 = a0 & 0xffffffffffffffe0\n 25742: u64 [s1 + 0xf8] = a0\n 25746: t0 = 968, jump @1259\n      : @970 [@dyn 484] (gas: 5)\n 25752: ra = 0x3ca\n 25756: ecalli 9 // 'hash_keccak_256'\n 25758: a3 = u64 [s1 + 0xf8]\n 25762: t0 = 0x3cc\n 25766: jump @1249\n      : @971 [@dyn 485] (gas: 2)\n 25769: a3 = u64 [s1 + 0xf8]\n 25773: t0 = 972, jump @1249\n      : @972 [@dyn 486] (gas: 3)\n 25779: i32 a0 = a0 + 0x1c0\n 25783: a0 = a0 + s1\n 25786: ra = 974, jump @11\n      : @973 [@dyn 487] (gas: 23)\n 25792: a3 = s1 + 0x1078\n 25796: a4 = a3 + 0x100\n 25800: a0 = u64 [a4 + 0x48]\n 25803: a1 = u64 [a4 + 0x50]\n 25806: a2 = u64 [a4 + 0x58]\n 25809: a3 = u64 [a4 + 0x60]\n 25812: a4 = u64 [s1 + 0xc8]\n 25816: a0 = a0 | a4\n 25819: a4 = u64 [s1 + 0xc0]\n 25823: a1 = a1 | a4\n 25826: a4 = u64 [s1 + 0xd8]\n 25830: a2 = a2 | a4\n 25833: a4 = u64 [s1 + 0xd0]\n 25837: a3 = a3 | a4\n 25840: a4 = s1 + 0x2078\n 25844: u64 [a4 + 0x400] = a3\n 25848: a3 = a4 + 0x300\n 25852: u64 [a3 + 0xf8] = a2\n 25856: u64 [a3 + 0xf0] = a1\n 25860: u64 [a3 + 0xe8] = a0\n 25864: a1 = s1 + 0x2460\n 25868: a0 = u64 [s1 + 0xa8]\n 25872: ra = 976, jump @12\n      : @974 [@dyn 488] (gas: 6)\n 25878: a0 = u64 [s1 + 0xb8]\n 25882: ra = 0x3d2\n 25886: ecalli 4 // 'caller'\n 25888: a2 = u64 [s1 + 0xe0]\n 25892: t0 = 0x3d4\n 25896: jump @1262\n      : @975 [@dyn 489] (gas: 2)\n 25899: a2 = u64 [s1 + 0xe0]\n 25903: t0 = 980, jump @1262\n      : @976 [@dyn 490] (gas: 32)\n 25909: a5 = s1 + 0x1078\n 25913: u64 [a5 + 224] = 0\n 25917: u64 [a5 + 216] = 0\n 25921: u64 [a5 + 208] = 0\n 25925: a3 = u64 [s1 + 0xe8]\n 25929: u64 [a5 + 0xc8] = a3\n 25933: a3 = u64 [s1 + 0xb0]\n 25937: u64 [a5 + 0xe8] = a3\n 25941: a3 = u64 [0x20060]\n 25946: a4 = u64 [0x20068]\n 25951: u64 [a5 + 256] = 0\n 25955: u64 [a5 + 248] = 0\n 25959: u64 [a5 + 0x140] = a3\n 25963: u64 [a5 + 0x138] = a4\n 25967: a3 = u64 [0x20070]\n 25972: a4 = u64 [0x20078]\n 25977: u64 [a5 + 240] = 0\n 25981: u64 [a5 + 288] = 0\n 25985: u64 [a5 + 0x130] = a3\n 25989: a3 = a5 + 0x100\n 25993: u64 [a3 + 0x28] = a4\n 25996: u64 [a3 + 0x18] = a2\n 25999: u64 [a3 + 0x10] = a1\n 26002: a1 = a5\n 26004: a2 = s1 + 0x11a0\n 26008: a3 = s1 + 0x1180\n 26012: a4 = s1 + 0x1160\n 26016: a5 = s1 + 0x1140\n 26020: u64 [a1 + 0x108] = a0\n 26024: a0 = 0\n 26026: a1 = 0\n 26028: ra = 982, jump @17\n      : @977 [@dyn 491] (gas: 5)\n 26034: a0 = 0\n 26036: a1 = u64 [s1 + 0xf0]\n 26040: a2 = 0\n 26042: ecalli 14 // 'seal_return'\n 26044: jump @1011\n      : @978 (gas: 1)\n 26047: jump @1008 if a0 != 1746437986\n      : @979 (gas: 11)\n 26055: a0 = s1 + 0x2078\n 26059: u64 [a0 + 672] = 0\n 26063: u64 [a0 + 664] = 0\n 26067: u64 [a0 + 656] = 0\n 26071: u64 [a0 + 648] = 0\n 26075: a0 = s1 + 0x2000\n 26079: i32 a0 = a0 + 0x300\n 26083: ra = 0x3d8\n 26087: ecalli 17 // 'value_transferred'\n 26089: t0 = 0x3da\n 26093: jump @1272\n      : @980 [@dyn 492] (gas: 1)\n 26096: t0 = 986, jump @1272\n      : @981 [@dyn 493] (gas: 1)\n 26102: t0 = 988, jump @1279\n      : @982 [@dyn 494] (gas: 1)\n 26108: jump @1012 if a0 == 0\n      : @983 (gas: 6)\n 26112: a1 = 0x20160\n 26117: i32 a1 = a1 + 0\n 26119: a0 = 0x1\n 26122: a2 = 0\n 26124: ecalli 14 // 'seal_return'\n 26126: jump @1011\n      : @984 (gas: 3)\n 26129: a0 = u64 [s1 + 0xf8]\n 26133: a0 = i32 [a0]\n 26135: jump @1014 if a0 >u 35\n      : @985 (gas: 6)\n 26140: a1 = 0x20160\n 26145: i32 a1 = a1 + 0\n 26147: a0 = 0x1\n 26150: a2 = 0\n 26152: ecalli 14 // 'seal_return'\n 26154: jump @1011\n      : @986 (gas: 4)\n 26157: a0 = s1 + 0x180\n 26161: ra = 0x3de\n 26165: t0 = 0x416\n 26169: jump @1286\n      : @987 [@dyn 495] (gas: 10)\n 26172: a0 = u64 [s1 + 0x180]\n 26176: a1 = u64 [s1 + 0x188]\n 26180: a2 = u32 [s1 + 0x190]\n 26184: u64 [s1 + 376] = 0\n 26188: u64 [s1 + 0x170] = a2\n 26192: u64 [s1 + 0x168] = a1\n 26196: a1 = s1 + 0x160\n 26200: u64 [s1 + 0x160] = a0\n 26204: a0 = 0\n 26206: ra = 992, jump @9\n      : @988 [@dyn 496] (gas: 7)\n 26212: u64 [s1 + 344] = 0\n 26216: u64 [s1 + 336] = 0\n 26220: u64 [s1 + 320] = 0x4\n 26225: a0 = 0x20\n 26228: a1 = s1 + 0x140\n 26232: u64 [s1 + 328] = 0\n 26236: ra = 994, jump @9\n      : @989 [@dyn 497] (gas: 4)\n 26242: a0 = 0x20150\n 26247: u64 [s1 + 0xf8] = a0\n 26251: a0 = i32 [0x20150]\n 26256: jump @991 if a0 >u 63\n      : @990 (gas: 3)\n 26260: a1 = u64 [s1 + 0xf8]\n 26264: u32 [a1 + 0] = 0x40\n 26267: fallthrough\n      : @991 (gas: 14)\n 26268: a0 = sp + 0xffffffffffffffe0\n 26271: a2 = a0 & 0xffffffffffffffe0\n 26274: u64 [s1 + 0xe8] = a2\n 26278: sp = a2\n 26280: a0 = 0x20160\n 26285: u64 [s1 + 0xf0] = a0\n 26289: i32 a0 = a0 + 0\n 26291: i32 a2 = a2 + 0\n 26293: a1 = 0x40\n 26296: ra = 0x3e4\n 26300: ecalli 9 // 'hash_keccak_256'\n 26302: a3 = u64 [s1 + 0xe8]\n 26306: t0 = 0x3e6\n 26310: jump @1275\n      : @992 [@dyn 498] (gas: 2)\n 26313: a3 = u64 [s1 + 0xe8]\n 26317: t0 = 998, jump @1275\n      : @993 [@dyn 499] (gas: 10)\n 26323: i32 a4 = a4 + 0xfffffffffffff878\n 26327: a4 = a4 + s1\n 26330: u64 [a4 + 0x600] = a3\n 26334: a3 = a4 + 0x500\n 26338: u64 [a3 + 0xf8] = a2\n 26342: u64 [a3 + 0xf0] = a1\n 26346: u64 [a3 + 0xe8] = a0\n 26350: a0 = s1 + 0x120\n 26354: a1 = s1 + 0x1e60\n 26358: ra = 1000, jump @11\n      : @994 [@dyn 500] (gas: 8)\n 26364: a0 = u32 [s1 + 0x120]\n 26368: u64 [s1 + 280] = 0\n 26372: u64 [s1 + 272] = 0\n 26376: u64 [s1 + 0x100] = a0\n 26380: a0 = 0x80\n 26384: a1 = s1 + 0x100\n 26388: u64 [s1 + 264] = 0\n 26392: ra = 1002, jump @9\n      : @995 [@dyn 501] (gas: 3)\n 26398: a0 = u64 [s1 + 0xf8]\n 26402: a0 = i32 [a0]\n 26404: jump @997 if a0 >u 159\n      : @996 (gas: 5)\n 26409: a1 = u64 [s1 + 0xf8]\n 26413: u32 [a1 + 0] = 0xa0\n 26417: a0 = u64 [s1 + 0xf0]\n 26421: i32 a1 = a0 + 0x80\n 26425: jump @378\n      : @997 (gas: 3)\n 26428: a0 = u64 [s1 + 0xf0]\n 26432: i32 a1 = a0 + 0x80\n 26436: jump @378\n      : @998 (gas: 3)\n 26439: t0 = 0x3ec\n 26443: a2 = s1 + 0x1878\n 26447: fallthrough\n      : @999 [@dyn 502] (gas: 8)\n 26448: u64 [a2 + 1336] = 0\n 26452: u64 [a2 + 1328] = 0\n 26456: a0 = 0x5fc483c500000000\n 26466: u64 [a2 + 0x540] = a0\n 26470: a1 = s1 + 0x1da0\n 26474: u64 [a2 + 1320] = 0\n 26478: a0 = 0\n 26480: ra = 1006, jump @9\n      : @1000 [@dyn 503] (gas: 2)\n 26486: a1 = i32 [0x20150]\n 26491: jump @1002 if a1 >u 31\n      : @1001 (gas: 3)\n 26495: u32 [0x20150] = 0x20\n 26501: a1 = 0x20160\n 26506: jump @721\n      : @1002 (gas: 2)\n 26509: a1 = 0x20160\n 26514: jump @721\n      : @1003 (gas: 3)\n 26517: t0 = 0x3f0\n 26521: a2 = s1 + 0x1878\n 26525: fallthrough\n      : @1004 [@dyn 504] (gas: 8)\n 26526: u64 [a2 + 1304] = 0\n 26530: u64 [a2 + 1296] = 0\n 26534: a0 = 0x14bcf5c800000000\n 26544: u64 [a2 + 0x520] = a0\n 26548: a1 = s1 + 0x1d80\n 26552: u64 [a2 + 1288] = 0\n 26556: a0 = 0\n 26558: ra = 1010, jump @9\n      : @1005 [@dyn 505] (gas: 2)\n 26564: a1 = i32 [0x20150]\n 26569: jump @1007 if a1 >u 31\n      : @1006 (gas: 3)\n 26573: u32 [0x20150] = 0x20\n 26579: a1 = 0x20160\n 26584: jump @721\n      : @1007 (gas: 2)\n 26587: a1 = 0x20160\n 26592: jump @721\n      : @1008 (gas: 3)\n 26595: a0 = u64 [s1 + 0xf8]\n 26599: a0 = i32 [a0]\n 26601: fallthrough\n      : @1009 (gas: 1)\n 26602: jump @1011 if a0 == 0\n      : @1010 (gas: 6)\n 26605: a1 = 0x20160\n 26610: i32 a1 = a1 + 0\n 26612: a0 = 0x1\n 26615: a2 = 0\n 26617: ecalli 14 // 'seal_return'\n 26619: fallthrough\n      : @1011 (gas: 6)\n 26620: a1 = 0x20160\n 26625: i32 a1 = a1 + 0\n 26627: a0 = 0\n 26629: a2 = 0\n 26631: ecalli 14 // 'seal_return'\n 26633: jump @1011\n      : @1012 (gas: 3)\n 26635: a0 = u64 [s1 + 0xf8]\n 26639: a0 = i32 [a0]\n 26641: jump @1024 if a0 >u 99\n      : @1013 (gas: 6)\n 26646: a1 = 0x20160\n 26651: i32 a1 = a1 + 0\n 26653: a0 = 0x1\n 26656: a2 = 0\n 26658: ecalli 14 // 'seal_return'\n 26660: jump @1011\n      : @1014 (gas: 4)\n 26662: a0 = s1 + 0x680\n 26666: ra = 0x3f4\n 26670: t0 = 0x416\n 26674: jump @1286\n      : @1015 [@dyn 506] (gas: 14)\n 26677: a0 = u64 [s1 + 0x690]\n 26681: u64 [s1 + 0xe8] = a0\n 26685: a0 = u64 [s1 + 0x688]\n 26689: u64 [s1 + 0xf0] = a0\n 26693: a0 = u64 [s1 + 0x680]\n 26697: u64 [s1 + 0xf8] = a0\n 26701: a1 = s1 + 0x1878\n 26705: u64 [a1 + 1856] = 0\n 26709: u64 [a1 + 1848] = 0\n 26713: u64 [a1 + 1840] = 0\n 26717: u64 [a1 + 1832] = 0x1\n 26722: a0 = s1 + 0x660\n 26726: a1 = s1 + 0x1fa0\n 26730: ra = 1014, jump @11\n      : @1016 [@dyn 507] (gas: 14)\n 26736: a0 = u64 [s1 + 0x668]\n 26740: u64 [s1 + 0xe0] = a0\n 26744: a0 = u64 [s1 + 0x660]\n 26748: u64 [s1 + 0xd8] = a0\n 26752: a0 = u32 [s1 + 0x670]\n 26756: u64 [s1 + 0xd0] = a0\n 26760: a0 = 0x30160\n 26765: u64 [s1 + 0xc8] = a0\n 26769: i32 a0 = a0 + 0\n 26771: ra = 0x3f8\n 26775: ecalli 4 // 'caller'\n 26777: a2 = u64 [s1 + 0xc8]\n 26781: t0 = 0x3fa\n 26785: jump @1261\n      : @1017 [@dyn 508] (gas: 2)\n 26788: a2 = u64 [s1 + 0xc8]\n 26792: t0 = 1018, jump @1261\n      : @1018 [@dyn 509] (gas: 9)\n 26798: a2 = u64 [s1 + 0xd0]\n 26802: a1 = a1 ^ a2\n 26805: a2 = u64 [s1 + 0xd8]\n 26809: a0 = a0 ^ a2\n 26812: a0 = a0 | a1\n 26815: a1 = u64 [s1 + 0xe0]\n 26819: a1 = a1 ^ a3\n 26822: a0 = a0 | a1\n 26825: jump @1029 if a0 != 0\n      : @1019 (gas: 9)\n 26829: a0 = u64 [s1 + 0xe8]\n 26833: a0 = a0 << 0x20\n 26836: a2 = a0 >> 0x20\n 26839: a0 = u64 [s1 + 0xf8]\n 26843: a1 = u64 [s1 + 0xf0]\n 26847: a0 = a0 | a1\n 26850: u64 [s1 + 0xe8] = a2\n 26854: a0 = a0 | a2\n 26857: jump @1033 if a0 == 0\n      : @1020 (gas: 10)\n 26861: a0 = 0xffffffff\n 26871: u64 [s1 + 0xe0] = a0\n 26875: a0 = s1 + 0x1878\n 26879: u64 [a0 + 1888] = 0\n 26883: u64 [a0 + 1880] = 0\n 26887: u64 [a0 + 1872] = 0\n 26891: u64 [a0 + 1864] = 0\n 26895: a0 = s1 + 0x620\n 26899: a1 = s1 + 0x1fc0\n 26903: ra = 1020, jump @11\n      : @1021 [@dyn 510] (gas: 26)\n 26909: a1 = u64 [s1 + 0x630]\n 26913: u64 [s1 + 0xc8] = a1\n 26917: a0 = u64 [s1 + 0x628]\n 26921: u64 [s1 + 0xd8] = a0\n 26925: a0 = u64 [s1 + 0x620]\n 26929: u64 [s1 + 0xd0] = a0\n 26933: a0 = u64 [s1 + 0x638]\n 26937: a1 = a1 >> 0x20\n 26940: a1 = a1 << 0x20\n 26943: a2 = u64 [s1 + 0xe8]\n 26947: a1 = a1 | a2\n 26950: a2 = s1 + 0x1878\n 26954: u64 [a2 + 1920] = 0\n 26958: u64 [a2 + 1912] = 0\n 26962: u64 [a2 + 1904] = 0\n 26966: u64 [a2 + 1896] = 0\n 26970: a3 = u64 [s1 + 0xf0]\n 26974: a4 = a2 + 0x700\n 26978: u64 [a4 + 0x90] = a3\n 26982: a3 = u64 [s1 + 0xf8]\n 26986: u64 [a4 + 0x88] = a3\n 26990: u64 [a4 + 0xa0] = a0\n 26994: u64 [a4 + 0x98] = a1\n 26998: a0 = s1 + 0x1fe0\n 27002: a1 = s1 + 0x2000\n 27006: ra = 1022, jump @12\n      : @1022 [@dyn 511] (gas: 34)\n 27012: a0 = u64 [s1 + 0xd0]\n 27016: a0 = a0 & 0xffffffffffffffff\n 27019: a2 = u64 [s1 + 0xd8]\n 27023: a1 = a2 & 0xffffffffffffffff\n 27026: a2 = u64 [s1 + 0xe0]\n 27030: a3 = u64 [s1 + 0xc8]\n 27034: a2 = a2 & a3\n 27037: u64 [s1 + 1496] = 0\n 27041: a3 = u64 [s1 + 0xe8]\n 27045: a4 = s1 + 0x500\n 27049: u64 [a4 + 0xd0] = a3\n 27053: a3 = u64 [s1 + 0xf0]\n 27057: u64 [a4 + 0xc8] = a3\n 27061: a3 = u64 [s1 + 0xf8]\n 27065: u64 [a4 + 0xc0] = a3\n 27069: u64 [s1 + 1528] = 0\n 27073: u64 [a4 + 0xf0] = a2\n 27077: u64 [a4 + 0xe8] = a1\n 27081: a1 = u64 [0x200d8]\n 27086: a2 = u64 [0x200e0]\n 27091: a3 = u64 [0x200e8]\n 27096: u64 [a4 + 0xe0] = a0\n 27100: a5 = s1 + 0x600\n 27104: u64 [a5 + 0x18] = a1\n 27107: u64 [a5 + 0x10] = a2\n 27110: u64 [a5 + 0x8] = a3\n 27113: a0 = u64 [0x200f0]\n 27118: a2 = s1 + 0x600\n 27122: a3 = s1 + 0x5e0\n 27126: a4 = s1 + 0x5c0\n 27130: u64 [a5] = a0\n 27132: a0 = 0\n 27134: a1 = 0\n 27136: ra = 1024, jump @14\n      : @1023 [@dyn 512] (gas: 6)\n 27142: a1 = 0x20160\n 27147: i32 a1 = a1 + 0\n 27149: a0 = 0\n 27151: a2 = 0\n 27153: ecalli 14 // 'seal_return'\n 27155: jump @1011\n      : @1024 (gas: 5)\n 27158: a0 = s1 + 0x7ff\n 27162: a0 = a0 + 0x661\n 27166: ra = 0x402\n 27170: t0 = 0x416\n 27174: jump @1286\n      : @1025 [@dyn 513] (gas: 16)\n 27177: a1 = s1 + 0x7ff\n 27181: a1 = a1 + 0x79\n 27184: a2 = a1 + 0x500\n 27188: a0 = u64 [a2 + 0xe8]\n 27192: u64 [s1 + 0xf8] = a0\n 27196: a0 = u64 [a2 + 0xf0]\n 27200: u64 [s1 + 0xf0] = a0\n 27204: a0 = u64 [a2 + 0xf8]\n 27208: u64 [s1 + 0xe8] = a0\n 27212: a0 = u64 [a1 + 0x600]\n 27216: u64 [s1 + 0xe0] = a0\n 27220: a0 = s1 + 0x7ff\n 27224: a0 = a0 + 0x641\n 27228: ra = 0x404\n 27232: t0 = 0x420\n 27236: jump @1292\n      : @1026 [@dyn 514] (gas: 16)\n 27239: a1 = s1 + 0x7ff\n 27243: a1 = a1 + 0x79\n 27246: a2 = a1 + 0x500\n 27250: a0 = u64 [a2 + 0xc8]\n 27254: u64 [s1 + 0xd8] = a0\n 27258: a0 = u64 [a2 + 0xd0]\n 27262: u64 [s1 + 0xd0] = a0\n 27266: a0 = u64 [a2 + 0xd8]\n 27270: u64 [s1 + 0xc8] = a0\n 27274: a0 = u64 [a2 + 0xe0]\n 27278: u64 [s1 + 0xc0] = a0\n 27282: a0 = s1 + 0x7ff\n 27286: a0 = a0 + 0x621\n 27290: ra = 0x406\n 27294: t0 = 0x426\n 27298: jump @1292\n      : @1027 [@dyn 515] (gas: 34)\n 27301: a4 = s1 + 0x7ff\n 27305: a4 = a4 + 0x79\n 27308: a5 = a4 + 0x500\n 27312: a0 = u64 [a5 + 0xa8]\n 27316: a1 = u64 [a5 + 0xb0]\n 27320: a2 = u64 [a5 + 0xb8]\n 27324: a3 = u64 [a5 + 0xc0]\n 27328: u64 [a5 + 0x60] = a3\n 27331: u64 [a5 + 0x58] = a2\n 27334: u64 [a5 + 0x50] = a1\n 27337: u64 [a5 + 0x48] = a0\n 27340: a0 = u64 [s1 + 0xc0]\n 27344: u64 [a5 + 0x80] = a0\n 27348: a0 = u64 [s1 + 0xc8]\n 27352: u64 [a5 + 0x78] = a0\n 27355: a0 = u64 [s1 + 0xd0]\n 27359: u64 [a5 + 0x70] = a0\n 27362: a0 = u64 [s1 + 0xd8]\n 27366: u64 [a5 + 0x68] = a0\n 27369: a0 = u64 [s1 + 0xe0]\n 27373: u64 [a5 + 0xa0] = a0\n 27377: a0 = u64 [s1 + 0xe8]\n 27381: u64 [a5 + 0x98] = a0\n 27385: a0 = u64 [s1 + 0xf0]\n 27389: u64 [a5 + 0x90] = a0\n 27393: a0 = s1 + 0x7ff\n 27397: a0 = a0 + 0x601\n 27401: a1 = s1 + 0x7ff\n 27405: a1 = a1 + 0x5e1\n 27409: a2 = s1 + 0x7ff\n 27413: a2 = a2 + 0x5c1\n 27417: a3 = u64 [s1 + 0xf8]\n 27421: u64 [a5 + 0x88] = a3\n 27425: ra = 1032, jump @1081\n      : @1028 [@dyn 516] (gas: 6)\n 27431: a1 = 0x20160\n 27436: i32 a1 = a1 + 0\n 27438: a0 = 0\n 27440: a2 = 0\n 27442: ecalli 14 // 'seal_return'\n 27444: jump @1011\n      : @1029 (gas: 8)\n 27447: u64 [s1 + 1616] = 0\n 27451: u64 [s1 + 1608] = 0\n 27455: u64 [s1 + 1600] = 0\n 27459: a0 = 0x5fc483c500000000\n 27469: a1 = s1 + 0x640\n 27473: u64 [s1 + 0x658] = a0\n 27477: a0 = 0\n 27479: ra = 1034, jump @9\n      : @1030 [@dyn 517] (gas: 2)\n 27485: a1 = i32 [0x20150]\n 27490: jump @1032 if a1 >u 31\n      : @1031 (gas: 3)\n 27494: u32 [0x20150] = 0x20\n 27500: a1 = 0x20160\n 27505: jump @721\n      : @1032 (gas: 2)\n 27508: a1 = 0x20160\n 27513: jump @721\n      : @1033 (gas: 8)\n 27516: u64 [s1 + 1456] = 0\n 27520: u64 [s1 + 1448] = 0\n 27524: u64 [s1 + 1440] = 0\n 27528: a0 = 0xdd75059200000000\n 27538: a1 = s1 + 0x5a0\n 27542: u64 [s1 + 0x5b8] = a0\n 27546: a0 = 0\n 27548: ra = 1036, jump @9\n      : @1034 [@dyn 518] (gas: 2)\n 27554: a1 = i32 [0x20150]\n 27559: jump @1036 if a1 >u 31\n      : @1035 (gas: 3)\n 27563: u32 [0x20150] = 0x20\n 27569: a1 = 0x20160\n 27574: jump @721\n      : @1036 (gas: 2)\n 27577: a1 = 0x20160\n 27582: jump @721\n      : @1037 (gas: 18)\n 27585: sp = sp + 0xffffffffffffffc0\n 27588: u64 [sp + 0x38] = ra\n 27591: u64 [sp + 0x30] = s0\n 27594: u64 [sp + 0x28] = s1\n 27597: s0 = sp + 0x40\n 27600: sp = sp & 0xfffffffffffffff0\n 27603: a2 = u64 [a1 + 0x10]\n 27606: a3 = u64 [a1 + 0x18]\n 27609: a4 = u64 [a1 + 0x8]\n 27612: a1 = u64 [a1]\n 27614: a3 = a3 | a4\n 27617: a4 = a1 | a2\n 27620: a4 = a4 | a3\n 27623: a4 = a4 >> 0x20\n 27626: a2 = a2 | a3\n 27629: a2 = a2 << 0x20\n 27632: a2 = a2 | a4\n 27635: jump @1043 if a2 != 0\n      : @1038 (gas: 3)\n 27638: s1 = a0\n 27640: a0 = sp\n 27642: ra = 1038, jump @7\n      : @1039 [@dyn 519] (gas: 1)\n 27648: t0 = 1040, jump @1270\n      : @1040 [@dyn 520] (gas: 1)\n 27654: jump @1044 if a3 == 0\n      : @1041 (gas: 1)\n 27657: t0 = 1042, jump @1284\n      : @1042 [@dyn 521] (gas: 1)\n 27663: ret\n      : @1043 (gas: 1)\n 27665: trap\n      : @1044 (gas: 8)\n 27666: a1 = 0x20160\n 27671: i32 a1 = a1 + 0\n 27673: a0 = 0x1\n 27676: a2 = 0\n 27678: ra = 0x414\n 27682: ecalli 14 // 'seal_return'\n 27684: t0 = 0x416\n 27688: jump @1286\n      : @1045 [@dyn 522] (gas: 1)\n 27691: t0 = 1046, jump @1286\n      : @1046 [@dyn 523] (gas: 4)\n 27697: ra = 0x418\n 27701: ecalli 2 // 'call_data_load'\n 27703: t0 = 0x41a\n 27707: jump @1270\n      : @1047 [@dyn 524] (gas: 1)\n 27710: t0 = 1050, jump @1270\n      : @1048 [@dyn 525] (gas: 1)\n 27716: jump @1051 if a3 == 0\n      : @1049 (gas: 1)\n 27719: t0 = 1052, jump @1284\n      : @1050 [@dyn 526] (gas: 1)\n 27725: ret\n      : @1051 (gas: 8)\n 27727: a1 = 0x20160\n 27732: i32 a1 = a1 + 0\n 27734: a0 = 0x1\n 27737: a2 = 0\n 27739: ra = 0x41e\n 27743: ecalli 14 // 'seal_return'\n 27745: t0 = 0x420\n 27749: jump @1292\n      : @1052 [@dyn 527] (gas: 1)\n 27752: t0 = 1056, jump @1292\n      : @1053 [@dyn 528] (gas: 3)\n 27758: a1 = 0x24\n 27761: ecalli 2 // 'call_data_load'\n 27763: fallthrough\n      : @1054 (gas: 7)\n 27764: a0 = u64 [sp + 0x18]\n 27767: a1 = u64 [sp + 0x10]\n 27770: a2 = u64 [sp + 0x8]\n 27773: a3 = a1 | a0\n 27776: a4 = a2 <u 0x1\n 27779: a4 = 0 if a3 != 0\n 27781: jump @1057 if a4 == 0\n      : @1055 (gas: 2)\n 27784: a3 = u64 [sp]\n 27786: t0 = 1058, jump @1266\n      : @1056 [@dyn 529] (gas: 1)\n 27792: ret\n      : @1057 (gas: 8)\n 27794: a1 = 0x20160\n 27799: i32 a1 = a1 + 0\n 27801: a0 = 0x1\n 27804: a2 = 0\n 27806: ra = 0x424\n 27810: ecalli 14 // 'seal_return'\n 27812: t0 = 0x426\n 27816: jump @1292\n      : @1058 [@dyn 530] (gas: 1)\n 27819: t0 = 1062, jump @1292\n      : @1059 [@dyn 531] (gas: 5)\n 27825: a1 = 0x44\n 27828: ra = 0x428\n 27832: ecalli 2 // 'call_data_load'\n 27834: t0 = 0x42a\n 27838: jump @1278\n      : @1060 [@dyn 532] (gas: 1)\n 27841: t0 = 1066, jump @1278\n      : @1061 [@dyn 533] (gas: 1)\n 27847: jump @1064 if a4 != 0\n      : @1062 (gas: 1)\n 27850: t0 = 1068, jump @1266\n      : @1063 [@dyn 534] (gas: 1)\n 27856: ret\n      : @1064 (gas: 8)\n 27858: a1 = 0x20160\n 27863: i32 a1 = a1 + 0\n 27865: a0 = 0x1\n 27868: a2 = 0\n 27870: ra = 0x42e\n 27874: ecalli 14 // 'seal_return'\n 27876: t0 = 0x430\n 27880: jump @1286\n      : @1065 [@dyn 535] (gas: 1)\n 27883: t0 = 1072, jump @1286\n      : @1066 [@dyn 536] (gas: 4)\n 27889: ra = 0x432\n 27893: ecalli 2 // 'call_data_load'\n 27895: t0 = 0x434\n 27899: jump @1278\n      : @1067 [@dyn 537] (gas: 1)\n 27902: t0 = 1076, jump @1278\n      : @1068 [@dyn 538] (gas: 1)\n 27908: jump @1071 if a4 != 0\n      : @1069 (gas: 1)\n 27911: t0 = 1078, jump @1266\n      : @1070 [@dyn 539] (gas: 1)\n 27917: ret\n      : @1071 (gas: 7)\n 27919: a1 = 0x20160\n 27924: i32 a1 = a1 + 0\n 27926: a0 = 0x1\n 27929: a2 = 0\n 27931: ra = 0x438\n 27935: ecalli 14 // 'seal_return'\n 27937: fallthrough\n      : @1072 [@dyn 540] (gas: 46)\n 27938: sp = sp + 0xffffffffffffff70\n 27942: u64 [sp + 0x88] = ra\n 27946: u64 [sp + 0x80] = s0\n 27950: u64 [sp + 0x78] = s1\n 27953: s0 = sp + 0x90\n 27957: sp = sp & 0xfffffffffffffff0\n 27960: t0 = a0\n 27962: a2 = u64 [a1]\n 27964: t2 = u64 [a0 + 0x8]\n 27967: a5 = u64 [a1 + 0x8]\n 27970: t1 = u64 [a0]\n 27972: a3 = a2 + 0x1f\n 27975: ra = a3 <u a2\n 27978: a2 = a5 + ra\n 27981: a3 = a3 & 0xffffffffffffffe0\n 27984: u64 [sp + 0x8] = t1\n 27987: t1 = t1 + a3\n 27990: a4 = t1 <u a3\n 27993: a3 = a2 + t2\n 27996: a3 = a3 + a4\n 27999: s1 = a3 ^ a2\n 28002: a0 = a3 <u a2\n 28005: a0 = a4 if s1 == 0\n 28008: a4 = u64 [t0 + 0x18]\n 28011: a5 = a2 <u a5\n 28014: s1 = u64 [a1 + 0x10]\n 28017: t0 = u64 [t0 + 0x10]\n 28020: a1 = u64 [a1 + 0x18]\n 28023: a5 = ra if ra == 0\n 28026: a5 = a5 + s1\n 28029: s1 = a5 <u s1\n 28032: a2 = a5 + t0\n 28035: a0 = a0 + a2\n 28038: a5 = a2 <u a5\n 28041: a2 = a0 <u a2\n 28044: a1 = a1 + a4\n 28047: a1 = a1 + s1\n 28050: a1 = a1 + a5\n 28053: a5 = a1 + a2\n 28056: a1 = a5 >u 0\n 28058: a2 = a0 >u 0\n 28060: a2 = a1 if a5 != 0\n 28063: a1 = a0 | a5\n 28066: s1 = a3 >u 0\n 28068: s1 = a2 if a1 != 0\n 28071: jump @1076 if s1 != 0\n      : @1073 (gas: 13)\n 28074: a1 = u64 [sp + 0x8]\n 28077: a1 = t1 <u a1\n 28080: a2 = a3 ^ t2\n 28083: s1 = a3 <u t2\n 28086: s1 = a1 if a2 == 0\n 28089: a1 = a0 <u t0\n 28092: a2 = a5 ^ a4\n 28095: a4 = a5 <u a4\n 28098: a4 = a1 if a2 == 0\n 28101: a1 = a0 ^ t0\n 28104: a1 = a1 | a2\n 28107: a4 = s1 if a1 == 0\n 28110: jump @1076 if a4 != 0\n      : @1074 (gas: 7)\n 28113: u64 [sp + 0x50] = t1\n 28116: u64 [sp + 0x58] = a3\n 28119: u64 [sp + 0x60] = a0\n 28122: a0 = 0x40\n 28125: a1 = sp + 0x50\n 28128: u64 [sp + 0x68] = a5\n 28131: ra = 1082, jump @9\n      : @1075 [@dyn 541] (gas: 6)\n 28137: sp = s0 + 0xffffffffffffff70\n 28141: ra = u64 [sp + 0x88]\n 28145: s0 = u64 [sp + 0x80]\n 28149: s1 = u64 [sp + 0x78]\n 28152: sp = sp + 0x90\n 28156: ret\n      : @1076 (gas: 8)\n 28158: u64 [sp + 64] = 0\n 28161: u64 [sp + 56] = 0\n 28164: u64 [sp + 48] = 0\n 28167: a0 = 0x4e487b7100000000\n 28177: a1 = sp + 0x30\n 28180: u64 [sp + 0x48] = a0\n 28183: a0 = 0\n 28185: ra = 1084, jump @9\n      : @1077 [@dyn 542] (gas: 7)\n 28191: u64 [sp + 40] = 0\n 28194: u64 [sp + 32] = 0\n 28197: u64 [sp + 16] = 0x41\n 28201: a0 = 0x4\n 28204: a1 = sp + 0x10\n 28207: u64 [sp + 24] = 0\n 28210: ra = 1086, jump @9\n      : @1078 [@dyn 543] (gas: 2)\n 28216: a1 = i32 [0x20150]\n 28221: jump @1080 if a1 >u 63\n      : @1079 (gas: 2)\n 28225: u32 [0x20150] = 0x40\n 28231: fallthrough\n      : @1080 (gas: 7)\n 28232: a1 = 0x20160\n 28237: i32 a1 = a1 + 0\n 28239: a0 = 0x1\n 28242: a2 = 0x24\n 28245: ra = 0x440\n 28249: ecalli 14 // 'seal_return'\n 28251: fallthrough\n      : @1081 [@dyn 544] (gas: 31)\n 28252: sp = sp + 0xfffffffffffff808\n 28256: a3 = sp + 0x700\n 28260: u64 [a3 + 0xf0] = ra\n 28264: u64 [a3 + 0xe8] = s0\n 28268: u64 [a3 + 0xe0] = s1\n 28272: s0 = sp + 0x7f8\n 28276: sp = sp + 0xfffffffffffffdf8\n 28280: sp = sp & 0xffffffffffffffe0\n 28283: s1 = sp\n 28285: a2 = u64 [a2]\n 28287: u64 [s1 + 0x90] = a2\n 28291: a1 = u64 [a1]\n 28293: u64 [s1 + 0x68] = a1\n 28296: a2 = u64 [a0]\n 28298: a1 = u64 [a0 + 0x8]\n 28301: a0 = u32 [a0 + 0x10]\n 28304: a3 = s1 + 0x1000\n 28308: u64 [a3 + 4294965272] = 0\n 28312: u64 [s1 + 0x98] = a0\n 28316: a3 = s1 + 0x1000\n 28320: u64 [a3 + 0xfffffffffffff810] = a0\n 28324: u64 [s1 + 0xa0] = a1\n 28328: a0 = s1 + 0x1000\n 28332: u64 [a0 + 0xfffffffffffff808] = a1\n 28336: a1 = s1 + 0x7ff\n 28340: a1 = a1 + 0x1\n 28343: u64 [s1 + 0xa8] = a2\n 28347: a0 = s1 + 0x1000\n 28351: u64 [a0 + 0xfffffffffffff800] = a2\n 28355: a0 = 0\n 28357: ra = 1090, jump @9\n      : @1082 [@dyn 545] (gas: 7)\n 28363: u64 [s1 + 2040] = 0\n 28367: u64 [s1 + 2032] = 0\n 28371: u64 [s1 + 2016] = 0x3\n 28376: a0 = 0x20\n 28379: a1 = s1 + 0x7e0\n 28383: u64 [s1 + 2024] = 0\n 28387: ra = 1092, jump @9\n      : @1083 [@dyn 546] (gas: 3)\n 28393: a1 = 0x20150\n 28398: a0 = i32 [0x20150]\n 28403: jump @1085 if a0 >u 63\n      : @1084 (gas: 2)\n 28407: u32 [0x20150] = 0x40\n 28413: fallthrough\n      : @1085 (gas: 16)\n 28414: a0 = sp + 0xffffffffffffffe0\n 28417: a2 = a0 & 0xffffffffffffffe0\n 28420: u64 [s1 + 0x88] = a2\n 28424: sp = a2\n 28426: a0 = 0x20160\n 28431: u64 [s1 + 0x30] = a0\n 28434: i32 a0 = a0 + 0\n 28436: i32 a2 = a2 + 0\n 28438: u64 [s1 + 0xb0] = a1\n 28442: a1 = 0x40\n 28445: u64 [s1 + 0xb8] = a0\n 28449: ra = 0x446\n 28453: ecalli 9 // 'hash_keccak_256'\n 28455: a3 = u64 [s1 + 0x88]\n 28459: t0 = 0x448\n 28463: jump @1282\n      : @1086 [@dyn 547] (gas: 2)\n 28466: a3 = u64 [s1 + 0x88]\n 28470: t0 = 1096, jump @1282\n      : @1087 [@dyn 548] (gas: 18)\n 28476: u64 [s1 + 0x88] = a0\n 28480: a0 = reverse a1\n 28482: u64 [s1 + 0x80] = a0\n 28486: a0 = reverse a2\n 28488: u64 [s1 + 0x78] = a0\n 28491: a0 = reverse a3\n 28493: u64 [s1 + 0x60] = a0\n 28496: a0 = u64 [s1 + 0x90]\n 28500: a0 = a0 << 0x20\n 28503: a0 = a0 >> 0x20\n 28506: u64 [s1 + 2008] = 0\n 28510: u64 [s1 + 2000] = 0\n 28514: u64 [s1 + 1992] = 0\n 28518: a1 = s1 + 0x7c0\n 28522: u64 [s1 + 0x70] = a0\n 28525: u64 [s1 + 0x7c0] = a0\n 28529: a0 = 0\n 28531: ra = 1098, jump @9\n      : @1088 [@dyn 549] (gas: 12)\n 28537: a0 = u64 [s1 + 0x60]\n 28540: a3 = s1 + 0x700\n 28544: u64 [a3 + 0xb8] = a0\n 28548: a0 = u64 [s1 + 0x78]\n 28551: u64 [a3 + 0xb0] = a0\n 28555: a0 = u64 [s1 + 0x80]\n 28559: u64 [a3 + 0xa8] = a0\n 28563: a0 = 0x20\n 28566: a1 = s1 + 0x7a0\n 28570: a2 = u64 [s1 + 0x88]\n 28574: u64 [a3 + 0xa0] = a2\n 28578: ra = 1100, jump @9\n      : @1089 [@dyn 550] (gas: 3)\n 28584: a1 = u64 [s1 + 0xb0]\n 28588: a0 = i32 [a1]\n 28590: jump @1091 if a0 >u 63\n      : @1090 (gas: 2)\n 28594: u32 [a1 + 0] = 0x40\n 28597: fallthrough\n      : @1091 (gas: 4)\n 28598: a0 = sp + 0xffffffffffffffe0\n 28601: a0 = a0 & 0xffffffffffffffe0\n 28604: u64 [s1 + 0x90] = a0\n 28608: t0 = 1102, jump @1255\n      : @1092 [@dyn 551] (gas: 30)\n 28614: ecalli 9 // 'hash_keccak_256'\n 28616: a3 = u64 [s1 + 0x90]\n 28620: a0 = u64 [a3]\n 28622: a1 = u64 [a3 + 0x8]\n 28625: a2 = u64 [a3 + 0x10]\n 28628: a3 = u64 [a3 + 0x18]\n 28631: a0 = reverse a0\n 28633: a1 = reverse a1\n 28635: a2 = reverse a2\n 28637: a3 = reverse a3\n 28639: a3 = a3 + 0x1\n 28642: a4 = a3 <u 0x1\n 28645: a2 = a2 + a4\n 28648: a4 = a3 | a2\n 28651: a4 = a4 <u 0x1\n 28654: a4 = a4 + a1\n 28657: a1 = a4 <u a1\n 28660: a0 = a0 + a1\n 28663: a1 = s1 + 0x1000\n 28667: u64 [a1 + 0xfffffffffffff820] = a3\n 28671: a1 = s1 + 0x1000\n 28675: u64 [a1 + 0xfffffffffffff828] = a2\n 28679: a1 = s1 + 0x7ff\n 28683: a1 = a1 + 0x31\n 28686: u64 [a1] = a4\n 28688: u64 [a1 + 0x8] = a0\n 28691: a0 = s1 + 0x780\n 28695: a1 = s1 + 0x7ff\n 28699: a1 = a1 + 0x21\n 28702: ra = 1104, jump @11\n      : @1093 [@dyn 552] (gas: 2)\n 28708: a0 = u64 [s1 + 0x780]\n 28712: jump @1227 if a0 == 0\n      : @1094 (gas: 7)\n 28716: a1 = u64 [s1 + 0x70]\n 28719: a0 = a1 <u 0x100\n 28723: u64 [s1 + 0x60] = a0\n 28726: i32 a2 = a1 + 0xffffffffffffff80\n 28729: a0 = 0x1\n 28732: a1 = 0\n 28734: ra = 1106, jump @1298\n      : @1095 [@dyn 553] (gas: 7)\n 28740: u64 [s1 + 0x88] = a0\n 28744: u64 [s1 + 0x90] = a1\n 28748: a1 = u64 [s1 + 0x70]\n 28751: i32 a2 = 0x80 - a1\n 28755: a0 = 0x1\n 28758: a1 = 0\n 28760: ra = 1108, jump @1293\n      : @1096 [@dyn 554] (gas: 15)\n 28766: a2 = u64 [s1 + 0x70]\n 28769: a3 = a2 <u 0x80\n 28773: u64 [s1 + 0x80] = a3\n 28777: a4 = u64 [s1 + 0x88]\n 28781: a0 = a4 if a3 == 0\n 28784: a0 = 0 if a2 == 0\n 28786: u64 [s1 + 0x88] = a0\n 28790: a0 = u64 [s1 + 0x90]\n 28794: a1 = a0 if a3 == 0\n 28797: a1 = 0 if a2 == 0\n 28799: u64 [s1 + 0x90] = a1\n 28803: i32 a2 = a2 + 0\n 28805: a0 = 0x1\n 28808: a1 = 0\n 28810: ra = 1110, jump @1298\n      : @1097 [@dyn 555] (gas: 15)\n 28816: a2 = u64 [s1 + 0x80]\n 28820: a0 = 0 if a2 == 0\n 28822: u64 [s1 + 0x78] = a0\n 28825: a1 = 0 if a2 == 0\n 28827: u64 [s1 + 0x80] = a1\n 28831: u64 [s1 + 1912] = 0\n 28835: a0 = u64 [s1 + 0xa8]\n 28839: u64 [s1 + 0x760] = a0\n 28843: a0 = u64 [s1 + 0xa0]\n 28847: u64 [s1 + 0x768] = a0\n 28851: a1 = s1 + 0x760\n 28855: a0 = u64 [s1 + 0x98]\n 28859: u64 [s1 + 0x770] = a0\n 28863: a0 = 0\n 28865: ra = 1112, jump @9\n      : @1098 [@dyn 556] (gas: 7)\n 28871: u64 [s1 + 1880] = 0\n 28875: u64 [s1 + 1872] = 0\n 28879: u64 [s1 + 1856] = 0x5\n 28884: a0 = 0x20\n 28887: a1 = s1 + 0x740\n 28891: u64 [s1 + 1864] = 0\n 28895: ra = 1114, jump @9\n      : @1099 [@dyn 557] (gas: 3)\n 28901: a1 = u64 [s1 + 0xb0]\n 28905: a0 = i32 [a1]\n 28907: jump @1101 if a0 >u 63\n      : @1100 (gas: 2)\n 28911: u32 [a1 + 0] = 0x40\n 28914: fallthrough\n      : @1101 (gas: 17)\n 28915: a0 = u64 [s1 + 0x80]\n 28919: a1 = u64 [s1 + 0x60]\n 28922: a0 = 0 if a1 == 0\n 28924: u64 [s1 + 0x80] = a0\n 28928: a0 = u64 [s1 + 0x78]\n 28931: a0 = 0 if a1 == 0\n 28933: u64 [s1 + 0x78] = a0\n 28936: a0 = u64 [s1 + 0x90]\n 28940: a0 = 0 if a1 == 0\n 28942: u64 [s1 + 0x90] = a0\n 28946: a0 = u64 [s1 + 0x88]\n 28950: a0 = 0 if a1 == 0\n 28952: u64 [s1 + 0x88] = a0\n 28956: a0 = sp + 0xffffffffffffffe0\n 28959: a0 = a0 & 0xffffffffffffffe0\n 28962: u64 [s1 + 0x60] = a0\n 28965: t0 = 1116, jump @1255\n      : @1102 [@dyn 558] (gas: 4)\n 28971: ra = 0x45e\n 28975: ecalli 9 // 'hash_keccak_256'\n 28977: t0 = 0x460\n 28981: jump @1246\n      : @1103 [@dyn 559] (gas: 1)\n 28984: t0 = 1120, jump @1246\n      : @1104 [@dyn 560] (gas: 10)\n 28990: a0 = u64 [s1 + 0x68]\n 28993: a0 = a0 & 0xffffffffffffffff\n 28996: u64 [s1 + 1848] = 0\n 29000: u64 [s1 + 1840] = 0\n 29004: u64 [s1 + 1832] = 0\n 29008: a1 = s1 + 0x720\n 29012: u64 [s1 + 0x68] = a0\n 29015: u64 [s1 + 0x720] = a0\n 29019: a0 = 0\n 29021: ra = 1122, jump @9\n      : @1105 [@dyn 561] (gas: 12)\n 29027: a0 = u64 [s1 + 0x40]\n 29030: a3 = s1 + 0x700\n 29034: u64 [a3 + 0x18] = a0\n 29037: a0 = u64 [s1 + 0x48]\n 29040: u64 [a3 + 0x10] = a0\n 29043: a0 = u64 [s1 + 0x50]\n 29046: u64 [a3 + 0x8] = a0\n 29049: a0 = 0x20\n 29052: a1 = s1 + 0x700\n 29056: a2 = u64 [s1 + 0x58]\n 29059: u64 [a3] = a2\n 29061: ra = 1124, jump @9\n      : @1106 [@dyn 562] (gas: 3)\n 29067: a1 = u64 [s1 + 0xb0]\n 29071: a0 = i32 [a1]\n 29073: jump @1108 if a0 >u 63\n      : @1107 (gas: 2)\n 29077: u32 [a1 + 0] = 0x40\n 29080: fallthrough\n      : @1108 (gas: 4)\n 29081: a0 = sp + 0xffffffffffffffe0\n 29084: a0 = a0 & 0xffffffffffffffe0\n 29087: u64 [s1 + 0x58] = a0\n 29090: t0 = 1126, jump @1255\n      : @1109 [@dyn 563] (gas: 4)\n 29096: ra = 0x468\n 29100: ecalli 9 // 'hash_keccak_256'\n 29102: t0 = 0x46a\n 29106: jump @1247\n      : @1110 [@dyn 564] (gas: 1)\n 29109: t0 = 1130, jump @1247\n      : @1111 [@dyn 565] (gas: 2)\n 29115: a0 = s1 + 0x6e0\n 29119: ra = 1132, jump @11\n      : @1112 [@dyn 566] (gas: 6)\n 29125: a4 = s1 + 0x600\n 29129: a0 = u64 [a4 + 0xf0]\n 29133: a1 = u64 [a4 + 0xe0]\n 29137: a2 = u64 [a4 + 0xf8]\n 29141: a3 = u64 [a4 + 0xe8]\n 29145: t0 = 1134, jump @1264\n      : @1113 [@dyn 567] (gas: 1)\n 29151: jump @1228 if a0 == 0\n      : @1114 (gas: 10)\n 29155: u64 [s1 + 1752] = 0\n 29159: a0 = u64 [s1 + 0xa8]\n 29163: u64 [s1 + 0x6c0] = a0\n 29167: a0 = u64 [s1 + 0xa0]\n 29171: u64 [s1 + 0x6c8] = a0\n 29175: a1 = s1 + 0x6c0\n 29179: a0 = u64 [s1 + 0x98]\n 29183: u64 [s1 + 0x6d0] = a0\n 29187: a0 = 0\n 29189: ra = 1136, jump @9\n      : @1115 [@dyn 568] (gas: 7)\n 29195: u64 [s1 + 1720] = 0\n 29199: u64 [s1 + 1712] = 0\n 29203: u64 [s1 + 1696] = 0x7\n 29208: a0 = 0x20\n 29211: a1 = s1 + 0x6a0\n 29215: u64 [s1 + 1704] = 0\n 29219: ra = 1138, jump @9\n      : @1116 [@dyn 569] (gas: 3)\n 29225: a1 = u64 [s1 + 0xb0]\n 29229: a0 = i32 [a1]\n 29231: jump @1118 if a0 >u 63\n      : @1117 (gas: 2)\n 29235: u32 [a1 + 0] = 0x40\n 29238: fallthrough\n      : @1118 (gas: 4)\n 29239: a0 = sp + 0xffffffffffffffe0\n 29242: a0 = a0 & 0xffffffffffffffe0\n 29245: u64 [s1 + 0x60] = a0\n 29248: t0 = 1140, jump @1255\n      : @1119 [@dyn 570] (gas: 4)\n 29254: ra = 0x476\n 29258: ecalli 9 // 'hash_keccak_256'\n 29260: t0 = 0x478\n 29264: jump @1246\n      : @1120 [@dyn 571] (gas: 1)\n 29267: t0 = 1144, jump @1246\n      : @1121 [@dyn 572] (gas: 8)\n 29273: u64 [s1 + 1688] = 0\n 29277: u64 [s1 + 1680] = 0\n 29281: u64 [s1 + 1672] = 0\n 29285: a1 = s1 + 0x680\n 29289: a0 = u64 [s1 + 0x68]\n 29292: u64 [s1 + 0x680] = a0\n 29296: a0 = 0\n 29298: ra = 1146, jump @9\n      : @1122 [@dyn 573] (gas: 12)\n 29304: a0 = u64 [s1 + 0x40]\n 29307: a3 = s1 + 0x600\n 29311: u64 [a3 + 0x78] = a0\n 29314: a0 = u64 [s1 + 0x48]\n 29317: u64 [a3 + 0x70] = a0\n 29320: a0 = u64 [s1 + 0x50]\n 29323: u64 [a3 + 0x68] = a0\n 29326: a0 = 0x20\n 29329: a1 = s1 + 0x660\n 29333: a2 = u64 [s1 + 0x58]\n 29336: u64 [a3 + 0x60] = a2\n 29339: ra = 1148, jump @9\n      : @1123 [@dyn 574] (gas: 3)\n 29345: a1 = u64 [s1 + 0xb0]\n 29349: a0 = i32 [a1]\n 29351: jump @1125 if a0 >u 63\n      : @1124 (gas: 2)\n 29355: u32 [a1 + 0] = 0x40\n 29358: fallthrough\n      : @1125 (gas: 4)\n 29359: a0 = sp + 0xffffffffffffffe0\n 29362: a0 = a0 & 0xffffffffffffffe0\n 29365: u64 [s1 + 0x58] = a0\n 29368: t0 = 1150, jump @1255\n      : @1126 [@dyn 575] (gas: 4)\n 29374: ra = 0x480\n 29378: ecalli 9 // 'hash_keccak_256'\n 29380: t0 = 0x482\n 29384: jump @1247\n      : @1127 [@dyn 576] (gas: 1)\n 29387: t0 = 1154, jump @1247\n      : @1128 [@dyn 577] (gas: 2)\n 29393: a0 = s1 + 0x640\n 29397: ra = 1156, jump @11\n      : @1129 [@dyn 578] (gas: 6)\n 29403: a4 = s1 + 0x600\n 29407: a0 = u64 [a4 + 0x50]\n 29410: a1 = u64 [a4 + 0x40]\n 29413: a2 = u64 [a4 + 0x58]\n 29416: a3 = u64 [a4 + 0x48]\n 29419: t0 = 1158, jump @1264\n      : @1130 [@dyn 579] (gas: 1)\n 29425: jump @1229 if a0 != 0\n      : @1131 (gas: 11)\n 29429: u64 [s1 + 1560] = 0\n 29433: a0 = u64 [s1 + 0xa8]\n 29437: a2 = s1 + 0x600\n 29441: u64 [a2] = a0\n 29443: a0 = u64 [s1 + 0xa0]\n 29447: u64 [a2 + 0x8] = a0\n 29450: a1 = s1 + 0x600\n 29454: a0 = u64 [s1 + 0x98]\n 29458: u64 [a2 + 0x10] = a0\n 29461: a0 = 0\n 29463: ra = 1160, jump @9\n      : @1132 [@dyn 580] (gas: 7)\n 29469: u64 [s1 + 1528] = 0\n 29473: u64 [s1 + 1520] = 0\n 29477: u64 [s1 + 1504] = 0x7\n 29482: a0 = 0x20\n 29485: a1 = s1 + 0x5e0\n 29489: u64 [s1 + 1512] = 0\n 29493: ra = 1162, jump @9\n      : @1133 [@dyn 581] (gas: 3)\n 29499: a1 = u64 [s1 + 0xb0]\n 29503: a0 = i32 [a1]\n 29505: jump @1135 if a0 >u 63\n      : @1134 (gas: 2)\n 29509: u32 [a1 + 0] = 0x40\n 29512: fallthrough\n      : @1135 (gas: 4)\n 29513: a0 = sp + 0xffffffffffffffe0\n 29516: a0 = a0 & 0xffffffffffffffe0\n 29519: u64 [s1 + 0x60] = a0\n 29522: t0 = 1164, jump @1255\n      : @1136 [@dyn 582] (gas: 4)\n 29528: ra = 0x48e\n 29532: ecalli 9 // 'hash_keccak_256'\n 29534: t0 = 0x490\n 29538: jump @1246\n      : @1137 [@dyn 583] (gas: 1)\n 29541: t0 = 1168, jump @1246\n      : @1138 [@dyn 584] (gas: 8)\n 29547: u64 [s1 + 1496] = 0\n 29551: u64 [s1 + 1488] = 0\n 29555: u64 [s1 + 1480] = 0\n 29559: a1 = s1 + 0x5c0\n 29563: a0 = u64 [s1 + 0x68]\n 29566: u64 [s1 + 0x5c0] = a0\n 29570: a0 = 0\n 29572: ra = 1170, jump @9\n      : @1139 [@dyn 585] (gas: 12)\n 29578: a0 = u64 [s1 + 0x40]\n 29581: a3 = s1 + 0x500\n 29585: u64 [a3 + 0xb8] = a0\n 29589: a0 = u64 [s1 + 0x48]\n 29592: u64 [a3 + 0xb0] = a0\n 29596: a0 = u64 [s1 + 0x50]\n 29599: u64 [a3 + 0xa8] = a0\n 29603: a0 = 0x20\n 29606: a1 = s1 + 0x5a0\n 29610: a2 = u64 [s1 + 0x58]\n 29613: u64 [a3 + 0xa0] = a2\n 29617: ra = 1172, jump @9\n      : @1140 [@dyn 586] (gas: 3)\n 29623: a1 = u64 [s1 + 0xb0]\n 29627: a0 = i32 [a1]\n 29629: jump @1142 if a0 >u 63\n      : @1141 (gas: 2)\n 29633: u32 [a1 + 0] = 0x40\n 29636: fallthrough\n      : @1142 (gas: 4)\n 29637: a0 = sp + 0xffffffffffffffe0\n 29640: a0 = a0 & 0xffffffffffffffe0\n 29643: u64 [s1 + 0x58] = a0\n 29646: t0 = 1174, jump @1255\n      : @1143 [@dyn 587] (gas: 4)\n 29652: ra = 0x498\n 29656: ecalli 9 // 'hash_keccak_256'\n 29658: t0 = 0x49a\n 29662: jump @1247\n      : @1144 [@dyn 588] (gas: 1)\n 29665: t0 = 1178, jump @1247\n      : @1145 [@dyn 589] (gas: 2)\n 29671: a0 = s1 + 0x580\n 29675: ra = 1180, jump @11\n      : @1146 [@dyn 590] (gas: 22)\n 29681: a0 = u64 [s1 + 0x580]\n 29685: a1 = u64 [s1 + 0x588]\n 29689: a2 = u64 [s1 + 0x590]\n 29693: a3 = u64 [s1 + 0x598]\n 29697: a4 = u64 [s1 + 0x78]\n 29700: a0 = a0 | a4\n 29703: a4 = u64 [s1 + 0x80]\n 29707: a1 = a1 | a4\n 29710: a4 = u64 [s1 + 0x88]\n 29714: a2 = a2 | a4\n 29717: a4 = u64 [s1 + 0x90]\n 29721: a3 = a3 | a4\n 29724: a4 = s1 + 0x7ff\n 29728: a4 = a4 + 0x31\n 29731: u64 [a4 + 0x28] = a3\n 29734: u64 [a4 + 0x20] = a2\n 29737: u64 [a4 + 0x18] = a1\n 29740: u64 [a4 + 0x10] = a0\n 29743: a1 = s1 + 0x7ff\n 29747: a1 = a1 + 0x41\n 29750: a0 = u64 [s1 + 0x60]\n 29753: ra = 1182, jump @12\n      : @1147 [@dyn 591] (gas: 10)\n 29759: u64 [s1 + 1400] = 0\n 29763: a0 = u64 [s1 + 0x98]\n 29767: u64 [s1 + 0x570] = a0\n 29771: a0 = u64 [s1 + 0xa0]\n 29775: u64 [s1 + 0x568] = a0\n 29779: a1 = s1 + 0x560\n 29783: a0 = u64 [s1 + 0xa8]\n 29787: u64 [s1 + 0x560] = a0\n 29791: a0 = 0\n 29793: ra = 1184, jump @9\n      : @1148 [@dyn 592] (gas: 7)\n 29799: u64 [s1 + 1368] = 0\n 29803: u64 [s1 + 1360] = 0\n 29807: u64 [s1 + 1344] = 0x2\n 29812: a0 = 0x20\n 29815: a1 = s1 + 0x540\n 29819: u64 [s1 + 1352] = 0\n 29823: ra = 1186, jump @9\n      : @1149 [@dyn 593] (gas: 3)\n 29829: a1 = u64 [s1 + 0xb0]\n 29833: a0 = i32 [a1]\n 29835: jump @1151 if a0 >=u 64\n      : @1150 (gas: 2)\n 29839: u32 [a1 + 0] = 0x40\n 29842: fallthrough\n      : @1151 (gas: 4)\n 29843: a0 = sp + 0xffffffffffffffe0\n 29846: a0 = a0 & 0xffffffffffffffe0\n 29849: u64 [s1 + 0x60] = a0\n 29852: t0 = 1188, jump @1255\n      : @1152 [@dyn 594] (gas: 32)\n 29858: ecalli 9 // 'hash_keccak_256'\n 29860: a3 = u64 [s1 + 0x60]\n 29863: a0 = u64 [a3]\n 29865: a1 = u64 [a3 + 0x8]\n 29868: a2 = u64 [a3 + 0x10]\n 29871: a3 = u64 [a3 + 0x18]\n 29874: t0 = reverse a0\n 29876: a5 = reverse a1\n 29878: a2 = reverse a2\n 29880: a3 = reverse a3\n 29882: a0 = sp + 0xffffffffffffffe0\n 29885: a1 = a0 & 0xffffffffffffffe0\n 29888: sp = a1\n 29890: u64 [s1 + 0x10] = a3\n 29893: a0 = a3 + 0x1\n 29896: a3 = a0 <u 0x1\n 29899: u64 [s1 + 0x18] = a2\n 29902: a4 = a2 + a3\n 29905: a2 = a0 | a4\n 29908: a2 = a2 <u 0x1\n 29911: a2 = a2 + a5\n 29914: u64 [s1 + 0x20] = a5\n 29917: a3 = a2 <u a5\n 29920: u64 [s1 + 0x28] = t0\n 29923: a3 = a3 + t0\n 29926: u64 [a1 + 0x8] = a4\n 29929: u64 [a1] = a0\n 29931: u64 [a1 + 0x10] = a2\n 29934: u64 [a1 + 0x18] = a3\n 29937: a0 = s1 + 0x520\n 29941: u64 [s1 + 0x58] = a1\n 29944: ra = 1190, jump @11\n      : @1153 [@dyn 595] (gas: 12)\n 29950: t0 = u64 [s1 + 0x538]\n 29954: a4 = s1 + 0x500\n 29958: a1 = u64 [a4 + 0x30]\n 29961: a2 = u64 [a4 + 0x20]\n 29964: a0 = u64 [0x200f8]\n 29969: a3 = u64 [a4 + 0x28]\n 29972: a4 = a1 | t0\n 29975: u64 [s1 + 0x60] = a0\n 29978: a5 = a2 <u a0\n 29981: a5 = 0 if a3 != 0\n 29983: a5 = 0 if a4 != 0\n 29985: jump @1230 if a5 != 0\n      : @1154 (gas: 24)\n 29989: a4 = u64 [0x20100]\n 29994: a4 = a4 + a2\n 29997: a2 = a4 <u a2\n 30000: a5 = a3 + a2\n 30003: a5 = a5 + 0xffffffffffffffff\n 30006: a0 = a5 ^ a3\n 30009: a3 = a5 <u a3\n 30012: a3 = a2 if a0 == 0\n 30015: a0 = a1 + 0xffffffffffffffff\n 30018: a3 = a3 + a0\n 30021: a0 = a3 <u a0\n 30024: a1 = a1 <u 0x1\n 30027: a1 = t0 - a1\n 30030: a0 = a0 + a1\n 30033: a1 = s1 + 0x7ff\n 30037: a1 = a1 + 0x31\n 30040: u64 [a1 + 0x30] = a4\n 30043: u64 [a1 + 0x38] = a5\n 30046: u64 [a1 + 0x40] = a3\n 30049: u64 [a1 + 0x48] = a0\n 30052: a1 = s1 + 0x7ff\n 30056: a1 = a1 + 0x61\n 30059: a0 = u64 [s1 + 0x58]\n 30062: ra = 1192, jump @12\n      : @1155 [@dyn 596] (gas: 11)\n 30068: u64 [s1 + 1304] = 0\n 30072: a0 = u64 [s1 + 0x98]\n 30076: a2 = s1 + 0x500\n 30080: u64 [a2 + 0x10] = a0\n 30083: a0 = u64 [s1 + 0xa0]\n 30087: u64 [a2 + 0x8] = a0\n 30090: a1 = s1 + 0x500\n 30094: a0 = u64 [s1 + 0xa8]\n 30098: u64 [a2] = a0\n 30100: a0 = 0\n 30102: ra = 1194, jump @9\n      : @1156 [@dyn 597] (gas: 7)\n 30108: u64 [s1 + 1272] = 0\n 30112: u64 [s1 + 1264] = 0\n 30116: u64 [s1 + 1248] = 0x6\n 30121: a0 = 0x20\n 30124: a1 = s1 + 0x4e0\n 30128: u64 [s1 + 1256] = 0\n 30132: ra = 1196, jump @9\n      : @1157 [@dyn 598] (gas: 3)\n 30138: a1 = u64 [s1 + 0xb0]\n 30142: a0 = i32 [a1]\n 30144: jump @1159 if a0 >u 63\n      : @1158 (gas: 2)\n 30148: u32 [a1 + 0] = 0x40\n 30151: fallthrough\n      : @1159 (gas: 4)\n 30152: a0 = sp + 0xffffffffffffffe0\n 30155: a0 = a0 & 0xffffffffffffffe0\n 30158: u64 [s1 + 0x58] = a0\n 30161: t0 = 1198, jump @1255\n      : @1160 [@dyn 599] (gas: 5)\n 30167: ra = 0x4b0\n 30171: ecalli 9 // 'hash_keccak_256'\n 30173: a3 = u64 [s1 + 0x58]\n 30176: t0 = 0x4b2\n 30180: jump @1282\n      : @1161 [@dyn 600] (gas: 2)\n 30183: a3 = u64 [s1 + 0x58]\n 30186: t0 = 1202, jump @1282\n      : @1162 [@dyn 601] (gas: 19)\n 30192: u64 [s1 + 0x50] = a0\n 30195: a0 = reverse a1\n 30197: u64 [s1 + 0x48] = a0\n 30200: a0 = reverse a2\n 30202: u64 [s1 + 0x40] = a0\n 30205: a0 = reverse a3\n 30207: u64 [s1 + 0x38] = a0\n 30210: a0 = sp + 0xffffffffffffffe0\n 30213: a0 = a0 & 0xffffffffffffffe0\n 30216: u64 [s1 + 0x58] = a0\n 30219: sp = a0\n 30221: u64 [s1 + 1240] = 0\n 30225: u64 [s1 + 1232] = 0\n 30229: u64 [s1 + 1224] = 0\n 30233: a1 = s1 + 0x4c0\n 30237: a0 = u64 [s1 + 0x68]\n 30240: u64 [s1 + 0x4c0] = a0\n 30244: a0 = 0\n 30246: ra = 1204, jump @9\n      : @1163 [@dyn 602] (gas: 12)\n 30252: a0 = u64 [s1 + 0x38]\n 30255: a3 = s1 + 0x400\n 30259: u64 [a3 + 0xb8] = a0\n 30263: a0 = u64 [s1 + 0x40]\n 30266: u64 [a3 + 0xb0] = a0\n 30270: a0 = u64 [s1 + 0x48]\n 30273: u64 [a3 + 0xa8] = a0\n 30277: a0 = 0x20\n 30280: a1 = s1 + 0x4a0\n 30284: a2 = u64 [s1 + 0x50]\n 30287: u64 [a3 + 0xa0] = a2\n 30291: ra = 1206, jump @9\n      : @1164 [@dyn 603] (gas: 3)\n 30297: a1 = u64 [s1 + 0xb0]\n 30301: a0 = i32 [a1]\n 30303: jump @1166 if a0 >u 63\n      : @1165 (gas: 2)\n 30307: u32 [a1 + 0] = 0x40\n 30310: fallthrough\n      : @1166 (gas: 4)\n 30311: a0 = sp + 0xffffffffffffffe0\n 30314: a0 = a0 & 0xffffffffffffffe0\n 30317: u64 [s1 + 0x50] = a0\n 30320: t0 = 1208, jump @1255\n      : @1167 [@dyn 604] (gas: 5)\n 30326: ra = 0x4ba\n 30330: ecalli 9 // 'hash_keccak_256'\n 30332: a3 = u64 [s1 + 0x50]\n 30335: t0 = 0x4bc\n 30339: jump @1283\n      : @1168 [@dyn 605] (gas: 2)\n 30342: a3 = u64 [s1 + 0x50]\n 30345: t0 = 1212, jump @1283\n      : @1169 [@dyn 606] (gas: 7)\n 30351: a1 = u64 [s1 + 0x58]\n 30354: u64 [a1 + 0x18] = a3\n 30357: u64 [a1 + 0x10] = a2\n 30360: u64 [a1 + 0x8] = a4\n 30363: u64 [a1] = a0\n 30365: a0 = s1 + 0x480\n 30369: ra = 1214, jump @11\n      : @1170 [@dyn 607] (gas: 6)\n 30375: a4 = s1 + 0x400\n 30379: a0 = u64 [a4 + 0x90]\n 30383: a1 = u64 [a4 + 0x80]\n 30387: a2 = u64 [a4 + 0x98]\n 30391: a3 = u64 [a4 + 0x88]\n 30395: t0 = 1216, jump @1264\n      : @1171 [@dyn 608] (gas: 1)\n 30401: jump @1190 if a0 == 0\n      : @1172 (gas: 12)\n 30405: a0 = 0xffffffff\n 30415: u64 [s1 + 0xb0] = a0\n 30419: a0 = s1 + 0x7ff\n 30423: a0 = a0 + 0x31\n 30426: u64 [a0 + 232] = 0\n 30430: u64 [a0 + 224] = 0\n 30434: u64 [a0 + 216] = 0\n 30438: u64 [a0 + 208] = 0\n 30442: a0 = s1 + 0x460\n 30446: a1 = s1 + 0x7ff\n 30450: a1 = a1 + 0x101\n 30454: ra = 1218, jump @11\n      : @1173 [@dyn 609] (gas: 11)\n 30460: a3 = s1 + 0x400\n 30464: a0 = u64 [a3 + 0x68]\n 30467: a1 = u64 [a3 + 0x70]\n 30470: a2 = u64 [a3 + 0x60]\n 30473: a0 = a0 & 0xffffffffffffffff\n 30476: a4 = u64 [s1 + 0xb0]\n 30480: a1 = a1 & a4\n 30483: a2 = a2 & 0xffffffffffffffff\n 30486: a1 = a1 | a2\n 30489: a0 = a0 | a1\n 30492: jump @1209 if a0 == 0\n      : @1174 (gas: 10)\n 30496: a0 = s1 + 0x7ff\n 30500: a0 = a0 + 0x31\n 30503: u64 [a0 + 296] = 0\n 30507: u64 [a0 + 288] = 0\n 30511: u64 [a0 + 280] = 0\n 30515: u64 [a0 + 272] = 0\n 30519: a0 = s1 + 0x440\n 30523: a1 = s1 + 0x7ff\n 30527: a1 = a1 + 0x141\n 30531: ra = 1220, jump @11\n      : @1175 [@dyn 610] (gas: 25)\n 30537: a3 = s1 + 0x400\n 30541: a0 = u64 [a3 + 0x48]\n 30544: a1 = u64 [a3 + 0x50]\n 30547: a2 = u64 [a3 + 0x40]\n 30550: a0 = reverse a0\n 30552: a3 = a0 << 0x20\n 30555: a1 = reverse a1\n 30557: a1 = a1 >> 0x20\n 30560: a4 = a1 | a3\n 30563: a0 = a0 >> 0x20\n 30566: a1 = reverse a2\n 30568: a3 = 0x30160\n 30573: a2 = a1 << 0x20\n 30576: a0 = a0 | a2\n 30579: a1 = a1 >> 0x20\n 30582: u64 [s1 + 0x58] = a1\n 30585: u32 [0x30170] = a1\n 30590: u64 [s1 + 0x50] = a0\n 30593: u64 [0x30168] = a0\n 30598: u64 [s1 + 0x78] = a4\n 30601: u64 [0x30160] = a4\n 30606: u64 [s1 + 0x80] = a3\n 30610: i32 a0 = a3 + 0\n 30612: ecalli 5 // 'code_size'\n 30614: fallthrough\n      : @1176 (gas: 1)\n 30615: jump @1231 if a0 == 0\n      : @1177 (gas: 3)\n 30619: a0 = s1 + 0x420\n 30623: a1 = 0x40\n 30626: ra = 1222, jump @7\n      : @1178 [@dyn 611] (gas: 17)\n 30632: a4 = s1 + 0x400\n 30636: a2 = u64 [a4 + 0x38]\n 30639: a3 = u64 [a4 + 0x30]\n 30642: a0 = u64 [a4 + 0x28]\n 30645: a1 = u64 [a4 + 0x20]\n 30648: u64 [s1 + 0xb0] = a0\n 30652: u64 [s1 + 0x90] = a2\n 30656: a0 = a0 | a2\n 30659: u64 [s1 + 0xb8] = a1\n 30663: a1 = a1 | a3\n 30666: a1 = a1 | a0\n 30669: a1 = a1 >> 0x20\n 30672: u64 [s1 + 0x88] = a3\n 30676: a0 = a0 | a3\n 30679: a0 = a0 << 0x20\n 30682: a0 = a0 | a1\n 30685: jump @1226 if a0 != 0\n      : @1179 (gas: 8)\n 30689: u64 [s1 + 1040] = 0\n 30693: u64 [s1 + 1032] = 0\n 30697: u64 [s1 + 1024] = 0\n 30701: a0 = 0xadc9772e00000000\n 30711: a1 = s1 + 0x400\n 30715: u64 [s1 + 0x418] = a0\n 30719: a0 = u64 [s1 + 0xb8]\n 30723: ra = 1224, jump @9\n      : @1180 [@dyn 612] (gas: 13)\n 30729: a0 = u64 [s1 + 0x90]\n 30733: a2 = u64 [s1 + 0x88]\n 30737: a2 = a2 | a0\n 30740: a0 = 0x100000000\n 30750: u64 [s1 + 0x40] = a0\n 30753: a0 = 0xfffffffc\n 30763: a1 = u64 [s1 + 0xb8]\n 30767: a0 = a1 <u a0\n 30770: a1 = u64 [s1 + 0xb0]\n 30774: a0 = 0 if a1 != 0\n 30776: u64 [s1 + 0x48] = a2\n 30779: a0 = 0 if a2 != 0\n 30781: jump @1226 if a0 == 0\n      : @1181 (gas: 12)\n 30785: a0 = u64 [s1 + 0xb8]\n 30789: i32 a0 = a0 + 0x4\n 30792: u64 [s1 + 1016] = 0\n 30796: a1 = u64 [s1 + 0xa8]\n 30800: a3 = s1 + 0x300\n 30804: u64 [a3 + 0xe0] = a1\n 30808: a1 = u64 [s1 + 0xa0]\n 30812: u64 [a3 + 0xe8] = a1\n 30816: a1 = s1 + 0x3e0\n 30820: a2 = u64 [s1 + 0x98]\n 30824: u64 [a3 + 0xf0] = a2\n 30828: ra = 1226, jump @9\n      : @1182 [@dyn 613] (gas: 9)\n 30834: a0 = u64 [s1 + 0x40]\n 30837: a0 = a0 + 0xffffffffffffffdc\n 30840: a1 = u64 [s1 + 0xb8]\n 30844: a0 = a1 <u a0\n 30847: a1 = u64 [s1 + 0xb0]\n 30851: a0 = 0 if a1 != 0\n 30853: a1 = u64 [s1 + 0x48]\n 30856: a0 = 0 if a1 != 0\n 30858: jump @1226 if a0 == 0\n      : @1183 (gas: 9)\n 30862: a0 = u64 [s1 + 0xb8]\n 30866: i32 a0 = a0 + 0x24\n 30869: u64 [s1 + 984] = 0\n 30873: u64 [s1 + 976] = 0\n 30877: u64 [s1 + 968] = 0\n 30881: a1 = s1 + 0x3c0\n 30885: a2 = u64 [s1 + 0x60]\n 30888: u64 [s1 + 0x3c0] = a2\n 30892: ra = 1228, jump @9\n      : @1184 [@dyn 614] (gas: 18)\n 30898: ecalli 11 // 'ref_time_left'\n 30900: a1 = u64 [s1 + 0x80]\n 30904: a0 = u64 [s1 + 0x50]\n 30907: u64 [a1 + 0x8] = a0\n 30910: a0 = u64 [s1 + 0x78]\n 30913: u64 [a1] = a0\n 30915: a0 = u64 [s1 + 0x58]\n 30918: u32 [a1 + 0x10] = a0\n 30921: a0 = s1 + 0x7ff\n 30925: a0 = a0 + 0x31\n 30928: u64 [a0 + 328] = 0\n 30932: u64 [a0 + 320] = 0\n 30936: u64 [a0 + 312] = 0\n 30940: a1 = u64 [s1 + 0x60]\n 30943: u64 [a0 + 0x130] = a1\n 30947: a1 = 0x44\n 30950: a0 = u64 [s1 + 0xb8]\n 30954: ra = 1230, jump @20\n      : @1185 [@dyn 615] (gas: 4)\n 30960: u64 [s1 + 0x78] = a0\n 30963: a0 = u64 [s1 + 0xb8]\n 30967: a1 = 0\n 30969: ra = 1232, jump @20\n      : @1186 [@dyn 616] (gas: 37)\n 30975: a2 = s1 + 0x7ff\n 30979: a2 = a2 + 0x31\n 30982: u32 [a2 + 336] = 0\n 30986: a3 = a2 + 0x100\n 30990: u64 [a3 + 136] = 0xffffffffffffffff\n 30995: u64 [a3 + 128] = 0xffffffffffffffff\n 31000: u64 [a3 + 120] = 0xffffffffffffffff\n 31004: u64 [a3 + 112] = 0xffffffffffffffff\n 31008: a1 = u64 [s1 + 0x80]\n 31012: a1 = a1 << 0x20\n 31015: a1 = a1 >> 0x20\n 31018: a2 = 0x800000000\n 31028: t0 = a1 | a2\n 31031: a1 = s1 + 0x7ff\n 31035: a1 = a1 + 0x161\n 31039: a1 = a1 << 0x20\n 31042: a1 = a1 >> 0x20\n 31045: a2 = s1 + 0x7ff\n 31049: a2 = a2 + 0x1a1\n 31053: a2 = a2 << 0x20\n 31056: a3 = a2 | a1\n 31059: a1 = u64 [s1 + 0x78]\n 31062: a1 = a1 << 0x20\n 31065: a1 = a1 >> 0x20\n 31068: a2 = 0x4400000000\n 31078: a4 = a1 | a2\n 31081: a0 = a0 << 0x20\n 31084: a0 = a0 >> 0x20\n 31087: a1 = s1 + 0x7ff\n 31091: a1 = a1 + 0x181\n 31095: a1 = a1 << 0x20\n 31098: a5 = a1 | a0\n 31101: a1 = 0xffffffffffffffff\n 31104: a2 = 0xffffffffffffffff\n 31107: a0 = t0\n 31109: ecalli 0 // 'call'\n 31110: fallthrough\n      : @1187 (gas: 1)\n 31111: jump @1217 if a0 != 0\n      : @1188 (gas: 16)\n 31115: u64 [s1 + 888] = 0\n 31119: u64 [s1 + 880] = 0\n 31123: u64 [s1 + 872] = 0\n 31127: u64 [s1 + 864] = 0\n 31131: a0 = u64 [s1 + 0xb8]\n 31135: a3 = s1 + 0x300\n 31139: u64 [a3 + 0x80] = a0\n 31143: a0 = u64 [s1 + 0xb0]\n 31147: u64 [a3 + 0x88] = a0\n 31151: a0 = u64 [s1 + 0x88]\n 31155: u64 [a3 + 0x90] = a0\n 31159: a0 = s1 + 0x380\n 31163: a1 = s1 + 0x360\n 31167: a2 = u64 [s1 + 0x90]\n 31171: u64 [a3 + 0x98] = a2\n 31175: ra = 1234, jump @1072\n      : @1189 [@dyn 617] (gas: 1)\n 31181: jump @1211\n      : @1190 (gas: 1)\n 31184: ra = 1236, jump @0\n      : @1191 [@dyn 618] (gas: 63)\n 31190: a1 = u64 [0x30180]\n 31195: u64 [s1 + 0x90] = a1\n 31199: a1 = u64 [0x30190]\n 31204: u64 [s1 + 0x88] = a1\n 31208: a0 = u64 [0x30188]\n 31213: u64 [s1 + 0x80] = a0\n 31217: ecalli 11 // 'ref_time_left'\n 31219: a1 = u64 [s1 + 0x80]\n 31223: a1 = reverse a1\n 31225: a2 = a1 << 0x20\n 31228: a3 = u64 [s1 + 0x88]\n 31232: a3 = reverse a3\n 31234: a3 = a3 >> 0x20\n 31237: a2 = a2 | a3\n 31240: a3 = a1 >> 0x20\n 31243: a1 = u64 [s1 + 0x90]\n 31247: a4 = reverse a1\n 31249: a1 = 0x30160\n 31254: a5 = a4 << 0x20\n 31257: a3 = a3 | a5\n 31260: a4 = a4 >> 0x20\n 31263: u32 [0x30170] = a4\n 31268: u64 [0x30168] = a3\n 31273: u64 [0x30160] = a2\n 31278: a3 = s1 + 0x7ff\n 31282: a3 = a3 + 0x31\n 31285: u64 [a3 + 104] = 0\n 31288: u64 [a3 + 96] = 0\n 31291: u64 [a3 + 88] = 0\n 31294: a2 = u64 [s1 + 0x60]\n 31297: u64 [a3 + 0x50] = a2\n 31300: u32 [a3 + 112] = 0\n 31303: a0 = a0 >u 0x8fc\n 31307: a2 = -a0\n 31309: u64 [a3 + 0xa8] = a2\n 31313: u64 [a3 + 0xa0] = a2\n 31317: u64 [a3 + 0x98] = a2\n 31321: u64 [a3 + 0x90] = a2\n 31325: a1 = a1 << 0x20\n 31328: a1 = a1 >> 0x20\n 31331: a0 = a0 << 0x23\n 31334: a0 = a0 | a1\n 31337: a1 = s1 + 0x7ff\n 31341: a1 = a1 + 0x81\n 31345: a1 = a1 << 0x20\n 31348: a1 = a1 >> 0x20\n 31351: a2 = s1 + 0x7ff\n 31355: a2 = a2 + 0xc1\n 31359: a2 = a2 << 0x20\n 31362: a3 = a2 | a1\n 31365: a4 = u64 [s1 + 0x30]\n 31368: a4 = a4 << 0x20\n 31371: a4 = a4 >> 0x20\n 31374: a1 = s1 + 0x7ff\n 31378: a1 = a1 + 0xa1\n 31382: a1 = a1 << 0x20\n 31385: a5 = a1 | a4\n 31388: a1 = 0xffffffffffffffff\n 31391: a2 = 0xffffffffffffffff\n 31394: ecalli 0 // 'call'\n 31395: u64 [s1 + 0x90] = a0\n 31399: ecalli 13 // 'return_data_size'\n 31401: fallthrough\n      : @1192 (gas: 1)\n 31402: jump @1203 if a0 == 0\n      : @1193 (gas: 5)\n 31406: ecalli 13 // 'return_data_size'\n 31408: u64 [s1 + 0x58] = a0\n 31411: a0 = s1 + 0x260\n 31415: a1 = 0x40\n 31418: ra = 1238, jump @7\n      : @1194 [@dyn 619] (gas: 29)\n 31424: a5 = u64 [s1 + 0x278]\n 31428: u64 [s1 + 0x78] = a5\n 31431: t0 = u64 [s1 + 0x270]\n 31435: u64 [s1 + 0x50] = t0\n 31438: t1 = u64 [s1 + 0x268]\n 31442: u64 [s1 + 0x80] = t1\n 31446: t2 = u64 [s1 + 0x260]\n 31450: u64 [s1 + 0x88] = t2\n 31454: a1 = u64 [s1 + 0x58]\n 31457: a0 = a1 + 0x1f\n 31460: a1 = a0 <u a1\n 31463: a0 = a0 & 0xffffffffffffffe0\n 31466: a2 = a0 + 0x20\n 31469: a0 = a2 <u a0\n 31472: a3 = a1 + a0\n 31475: a4 = a3 <u a1\n 31478: a4 = a0 if a0 == 0\n 31481: u64 [s1 + 568] = 0\n 31485: u64 [s1 + 0x220] = a2\n 31489: a2 = s1 + 0x200\n 31493: u64 [a2 + 0x58] = a5\n 31496: u64 [s1 + 0x250] = t0\n 31500: u64 [s1 + 0x248] = t1\n 31504: u64 [s1 + 0x240] = t2\n 31508: u64 [a2 + 0x28] = a3\n 31511: a0 = s1 + 0x240\n 31515: a1 = s1 + 0x220\n 31519: u64 [a2 + 0x30] = a4\n 31522: ra = 1240, jump @1072\n      : @1195 [@dyn 620] (gas: 12)\n 31528: a0 = u64 [s1 + 0x88]\n 31532: a1 = u64 [s1 + 0x78]\n 31535: a2 = u64 [s1 + 0x80]\n 31539: a2 = a2 | a1\n 31542: a3 = u64 [s1 + 0x50]\n 31545: a1 = a0 | a3\n 31548: a1 = a1 | a2\n 31551: a1 = a1 >> 0x20\n 31554: a2 = a2 | a3\n 31557: a2 = a2 << 0x20\n 31560: a1 = a1 | a2\n 31563: jump @1226 if a1 != 0\n      : @1196 (gas: 7)\n 31567: u64 [s1 + 536] = 0\n 31571: u64 [s1 + 528] = 0\n 31575: u64 [s1 + 520] = 0\n 31579: a1 = s1 + 0x200\n 31583: a2 = u64 [s1 + 0x58]\n 31586: u64 [s1 + 0x200] = a2\n 31590: ra = 1242, jump @9\n      : @1197 [@dyn 621] (gas: 2)\n 31596: ecalli 13 // 'return_data_size'\n 31598: fallthrough\n      : @1198 (gas: 10)\n 31599: a3 = u64 [s1 + 0x88]\n 31603: a1 = u64 [s1 + 0x78]\n 31606: a2 = u64 [s1 + 0x50]\n 31609: a1 = a1 | a2\n 31612: a2 = 0xffffffe0\n 31622: a2 = a3 <u a2\n 31625: a4 = u64 [s1 + 0x80]\n 31629: a2 = 0 if a4 != 0\n 31631: a2 = 0 if a1 != 0\n 31633: jump @1226 if a2 == 0\n      : @1199 (gas: 3)\n 31637: a1 = a0\n 31639: a0 = a0 >> 0x20\n 31642: jump @1226 if a0 != 0\n      : @1200 (gas: 7)\n 31646: i32 a0 = a3 + 0x20\n 31649: a2 = a1\n 31651: u64 [s1 + 0x80] = a1\n 31655: i32 a1 = a1 + 0\n 31657: u64 [s1 + 0x88] = a1\n 31661: a1 = a2\n 31663: ra = 1244, jump @20\n      : @1201 [@dyn 622] (gas: 10)\n 31669: a1 = s1 + 0x7ff\n 31673: a1 = a1 + 0x31\n 31676: a2 = u64 [s1 + 0x80]\n 31680: u32 [a1 + 0xb0] = a2\n 31684: i32 a0 = a0 + 0\n 31686: a1 = s1 + 0x1000\n 31690: i32 a1 = a1 + 0xfffffffffffff8e0\n 31694: a2 = 0\n 31696: ecalli 12 // 'return_data_copy'\n 31698: fallthrough\n      : @1202 (gas: 5)\n 31699: a0 = s1 + 0x7ff\n 31703: a0 = a0 + 0x31\n 31706: a0 = i32 [a0 + 0xb0]\n 31710: a1 = u64 [s1 + 0x88]\n 31714: jump @1226 if a0 <u a1\n      : @1203 (gas: 2)\n 31718: a0 = u64 [s1 + 0x90]\n 31722: jump @1232 if a0 != 0\n      : @1204 (gas: 3)\n 31726: a0 = s1 + 0x1c0\n 31730: a1 = 0x40\n 31733: ra = 1246, jump @7\n      : @1205 [@dyn 623] (gas: 6)\n 31739: a4 = s1 + 0x100\n 31743: a0 = u64 [a4 + 0xd8]\n 31747: a1 = u64 [a4 + 0xd0]\n 31751: a2 = u64 [a4 + 0xc8]\n 31755: a3 = u64 [a4 + 0xc0]\n 31759: t0 = 1248, jump @1254\n      : @1206 [@dyn 624] (gas: 1)\n 31765: jump @1226 if a0 != 0\n      : @1207 (gas: 9)\n 31769: u64 [s1 + 440] = 0\n 31773: u64 [s1 + 432] = 0\n 31777: u64 [s1 + 424] = 0\n 31781: a1 = s1 + 0x1a0\n 31785: a0 = u64 [s1 + 0x60]\n 31788: u64 [s1 + 0x1a0] = a0\n 31792: a0 = a3\n 31794: u64 [s1 + 0xb8] = a3\n 31798: ra = 1250, jump @9\n      : @1208 [@dyn 625] (gas: 33)\n 31804: u64 [s1 + 312] = 0\n 31808: u64 [s1 + 304] = 0\n 31812: u64 [s1 + 296] = 0\n 31816: a0 = u64 [s1 + 0x68]\n 31819: u64 [s1 + 0x120] = a0\n 31823: u64 [s1 + 344] = 0\n 31827: u64 [s1 + 336] = 0\n 31831: u64 [s1 + 328] = 0\n 31835: a0 = u64 [s1 + 0x70]\n 31838: u64 [s1 + 0x140] = a0\n 31842: u64 [s1 + 376] = 0\n 31846: a0 = u64 [s1 + 0x98]\n 31850: u64 [s1 + 0x170] = a0\n 31854: a0 = u64 [s1 + 0xa0]\n 31858: u64 [s1 + 0x168] = a0\n 31862: a0 = u64 [0x20128]\n 31867: a1 = u64 [0x20130]\n 31872: a2 = u64 [0x20138]\n 31877: a3 = u64 [s1 + 0xa8]\n 31881: u64 [s1 + 0x160] = a3\n 31885: u64 [s1 + 0x198] = a0\n 31889: u64 [s1 + 0x190] = a1\n 31893: u64 [s1 + 0x188] = a2\n 31897: a0 = u64 [0x20140]\n 31902: a1 = 0x20\n 31905: a2 = s1 + 0x180\n 31909: a3 = s1 + 0x160\n 31913: a4 = s1 + 0x140\n 31917: a5 = s1 + 0x120\n 31921: u64 [s1 + 0x180] = a0\n 31925: a0 = u64 [s1 + 0xb8]\n 31929: ra = 0x4ee\n 31933: jump @17\n      : @1209 (gas: 23)\n 31936: a0 = sp + 0xffffffffffffffe0\n 31939: a5 = a0 & 0xffffffffffffffe0\n 31942: sp = a5\n 31944: a1 = u64 [s1 + 0x10]\n 31947: a0 = a1 + 0x2\n 31950: a1 = a0 <u a1\n 31953: a3 = u64 [s1 + 0x18]\n 31956: a2 = a3 + a1\n 31959: a3 = a2 <u a3\n 31962: a3 = a1 if a1 == 0\n 31965: a1 = u64 [s1 + 0x20]\n 31968: a3 = a3 + a1\n 31971: a1 = a3 <u a1\n 31974: a4 = u64 [s1 + 0x28]\n 31977: a4 = a4 + a1\n 31980: a1 = a5\n 31982: u64 [s1 + 0xb8] = a5\n 31986: u64 [a5 + 0x8] = a2\n 31989: u64 [a5] = a0\n 31991: u64 [a5 + 0x10] = a3\n 31994: u64 [a5 + 0x18] = a4\n 31997: a0 = s1 + 0x340\n 32001: ra = 1252, jump @11\n      : @1210 [@dyn 626] (gas: 24)\n 32007: a4 = s1 + 0x300\n 32011: a0 = u64 [a4 + 0x40]\n 32014: a1 = u64 [a4 + 0x58]\n 32017: a2 = u64 [a4 + 0x48]\n 32020: a3 = u64 [a4 + 0x50]\n 32023: a4 = u64 [s1 + 0x60]\n 32026: a4 = a4 + a0\n 32029: a0 = a4 <u a0\n 32032: a5 = a2 + a0\n 32035: a2 = a5 <u a2\n 32038: a2 = a0 if a0 == 0\n 32041: a2 = a2 + a3\n 32044: a0 = a2 <u a3\n 32047: a0 = a0 + a1\n 32050: a1 = s1 + 0x7ff\n 32054: a1 = a1 + 0x31\n 32057: u64 [a1 + 0xf0] = a4\n 32061: u64 [a1 + 0xf8] = a5\n 32065: u64 [a1 + 0x100] = a2\n 32069: u64 [a1 + 0x108] = a0\n 32073: a1 = s1 + 0x7ff\n 32077: a1 = a1 + 0x121\n 32081: a0 = u64 [s1 + 0xb8]\n 32085: ra = 1254, jump @12\n      : @1211 [@dyn 627] (gas: 3)\n 32091: a0 = s1 + 0x320\n 32095: a1 = 0x40\n 32098: ra = 1256, jump @7\n      : @1212 [@dyn 628] (gas: 6)\n 32104: a4 = s1 + 0x300\n 32108: a0 = u64 [a4 + 0x38]\n 32111: a1 = u64 [a4 + 0x30]\n 32114: a2 = u64 [a4 + 0x28]\n 32117: a3 = u64 [a4 + 0x20]\n 32120: t0 = 1258, jump @1254\n      : @1213 [@dyn 629] (gas: 1)\n 32126: jump @1226 if a0 != 0\n      : @1214 (gas: 9)\n 32130: u64 [s1 + 792] = 0\n 32134: u64 [s1 + 784] = 0\n 32138: u64 [s1 + 776] = 0\n 32142: a1 = s1 + 0x300\n 32146: a0 = u64 [s1 + 0x60]\n 32149: u64 [s1 + 0x300] = a0\n 32153: a0 = a3\n 32155: u64 [s1 + 0xb8] = a3\n 32159: ra = 1260, jump @9\n      : @1215 [@dyn 630] (gas: 32)\n 32165: u64 [s1 + 664] = 0\n 32169: u64 [s1 + 656] = 0\n 32173: u64 [s1 + 648] = 0\n 32177: a0 = u64 [s1 + 0x68]\n 32180: u64 [s1 + 0x280] = a0\n 32184: u64 [s1 + 696] = 0\n 32188: u64 [s1 + 688] = 0\n 32192: u64 [s1 + 680] = 0\n 32196: a0 = u64 [s1 + 0x70]\n 32199: u64 [s1 + 0x2a0] = a0\n 32203: u64 [s1 + 728] = 0\n 32207: a0 = u64 [s1 + 0x98]\n 32211: u64 [s1 + 0x2d0] = a0\n 32215: a0 = u64 [s1 + 0xa0]\n 32219: u64 [s1 + 0x2c8] = a0\n 32223: a0 = u64 [0x20108]\n 32228: a1 = u64 [0x20110]\n 32233: a2 = u64 [0x20118]\n 32238: a3 = u64 [s1 + 0xa8]\n 32242: u64 [s1 + 0x2c0] = a3\n 32246: u64 [s1 + 0x2f8] = a0\n 32250: u64 [s1 + 0x2f0] = a1\n 32254: u64 [s1 + 0x2e8] = a2\n 32258: a0 = u64 [0x20120]\n 32263: a1 = 0x20\n 32266: a2 = s1 + 0x2e0\n 32270: a3 = s1 + 0x2c0\n 32274: a4 = s1 + 0x2a0\n 32278: a5 = s1 + 0x280\n 32282: u64 [s1 + 0x2e0] = a0\n 32286: a0 = u64 [s1 + 0xb8]\n 32290: ra = 1262, jump @17\n      : @1216 [@dyn 631] (gas: 9)\n 32296: sp = s0 + 0xfffffffffffff800\n 32300: sp = sp + 0xfffffffffffffe00\n 32304: sp = sp + 0x208\n 32308: a0 = sp + 0x700\n 32312: ra = u64 [a0 + 0xf0]\n 32316: s0 = u64 [a0 + 0xe8]\n 32320: s1 = u64 [a0 + 0xe0]\n 32324: sp = sp + 0x7f8\n 32328: ret\n      : @1217 (gas: 3)\n 32330: a0 = s1 + 0x3a0\n 32334: a1 = 0x40\n 32337: ra = 1264, jump @7\n      : @1218 [@dyn 632] (gas: 11)\n 32343: a1 = s1 + 0x300\n 32347: a0 = u64 [a1 + 0xb8]\n 32351: u64 [s1 + 0xb0] = a0\n 32355: a0 = u64 [a1 + 0xb0]\n 32359: u64 [s1 + 0xa8] = a0\n 32363: a0 = u64 [a1 + 0xa8]\n 32367: u64 [s1 + 0xa0] = a0\n 32371: a0 = u64 [a1 + 0xa0]\n 32375: u64 [s1 + 0xb8] = a0\n 32379: ecalli 13 // 'return_data_size'\n 32381: fallthrough\n      : @1219 (gas: 12)\n 32382: a1 = u64 [s1 + 0xb0]\n 32386: a2 = u64 [s1 + 0xa0]\n 32390: a1 = a1 | a2\n 32393: a3 = u64 [s1 + 0xa8]\n 32397: a2 = u64 [s1 + 0xb8]\n 32401: a2 = a2 | a3\n 32404: a2 = a2 | a1\n 32407: a2 = a2 >> 0x20\n 32410: a1 = a1 | a3\n 32413: a1 = a1 << 0x20\n 32416: a1 = a1 | a2\n 32419: jump @1226 if a1 != 0\n      : @1220 (gas: 2)\n 32422: a1 = a0 >> 0x20\n 32425: jump @1226 if a1 != 0\n      : @1221 (gas: 6)\n 32428: a1 = a0\n 32430: u64 [s1 + 0xa8] = a0\n 32434: i32 a0 = a0 + 0\n 32436: u64 [s1 + 0xb0] = a0\n 32440: a0 = u64 [s1 + 0xb8]\n 32444: ra = 1266, jump @20\n      : @1222 [@dyn 633] (gas: 10)\n 32450: a1 = s1 + 0x7ff\n 32454: a1 = a1 + 0x31\n 32457: a2 = u64 [s1 + 0xa8]\n 32461: u32 [a1 + 0x190] = a2\n 32465: i32 a0 = a0 + 0\n 32467: a1 = s1 + 0x1000\n 32471: i32 a1 = a1 + 0xfffffffffffff9c0\n 32475: a2 = 0\n 32477: ecalli 12 // 'return_data_copy'\n 32479: fallthrough\n      : @1223 (gas: 5)\n 32480: a0 = s1 + 0x7ff\n 32484: a0 = a0 + 0x31\n 32487: a0 = i32 [a0 + 0x190]\n 32491: a1 = u64 [s1 + 0xb0]\n 32495: jump @1226 if a0 <u a1\n      : @1224 (gas: 2)\n 32498: ecalli 13 // 'return_data_size'\n 32500: fallthrough\n      : @1225 (gas: 3)\n 32501: a1 = a0\n 32503: a0 = a0 >> 0x20\n 32506: jump @1236 if a0 == 0\n      : @1226 (gas: 1)\n 32510: trap\n      : @1227 (gas: 9)\n 32511: u64 [s1 + 208] = 0\n 32515: u64 [s1 + 200] = 0\n 32519: u64 [s1 + 192] = 0\n 32523: a0 = 0xa7a9536d00000000\n 32533: a1 = s1 + 0xc0\n 32537: u64 [s1 + 0xd8] = a0\n 32541: a0 = 0\n 32543: ra = 0x4f4\n 32547: jump @9\n      : @1228 (gas: 9)\n 32550: u64 [s1 + 240] = 0\n 32554: u64 [s1 + 232] = 0\n 32558: u64 [s1 + 224] = 0\n 32562: a0 = 0xafa4e2b600000000\n 32572: a1 = s1 + 0xe0\n 32576: u64 [s1 + 0xf8] = a0\n 32580: a0 = 0\n 32582: ra = 0x4f4\n 32586: jump @9\n      : @1229 (gas: 9)\n 32589: u64 [s1 + 1584] = 0\n 32593: u64 [s1 + 1576] = 0\n 32597: u64 [s1 + 1568] = 0\n 32601: a0 = 0x560ff90000000000\n 32611: a1 = s1 + 0x620\n 32615: u64 [s1 + 0x638] = a0\n 32619: a0 = 0\n 32621: ra = 0x4f4\n 32625: jump @9\n      : @1230 (gas: 9)\n 32628: u64 [s1 + 272] = 0\n 32632: u64 [s1 + 264] = 0\n 32636: u64 [s1 + 256] = 0\n 32640: a0 = 0xf4d678b800000000\n 32650: a1 = s1 + 0x100\n 32654: u64 [s1 + 0x118] = a0\n 32658: a0 = 0\n 32660: ra = 0x4f4\n 32664: jump @9\n      : @1231 (gas: 5)\n 32667: a0 = 0x1\n 32670: a1 = u64 [s1 + 0xb8]\n 32674: a2 = 0\n 32676: ecalli 14 // 'seal_return'\n 32678: fallthrough\n      : @1232 (gas: 8)\n 32679: u64 [s1 + 496] = 0\n 32683: u64 [s1 + 488] = 0\n 32687: u64 [s1 + 480] = 0\n 32691: a0 = 0x90b8ec1800000000\n 32701: a1 = s1 + 0x1e0\n 32705: u64 [s1 + 0x1f8] = a0\n 32709: a0 = 0\n 32711: ra = 1268, jump @9\n      : @1233 [@dyn 634] (gas: 3)\n 32717: a0 = u64 [s1 + 0xb0]\n 32721: a0 = i32 [a0]\n 32723: jump @1235 if a0 >u 31\n      : @1234 (gas: 3)\n 32727: a1 = u64 [s1 + 0xb0]\n 32731: u32 [a1 + 0] = 0x20\n 32734: fallthrough\n      : @1235 (gas: 5)\n 32735: a0 = 0x1\n 32738: a2 = 0x4\n 32741: a1 = u64 [s1 + 0xb8]\n 32745: ecalli 14 // 'seal_return'\n 32747: fallthrough\n      : @1236 (gas: 3)\n 32748: a0 = u64 [s1 + 0xb8]\n 32752: u64 [s1 + 0xb0] = a1\n 32756: ra = 1270, jump @20\n      : @1237 [@dyn 635] (gas: 7)\n 32762: i32 a1 = a0 + 0\n 32764: a2 = i32 [s1 + 0xb0]\n 32768: a0 = 0x1\n 32771: ecalli 14 // 'seal_return'\n 32773: a0 = 0\n 32775: ra = 0x4f8\n 32779: jump @26\n      : @1238 [export #0: 'call'] (gas: 2)\n 32782: a0 = 0\n 32784: ra = 1272, jump @26\n      : @1239 [@dyn 636] [export #1: 'deploy'] (gas: 2)\n 32790: a0 = 0x1\n 32793: ra = 1274, jump @26\n      : @1240 [@dyn 637] (gas: 15)\n 32799: a0 = u64 [a2 + 0x8]\n 32802: a1 = i32 [a2 + 0x10]\n 32805: a2 = u64 [a2]\n 32807: a0 = reverse a0\n 32809: a3 = a0 << 0x20\n 32812: a1 = reverse a1\n 32814: a1 = a1 >> 0x20\n 32817: a3 = a3 | a1\n 32820: a0 = a0 >> 0x20\n 32823: a1 = reverse a2\n 32825: a2 = a1 << 0x20\n 32828: a0 = a0 | a2\n 32831: a1 = a1 >> 0x20\n 32834: a2 = s1 + 0x1078\n 32838: jump [t0]\n      : @1241 (gas: 16)\n 32840: a0 = u64 [a2 + 0x8]\n 32843: a1 = i32 [a2 + 0x10]\n 32846: a2 = u64 [a2]\n 32848: a0 = reverse a0\n 32850: a3 = a0 << 0x20\n 32853: a1 = reverse a1\n 32855: a1 = a1 >> 0x20\n 32858: a3 = a3 | a1\n 32861: a0 = a0 >> 0x20\n 32864: a1 = reverse a2\n 32866: a2 = a1 << 0x20\n 32869: a0 = a0 | a2\n 32872: a1 = a1 >> 0x20\n 32875: a2 = s1 + 0x7ff\n 32879: a2 = a2 + 0x79\n 32882: jump [t0]\n      : @1242 (gas: 15)\n 32884: a0 = u64 [a2 + 0x8]\n 32887: a1 = i32 [a2 + 0x10]\n 32890: a2 = u64 [a2]\n 32892: a0 = reverse a0\n 32894: a3 = a0 << 0x20\n 32897: a1 = reverse a1\n 32899: a1 = a1 >> 0x20\n 32902: a3 = a3 | a1\n 32905: a0 = a0 >> 0x20\n 32908: a1 = reverse a2\n 32910: a2 = a1 << 0x20\n 32913: a0 = a0 | a2\n 32916: a1 = a1 >> 0x20\n 32919: a2 = s1 + 0x1878\n 32923: jump [t0]\n      : @1243 (gas: 20)\n 32925: a3 = u64 [s1 + 0xa8]\n 32929: a0 = u64 [a3 + 0x18]\n 32932: a1 = u64 [a3 + 0x10]\n 32935: a2 = u64 [a3 + 0x8]\n 32938: a3 = u64 [a3]\n 32940: a0 = reverse a0\n 32942: u64 [s1 + 0xa0] = a0\n 32946: a0 = reverse a1\n 32948: u64 [s1 + 0x98] = a0\n 32952: a0 = reverse a2\n 32954: u64 [s1 + 0x90] = a0\n 32958: a0 = reverse a3\n 32960: u64 [s1 + 0x88] = a0\n 32964: a0 = sp + 0xffffffffffffffe0\n 32967: a0 = a0 & 0xffffffffffffffe0\n 32970: u64 [s1 + 0xa8] = a0\n 32974: sp = a0\n 32976: a0 = 0x1078\n 32980: a2 = s1 + a0\n 32983: jump [t0]\n      : @1244 (gas: 26)\n 32985: u64 [s1 + 0xc8] = a0\n 32989: a0 = ra - a3\n 32992: a0 = a0 <u a5\n 32995: a1 = ra <u a3\n 32998: a5 = u64 [s1 + 0x98]\n 33002: a4 = ra - a5\n 33005: a4 = a4 - a1\n 33008: a4 = a4 - a0\n 33011: ra = a4 >>a 0x3f\n 33014: a0 = u64 [s1 + 0x90]\n 33018: a0 = ra & a0\n 33021: a1 = u64 [s1 + 0xa0]\n 33025: t2 = a1 - a0\n 33028: a1 = a1 <u a0\n 33031: t1 = a2 - a1\n 33034: a1 = 0 if a2 != 0\n 33036: a0 = a3 - a1\n 33039: u64 [s1 + 0xa8] = a0\n 33043: a1 = a3 <u a1\n 33046: a1 = a5 - a1\n 33049: a3 = u64 [s1 + 0xf8]\n 33053: a5 = u64 [s1 + 0xf0]\n 33057: a2 = a3 | a5\n 33060: a2 = a2 <u 0x1\n 33063: a4 = u64 [s1 + 0xe0]\n 33067: jump [t0]\n      : @1245 (gas: 18)\n 33069: a3 = u64 [s1 + 0xe0]\n 33073: a0 = u64 [a3 + 0x18]\n 33076: a1 = u64 [a3 + 0x10]\n 33079: a2 = u64 [a3 + 0x8]\n 33082: a3 = u64 [a3]\n 33084: a0 = reverse a0\n 33086: u64 [s1 + 0xd8] = a0\n 33090: a0 = reverse a1\n 33092: u64 [s1 + 0xd0] = a0\n 33096: a0 = reverse a2\n 33098: u64 [s1 + 0xc8] = a0\n 33102: a0 = reverse a3\n 33104: u64 [s1 + 0xc0] = a0\n 33108: a0 = sp + 0xffffffffffffffe0\n 33111: a0 = a0 & 0xffffffffffffffe0\n 33114: u64 [s1 + 0xe0] = a0\n 33118: sp = a0\n 33120: jump [t0]\n      : @1246 (gas: 18)\n 33122: a3 = u64 [s1 + 0x60]\n 33125: a0 = u64 [a3 + 0x18]\n 33128: a1 = u64 [a3 + 0x10]\n 33131: a2 = u64 [a3 + 0x8]\n 33134: a3 = u64 [a3]\n 33136: a0 = reverse a0\n 33138: u64 [s1 + 0x58] = a0\n 33141: a0 = reverse a1\n 33143: u64 [s1 + 0x50] = a0\n 33146: a0 = reverse a2\n 33148: u64 [s1 + 0x48] = a0\n 33151: a0 = reverse a3\n 33153: u64 [s1 + 0x40] = a0\n 33156: a0 = sp + 0xffffffffffffffe0\n 33159: a0 = a0 & 0xffffffffffffffe0\n 33162: u64 [s1 + 0x60] = a0\n 33165: sp = a0\n 33167: jump [t0]\n      : @1247 (gas: 15)\n 33169: a3 = u64 [s1 + 0x58]\n 33172: a0 = u64 [a3 + 0x18]\n 33175: a1 = u64 [a3 + 0x10]\n 33178: a2 = u64 [a3 + 0x8]\n 33181: a3 = u64 [a3]\n 33183: a0 = reverse a0\n 33185: a4 = reverse a1\n 33187: a2 = reverse a2\n 33189: a3 = reverse a3\n 33191: a1 = u64 [s1 + 0x60]\n 33194: u64 [a1 + 0x18] = a3\n 33197: u64 [a1 + 0x10] = a2\n 33200: u64 [a1 + 0x8] = a4\n 33203: u64 [a1] = a0\n 33205: jump [t0]\n      : @1248 (gas: 15)\n 33207: a3 = u64 [s1 + 0xf8]\n 33211: a0 = u64 [a3 + 0x18]\n 33214: a1 = u64 [a3 + 0x10]\n 33217: a2 = u64 [a3 + 0x8]\n 33220: a3 = u64 [a3]\n 33222: a0 = reverse a0\n 33224: a4 = reverse a1\n 33226: a2 = reverse a2\n 33228: a3 = reverse a3\n 33230: a1 = u64 [s1 + 0xe0]\n 33234: u64 [a1 + 0x18] = a3\n 33237: u64 [a1 + 0x10] = a2\n 33240: u64 [a1 + 0x8] = a4\n 33243: u64 [a1] = a0\n 33245: jump [t0]\n      : @1249 (gas: 15)\n 33247: a0 = u64 [a3 + 0x18]\n 33250: a1 = u64 [a3 + 0x10]\n 33253: a2 = u64 [a3 + 0x8]\n 33256: a3 = u64 [a3]\n 33258: a0 = reverse a0\n 33260: a4 = reverse a1\n 33262: a2 = reverse a2\n 33264: a3 = reverse a3\n 33266: a1 = u64 [s1 + 0xa8]\n 33270: u64 [a1 + 0x18] = a3\n 33273: u64 [a1 + 0x10] = a2\n 33276: u64 [a1 + 0x8] = a4\n 33279: u64 [a1] = a0\n 33281: a0 = 0x1000\n 33285: jump [t0]\n      : @1250 (gas: 24)\n 33287: a0 = a1 if a2 == 0\n 33290: a2 = u64 [s1 + 0xb0]\n 33294: a3 = a2\n 33296: a1 = a2\n 33298: a2 = u64 [s1 + 0xc0]\n 33302: a3 = a0 if a2 != 0\n 33305: u64 [s1 + 0xc8] = a3\n 33309: a0 = u64 [s1 + 0xa8]\n 33313: a3 = u64 [s1 + 0x90]\n 33317: a0 = a0 | a3\n 33320: a3 = u64 [s1 + 0x80]\n 33324: a0 = a3 if a5 == 0\n 33327: a4 = u64 [s1 + 0xb8]\n 33331: a3 = a4\n 33333: a3 = a0 if a2 != 0\n 33336: u64 [s1 + 0xc0] = a3\n 33340: a0 = u64 [s1 + 0xd0]\n 33344: a0 = 0 if a5 == 0\n 33346: u64 [s1 + 0xd0] = a0\n 33350: u64 [s1 + 144] = 0x15180\n 33357: a0 = u64 [s1 + 0xf8]\n 33361: a2 = a0 + 0xffffffffffffff80\n 33364: a0 = a4\n 33366: jump [t0]\n      : @1251 (gas: 19)\n 33368: a3 = u64 [s1 + 0xd8]\n 33372: a0 = u64 [a3]\n 33374: a1 = u64 [a3 + 0x8]\n 33377: a2 = u64 [a3 + 0x10]\n 33380: a3 = u64 [a3 + 0x18]\n 33383: a0 = reverse a0\n 33385: a1 = reverse a1\n 33387: a2 = reverse a2\n 33389: a3 = reverse a3\n 33391: a3 = a3 + 0x1\n 33394: a4 = a3 <u 0x1\n 33397: a2 = a2 + a4\n 33400: a4 = a3 | a2\n 33403: a4 = a4 <u 0x1\n 33406: a4 = a4 + a1\n 33409: a1 = a4 <u a1\n 33412: a0 = a0 + a1\n 33415: a1 = s1 + 0x2078\n 33419: jump [t0]\n      : @1252 (gas: 18)\n 33421: a1 = a2 + 0x1\n 33424: u64 [s1 + 0xf8] = a1\n 33428: a0 = a1 <u 0x1\n 33431: a0 = a0 + a3\n 33434: u64 [s1 + 0xf0] = a0\n 33438: a0 = a0 | a1\n 33441: a0 = a0 <u 0x1\n 33444: a0 = a0 + t1\n 33447: u64 [s1 + 0xe0] = a0\n 33451: a0 = a0 <u t1\n 33454: a0 = a0 + ra\n 33457: u64 [s1 + 0xe8] = a0\n 33461: a1 = 0xff - a2\n 33465: u64 [s1 + 0xc0] = a1\n 33469: a2 = 0x80 - a1\n 33473: a0 = u64 [s1 + 0xa0]\n 33477: a1 = u64 [s1 + 0x98]\n 33481: jump [t0]\n      : @1253 (gas: 17)\n 33483: a0 = u64 [a3]\n 33485: a1 = u64 [a3 + 0x8]\n 33488: a2 = u64 [a3 + 0x10]\n 33491: a3 = u64 [a3 + 0x18]\n 33494: a0 = reverse a0\n 33496: a1 = reverse a1\n 33498: a2 = reverse a2\n 33500: a3 = reverse a3\n 33502: a4 = a3 + 0x3\n 33505: a3 = a4 <u a3\n 33508: a5 = a2 + a3\n 33511: a2 = a5 <u a2\n 33514: a2 = a3 if a3 == 0\n 33517: a2 = a2 + a1\n 33520: a1 = a2 <u a1\n 33523: a0 = a0 + a1\n 33526: jump [t0]\n      : @1254 (gas: 8)\n 33528: a0 = a0 | a2\n 33531: a2 = a3 | a1\n 33534: a2 = a2 | a0\n 33537: a2 = a2 >> 0x20\n 33540: a0 = a0 | a1\n 33543: a0 = a0 << 0x20\n 33546: a0 = a0 | a2\n 33549: jump [t0]\n      : @1255 (gas: 5)\n 33551: sp = a0\n 33553: i32 a2 = a0 + 0\n 33555: a1 = 0x40\n 33558: a0 = u64 [s1 + 0xb8]\n 33562: jump [t0]\n      : @1256 (gas: 5)\n 33564: sp = a0\n 33566: i32 a2 = a0 + 0\n 33568: a1 = 0x40\n 33571: a0 = u64 [s1 + 0xe8]\n 33575: jump [t0]\n      : @1257 (gas: 8)\n 33577: a0 = u64 [a2 + 0x8]\n 33580: a1 = i32 [a2 + 0x10]\n 33583: a2 = u64 [a2]\n 33585: a3 = reverse a0\n 33587: a0 = a3 << 0x20\n 33590: a1 = reverse a1\n 33592: a1 = a1 >> 0x20\n 33595: jump [t0]\n      : @1258 (gas: 15)\n 33597: t2 = u64 [s1 + 0xa0]\n 33601: t1 = u64 [s1 + 0x98]\n 33605: u64 [s1 + 184] = 0\n 33609: u64 [s1 + 176] = 0\n 33613: a2 = u64 [s1 + 0x88]\n 33617: a1 = 0 if a2 == 0\n 33619: a0 = 0 if a2 == 0\n 33621: u64 [s1 + 0xa8] = a0\n 33625: a3 = u64 [s1 + 0x90]\n 33629: a2 = a3 + 0xffffffffffffffff\n 33632: u64 [s1 + 0x88] = a2\n 33636: a2 = a3 >u 0\n 33638: a2 = a2 + 0xffffffffffffffff\n 33641: u64 [s1 + 0x80] = a2\n 33645: jump [t0]\n      : @1259 (gas: 5)\n 33647: sp = a0\n 33649: i32 a2 = a0 + 0\n 33651: a1 = 0x40\n 33654: a0 = u64 [s1 + 0xf0]\n 33658: jump [t0]\n      : @1260 (gas: 16)\n 33660: a3 = u64 [s1 + 0xf0]\n 33664: a0 = u64 [a3 + 0x18]\n 33667: a1 = u64 [a3 + 0x10]\n 33670: a2 = u64 [a3 + 0x8]\n 33673: a3 = u64 [a3]\n 33675: a0 = reverse a0\n 33677: a4 = reverse a1\n 33679: a2 = reverse a2\n 33681: a3 = reverse a3\n 33683: a1 = u64 [s1 + 0xf8]\n 33687: u64 [a1 + 0x18] = a3\n 33690: u64 [a1 + 0x10] = a2\n 33693: u64 [a1 + 0x8] = a4\n 33696: u64 [a1] = a0\n 33698: a0 = 0x2000\n 33702: jump [t0]\n      : @1261 (gas: 14)\n 33704: a0 = u64 [a2 + 0x8]\n 33707: a1 = u64 [a2]\n 33709: a2 = i32 [a2 + 0x10]\n 33712: a0 = reverse a0\n 33714: a3 = a0 >> 0x20\n 33717: a1 = reverse a1\n 33719: a4 = a1 << 0x20\n 33722: a3 = a3 | a4\n 33725: a0 = a0 << 0x20\n 33728: a2 = reverse a2\n 33730: a2 = a2 >> 0x20\n 33733: a0 = a0 | a2\n 33736: a1 = a1 >> 0x20\n 33739: jump [t0]\n      : @1262 (gas: 14)\n 33741: a0 = u64 [a2 + 0x8]\n 33744: a1 = i32 [a2 + 0x10]\n 33747: a2 = u64 [a2]\n 33749: a3 = reverse a0\n 33751: a0 = a3 << 0x20\n 33754: a1 = reverse a1\n 33756: a1 = a1 >> 0x20\n 33759: a0 = a0 | a1\n 33762: a3 = a3 >> 0x20\n 33765: a2 = reverse a2\n 33767: a1 = a2 << 0x20\n 33770: a1 = a1 | a3\n 33773: a2 = a2 >> 0x20\n 33776: jump [t0]\n      : @1263 (gas: 12)\n 33778: a2 = t2 >> 0x3f\n 33781: a3 = t1 << 0x1\n 33784: a2 = a2 | a3\n 33787: a3 = t2 << 0x1\n 33790: t2 = u64 [s1 + 0xc8]\n 33794: a4 = t2 >> 0x3f\n 33797: a3 = a3 | a4\n 33800: u64 [s1 + 0xa0] = a3\n 33804: ra = u64 [s1 + 0x80]\n 33808: a0 = t1\n 33810: t1 = ra ^ a2\n 33813: jump [t0]\n      : @1264 (gas: 12)\n 33815: a4 = u64 [s1 + 0x88]\n 33819: a0 = a0 & a4\n 33822: a4 = u64 [s1 + 0x78]\n 33825: a1 = a1 & a4\n 33828: a4 = u64 [s1 + 0x90]\n 33832: a2 = a2 & a4\n 33835: a4 = u64 [s1 + 0x80]\n 33839: a3 = a3 & a4\n 33842: a2 = a2 | a3\n 33845: a0 = a0 | a1\n 33848: a0 = a0 | a2\n 33851: jump [t0]\n      : @1265 (gas: 14)\n 33853: a3 = u64 [s1 + 0xd8]\n 33857: a0 = u64 [a3 + 0x18]\n 33860: a1 = u64 [a3 + 0x10]\n 33863: a2 = u64 [a3 + 0x8]\n 33866: a3 = u64 [a3]\n 33868: a0 = reverse a0\n 33870: u64 [s1 + 0xd8] = a0\n 33874: a0 = reverse a1\n 33876: u64 [s1 + 0xd0] = a0\n 33880: a0 = reverse a2\n 33882: u64 [s1 + 0xc8] = a0\n 33886: a0 = reverse a3\n 33888: u64 [s1 + 0xc0] = a0\n 33892: jump [t0]\n      : @1266 (gas: 10)\n 33894: u64 [s1] = a3\n 33896: u64 [s1 + 0x8] = a2\n 33899: u64 [s1 + 0x10] = a1\n 33902: u64 [s1 + 0x18] = a0\n 33905: sp = s0 + 0xffffffffffffffc0\n 33908: ra = u64 [sp + 0x38]\n 33911: s0 = u64 [sp + 0x30]\n 33914: s1 = u64 [sp + 0x28]\n 33917: sp = sp + 0x40\n 33920: jump [t0]\n      : @1267 (gas: 4)\n 33922: a0 = 0x2078\n 33926: a3 = s1 + a0\n 33929: a4 = a3 + 0x400\n 33933: jump [t0]\n      : @1268 (gas: 12)\n 33935: a1 = a1 << 0x1\n 33938: a4 = u64 [s1 + 0xa8]\n 33942: a3 = a4 >> 0x3f\n 33945: a1 = a1 | a3\n 33948: u64 [s1 + 0x98] = a1\n 33952: a3 = a0 >> 0x3f\n 33955: a0 = a4 << 0x1\n 33958: a3 = a3 | a0\n 33961: a0 = t2 << 0x1\n 33964: a4 = u64 [s1 + 0xc0]\n 33968: a1 = a4 >> 0x3f\n 33971: jump [t0]\n      : @1269 (gas: 16)\n 33973: a4 = u64 [a3]\n 33975: u64 [sp + 0x18] = a4\n 33978: a4 = u64 [a3 + 0x8]\n 33981: u64 [sp + 0x20] = a4\n 33984: a4 = u64 [a3 + 0x10]\n 33987: u64 [sp + 0x28] = a4\n 33990: a3 = u64 [a3 + 0x18]\n 33993: u64 [sp + 0x30] = a3\n 33996: s1 = u64 [a2]\n 33998: a3 = u64 [a2 + 0x8]\n 34001: u64 [sp] = a3\n 34003: a3 = u64 [a2 + 0x10]\n 34006: u64 [sp + 0x8] = a3\n 34009: a2 = u64 [a2 + 0x18]\n 34012: u64 [sp + 0x10] = a2\n 34015: jump [t0]\n      : @1270 (gas: 10)\n 34017: a0 = u64 [sp + 0x10]\n 34020: a1 = u64 [sp + 0x18]\n 34023: a2 = 0x100000000\n 34033: a2 = a2 ^ a0\n 34036: a2 = a2 | a1\n 34039: a3 = a0 >> 0x20\n 34042: a3 = a3 <u 0x1\n 34045: a3 = 0 if a1 != 0\n 34047: a3 = 0 if a2 == 0\n 34049: jump [t0]\n      : @1271 (gas: 4)\n 34051: a0 = 0x1878\n 34055: a3 = s1 + a0\n 34058: a4 = a3 + 0x600\n 34062: jump [t0]\n      : @1272 (gas: 4)\n 34064: a0 = 0x2078\n 34068: a3 = s1 + a0\n 34071: a4 = a3 + 0x200\n 34075: jump [t0]\n      : @1273 (gas: 11)\n 34077: a3 = u64 [s1 + 0xc8]\n 34081: a0 = u64 [a3 + 0x18]\n 34084: a1 = u64 [a3 + 0x10]\n 34087: a2 = u64 [a3 + 0x8]\n 34090: a3 = u64 [a3]\n 34092: a0 = reverse a0\n 34094: u64 [s1 + 0xc0] = a0\n 34098: a0 = reverse a1\n 34100: u64 [s1 + 0xb8] = a0\n 34104: a0 = reverse a2\n 34106: jump [t0]\n      : @1274 (gas: 9)\n 34108: u64 [s1 + 0xc0] = a3\n 34112: a1 = 0 if a4 == 0\n 34114: u64 [s1 + 0xc8] = a1\n 34118: u64 [s1 + 152] = 0x15180\n 34125: a0 = u64 [s1 + 0xf0]\n 34129: a2 = a0 + 0xffffffffffffff80\n 34132: a0 = a5\n 34134: a1 = t1\n 34136: jump [t0]\n      : @1275 (gas: 10)\n 34138: a0 = u64 [a3 + 0x18]\n 34141: a1 = u64 [a3 + 0x10]\n 34144: a2 = u64 [a3 + 0x8]\n 34147: a3 = u64 [a3]\n 34149: a0 = reverse a0\n 34151: a1 = reverse a1\n 34153: a2 = reverse a2\n 34155: a3 = reverse a3\n 34157: a4 = 0x2000\n 34161: jump [t0]\n      : @1276 (gas: 11)\n 34163: a2 = u64 [s1 + 0x88]\n 34167: a1 = a1 | a2\n 34170: a2 = u64 [s1 + 0xf8]\n 34174: a3 = a2 <u 0x80\n 34178: u64 [s1 + 0x88] = a3\n 34182: a4 = u64 [s1 + 0x80]\n 34186: a1 = a4 if a3 == 0\n 34189: a4 = u64 [s1 + 0x98]\n 34193: a4 = a1 if a2 != 0\n 34196: u64 [s1 + 0x98] = a4\n 34200: jump [t0]\n      : @1277 (gas: 10)\n 34202: a2 = u64 [s1 + 0x88]\n 34206: a1 = 0 if a2 == 0\n 34208: a0 = 0 if a2 == 0\n 34210: a3 = u64 [s1 + 0x98]\n 34214: a2 = a3 + 0xffffffffffffffff\n 34217: u64 [s1 + 0x90] = a2\n 34221: a2 = a3 >u 0\n 34223: a2 = a2 + 0xffffffffffffffff\n 34226: u64 [s1 + 0x88] = a2\n 34230: jump [t0]\n      : @1278 (gas: 12)\n 34232: a0 = u64 [sp + 0x18]\n 34235: a1 = u64 [sp + 0x10]\n 34238: a2 = u64 [sp + 0x8]\n 34241: a3 = u64 [sp]\n 34243: a4 = a2 | a0\n 34246: a5 = a3 | a1\n 34249: a5 = a5 | a4\n 34252: a5 = a5 >> 0x20\n 34255: a4 = a4 | a1\n 34258: a4 = a4 << 0x20\n 34261: a4 = a4 | a5\n 34264: jump [t0]\n      : @1279 (gas: 8)\n 34266: a0 = u64 [a4 + 0x98]\n 34270: a1 = u64 [a4 + 0xa0]\n 34274: a2 = u64 [a4 + 0x90]\n 34278: a3 = u64 [a4 + 0x88]\n 34282: a1 = a1 | a2\n 34285: a0 = a0 | a3\n 34288: a0 = a0 | a1\n 34291: jump [t0]\n      : @1280 (gas: 8)\n 34293: a4 = a4 | a2\n 34296: a2 = a0 | a1\n 34299: a2 = a2 | a4\n 34302: a2 = a2 >> 0x20\n 34305: a1 = a1 | a4\n 34308: a1 = a1 << 0x20\n 34311: a1 = a1 | a2\n 34314: jump [t0]\n      : @1281 (gas: 12)\n 34316: a0 = u64 [a5 + 0xa0]\n 34320: a1 = u64 [a5 + 0x98]\n 34324: a2 = u64 [a5 + 0x90]\n 34328: a4 = u64 [a5 + 0x88]\n 34332: a0 = a0 | a2\n 34335: a2 = a4 | a1\n 34338: a2 = a2 | a0\n 34341: a2 = a2 >> 0x20\n 34344: a0 = a0 | a1\n 34347: a0 = a0 << 0x20\n 34350: a0 = a0 | a2\n 34353: jump [t0]\n      : @1282 (gas: 6)\n 34355: a0 = u64 [a3 + 0x18]\n 34358: a1 = u64 [a3 + 0x10]\n 34361: a2 = u64 [a3 + 0x8]\n 34364: a3 = u64 [a3]\n 34366: a0 = reverse a0\n 34368: jump [t0]\n      : @1283 (gas: 9)\n 34370: a0 = u64 [a3 + 0x18]\n 34373: a1 = u64 [a3 + 0x10]\n 34376: a2 = u64 [a3 + 0x8]\n 34379: a3 = u64 [a3]\n 34381: a0 = reverse a0\n 34383: a4 = reverse a1\n 34385: a2 = reverse a2\n 34387: a3 = reverse a3\n 34389: jump [t0]\n      : @1284 (gas: 12)\n 34391: a2 = u64 [sp]\n 34393: a3 = u64 [sp + 0x8]\n 34396: u64 [s1] = a2\n 34398: u64 [s1 + 0x8] = a3\n 34401: u64 [s1 + 0x10] = a0\n 34404: u64 [s1 + 0x18] = a1\n 34407: sp = s0 + 0xffffffffffffffc0\n 34410: ra = u64 [sp + 0x38]\n 34413: s0 = u64 [sp + 0x30]\n 34416: s1 = u64 [sp + 0x28]\n 34419: sp = sp + 0x40\n 34422: jump [t0]\n      : @1285 (gas: 12)\n 34424: a4 = u64 [s1 + 0xd8]\n 34428: a0 = a0 & a4\n 34431: a4 = u64 [s1 + 0xc8]\n 34435: a1 = a1 & a4\n 34438: a4 = u64 [s1 + 0xd0]\n 34442: a2 = a2 & a4\n 34445: a4 = u64 [s1 + 0xc0]\n 34449: a3 = a3 & a4\n 34452: a2 = a2 | a3\n 34455: a0 = a0 | a1\n 34458: a0 = a0 | a2\n 34461: jump [t0]\n      : @1286 (gas: 10)\n 34463: sp = sp + 0xffffffffffffffc0\n 34466: u64 [sp + 0x38] = ra\n 34469: u64 [sp + 0x30] = s0\n 34472: u64 [sp + 0x28] = s1\n 34475: s0 = sp + 0x40\n 34478: sp = sp & 0xffffffffffffffe0\n 34481: s1 = a0\n 34483: i32 a0 = sp + 0\n 34485: a1 = 0x4\n 34488: jump [t0]\n      : @1287 (gas: 4)\n 34490: a0 = 0x1878\n 34494: a3 = s1 + a0\n 34497: a4 = a3 + 0x700\n 34501: jump [t0]\n      : @1288 (gas: 7)\n 34503: a3 = u64 [s1 + 0xf8]\n 34507: a0 = u64 [a3 + 0x18]\n 34510: a1 = u64 [a3 + 0x10]\n 34513: a2 = u64 [a3 + 0x8]\n 34516: a3 = u64 [a3]\n 34518: a5 = reverse a0\n 34520: jump [t0]\n      : @1289 (gas: 6)\n 34522: a0 = a0 + a1\n 34525: a1 = a0 <u a1\n 34528: a1 = a1 + a2\n 34531: a2 = s1 + 0x2078\n 34535: a3 = a2 + 0x200\n 34539: jump [t0]\n      : @1290 (gas: 9)\n 34541: a0 = a0 | a1\n 34544: a1 = u64 [s1 + 0xa8]\n 34548: a0 = a1 if a3 == 0\n 34551: a1 = u64 [s1 + 0xa0]\n 34555: a1 = a0 if a2 != 0\n 34558: u64 [s1 + 0xa0] = a1\n 34562: a0 = u64 [s1 + 0xb8]\n 34566: a1 = u64 [s1 + 0xb0]\n 34570: jump [t0]\n      : @1291 (gas: 8)\n 34572: a0 = u64 [a4 + 0x18]\n 34575: a1 = u64 [a4 + 0x20]\n 34578: a2 = u64 [a4 + 0x10]\n 34581: a3 = u64 [a4 + 0x8]\n 34584: a1 = a1 | a2\n 34587: a0 = a0 | a3\n 34590: a0 = a0 | a1\n 34593: jump [t0]\n      : @1292 (gas: 9)\n 34595: sp = sp + 0xffffffffffffffc0\n 34598: u64 [sp + 0x38] = ra\n 34601: u64 [sp + 0x30] = s0\n 34604: u64 [sp + 0x28] = s1\n 34607: s0 = sp + 0x40\n 34610: sp = sp & 0xffffffffffffffe0\n 34613: s1 = a0\n 34615: i32 a0 = sp + 0\n 34617: jump [t0]\n      : @1293 (gas: 2)\n 34619: a3 = a2 & 0x40\n 34622: jump @1297 if a3 != 0\n      : @1294 (gas: 1)\n 34625: jump @1296 if a2 == 0\n      : @1295 (gas: 6)\n 34628: i32 a3 = 0x40 - a2\n 34631: a3 = a1 << a3\n 34634: a1 = a1 >> a2\n 34637: a0 = a0 >> a2\n 34640: a0 = a0 | a3\n 34643: ret\n      : @1296 (gas: 1)\n 34645: ret\n      : @1297 (gas: 4)\n 34647: a0 = a2 + 0xffffffffffffffc0\n 34650: a0 = a1 >> a0\n 34653: a1 = 0\n 34655: ret\n      : @1298 (gas: 2)\n 34657: a3 = a2 & 0x40\n 34660: jump @1302 if a3 != 0\n      : @1299 (gas: 1)\n 34663: jump @1301 if a2 == 0\n      : @1300 (gas: 6)\n 34666: i32 a3 = 0x40 - a2\n 34669: a3 = a0 >> a3\n 34672: a0 = a0 << a2\n 34675: a1 = a1 << a2\n 34678: a1 = a1 | a3\n 34681: ret\n      : @1301 (gas: 1)\n 34683: ret\n      : @1302 (gas: 4)\n 34685: a1 = a2 + 0xffffffffffffffc0\n 34688: a1 = a0 << a1\n 34691: a0 = 0\n 34693: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"STAKE_PER_DAY()":"4a91f7ae","archiveHabit(uint32)":"b650673a","checkIn(uint32,uint64)":"a0145927","checked(address,uint64)":"a8389e0a","createHabit(bytes32)":"e9714e07","deposit()":"d0e30db0","epochNow()":"222ae786","forceSettle(address,uint64,uint32)":"68188762","funded(address,uint64)":"319bec54","habits(address,uint32)":"99626634","move(uint8,uint8,uint256)":"4f126f03","owner()":"8da5cb5b","prepareDay(uint64)":"48cc36b8","setStakingAdapter(address)":"40729c58","settle(address,uint64,uint32)":"9c14eb6e","settled(address,uint64)":"39c51515","stakingAdapter()":"4cbb98f4","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3","userHabitCounters(address)":"0e08454a","userStates(address)":"0ecc535f"}},"irOptimized":"/// @use-src 0:\"contracts/HabitTracker.sol\"\nobject \"HabitTracker_1011\" {\n    code {\n        {\n            /// @src 0:761:13268  \"contract HabitTracker {...\"\n            let _1 := memoryguard(0xa0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"HabitTracker_1011\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:761:13268  \"contract HabitTracker {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n            /// @src 0:3656:3709  \"if (_treasury == address(0)) revert InvalidTreasury()\"\n            if /** @src 0:3660:3683  \"_treasury == address(0)\" */ iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:3660:3683  \"_treasury == address(0)\" */ value0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1)))\n            /// @src 0:3656:3709  \"if (_treasury == address(0)) revert InvalidTreasury()\"\n            {\n                /// @src 0:3692:3709  \"InvalidTreasury()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3692:3709  \"InvalidTreasury()\" */ shl(227, 0x02979eb9))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:3692:3709  \"InvalidTreasury()\" */ 4)\n            }\n            /// @src 0:3719:3739  \"treasury = _treasury\"\n            mstore(128, value0)\n            /// @src 0:761:13268  \"contract HabitTracker {...\"\n            sstore(/** @src 0:3749:3767  \"owner = msg.sender\" */ 0x01, /** @src 0:761:13268  \"contract HabitTracker {...\" */ or(and(sload(/** @src 0:3749:3767  \"owner = msg.sender\" */ 0x01), /** @src 0:761:13268  \"contract HabitTracker {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:3757:3767  \"msg.sender\" */ caller()))\n            /// @src 0:761:13268  \"contract HabitTracker {...\"\n            let _2 := and(/** @src 0:3859:3888  \"_stakingAdapter != address(0)\" */ value1, /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1))\n            /// @src 0:3855:3964  \"if (_stakingAdapter != address(0)) {...\"\n            if /** @src 0:3859:3888  \"_stakingAdapter != address(0)\" */ iszero(iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ _2))\n            /// @src 0:3855:3964  \"if (_stakingAdapter != address(0)) {...\"\n            {\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 0:761:13268  \"contract HabitTracker {...\" */ not(sub(shl(160, 1), 1))), _2))\n            }\n            let _3 := mload(64)\n            let _4 := datasize(\"HabitTracker_1011_deployed\")\n            codecopy(_3, dataoffset(\"HabitTracker_1011_deployed\"), _4)\n            setimmutable(_3, \"11\", mload(/** @src 0:3719:3739  \"treasury = _treasury\" */ 128))\n            /// @src 0:761:13268  \"contract HabitTracker {...\"\n            return(_3, _4)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 0:\"contracts/HabitTracker.sol\"\n    object \"HabitTracker_1011_deployed\" {\n        code {\n            {\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0e08454a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 4)\n                        mstore(_1, and(sload(keccak256(0, 64)), 0xffffffff))\n                        return(_1, 32)\n                    }\n                    case 0x0ecc535f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:1654:1701  \"mapping(address => UserState) public userStates\" */ 2)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let _2 := sload(/** @src 0:1654:1701  \"mapping(address => UserState) public userStates\" */ dataSlot)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let _3 := sload(/** @src 0:1654:1701  \"mapping(address => UserState) public userStates\" */ add(dataSlot, 1))\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let _4 := sload(/** @src 0:1654:1701  \"mapping(address => UserState) public userStates\" */ add(dataSlot, 2))\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let value := and(sload(/** @src 0:1654:1701  \"mapping(address => UserState) public userStates\" */ add(dataSlot, 3)), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff)\n                        let memPos := mload(64)\n                        mstore(memPos, _2)\n                        mstore(add(memPos, 32), _3)\n                        mstore(add(memPos, 64), _4)\n                        mstore(add(memPos, 96), value)\n                        return(memPos, 128)\n                    }\n                    case 0x222ae786 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let var := 0\n                        /// @src 0:4039:4087  \"return uint64(block.timestamp / SECONDS_PER_DAY)\"\n                        var := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:886:891  \"86400\" */ div(/** @src 0:4053:4068  \"block.timestamp\" */ timestamp(), /** @src 0:886:891  \"86400\" */ 0x015180), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff)\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, var)\n                        return(memPos_1, 32)\n                    }\n                    case 0x319bec54 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value1 := abi_decode_uint64()\n                        mstore(0, and(value0, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:1927:1987  \"mapping(address => mapping(uint64 => uint256)) public funded\" */ 5)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        /// @src 0:1927:1987  \"mapping(address => mapping(uint64 => uint256)) public funded\"\n                        let dataSlot_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:1927:1987  \"mapping(address => mapping(uint64 => uint256)) public funded\" */ value1, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                        mstore(0x20, /** @src 0:1927:1987  \"mapping(address => mapping(uint64 => uint256)) public funded\" */ dataSlot_1)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        let _5 := sload(/** @src 0:1927:1987  \"mapping(address => mapping(uint64 => uint256)) public funded\" */ dataSlot_2)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _5)\n                        return(memPos_2, 32)\n                    }\n                    case 0x39c51515 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value1_1 := abi_decode_uint64()\n                        mstore(0, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:2060:2121  \"mapping(address => mapping(uint64 => uint256)) public settled\" */ 7)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 0:2060:2121  \"mapping(address => mapping(uint64 => uint256)) public settled\"\n                        let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:2060:2121  \"mapping(address => mapping(uint64 => uint256)) public settled\" */ value1_1, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                        mstore(0x20, /** @src 0:2060:2121  \"mapping(address => mapping(uint64 => uint256)) public settled\" */ dataSlot_3)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        let _6 := sload(/** @src 0:2060:2121  \"mapping(address => mapping(uint64 => uint256)) public settled\" */ dataSlot_4)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _6)\n                        return(memPos_3, 32)\n                    }\n                    case 0x40729c58 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        /// @src 0:3469:3512  \"if (msg.sender != owner) revert OnlyOwner()\"\n                        if /** @src 0:3473:3492  \"msg.sender != owner\" */ iszero(eq(/** @src 0:3473:3483  \"msg.sender\" */ caller(), /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(sload(/** @src 0:3487:3492  \"owner\" */ 0x01), /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:3469:3512  \"if (msg.sender != owner) revert OnlyOwner()\"\n                        {\n                            /// @src 0:3501:3512  \"OnlyOwner()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:3501:3512  \"OnlyOwner()\" */ shl(224, 0x5fc483c5))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        let _7 := and(/** @src 0:4239:4264  \"_newAdapter == address(0)\" */ value0_2, /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:4235:4296  \"if (_newAdapter == address(0)) revert InvalidStakingAdapter()\"\n                        if /** @src 0:4239:4264  \"_newAdapter == address(0)\" */ iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ _7)\n                        /// @src 0:4235:4296  \"if (_newAdapter == address(0)) revert InvalidStakingAdapter()\"\n                        {\n                            /// @src 0:4273:4296  \"InvalidStakingAdapter()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:4273:4296  \"InvalidStakingAdapter()\" */ shl(225, 0x6eba82c9))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        let _8 := sload(0)\n                        sstore(0, or(and(_8, shl(160, 0xffffffffffffffffffffffff)), _7))\n                        /// @src 0:4420:4466  \"StakingAdapterUpdated(oldAdapter, _newAdapter)\"\n                        log3(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 0, /** @src 0:4420:4466  \"StakingAdapterUpdated(oldAdapter, _newAdapter)\" */ 0x258ff515b65e53911071aed3f954e1f58eca37dce2ed4a50766f00c9d0161048, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(_8, sub(shl(160, 1), 1)), /** @src 0:4420:4466  \"StakingAdapterUpdated(oldAdapter, _newAdapter)\" */ _7)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        return(0, 0)\n                    }\n                    case 0x48cc36b8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := 0\n                        value_1 := calldataload(4)\n                        let _9 := and(value_1, 0xffffffffffffffff)\n                        if iszero(eq(value_1, _9)) { revert(0, 0) }\n                        /// @src 0:8278:8288  \"epochNow()\"\n                        let var_1 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                        /// @src 0:4039:4087  \"return uint64(block.timestamp / SECONDS_PER_DAY)\"\n                        var_1 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:886:891  \"86400\" */ div(/** @src 0:4053:4068  \"block.timestamp\" */ timestamp(), /** @src 0:886:891  \"86400\" */ 0x015180), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff)\n                        /// @src 0:8265:8311  \"if (epoch != epochNow()) revert InvalidEpoch()\"\n                        if /** @src 0:8269:8288  \"epoch != epochNow()\" */ iszero(eq(/** @src 0:761:13268  \"contract HabitTracker {...\" */ _9, /** @src 0:8269:8288  \"epoch != epochNow()\" */ var_1))\n                        /// @src 0:8265:8311  \"if (epoch != epochNow()) revert InvalidEpoch()\"\n                        {\n                            /// @src 0:8297:8311  \"InvalidEpoch()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:8297:8311  \"InvalidEpoch()\" */ shl(224, 0xd5b25b63))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        mstore(0, /** @src 0:8367:8377  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:8356:8366  \"userStates\" */ 0x02)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        mstore(0, /** @src 0:8367:8377  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, 4)\n                        let value_2 := and(sload(keccak256(0, 64)), 0xffffffff)\n                        /// @src 0:8442:8460  \"uint32 fundedCount\"\n                        let var_fundedCount := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                        /// @src 0:8442:8460  \"uint32 fundedCount\"\n                        var_fundedCount := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                        /// @src 0:8470:8494  \"uint32 insufficientCount\"\n                        let var_insufficientCount := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                        /// @src 0:8470:8494  \"uint32 insufficientCount\"\n                        var_insufficientCount := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                        mstore(0, /** @src 0:8367:8377  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:8527:8533  \"funded\" */ 0x05)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        /// @src 0:8527:8552  \"funded[msg.sender][epoch]\"\n                        let dataSlot_7 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _9)\n                        mstore(0x20, /** @src 0:8527:8545  \"funded[msg.sender]\" */ dataSlot_6)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_7 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        /// @src 0:8504:8552  \"uint256 fundedBitmap = funded[msg.sender][epoch]\"\n                        let var_fundedBitmap := /** @src 0:761:13268  \"contract HabitTracker {...\" */ sload(/** @src 0:8527:8552  \"funded[msg.sender][epoch]\" */ dataSlot_7)\n                        /// @src 0:8576:8588  \"uint32 i = 1\"\n                        let var_i := /** @src 0:8587:8588  \"1\" */ 0x01\n                        /// @src 0:8571:9440  \"for (uint32 i = 1; i <= count;) {...\"\n                        for { }\n                        /** @src 0:8587:8588  \"1\" */ 0x01\n                        /// @src 0:8576:8588  \"uint32 i = 1\"\n                        { }\n                        {\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            let _10 := and(/** @src 0:8590:8600  \"i <= count\" */ var_i, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff)\n                            /// @src 0:8590:8600  \"i <= count\"\n                            if gt(/** @src 0:761:13268  \"contract HabitTracker {...\" */ _10, /** @src 0:8590:8600  \"i <= count\" */ value_2) { break }\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            mstore(0, /** @src 0:8367:8377  \"msg.sender\" */ caller())\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            mstore(32, /** @src 0:8639:8645  \"habits\" */ 0x03)\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            let dataSlot_8 := keccak256(0, 64)\n                            /// @src 0:8639:8660  \"habits[msg.sender][i]\"\n                            let dataSlot_9 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _10)\n                            mstore(0x20, /** @src 0:8639:8657  \"habits[msg.sender]\" */ dataSlot_8)\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            dataSlot_9 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                            let _11 := sload(/** @src 0:8692:8706  \"habit.archived\" */ add(/** @src 0:8639:8660  \"habits[msg.sender][i]\" */ dataSlot_9, /** @src 0:8587:8588  \"1\" */ 0x01))\n                            /// @src 0:8691:8735  \"!habit.archived && habit.createdAtEpoch != 0\"\n                            let expr := /** @src 0:8691:8706  \"!habit.archived\" */ iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ and(shr(64, _11), 0xff))\n                            /// @src 0:8691:8735  \"!habit.archived && habit.createdAtEpoch != 0\"\n                            if expr\n                            {\n                                expr := /** @src 0:8710:8735  \"habit.createdAtEpoch != 0\" */ iszero(iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ and(_11, 0xffffffffffffffff)))\n                            }\n                            /// @src 0:8687:9399  \"if (!habit.archived && habit.createdAtEpoch != 0) {...\"\n                            if expr\n                            {\n                                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                                let result := shl(_10, /** @src 0:8587:8588  \"1\" */ 0x01)\n                                /// @src 0:8811:9385  \"if (fundedBitmap & mask == 0) { // Check if not already funded...\"\n                                if /** @src 0:8815:8839  \"fundedBitmap & mask == 0\" */ iszero(/** @src 0:8815:8834  \"fundedBitmap & mask\" */ and(var_fundedBitmap, result))\n                                /// @src 0:8811:9385  \"if (fundedBitmap & mask == 0) { // Check if not already funded...\"\n                                {\n                                    /// @src 0:761:13268  \"contract HabitTracker {...\"\n                                    let _12 := sload(/** @src 0:8898:8918  \"state.depositBalance\" */ dataSlot_5)\n                                    /// @src 0:8894:9367  \"if (state.depositBalance >= STAKE_PER_DAY) {...\"\n                                    switch /** @src 0:8898:8935  \"state.depositBalance >= STAKE_PER_DAY\" */ iszero(lt(_12, /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000))\n                                    case /** @src 0:8894:9367  \"if (state.depositBalance >= STAKE_PER_DAY) {...\" */ 0 {\n                                        /// @src 0:9323:9342  \"insufficientCount++\"\n                                        var_insufficientCount := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(add(/** @src 0:9323:9342  \"insufficientCount++\" */ var_insufficientCount, /** @src 0:8587:8588  \"1\" */ 0x01), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff)\n                                    }\n                                    default /// @src 0:8894:9367  \"if (state.depositBalance >= STAKE_PER_DAY) {...\"\n                                    {\n                                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                                        sstore(dataSlot_5, add(_12, not(0x8ac7230489e7ffff)))\n                                        /// @src 0:9070:9090  \"state.blockedBalance\"\n                                        let _13 := add(dataSlot_5, /** @src 0:8587:8588  \"1\" */ 0x01)\n                                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                                        sstore(_13, add(sload(/** @src 0:9070:9107  \"state.blockedBalance += STAKE_PER_DAY\" */ _13), /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000))\n                                        /// @src 0:9153:9166  \"fundedCount++\"\n                                        var_fundedCount := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(add(/** @src 0:9153:9166  \"fundedCount++\" */ var_fundedCount, /** @src 0:8587:8588  \"1\" */ 0x01), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff)\n                                        /// @src 0:9218:9238  \"fundedBitmap |= mask\"\n                                        var_fundedBitmap := or(var_fundedBitmap, result)\n                                    }\n                                }\n                            }\n                            /// @src 0:9424:9427  \"i++\"\n                            var_i := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(add(/** @src 0:9424:9427  \"i++\" */ var_i, /** @src 0:8587:8588  \"1\" */ 0x01), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff)\n                        }\n                        mstore(0, /** @src 0:8367:8377  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:8527:8533  \"funded\" */ 0x05)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_10 := keccak256(0, 64)\n                        /// @src 0:9458:9483  \"funded[msg.sender][epoch]\"\n                        let dataSlot_11 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _9)\n                        mstore(0x20, /** @src 0:9458:9476  \"funded[msg.sender]\" */ dataSlot_10)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_11 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        sstore(/** @src 0:9458:9483  \"funded[msg.sender][epoch]\" */ dataSlot_11, /** @src 0:761:13268  \"contract HabitTracker {...\" */ var_fundedBitmap)\n                        /// @src 0:9513:9575  \"DayPrepared(msg.sender, epoch, fundedCount, insufficientCount)\"\n                        let _14 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ mload(64)\n                        mstore(_14, and(var_fundedCount, 0xffffffff))\n                        mstore(add(_14, 32), and(var_insufficientCount, 0xffffffff))\n                        /// @src 0:9513:9575  \"DayPrepared(msg.sender, epoch, fundedCount, insufficientCount)\"\n                        log3(_14, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 64, /** @src 0:9513:9575  \"DayPrepared(msg.sender, epoch, fundedCount, insufficientCount)\" */ 0xc3243be3f452579717c46da4c6f4efdcb6f123b63086b63e337d3984051defb5, /** @src 0:8367:8377  \"msg.sender\" */ caller(), /** @src 0:9513:9575  \"DayPrepared(msg.sender, epoch, fundedCount, insufficientCount)\" */ _9)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        return(0, 0)\n                    }\n                    case 0x4a91f7ae {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x4cbb98f4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_3 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_3)\n                        return(memPos_5, 32)\n                    }\n                    case 0x4f126f03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value_4 := 0\n                        value_4 := calldataload(4)\n                        let _15 := and(value_4, 0xff)\n                        if iszero(eq(value_4, _15)) { revert(0, 0) }\n                        let value_5 := 0\n                        value_5 := calldataload(36)\n                        let _16 := and(value_5, 0xff)\n                        if iszero(eq(value_5, _16)) { revert(0, 0) }\n                        let value_6 := calldataload(68)\n                        /// @src 0:5351:5390  \"if (amount == 0) revert InvalidAmount()\"\n                        if /** @src 0:5355:5366  \"amount == 0\" */ iszero(value_6)\n                        /// @src 0:5351:5390  \"if (amount == 0) revert InvalidAmount()\"\n                        {\n                            /// @src 0:5375:5390  \"InvalidAmount()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:5375:5390  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        /// @src 0:5400:5443  \"if (from == to) revert InvalidBalanceType()\"\n                        if /** @src 0:5404:5414  \"from == to\" */ eq(_15, _16)\n                        /// @src 0:5400:5443  \"if (from == to) revert InvalidBalanceType()\"\n                        {\n                            /// @src 0:5423:5443  \"InvalidBalanceType()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:5423:5443  \"InvalidBalanceType()\" */ shl(225, 0x7e5b1d11))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        /// @src 0:5457:5506  \"from > BALANCE_CLAIMABLE || to > BALANCE_EXTERNAL\"\n                        let expr_1 := /** @src 0:5457:5481  \"from > BALANCE_CLAIMABLE\" */ gt(_15, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 1)\n                        /// @src 0:5457:5506  \"from > BALANCE_CLAIMABLE || to > BALANCE_EXTERNAL\"\n                        if iszero(expr_1)\n                        {\n                            expr_1 := /** @src 0:5485:5506  \"to > BALANCE_EXTERNAL\" */ gt(_16, /** @src 0:1182:1183  \"2\" */ 0x02)\n                        }\n                        /// @src 0:5453:5535  \"if (from > BALANCE_CLAIMABLE || to > BALANCE_EXTERNAL) revert InvalidBalanceType()\"\n                        if expr_1\n                        {\n                            /// @src 0:5515:5535  \"InvalidBalanceType()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:5423:5443  \"InvalidBalanceType()\" */ shl(225, 0x7e5b1d11))\n                            /// @src 0:5515:5535  \"InvalidBalanceType()\"\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        mstore(0, /** @src 0:5591:5601  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:5580:5590  \"userStates\" */ 0x02)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_12 := keccak256(0, 64)\n                        /// @src 0:5651:6003  \"if (from == BALANCE_DEPOSIT) {...\"\n                        switch /** @src 0:5655:5678  \"from == BALANCE_DEPOSIT\" */ iszero(_15)\n                        case /** @src 0:5651:6003  \"if (from == BALANCE_DEPOSIT) {...\" */ 0 {\n                            /// @src 0:5871:5893  \"state.claimableBalance\"\n                            let _17 := add(dataSlot_12, /** @src 0:5580:5590  \"userStates\" */ 0x02)\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            let _18 := sload(/** @src 0:5871:5893  \"state.claimableBalance\" */ _17)\n                            /// @src 0:5867:5932  \"if (state.claimableBalance < amount) revert InsufficientBalance()\"\n                            if /** @src 0:5871:5902  \"state.claimableBalance < amount\" */ lt(_18, value_6)\n                            /// @src 0:5867:5932  \"if (state.claimableBalance < amount) revert InsufficientBalance()\"\n                            {\n                                /// @src 0:5911:5932  \"InsufficientBalance()\"\n                                mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:5911:5932  \"InsufficientBalance()\" */ shl(227, 0x1e9acf17))\n                                revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                            }\n                            sstore(_17, sub(_18, value_6))\n                        }\n                        default /// @src 0:5651:6003  \"if (from == BALANCE_DEPOSIT) {...\"\n                        {\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            let _19 := sload(/** @src 0:5698:5718  \"state.depositBalance\" */ dataSlot_12)\n                            /// @src 0:5694:5757  \"if (state.depositBalance < amount) revert InsufficientBalance()\"\n                            if /** @src 0:5698:5727  \"state.depositBalance < amount\" */ lt(_19, value_6)\n                            /// @src 0:5694:5757  \"if (state.depositBalance < amount) revert InsufficientBalance()\"\n                            {\n                                /// @src 0:5736:5757  \"InsufficientBalance()\"\n                                mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:5911:5932  \"InsufficientBalance()\" */ shl(227, 0x1e9acf17))\n                                /// @src 0:5736:5757  \"InsufficientBalance()\"\n                                revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                            }\n                            sstore(dataSlot_12, sub(_19, value_6))\n                        }\n                        /// @src 0:6051:6333  \"if (to == BALANCE_DEPOSIT) {...\"\n                        switch /** @src 0:6055:6076  \"to == BALANCE_DEPOSIT\" */ iszero(_16)\n                        case /** @src 0:6051:6333  \"if (to == BALANCE_DEPOSIT) {...\" */ 0 {\n                            /// @src 0:6153:6333  \"if (to == BALANCE_CLAIMABLE) {...\"\n                            switch /** @src 0:6157:6180  \"to == BALANCE_CLAIMABLE\" */ eq(_16, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 1)\n                            case /** @src 0:6153:6333  \"if (to == BALANCE_CLAIMABLE) {...\" */ 0 {\n                                /// @src 0:6499:6525  \"to.call{value: amount}(\\\"\\\")\"\n                                let expr_component := call(gas(), /** @src 0:5591:5601  \"msg.sender\" */ caller(), /** @src 0:6499:6525  \"to.call{value: amount}(\\\"\\\")\" */ value_6, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 0, 0, 0)\n                                /// @src 0:6499:6525  \"to.call{value: amount}(\\\"\\\")\"\n                                let data := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _20 := returndatasize()\n                                    if gt(_20, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 36)\n                                    }\n                                    let memPtr := mload(64)\n                                    finalize_allocation(memPtr, add(and(add(_20, 31), not(31)), 32))\n                                    mstore(memPtr, _20)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, 32), 0, returndatasize())\n                                }\n                                /// @src 0:6535:6572  \"if (!success) revert TransferFailed()\"\n                                if /** @src 0:6539:6547  \"!success\" */ iszero(expr_component)\n                                /// @src 0:6535:6572  \"if (!success) revert TransferFailed()\"\n                                {\n                                    /// @src 0:6556:6572  \"TransferFailed()\"\n                                    mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:6556:6572  \"TransferFailed()\" */ shl(227, 0x12171d83))\n                                    revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                                }\n                            }\n                            default /// @src 0:6153:6333  \"if (to == BALANCE_CLAIMABLE) {...\"\n                            {\n                                /// @src 0:6208:6230  \"state.claimableBalance\"\n                                let _21 := add(dataSlot_12, /** @src 0:5580:5590  \"userStates\" */ 0x02)\n                                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                                sstore(_21, add(sload(/** @src 0:6208:6240  \"state.claimableBalance += amount\" */ _21), /** @src 0:761:13268  \"contract HabitTracker {...\" */ value_6))\n                            }\n                        }\n                        default /// @src 0:6051:6333  \"if (to == BALANCE_DEPOSIT) {...\"\n                        {\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            sstore(dataSlot_12, add(sload(/** @src 0:6104:6134  \"state.depositBalance += amount\" */ dataSlot_12), /** @src 0:761:13268  \"contract HabitTracker {...\" */ value_6))\n                        }\n                        /// @src 0:6356:6398  \"BalanceMoved(msg.sender, from, to, amount)\"\n                        let _22 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ mload(64)\n                        mstore(_22, value_6)\n                        /// @src 0:6356:6398  \"BalanceMoved(msg.sender, from, to, amount)\"\n                        log4(_22, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 32, /** @src 0:6356:6398  \"BalanceMoved(msg.sender, from, to, amount)\" */ 0x1a76aaec2e9828be3e61d555cee697fff809245531b81aeaabfc9802480b1f05, /** @src 0:5591:5601  \"msg.sender\" */ caller(), /** @src 0:6356:6398  \"BalanceMoved(msg.sender, from, to, amount)\" */ _15, _16)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        return(0, 0)\n                    }\n                    case 0x61d027b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, and(/** @src 0:897:930  \"address public immutable treasury\" */ loadimmutable(\"11\"), /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_6, 32)\n                    }\n                    case 0x68188762 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let value1_2 := abi_decode_uint64()\n                        /// @src 0:11212:11219  \"habitId\"\n                        fun_settleInternal(value0_3, value1_2, /** @src 0:761:13268  \"contract HabitTracker {...\" */ abi_decode_uint32())\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_7 := and(sload(/** @src 0:979:999  \"address public owner\" */ 1), /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, value_7)\n                        return(memPos_7, 32)\n                    }\n                    case 0x99626634 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        let value_8 := 0\n                        value_8 := calldataload(36)\n                        if iszero(eq(value_8, and(value_8, 0xffffffff))) { revert(0, 0) }\n                        mstore(0, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:1707:1765  \"mapping(address => mapping(uint32 => Habit)) public habits\" */ 3)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_13 := keccak256(0, 64)\n                        /// @src 0:1707:1765  \"mapping(address => mapping(uint32 => Habit)) public habits\"\n                        let dataSlot_14 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:1707:1765  \"mapping(address => mapping(uint32 => Habit)) public habits\" */ value_8, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff))\n                        mstore(0x20, /** @src 0:1707:1765  \"mapping(address => mapping(uint32 => Habit)) public habits\" */ dataSlot_13)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_14 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        let _23 := sload(/** @src 0:1707:1765  \"mapping(address => mapping(uint32 => Habit)) public habits\" */ dataSlot_14)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let _24 := sload(/** @src 0:1707:1765  \"mapping(address => mapping(uint32 => Habit)) public habits\" */ add(dataSlot_14, 1))\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _23)\n                        mstore(add(memPos_8, 32), and(_24, 0xffffffffffffffff))\n                        mstore(add(memPos_8, 64), iszero(iszero(and(shr(64, _24), 0xff))))\n                        return(memPos_8, 96)\n                    }\n                    case 0x9c14eb6e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        let value1_3 := abi_decode_uint64()\n                        let value2 := abi_decode_uint32()\n                        /// @src 0:10647:10657  \"epochNow()\"\n                        let var_2 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                        /// @src 0:4039:4087  \"return uint64(block.timestamp / SECONDS_PER_DAY)\"\n                        var_2 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:886:891  \"86400\" */ div(/** @src 0:4053:4068  \"block.timestamp\" */ timestamp(), /** @src 0:886:891  \"86400\" */ 0x015180), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff)\n                        /// @src 0:10634:10690  \"if (epoch >= epochNow()) revert CannotSettleCurrentDay()\"\n                        if /** @src 0:10638:10657  \"epoch >= epochNow()\" */ iszero(lt(/** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:10638:10657  \"epoch >= epochNow()\" */ value1_3, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff), /** @src 0:10638:10657  \"epoch >= epochNow()\" */ var_2))\n                        /// @src 0:10634:10690  \"if (epoch >= epochNow()) revert CannotSettleCurrentDay()\"\n                        {\n                            /// @src 0:10666:10690  \"CannotSettleCurrentDay()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:10666:10690  \"CannotSettleCurrentDay()\" */ shl(224, 0xcf114bd9))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        /// @src 0:10729:10736  \"habitId\"\n                        fun_settleInternal(value0_5, value1_3, value2)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        return(0, 0)\n                    }\n                    case 0xa0145927 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_6 := abi_decode_t_uint32()\n                        let value1_4 := abi_decode_uint64()\n                        /// @src 0:9844:9854  \"epochNow()\"\n                        let var_3 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                        /// @src 0:4039:4087  \"return uint64(block.timestamp / SECONDS_PER_DAY)\"\n                        var_3 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:886:891  \"86400\" */ div(/** @src 0:4053:4068  \"block.timestamp\" */ timestamp(), /** @src 0:886:891  \"86400\" */ 0x015180), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff)\n                        let _25 := and(/** @src 0:9835:9854  \"epoch != epochNow()\" */ value1_4, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff)\n                        /// @src 0:9831:9877  \"if (epoch != epochNow()) revert InvalidEpoch()\"\n                        if /** @src 0:9835:9854  \"epoch != epochNow()\" */ iszero(eq(/** @src 0:761:13268  \"contract HabitTracker {...\" */ _25, /** @src 0:9835:9854  \"epoch != epochNow()\" */ var_3))\n                        /// @src 0:9831:9877  \"if (epoch != epochNow()) revert InvalidEpoch()\"\n                        {\n                            /// @src 0:9863:9877  \"InvalidEpoch()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:8297:8311  \"InvalidEpoch()\" */ shl(224, 0xd5b25b63))\n                            /// @src 0:9863:9877  \"InvalidEpoch()\"\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        mstore(0, /** @src 0:9916:9926  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:9909:9915  \"habits\" */ 0x03)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_15 := keccak256(0, 64)\n                        /// @src 0:9909:9936  \"habits[msg.sender][habitId]\"\n                        let dataSlot_16 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:9909:9936  \"habits[msg.sender][habitId]\" */ value0_6, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff))\n                        mstore(0x20, /** @src 0:9909:9927  \"habits[msg.sender]\" */ dataSlot_15)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_16 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        let _26 := sload(/** @src 0:9950:9970  \"habit.createdAtEpoch\" */ add(/** @src 0:9909:9936  \"habits[msg.sender][habitId]\" */ dataSlot_16, /** @src 0:9950:9970  \"habit.createdAtEpoch\" */ 1))\n                        /// @src 0:9950:9993  \"habit.createdAtEpoch == 0 || habit.archived\"\n                        let expr_2 := /** @src 0:9950:9975  \"habit.createdAtEpoch == 0\" */ iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ and(_26, 0xffffffffffffffff))\n                        /// @src 0:9950:9993  \"habit.createdAtEpoch == 0 || habit.archived\"\n                        if iszero(expr_2)\n                        {\n                            expr_2 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(shr(64, _26), 0xff)\n                        }\n                        /// @src 0:9946:10017  \"if (habit.createdAtEpoch == 0 || habit.archived) revert HabitNotFound()\"\n                        if expr_2\n                        {\n                            /// @src 0:10002:10017  \"HabitNotFound()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:10002:10017  \"HabitNotFound()\" */ shl(224, 0xa7a9536d))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        let bits := and(value0_6, 0xffffffff)\n                        let result_1 := shl(bits, /** @src 0:9950:9970  \"habit.createdAtEpoch\" */ 1)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(0, /** @src 0:9916:9926  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:10077:10083  \"funded\" */ 0x05)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_17 := keccak256(0, 64)\n                        /// @src 0:10077:10102  \"funded[msg.sender][epoch]\"\n                        let dataSlot_18 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _25)\n                        mstore(0x20, /** @src 0:10077:10095  \"funded[msg.sender]\" */ dataSlot_17)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_18 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        /// @src 0:10073:10137  \"if (funded[msg.sender][epoch] & mask == 0) revert DayNotFunded()\"\n                        if /** @src 0:10077:10114  \"funded[msg.sender][epoch] & mask == 0\" */ iszero(/** @src 0:10077:10109  \"funded[msg.sender][epoch] & mask\" */ and(/** @src 0:761:13268  \"contract HabitTracker {...\" */ sload(/** @src 0:10077:10102  \"funded[msg.sender][epoch]\" */ dataSlot_18), /** @src 0:10077:10109  \"funded[msg.sender][epoch] & mask\" */ result_1))\n                        /// @src 0:10073:10137  \"if (funded[msg.sender][epoch] & mask == 0) revert DayNotFunded()\"\n                        {\n                            /// @src 0:10123:10137  \"DayNotFunded()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:10123:10137  \"DayNotFunded()\" */ shl(225, 0x57d2715b))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        mstore(0, /** @src 0:9916:9926  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:10151:10158  \"checked\" */ 0x06)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_19 := keccak256(0, 64)\n                        /// @src 0:10151:10177  \"checked[msg.sender][epoch]\"\n                        let dataSlot_20 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _25)\n                        mstore(0x20, /** @src 0:10151:10170  \"checked[msg.sender]\" */ dataSlot_19)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_20 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        /// @src 0:10147:10216  \"if (checked[msg.sender][epoch] & mask != 0) revert AlreadyCheckedIn()\"\n                        if /** @src 0:10151:10189  \"checked[msg.sender][epoch] & mask != 0\" */ iszero(iszero(/** @src 0:10151:10184  \"checked[msg.sender][epoch] & mask\" */ and(/** @src 0:761:13268  \"contract HabitTracker {...\" */ sload(/** @src 0:10151:10177  \"checked[msg.sender][epoch]\" */ dataSlot_20), /** @src 0:10151:10184  \"checked[msg.sender][epoch] & mask\" */ result_1)))\n                        /// @src 0:10147:10216  \"if (checked[msg.sender][epoch] & mask != 0) revert AlreadyCheckedIn()\"\n                        {\n                            /// @src 0:10198:10216  \"AlreadyCheckedIn()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:10198:10216  \"AlreadyCheckedIn()\" */ shl(228, 0x0c98289f))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        mstore(0, /** @src 0:9916:9926  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:10151:10158  \"checked\" */ 0x06)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_21 := keccak256(0, 64)\n                        /// @src 0:10235:10261  \"checked[msg.sender][epoch]\"\n                        let dataSlot_22 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _25)\n                        mstore(0x20, /** @src 0:10235:10254  \"checked[msg.sender]\" */ dataSlot_21)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_22 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        sstore(/** @src 0:10235:10261  \"checked[msg.sender][epoch]\" */ dataSlot_22, /** @src 0:10235:10269  \"checked[msg.sender][epoch] |= mask\" */ or(/** @src 0:761:13268  \"contract HabitTracker {...\" */ sload(/** @src 0:10235:10261  \"checked[msg.sender][epoch]\" */ dataSlot_22), /** @src 0:10235:10269  \"checked[msg.sender][epoch] |= mask\" */ result_1))\n                        /// @src 0:10284:10321  \"CheckedIn(msg.sender, habitId, epoch)\"\n                        log4(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 0, /** @src 0:10284:10321  \"CheckedIn(msg.sender, habitId, epoch)\" */ 0xb004bd37af54c30d14936d8a5122253f9711256f1ba035cfd1788f88752ae682, /** @src 0:9916:9926  \"msg.sender\" */ caller(), /** @src 0:10284:10321  \"CheckedIn(msg.sender, habitId, epoch)\" */ bits, _25)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        return(0, 0)\n                    }\n                    case 0xa8389e0a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_7 := abi_decode_address()\n                        let value1_5 := abi_decode_uint64()\n                        mstore(0, and(value0_7, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:1993:2054  \"mapping(address => mapping(uint64 => uint256)) public checked\" */ 6)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_23 := keccak256(0, 64)\n                        /// @src 0:1993:2054  \"mapping(address => mapping(uint64 => uint256)) public checked\"\n                        let dataSlot_24 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:1993:2054  \"mapping(address => mapping(uint64 => uint256)) public checked\" */ value1_5, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                        mstore(0x20, /** @src 0:1993:2054  \"mapping(address => mapping(uint64 => uint256)) public checked\" */ dataSlot_23)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_24 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        let _27 := sload(/** @src 0:1993:2054  \"mapping(address => mapping(uint64 => uint256)) public checked\" */ dataSlot_24)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, _27)\n                        return(memPos_9, 32)\n                    }\n                    case 0xb650673a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_8 := abi_decode_t_uint32()\n                        mstore(0, /** @src 0:7611:7621  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:7604:7610  \"habits\" */ 0x03)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_25 := keccak256(0, 64)\n                        /// @src 0:7604:7631  \"habits[msg.sender][habitId]\"\n                        let dataSlot_26 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:7604:7631  \"habits[msg.sender][habitId]\" */ value0_8, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff))\n                        mstore(0x20, /** @src 0:7604:7622  \"habits[msg.sender]\" */ dataSlot_25)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_26 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        /// @src 0:7645:7665  \"habit.createdAtEpoch\"\n                        let _28 := add(/** @src 0:7604:7631  \"habits[msg.sender][habitId]\" */ dataSlot_26, /** @src 0:7645:7665  \"habit.createdAtEpoch\" */ 1)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let _29 := sload(/** @src 0:7645:7665  \"habit.createdAtEpoch\" */ _28)\n                        /// @src 0:7641:7694  \"if (habit.createdAtEpoch == 0) revert HabitNotFound()\"\n                        if /** @src 0:7645:7670  \"habit.createdAtEpoch == 0\" */ iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ and(_29, 0xffffffffffffffff))\n                        /// @src 0:7641:7694  \"if (habit.createdAtEpoch == 0) revert HabitNotFound()\"\n                        {\n                            /// @src 0:7679:7694  \"HabitNotFound()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:10002:10017  \"HabitNotFound()\" */ shl(224, 0xa7a9536d))\n                            /// @src 0:7679:7694  \"HabitNotFound()\"\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        /// @src 0:7704:7753  \"if (habit.archived) revert HabitAlreadyArchived()\"\n                        if /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(shr(64, _29), 0xff)\n                        /// @src 0:7704:7753  \"if (habit.archived) revert HabitAlreadyArchived()\"\n                        {\n                            /// @src 0:7731:7753  \"HabitAlreadyArchived()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:7731:7753  \"HabitAlreadyArchived()\" */ shl(227, 0x18383099))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        sstore(_28, or(and(_29, not(0xff0000000000000000)), 0x010000000000000000))\n                        mstore(0, /** @src 0:7611:7621  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:7806:7816  \"userStates\" */ 0x02)\n                        /// @src 0:7806:7845  \"userStates[msg.sender].activeHabitCount\"\n                        let _30 := add(/** @src 0:761:13268  \"contract HabitTracker {...\" */ keccak256(0, 64), /** @src 0:7604:7610  \"habits\" */ 0x03)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        sstore(/** @src 0:7806:7847  \"userStates[msg.sender].activeHabitCount--\" */ _30, /** @src 0:761:13268  \"contract HabitTracker {...\" */ or(and(sload(/** @src 0:7806:7847  \"userStates[msg.sender].activeHabitCount--\" */ _30), /** @src 0:761:13268  \"contract HabitTracker {...\" */ not(0xffffffff)), and(and(add(and(sload(/** @src 0:7806:7847  \"userStates[msg.sender].activeHabitCount--\" */ _30), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff), not(0)), 0xffffffff), 0xffffffff)))\n                        /// @src 0:7864:7898  \"HabitArchived(msg.sender, habitId)\"\n                        log3(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 0, /** @src 0:7864:7898  \"HabitArchived(msg.sender, habitId)\" */ 0x0731ac37a2c0967a9c8a91b6ca86ce30e1803b5b39201fee4ea7087db64e4ae3, /** @src 0:7611:7621  \"msg.sender\" */ caller(), /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:7864:7898  \"HabitArchived(msg.sender, habitId)\" */ value0_8, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff))\n                        return(0, 0)\n                    }\n                    case 0xd0e30db0 {\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:4755:4797  \"if (msg.value == 0) revert InvalidAmount()\"\n                        if /** @src 0:4759:4773  \"msg.value == 0\" */ iszero(/** @src 0:4759:4768  \"msg.value\" */ callvalue())\n                        /// @src 0:4755:4797  \"if (msg.value == 0) revert InvalidAmount()\"\n                        {\n                            /// @src 0:4782:4797  \"InvalidAmount()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:5375:5390  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            /// @src 0:4782:4797  \"InvalidAmount()\"\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        mstore(0, /** @src 0:4818:4828  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(0x20, /** @src 0:4807:4817  \"userStates\" */ 0x02)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_27 := keccak256(0, 64)\n                        let _31 := sload(/** @src 0:4807:4857  \"userStates[msg.sender].depositBalance += msg.value\" */ dataSlot_27)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let sum := add(_31, /** @src 0:4759:4768  \"msg.value\" */ callvalue())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        if gt(_31, sum)\n                        {\n                            /// @src 0:886:891  \"86400\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, shl(224, 0x4e487b71))\n                            /// @src 0:886:891  \"86400\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 4, /** @src 0:886:891  \"86400\" */ 0x11)\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:886:891  \"86400\" */ 0x24)\n                        }\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        sstore(dataSlot_27, sum)\n                        /// @src 0:4872:4904  \"Deposited(msg.sender, msg.value)\"\n                        let _32 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ mload(64)\n                        mstore(_32, /** @src 0:4759:4768  \"msg.value\" */ callvalue())\n                        /// @src 0:4872:4904  \"Deposited(msg.sender, msg.value)\"\n                        log2(_32, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x20, /** @src 0:4872:4904  \"Deposited(msg.sender, msg.value)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 0:4818:4828  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        return(0, 0)\n                    }\n                    case 0xe9714e07 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 0:6893:6942  \"if (text == bytes32(0)) revert HabitTextTooLong()\"\n                        if /** @src 0:6897:6915  \"text == bytes32(0)\" */ iszero(value_9)\n                        /// @src 0:6893:6942  \"if (text == bytes32(0)) revert HabitTextTooLong()\"\n                        {\n                            /// @src 0:6924:6942  \"HabitTextTooLong()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:6924:6942  \"HabitTextTooLong()\" */ shl(224, 0xcc67c13b))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        mstore(0, /** @src 0:6998:7008  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, 4)\n                        let dataSlot_28 := keccak256(0, 64)\n                        let value_10 := and(sload(/** @src 0:6978:7009  \"++userHabitCounters[msg.sender]\" */ dataSlot_28), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff)\n                        if eq(value_10, 0xffffffff)\n                        {\n                            /// @src 0:886:891  \"86400\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, shl(224, 0x4e487b71))\n                            /// @src 0:886:891  \"86400\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 4, /** @src 0:886:891  \"86400\" */ 0x11)\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:886:891  \"86400\" */ 0x24)\n                        }\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let ret := add(value_10, 1)\n                        sstore(/** @src 0:6978:7009  \"++userHabitCounters[msg.sender]\" */ dataSlot_28, /** @src 0:761:13268  \"contract HabitTracker {...\" */ or(and(sload(/** @src 0:6978:7009  \"++userHabitCounters[msg.sender]\" */ dataSlot_28), /** @src 0:761:13268  \"contract HabitTracker {...\" */ not(0xffffffff)), and(/** @src 0:6978:7009  \"++userHabitCounters[msg.sender]\" */ ret, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff)))\n                        let _33 := and(/** @src 0:7023:7036  \"habitId > 255\" */ ret, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff)\n                        /// @src 0:7019:7062  \"if (habitId > 255) revert HabitIdTooLarge()\"\n                        if /** @src 0:7023:7036  \"habitId > 255\" */ gt(/** @src 0:761:13268  \"contract HabitTracker {...\" */ _33, /** @src 0:7033:7036  \"255\" */ 0xff)\n                        /// @src 0:7019:7062  \"if (habitId > 255) revert HabitIdTooLarge()\"\n                        {\n                            /// @src 0:7045:7062  \"HabitIdTooLarge()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:7045:7062  \"HabitIdTooLarge()\" */ shl(224, 0xe9987cdd))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        /// @src 0:7187:7197  \"epochNow()\"\n                        let var_4 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0\n                        /// @src 0:4039:4087  \"return uint64(block.timestamp / SECONDS_PER_DAY)\"\n                        var_4 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:886:891  \"86400\" */ div(/** @src 0:4053:4068  \"block.timestamp\" */ timestamp(), /** @src 0:886:891  \"86400\" */ 0x015180), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff)\n                        let memPtr_1 := mload(64)\n                        let newFreePtr := add(memPtr_1, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr_1, value_9)\n                        /// @src 0:7127:7237  \"Habit({...\"\n                        let _34 := add(memPtr_1, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 32)\n                        mstore(_34, var_4)\n                        /// @src 0:7127:7237  \"Habit({...\"\n                        let _35 := add(memPtr_1, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 64)\n                        mstore(_35, 0)\n                        mstore(0, /** @src 0:6998:7008  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:7097:7103  \"habits\" */ 0x03)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let dataSlot_29 := keccak256(0, 64)\n                        /// @src 0:7097:7124  \"habits[msg.sender][habitId]\"\n                        let dataSlot_30 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _33)\n                        mstore(0x20, /** @src 0:7097:7115  \"habits[msg.sender]\" */ dataSlot_29)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        dataSlot_30 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                        sstore(/** @src 0:7097:7124  \"habits[msg.sender][habitId]\" */ dataSlot_30, /** @src 0:761:13268  \"contract HabitTracker {...\" */ mload(memPtr_1))\n                        let memberSlot := add(/** @src 0:7097:7124  \"habits[msg.sender][habitId]\" */ dataSlot_30, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 1)\n                        sstore(memberSlot, or(and(sload(memberSlot), not(0xffffffffffffffff)), and(mload(_34), 0xffffffffffffffff)))\n                        let cleaned := iszero(iszero(mload(_35)))\n                        let _36 := sload(memberSlot)\n                        sstore(memberSlot, or(and(_36, not(0xff0000000000000000)), and(shl(64, cleaned), 0xff0000000000000000)))\n                        mstore(0, /** @src 0:6998:7008  \"msg.sender\" */ caller())\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        mstore(32, /** @src 0:7268:7278  \"userStates\" */ 0x02)\n                        /// @src 0:7268:7307  \"userStates[msg.sender].activeHabitCount\"\n                        let _37 := add(/** @src 0:761:13268  \"contract HabitTracker {...\" */ keccak256(0, 64), /** @src 0:7097:7103  \"habits\" */ 0x03)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        sstore(/** @src 0:7268:7309  \"userStates[msg.sender].activeHabitCount++\" */ _37, /** @src 0:761:13268  \"contract HabitTracker {...\" */ or(and(sload(/** @src 0:7268:7309  \"userStates[msg.sender].activeHabitCount++\" */ _37), /** @src 0:761:13268  \"contract HabitTracker {...\" */ not(0xffffffff)), and(and(add(and(sload(/** @src 0:7268:7309  \"userStates[msg.sender].activeHabitCount++\" */ _37), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff), 1), 0xffffffff), 0xffffffff)))\n                        /// @src 0:7335:7374  \"HabitCreated(msg.sender, habitId, text)\"\n                        let _38 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ mload(64)\n                        mstore(_38, value_9)\n                        /// @src 0:7335:7374  \"HabitCreated(msg.sender, habitId, text)\"\n                        log3(_38, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 32, /** @src 0:7335:7374  \"HabitCreated(msg.sender, habitId, text)\" */ 0x1ef893a6ee29548c033856cb472a6c9745c5430a467e6e1d6bd3c90ea1e6b453, /** @src 0:6998:7008  \"msg.sender\" */ caller(), /** @src 0:7335:7374  \"HabitCreated(msg.sender, habitId, text)\" */ _33)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, _33)\n                        return(memPos_10, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_9 := abi_decode_address()\n                        let _39 := sload(/** @src 0:3487:3492  \"owner\" */ 0x01)\n                        /// @src 0:3469:3512  \"if (msg.sender != owner) revert OnlyOwner()\"\n                        if /** @src 0:3473:3492  \"msg.sender != owner\" */ iszero(eq(/** @src 0:3473:3483  \"msg.sender\" */ caller(), /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(_39, sub(shl(160, 1), 1))))\n                        /// @src 0:3469:3512  \"if (msg.sender != owner) revert OnlyOwner()\"\n                        {\n                            /// @src 0:3501:3512  \"OnlyOwner()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:3501:3512  \"OnlyOwner()\" */ shl(224, 0x5fc483c5))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        let _40 := and(/** @src 0:4561:4583  \"newOwner == address(0)\" */ value0_9, /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:4557:4609  \"if (newOwner == address(0)) revert InvalidTreasury()\"\n                        if /** @src 0:4561:4583  \"newOwner == address(0)\" */ iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ _40)\n                        /// @src 0:4557:4609  \"if (newOwner == address(0)) revert InvalidTreasury()\"\n                        {\n                            /// @src 0:4592:4609  \"InvalidTreasury()\"\n                            mstore(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, /** @src 0:4592:4609  \"InvalidTreasury()\" */ shl(227, 0x02979eb9))\n                            revert(/** @src 0:761:13268  \"contract HabitTracker {...\" */ 0, 4)\n                        }\n                        sstore(/** @src 0:3487:3492  \"owner\" */ 0x01, /** @src 0:761:13268  \"contract HabitTracker {...\" */ or(and(_39, shl(160, 0xffffffffffffffffffffffff)), _40))\n                        return(0, 0)\n                    }\n                }\n                if iszero(calldatasize()) { stop() }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_uint64() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n            }\n            function abi_decode_uint32() -> value\n            {\n                value := calldataload(68)\n                if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n            }\n            function abi_decode_t_uint32() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            /// @ast-id 1005 @src 0:11627:13090  \"function _settleInternal(address user, uint64 epoch, uint32 habitId) private {...\"\n            function fun_settleInternal(var_user, var_epoch, var_habitId)\n            {\n                /// @src 0:11718:11730  \"habits[user]\"\n                let dataSlot := /** @src -1:-1:-1 */ 0\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let _1 := and(var_user, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _1)\n                mstore(0x20, /** @src 0:11718:11724  \"habits\" */ 0x03)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:11718:11739  \"habits[user][habitId]\"\n                let dataSlot_2 := /** @src -1:-1:-1 */ 0\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:11718:11739  \"habits[user][habitId]\" */ var_habitId, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffff))\n                mstore(0x20, /** @src 0:11718:11730  \"habits[user]\" */ dataSlot_1)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:11714:11783  \"if (habits[user][habitId].createdAtEpoch == 0) revert HabitNotFound()\"\n                if /** @src 0:11718:11759  \"habits[user][habitId].createdAtEpoch == 0\" */ iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ and(sload(/** @src 0:11718:11754  \"habits[user][habitId].createdAtEpoch\" */ add(/** @src 0:11718:11739  \"habits[user][habitId]\" */ dataSlot_2, /** @src 0:11718:11754  \"habits[user][habitId].createdAtEpoch\" */ 1)), /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                /// @src 0:11714:11783  \"if (habits[user][habitId].createdAtEpoch == 0) revert HabitNotFound()\"\n                {\n                    /// @src 0:11768:11783  \"HabitNotFound()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:10002:10017  \"HabitNotFound()\" */ shl(224, 0xa7a9536d))\n                    /// @src 0:11768:11783  \"HabitNotFound()\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:11768:11783  \"HabitNotFound()\" */ 4)\n                }\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let bits := and(var_habitId, 0xffffffff)\n                let result := shl(bits, /** @src 0:11718:11754  \"habits[user][habitId].createdAtEpoch\" */ 1)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _1)\n                mstore(0x20, /** @src 0:11843:11849  \"funded\" */ 0x05)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:11843:11862  \"funded[user][epoch]\"\n                let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:11843:11862  \"funded[user][epoch]\" */ var_epoch, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                mstore(0x20, /** @src 0:11843:11855  \"funded[user]\" */ dataSlot_3)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:11839:11897  \"if (funded[user][epoch] & mask == 0) revert DayNotFunded()\"\n                if /** @src 0:11843:11874  \"funded[user][epoch] & mask == 0\" */ iszero(/** @src 0:11843:11869  \"funded[user][epoch] & mask\" */ and(/** @src 0:761:13268  \"contract HabitTracker {...\" */ sload(/** @src 0:11843:11862  \"funded[user][epoch]\" */ dataSlot_4), /** @src 0:11843:11869  \"funded[user][epoch] & mask\" */ result))\n                /// @src 0:11839:11897  \"if (funded[user][epoch] & mask == 0) revert DayNotFunded()\"\n                {\n                    /// @src 0:11883:11897  \"DayNotFunded()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:10123:10137  \"DayNotFunded()\" */ shl(225, 0x57d2715b))\n                    /// @src 0:11883:11897  \"DayNotFunded()\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:11883:11897  \"DayNotFunded()\" */ 4)\n                }\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _1)\n                mstore(0x20, /** @src 0:11911:11918  \"settled\" */ 0x07)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:11911:11931  \"settled[user][epoch]\"\n                let dataSlot_6 := /** @src -1:-1:-1 */ 0\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:11911:11931  \"settled[user][epoch]\" */ var_epoch, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                mstore(0x20, /** @src 0:11911:11924  \"settled[user]\" */ dataSlot_5)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                dataSlot_6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:11907:11968  \"if (settled[user][epoch] & mask != 0) revert AlreadySettled()\"\n                if /** @src 0:11911:11943  \"settled[user][epoch] & mask != 0\" */ iszero(iszero(/** @src 0:11911:11938  \"settled[user][epoch] & mask\" */ and(/** @src 0:761:13268  \"contract HabitTracker {...\" */ sload(/** @src 0:11911:11931  \"settled[user][epoch]\" */ dataSlot_6), /** @src 0:11911:11938  \"settled[user][epoch] & mask\" */ result)))\n                /// @src 0:11907:11968  \"if (settled[user][epoch] & mask != 0) revert AlreadySettled()\"\n                {\n                    /// @src 0:11952:11968  \"AlreadySettled()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:11952:11968  \"AlreadySettled()\" */ shl(232, 5640185))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:11952:11968  \"AlreadySettled()\" */ 4)\n                }\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _1)\n                mstore(0x20, /** @src 0:11911:11918  \"settled\" */ 0x07)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let dataSlot_7 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:11987:12007  \"settled[user][epoch]\"\n                let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:11987:12007  \"settled[user][epoch]\" */ var_epoch, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                mstore(0x20, /** @src 0:11987:12000  \"settled[user]\" */ dataSlot_7)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                sstore(/** @src 0:11987:12007  \"settled[user][epoch]\" */ dataSlot_8, /** @src 0:11987:12015  \"settled[user][epoch] |= mask\" */ or(/** @src 0:761:13268  \"contract HabitTracker {...\" */ sload(/** @src 0:11987:12007  \"settled[user][epoch]\" */ dataSlot_8), /** @src 0:11987:12015  \"settled[user][epoch] |= mask\" */ result))\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _1)\n                mstore(0x20, /** @src 0:12051:12061  \"userStates\" */ 0x02)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let dataSlot_9 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:12143:12163  \"state.blockedBalance\"\n                let _2 := add(dataSlot_9, /** @src 0:11718:11754  \"habits[user][habitId].createdAtEpoch\" */ 1)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let _3 := sload(/** @src 0:12143:12163  \"state.blockedBalance\" */ _2)\n                /// @src 0:12139:12209  \"if (state.blockedBalance < STAKE_PER_DAY) revert InsufficientBalance()\"\n                if /** @src 0:12143:12179  \"state.blockedBalance < STAKE_PER_DAY\" */ lt(_3, /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000)\n                /// @src 0:12139:12209  \"if (state.blockedBalance < STAKE_PER_DAY) revert InsufficientBalance()\"\n                {\n                    /// @src 0:12188:12209  \"InsufficientBalance()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:5911:5932  \"InsufficientBalance()\" */ shl(227, 0x1e9acf17))\n                    /// @src 0:12188:12209  \"InsufficientBalance()\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:12188:12209  \"InsufficientBalance()\" */ 4)\n                }\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                sstore(_2, add(_3, not(0x8ac7230489e7ffff)))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ _1)\n                mstore(0x20, /** @src 0:12293:12300  \"checked\" */ 0x06)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                let dataSlot_10 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:12293:12313  \"checked[user][epoch]\"\n                let dataSlot_11 := /** @src -1:-1:-1 */ 0\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:12293:12313  \"checked[user][epoch]\" */ var_epoch, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                mstore(0x20, /** @src 0:12293:12306  \"checked[user]\" */ dataSlot_10)\n                /// @src 0:761:13268  \"contract HabitTracker {...\"\n                dataSlot_11 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x40)\n                /// @src 0:12289:13084  \"if (checked[user][epoch] & mask != 0) {...\"\n                switch /** @src 0:12293:12325  \"checked[user][epoch] & mask != 0\" */ iszero(iszero(/** @src 0:12293:12320  \"checked[user][epoch] & mask\" */ and(/** @src 0:761:13268  \"contract HabitTracker {...\" */ sload(/** @src 0:12293:12313  \"checked[user][epoch]\" */ dataSlot_11), /** @src 0:12293:12320  \"checked[user][epoch] & mask\" */ result)))\n                case /** @src 0:12289:13084  \"if (checked[user][epoch] & mask != 0) {...\" */ 0 {\n                    /// @src 0:6499:6525  \"to.call{value: amount}(\\\"\\\")\"\n                    let expr_component := call(gas(), /** @src 0:12982:12990  \"treasury\" */ loadimmutable(\"11\"), /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000, /** @src -1:-1:-1 */ 0, 0, 0, 0)\n                    /// @src 0:6499:6525  \"to.call{value: amount}(\\\"\\\")\"\n                    let data := /** @src -1:-1:-1 */ 0\n                    /// @src 0:761:13268  \"contract HabitTracker {...\"\n                    switch returndatasize()\n                    case 0 { data := 96 }\n                    default {\n                        let _4 := returndatasize()\n                        if gt(_4, 0xffffffffffffffff)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x24)\n                        }\n                        let memPtr := mload(0x40)\n                        finalize_allocation(memPtr, add(and(add(_4, 31), not(31)), 0x20))\n                        mstore(memPtr, _4)\n                        data := memPtr\n                        returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ returndatasize())\n                    }\n                    /// @src 0:6535:6572  \"if (!success) revert TransferFailed()\"\n                    if /** @src 0:6539:6547  \"!success\" */ iszero(expr_component)\n                    /// @src 0:6535:6572  \"if (!success) revert TransferFailed()\"\n                    {\n                        /// @src 0:6556:6572  \"TransferFailed()\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:6556:6572  \"TransferFailed()\" */ shl(227, 0x12171d83))\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 0:6556:6572  \"TransferFailed()\" */ 4)\n                    }\n                    /// @src 0:13025:13073  \"SettledFail(user, habitId, epoch, STAKE_PER_DAY)\"\n                    let _5 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ mload(0x40)\n                    mstore(_5, /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000)\n                    /// @src 0:13025:13073  \"SettledFail(user, habitId, epoch, STAKE_PER_DAY)\"\n                    log4(_5, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x20, /** @src 0:13025:13073  \"SettledFail(user, habitId, epoch, STAKE_PER_DAY)\" */ 0xbe6be2b5187a2494043c3b540976811d976bcf8af560c95141c061bac9c206ba, _1, bits, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:13025:13073  \"SettledFail(user, habitId, epoch, STAKE_PER_DAY)\" */ var_epoch, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                }\n                default /// @src 0:12289:13084  \"if (checked[user][epoch] & mask != 0) {...\"\n                {\n                    /// @src 0:12494:12813  \"if (address(stakingAdapter) != address(0)) {...\"\n                    switch /** @src 0:12498:12535  \"address(stakingAdapter) != address(0)\" */ iszero(iszero(/** @src 0:761:13268  \"contract HabitTracker {...\" */ and(sload(/** @src -1:-1:-1 */ 0), /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1))))\n                    case /** @src 0:12494:12813  \"if (address(stakingAdapter) != address(0)) {...\" */ 0 {\n                        /// @src 0:12757:12779  \"state.claimableBalance\"\n                        let _6 := add(dataSlot_9, /** @src 0:12051:12061  \"userStates\" */ 0x02)\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        sstore(_6, add(sload(/** @src 0:12757:12796  \"state.claimableBalance += STAKE_PER_DAY\" */ _6), /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000))\n                    }\n                    default /// @src 0:12494:12813  \"if (address(stakingAdapter) != address(0)) {...\"\n                    {\n                        /// @src 0:761:13268  \"contract HabitTracker {...\"\n                        let cleaned := and(sload(/** @src -1:-1:-1 */ 0), /** @src 0:761:13268  \"contract HabitTracker {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\"\n                        if iszero(extcodesize(cleaned))\n                        {\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\"\n                        let _7 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ mload(0x40)\n                        /// @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\"\n                        mstore(_7, /** @src 0:761:13268  \"contract HabitTracker {...\" */ shl(225, 0x56e4bb97))\n                        mstore(/** @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\" */ add(_7, 4), /** @src 0:761:13268  \"contract HabitTracker {...\" */ _1)\n                        mstore(add(/** @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\" */ _7, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 36), /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000)\n                        /// @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\"\n                        let _8 := call(gas(), cleaned, /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000, /** @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\" */ _7, 68, _7, /** @src -1:-1:-1 */ 0)\n                        /// @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\"\n                        if iszero(_8)\n                        {\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            let pos := mload(0x40)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:761:13268  \"contract HabitTracker {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 0:12555:12618  \"stakingAdapter.stake{value: STAKE_PER_DAY}(user, STAKE_PER_DAY)\"\n                        if _8\n                        {\n                            finalize_allocation(_7, /** @src -1:-1:-1 */ 0)\n                            /// @src 0:761:13268  \"contract HabitTracker {...\"\n                            dataSlot := /** @src -1:-1:-1 */ 0\n                        }\n                    }\n                    /// @src 0:12831:12882  \"SettledSuccess(user, habitId, epoch, STAKE_PER_DAY)\"\n                    let _9 := /** @src 0:761:13268  \"contract HabitTracker {...\" */ mload(0x40)\n                    mstore(_9, /** @src 0:829:837  \"10 ether\" */ 0x8ac7230489e80000)\n                    /// @src 0:12831:12882  \"SettledSuccess(user, habitId, epoch, STAKE_PER_DAY)\"\n                    log4(_9, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0x20, /** @src 0:12831:12882  \"SettledSuccess(user, habitId, epoch, STAKE_PER_DAY)\" */ 0xebd85bf239b4a8f2a28f2390709a11df0f198ec6857e7125e3fdab5c0dba8209, _1, bits, /** @src 0:761:13268  \"contract HabitTracker {...\" */ and(/** @src 0:12831:12882  \"SettledSuccess(user, habitId, epoch, STAKE_PER_DAY)\" */ var_epoch, /** @src 0:761:13268  \"contract HabitTracker {...\" */ 0xffffffffffffffff))\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f8a5adeb46af3cc908ed099485925c8e161605045b4d0f5f3b3101537bd8288864736f6c634300081c0033\"\n    }\n}\n","hash":"e7eb44e1bee8a7f8f5f6ab75520fc1938a66f7f4296ee0c6052e1469fd500927","factoryDependencies":{}}},"contracts/adapters/MoonwellAdapter.sol":{"IComptroller":{"abi":[{"inputs":[{"internalType":"uint8","name":"rewardType","type":"uint8"},{"internalType":"address","name":"holder","type":"address"},{"internalType":"address[]","name":"mTokens","type":"address[]"}],"name":"claimReward","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"rewardType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"mTokens\",\"type\":\"address[]\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Moonwell Comptroller interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/MoonwellAdapter.sol\":\"IComptroller\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/adapters/MoonwellAdapter.sol\":{\"keccak256\":\"0xfe24359fcd185238eabce515e3b777ed18a0bd5551463ec3d37e28ff3dcbd5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e386f9f8a2de7f224829a736130576cb18e68dbb642958309665f62ade2f85c4\",\"dweb:/ipfs/QmZvHrQQ7KxJ4frWsERBkZegqVWt6Dps1psUGvgV3RU5UY\"]},\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0xff215acb9a3b8a764a939626ef6ffd975ed411f991532ada8de923118abdb8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd9c3f4c8b956e7f11b867deb027df0e788cdf40f6c3fad3a9aae551dc6653c\",\"dweb:/ipfs/QmP48raHm1VChRAWYdgq9aSVcyG1qUWD1hawJimyJczHGk\"]}},\"version\":1}","evm":{"methodIdentifiers":{"claimReward(uint8,address,address[])":"744532ae"}},"irOptimized":""},"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal ERC20 interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/MoonwellAdapter.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/adapters/MoonwellAdapter.sol\":{\"keccak256\":\"0xfe24359fcd185238eabce515e3b777ed18a0bd5551463ec3d37e28ff3dcbd5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e386f9f8a2de7f224829a736130576cb18e68dbb642958309665f62ade2f85c4\",\"dweb:/ipfs/QmZvHrQQ7KxJ4frWsERBkZegqVWt6Dps1psUGvgV3RU5UY\"]},\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0xff215acb9a3b8a764a939626ef6ffd975ed411f991532ada8de923118abdb8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd9c3f4c8b956e7f11b867deb027df0e788cdf40f6c3fad3a9aae551dc6653c\",\"dweb:/ipfs/QmP48raHm1VChRAWYdgq9aSVcyG1qUWD1hawJimyJczHGk\"]}},\"version\":1}","evm":{"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb"}},"irOptimized":""},"IMTokenNative":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"exchangeRateStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"redeemTokens","type":"uint256"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"redeemAmount","type":"uint256"}],"name":"redeemUnderlying","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Moonwell mToken interface (native GLMR version - CEther-style)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/MoonwellAdapter.sol\":\"IMTokenNative\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/adapters/MoonwellAdapter.sol\":{\"keccak256\":\"0xfe24359fcd185238eabce515e3b777ed18a0bd5551463ec3d37e28ff3dcbd5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e386f9f8a2de7f224829a736130576cb18e68dbb642958309665f62ade2f85c4\",\"dweb:/ipfs/QmZvHrQQ7KxJ4frWsERBkZegqVWt6Dps1psUGvgV3RU5UY\"]},\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0xff215acb9a3b8a764a939626ef6ffd975ed411f991532ada8de923118abdb8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd9c3f4c8b956e7f11b867deb027df0e788cdf40f6c3fad3a9aae551dc6653c\",\"dweb:/ipfs/QmP48raHm1VChRAWYdgq9aSVcyG1qUWD1hawJimyJczHGk\"]}},\"version\":1}","evm":{"methodIdentifiers":{"balanceOf(address)":"70a08231","exchangeRateStored()":"182df0f5","mint()":"1249c58b","redeem(uint256)":"db006a75","redeemUnderlying(uint256)":"852a12e3"}},"irOptimized":""},"MoonwellAdapter":{"abi":[{"inputs":[{"internalType":"address","name":"_mToken","type":"address"},{"internalType":"address","name":"_comptroller","type":"address"},{"internalType":"address","name":"_habitTracker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"MintFailed","type":"error"},{"inputs":[],"name":"OnlyHabitTracker","type":"error"},{"inputs":[],"name":"RedeemFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mTokens","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mTokens","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"claimRewards","outputs":[{"internalType":"uint256","name":"claimed","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"comptroller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getPendingRewards","outputs":[{"internalType":"uint256","name":"pending","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getStakedAmount","outputs":[{"internalType":"uint256","name":"staked","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"habitTracker","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userStakes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_comptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_habitTracker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyHabitTracker\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RedeemFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mTokens\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mTokens\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pending\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"staked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"habitTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Supports native GLMR staking via mGLMR market Terminology: - Yield Stake: User rewards from successful habits staked here (userStakes) - Yield Rewards: Additional rewards generated from Moonwell (WELL tokens + supply APY) When user completes a habit successfully, their reward is sent here as a yield stake to generate additional yield rewards over time\",\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"Best-effort claim; returns 0 if rewards not activeYield rewards = WELL tokens earned from supplying to Moonwell\",\"returns\":{\"claimed\":\"Amount of yield rewards claimed (0 if none)\"}},\"constructor\":{\"params\":{\"_comptroller\":\"Moonwell Comptroller address\",\"_habitTracker\":\"HabitTracker contract address\",\"_mToken\":\"Moonwell mGLMR token address\"}},\"getPendingRewards(address)\":{\"details\":\"Moonwell doesn't expose claimable yield rewards on-chain; use off-chain calculationYield rewards accumulate automatically in mToken exchange rate\",\"returns\":{\"pending\":\"Always returns 0\"}},\"getStakedAmount(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"staked\":\"Amount of GLMR in yield stake (principal only, excludes yield rewards)\"}},\"stake(address,uint256)\":{\"details\":\"msg.value must equal amount (native token)This converts user rewards into yield stakes that generate yield rewards\",\"params\":{\"amount\":\"Amount of GLMR to stake (user's earned reward)\",\"user\":\"Address of the user whose rewards are being staked\"}},\"unstake(address,uint256)\":{\"details\":\"Redeems mGLMR and sends GLMR back to HabitTrackerReturns both yield stake principal and any accumulated yield rewards\",\"params\":{\"amount\":\"Amount of underlying GLMR to unstake\",\"user\":\"Address of the user whose rewards are being unstaked\"}}},\"title\":\"MoonwellAdapter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim yield rewards (WELL tokens) from Moonwell\"},\"getPendingRewards(address)\":{\"notice\":\"Get pending yield rewards (not supported by Moonwell directly)\"},\"getStakedAmount(address)\":{\"notice\":\"Get user's yield stake amount (in underlying GLMR)\"},\"stake(address,uint256)\":{\"notice\":\"Create yield stake by staking user rewards into Moonwell\"},\"unstake(address,uint256)\":{\"notice\":\"Unstake GLMR from Moonwell (redeem yield stake + accumulated yield rewards)\"}},\"notice\":\"Adapter for HabitTracker to create yield stakes in Moonwell on Moonbeam\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/MoonwellAdapter.sol\":\"MoonwellAdapter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/adapters/MoonwellAdapter.sol\":{\"keccak256\":\"0xfe24359fcd185238eabce515e3b777ed18a0bd5551463ec3d37e28ff3dcbd5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e386f9f8a2de7f224829a736130576cb18e68dbb642958309665f62ade2f85c4\",\"dweb:/ipfs/QmZvHrQQ7KxJ4frWsERBkZegqVWt6Dps1psUGvgV3RU5UY\"]},\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0xff215acb9a3b8a764a939626ef6ffd975ed411f991532ada8de923118abdb8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd9c3f4c8b956e7f11b867deb027df0e788cdf40f6c3fad3a9aae551dc6653c\",\"dweb:/ipfs/QmP48raHm1VChRAWYdgq9aSVcyG1qUWD1hawJimyJczHGk\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 100/65776 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 3789\n// Code size = 13115 bytes\n\n      : @0 (gas: 7)\n     0: sp = sp + 0xffffffffffffffe8\n     3: u64 [sp + 0x10] = ra\n     6: u64 [sp + 0x8] = s0\n     9: u64 [sp] = s1\n    11: s1 = 0x20060\n    16: s0 = i32 [0x20060]\n    21: jump @3 if s0 == 0\n      : @1 (gas: 5)\n    24: a0 = 0x30090\n    29: i32 a0 = a0 + 0\n    31: i32 a1 = s1 + 0\n    33: ecalli 8 // 'get_immutable_data'\n    35: fallthrough\n      : @2 (gas: 3)\n    36: a0 = i32 [0x20060]\n    41: u32 [0x20060] = 0\n    46: jump @4 if a0 <u s0\n      : @3 (gas: 5)\n    49: ra = u64 [sp + 0x10]\n    52: s0 = u64 [sp + 0x8]\n    55: s1 = u64 [sp]\n    57: sp = sp + 0x18\n    60: ret\n      : @4 (gas: 1)\n    62: trap\n      : @5 (gas: 2)\n    63: a1 = i32 [0x20060]\n    68: jump @47 if a1 == 0\n      : @6 (gas: 4)\n    72: a0 = 0x30090\n    77: i32 a0 = a0 + 0\n    79: ecalli 15 // 'set_immutable_data'\n    81: jump @47\n      : @7 (gas: 8)\n    84: sp = sp + 0xfffffffffffffff0\n    87: u64 [sp + 0x8] = ra\n    90: u64 [sp] = s0\n    92: a2 = a1\n    94: s0 = a0\n    96: a1 = 0x20\n    99: a0 = a2\n   101: ra = 2, jump @15\n      : @8 [@dyn 1] (gas: 100)\n   106: a1 = u8 [a0 + 0x1]\n   109: a2 = u8 [a0]\n   111: a3 = u8 [a0 + 0x2]\n   114: a4 = u8 [a0 + 0x3]\n   117: a1 = a1 << 0x8\n   120: a1 = a1 | a2\n   123: a3 = a3 << 0x10\n   126: a4 = a4 << 0x18\n   129: a3 = a3 | a4\n   132: a1 = a1 | a3\n   135: a2 = u8 [a0 + 0x5]\n   138: a3 = u8 [a0 + 0x4]\n   141: a4 = u8 [a0 + 0x6]\n   144: a5 = u8 [a0 + 0x7]\n   147: a2 = a2 << 0x8\n   150: a2 = a2 | a3\n   153: a4 = a4 << 0x10\n   156: a5 = a5 << 0x18\n   159: a4 = a4 | a5\n   162: a2 = a2 | a4\n   165: a2 = a2 << 0x20\n   168: t0 = a2 | a1\n   171: a2 = u8 [a0 + 0x9]\n   174: a3 = u8 [a0 + 0x8]\n   177: a4 = u8 [a0 + 0xa]\n   180: a5 = u8 [a0 + 0xb]\n   183: a2 = a2 << 0x8\n   186: a2 = a2 | a3\n   189: a4 = a4 << 0x10\n   192: a5 = a5 << 0x18\n   195: a4 = a4 | a5\n   198: a2 = a2 | a4\n   201: a3 = u8 [a0 + 0xd]\n   204: a4 = u8 [a0 + 0xc]\n   207: a5 = u8 [a0 + 0xe]\n   210: a1 = u8 [a0 + 0xf]\n   213: a3 = a3 << 0x8\n   216: a3 = a3 | a4\n   219: a5 = a5 << 0x10\n   222: a1 = a1 << 0x18\n   225: a1 = a1 | a5\n   228: a1 = a1 | a3\n   231: a1 = a1 << 0x20\n   234: t1 = a1 | a2\n   237: a1 = u8 [a0 + 0x11]\n   240: a3 = u8 [a0 + 0x10]\n   243: a4 = u8 [a0 + 0x12]\n   246: a5 = u8 [a0 + 0x13]\n   249: a1 = a1 << 0x8\n   252: a1 = a1 | a3\n   255: a4 = a4 << 0x10\n   258: a5 = a5 << 0x18\n   261: a4 = a4 | a5\n   264: a1 = a1 | a4\n   267: a3 = u8 [a0 + 0x15]\n   270: a4 = u8 [a0 + 0x14]\n   273: a5 = u8 [a0 + 0x16]\n   276: a2 = u8 [a0 + 0x17]\n   279: a3 = a3 << 0x8\n   282: a3 = a3 | a4\n   285: a5 = a5 << 0x10\n   288: a2 = a2 << 0x18\n   291: a2 = a2 | a5\n   294: a2 = a2 | a3\n   297: a2 = a2 << 0x20\n   300: a3 = a2 | a1\n   303: a1 = u8 [a0 + 0x19]\n   306: a2 = u8 [a0 + 0x18]\n   309: a4 = u8 [a0 + 0x1a]\n   312: a5 = u8 [a0 + 0x1b]\n   315: a1 = a1 << 0x8\n   318: a1 = a1 | a2\n   321: a4 = a4 << 0x10\n   324: a5 = a5 << 0x18\n   327: a4 = a4 | a5\n   330: a1 = a1 | a4\n   333: a2 = u8 [a0 + 0x1d]\n   336: a4 = u8 [a0 + 0x1c]\n   339: a5 = u8 [a0 + 0x1e]\n   342: a0 = u8 [a0 + 0x1f]\n   345: a2 = a2 << 0x8\n   348: a2 = a2 | a4\n   351: a5 = a5 << 0x10\n   354: a0 = a0 << 0x18\n   357: a0 = a0 | a5\n   360: a0 = a0 | a2\n   363: a0 = a0 << 0x20\n   366: a0 = a0 | a1\n   369: a0 = reverse a0\n   371: a1 = reverse a3\n   373: a2 = reverse t1\n   375: a3 = reverse t0\n   377: u64 [s0 + 0x18] = a3\n   380: u64 [s0 + 0x10] = a2\n   383: u64 [s0 + 0x8] = a1\n   386: u64 [s0] = a0\n   388: ra = u64 [sp + 0x8]\n   391: s0 = u64 [sp]\n   393: sp = sp + 0x10\n   396: ret\n      : @9 (gas: 12)\n   398: sp = sp + 0xffffffffffffffd8\n   401: u64 [sp + 0x20] = ra\n   404: u64 [sp + 0x18] = s0\n   407: u64 [sp + 0x10] = s1\n   410: a2 = u64 [a1]\n   412: u64 [sp + 0x8] = a2\n   415: a2 = u64 [a1 + 0x8]\n   418: u64 [sp] = a2\n   420: s0 = u64 [a1 + 0x10]\n   423: s1 = u64 [a1 + 0x18]\n   426: a1 = 0x20\n   429: ra = 4, jump @15\n      : @10 [@dyn 2] (gas: 71)\n   434: a1 = reverse s1\n   436: a2 = reverse s0\n   438: a3 = u64 [sp]\n   440: a3 = reverse a3\n   442: a4 = u64 [sp + 0x8]\n   445: a4 = reverse a4\n   447: u8 [a0 + 0x18] = a4\n   450: u8 [a0 + 0x10] = a3\n   453: u8 [a0 + 0x8] = a2\n   456: u8 [a0] = a1\n   458: a5 = a4 >> 0x38\n   461: u8 [a0 + 0x1f] = a5\n   464: a5 = a4 >> 0x30\n   467: u8 [a0 + 0x1e] = a5\n   470: a5 = a4 >> 0x28\n   473: u8 [a0 + 0x1d] = a5\n   476: a5 = a4 >> 0x20\n   479: u8 [a0 + 0x1c] = a5\n   482: a5 = a4 >> 0x18\n   485: u8 [a0 + 0x1b] = a5\n   488: a5 = a4 >> 0x10\n   491: u8 [a0 + 0x1a] = a5\n   494: a4 = a4 >> 0x8\n   497: u8 [a0 + 0x19] = a4\n   500: a4 = a3 >> 0x38\n   503: u8 [a0 + 0x17] = a4\n   506: a4 = a3 >> 0x30\n   509: u8 [a0 + 0x16] = a4\n   512: a4 = a3 >> 0x28\n   515: u8 [a0 + 0x15] = a4\n   518: a4 = a3 >> 0x20\n   521: u8 [a0 + 0x14] = a4\n   524: a4 = a3 >> 0x18\n   527: u8 [a0 + 0x13] = a4\n   530: a4 = a3 >> 0x10\n   533: u8 [a0 + 0x12] = a4\n   536: a3 = a3 >> 0x8\n   539: u8 [a0 + 0x11] = a3\n   542: a3 = a2 >> 0x38\n   545: u8 [a0 + 0xf] = a3\n   548: a3 = a2 >> 0x30\n   551: u8 [a0 + 0xe] = a3\n   554: a3 = a2 >> 0x28\n   557: u8 [a0 + 0xd] = a3\n   560: a3 = a2 >> 0x20\n   563: u8 [a0 + 0xc] = a3\n   566: a3 = a2 >> 0x18\n   569: u8 [a0 + 0xb] = a3\n   572: a3 = a2 >> 0x10\n   575: u8 [a0 + 0xa] = a3\n   578: a2 = a2 >> 0x8\n   581: u8 [a0 + 0x9] = a2\n   584: a2 = a1 >> 0x38\n   587: u8 [a0 + 0x7] = a2\n   590: a2 = a1 >> 0x30\n   593: u8 [a0 + 0x6] = a2\n   596: a2 = a1 >> 0x28\n   599: u8 [a0 + 0x5] = a2\n   602: a2 = a1 >> 0x20\n   605: u8 [a0 + 0x4] = a2\n   608: a2 = a1 >> 0x18\n   611: u8 [a0 + 0x3] = a2\n   614: a2 = a1 >> 0x10\n   617: u8 [a0 + 0x2] = a2\n   620: a1 = a1 >> 0x8\n   623: u8 [a0 + 0x1] = a1\n   626: ra = u64 [sp + 0x20]\n   629: s0 = u64 [sp + 0x18]\n   632: s1 = u64 [sp + 0x10]\n   635: sp = sp + 0x28\n   638: ret\n      : @11 (gas: 48)\n   640: sp = sp + 0xffffffffffffffa0\n   643: u64 [sp + 0x58] = ra\n   646: u64 [sp + 0x50] = s0\n   649: u64 [sp + 0x48] = s1\n   652: s0 = sp + 0x60\n   655: sp = sp & 0xffffffffffffffe0\n   658: s1 = a0\n   660: a0 = u64 [a1 + 0x18]\n   663: a2 = u64 [a1 + 0x10]\n   666: a3 = u64 [a1 + 0x8]\n   669: a1 = u64 [a1]\n   671: a0 = reverse a0\n   673: a2 = reverse a2\n   675: a3 = reverse a3\n   677: a1 = reverse a1\n   679: u64 [sp + 0x18] = a1\n   682: u64 [sp + 0x10] = a3\n   685: u64 [sp + 0x8] = a2\n   688: u64 [sp] = a0\n   690: u64 [sp + 56] = 0\n   693: u64 [sp + 48] = 0\n   696: u64 [sp + 40] = 0\n   699: u64 [sp + 32] = 0\n   702: u32 [sp + 64] = 0x20\n   706: i32 a1 = sp + 0\n   708: i32 a3 = sp + 0x20\n   711: i32 a4 = sp + 0x40\n   714: a2 = 0xffffffffffffffff\n   717: a0 = 0\n   719: ecalli 9 // 'get_storage'\n   721: a0 = u64 [sp + 0x38]\n   724: a1 = u64 [sp + 0x30]\n   727: a2 = u64 [sp + 0x28]\n   730: a3 = u64 [sp + 0x20]\n   733: a0 = reverse a0\n   735: a1 = reverse a1\n   737: a2 = reverse a2\n   739: a3 = reverse a3\n   741: u64 [s1 + 0x18] = a3\n   744: u64 [s1 + 0x10] = a2\n   747: u64 [s1 + 0x8] = a1\n   750: u64 [s1] = a0\n   752: sp = s0 + 0xffffffffffffffa0\n   755: ra = u64 [sp + 0x58]\n   758: s0 = u64 [sp + 0x50]\n   761: s1 = u64 [sp + 0x48]\n   764: sp = sp + 0x60\n   767: ret\n      : @12 (gas: 40)\n   769: sp = sp + 0xffffffffffffffa0\n   772: u64 [sp + 0x58] = ra\n   775: u64 [sp + 0x50] = s0\n   778: s0 = sp + 0x60\n   781: sp = sp & 0xffffffffffffffe0\n   784: t0 = u64 [a0]\n   786: a3 = u64 [a0 + 0x8]\n   789: a4 = u64 [a0 + 0x10]\n   792: a0 = u64 [a0 + 0x18]\n   795: t1 = u64 [a1]\n   797: a2 = u64 [a1 + 0x8]\n   800: a5 = u64 [a1 + 0x10]\n   803: a1 = u64 [a1 + 0x18]\n   806: t2 = reverse a0\n   808: a4 = reverse a4\n   810: a3 = reverse a3\n   812: a0 = reverse t0\n   814: t0 = reverse a1\n   816: a5 = reverse a5\n   818: a2 = reverse a2\n   820: a1 = reverse t1\n   822: u64 [sp + 0x18] = a0\n   825: u64 [sp + 0x10] = a3\n   828: u64 [sp + 0x8] = a4\n   831: u64 [sp] = t2\n   833: u64 [sp + 0x38] = a1\n   836: u64 [sp + 0x30] = a2\n   839: u64 [sp + 0x28] = a5\n   842: u64 [sp + 0x20] = t0\n   845: i32 a1 = sp + 0\n   847: i32 a3 = sp + 0x20\n   850: a2 = 0xffffffffffffffff\n   853: a4 = 0x20\n   856: a0 = 0\n   858: ecalli 16 // 'set_storage'\n   860: sp = s0 + 0xffffffffffffffa0\n   863: ra = u64 [sp + 0x58]\n   866: s0 = u64 [sp + 0x50]\n   869: sp = sp + 0x60\n   872: ret\n      : @13 (gas: 24)\n   874: sp = sp + 0xffffffffffffff60\n   878: u64 [sp + 0x98] = ra\n   882: u64 [sp + 0x90] = s0\n   886: u64 [sp + 0x88] = s1\n   890: s0 = sp + 0xa0\n   894: sp = sp & 0xffffffffffffffe0\n   897: a4 = u64 [a3]\n   899: u64 [sp + 0x38] = a4\n   902: a4 = u64 [a3 + 0x8]\n   905: u64 [sp + 0x30] = a4\n   908: a4 = u64 [a3 + 0x10]\n   911: u64 [sp + 0x28] = a4\n   914: a3 = u64 [a3 + 0x18]\n   917: u64 [sp + 0x20] = a3\n   920: a3 = u64 [a2]\n   922: u64 [sp + 0x18] = a3\n   925: a3 = u64 [a2 + 0x8]\n   928: u64 [sp + 0x10] = a3\n   931: a3 = u64 [a2 + 0x10]\n   934: u64 [sp + 0x8] = a3\n   937: a2 = u64 [a2 + 0x18]\n   940: u64 [sp] = a2\n   942: s1 = a1\n   944: ra = 6, jump @15\n      : @14 [@dyn 3] (gas: 35)\n   948: a1 = u64 [sp]\n   950: a1 = reverse a1\n   952: a2 = u64 [sp + 0x8]\n   955: a2 = reverse a2\n   957: a3 = u64 [sp + 0x10]\n   960: a3 = reverse a3\n   962: a4 = u64 [sp + 0x18]\n   965: a4 = reverse a4\n   967: u64 [sp + 0x58] = a4\n   970: u64 [sp + 0x50] = a3\n   973: u64 [sp + 0x48] = a2\n   976: u64 [sp + 0x40] = a1\n   979: a1 = u64 [sp + 0x20]\n   982: a1 = reverse a1\n   984: a2 = u64 [sp + 0x28]\n   987: a2 = reverse a2\n   989: a3 = u64 [sp + 0x30]\n   992: a3 = reverse a3\n   994: a4 = u64 [sp + 0x38]\n   997: a4 = reverse a4\n   999: u64 [sp + 0x78] = a4\n  1002: u64 [sp + 0x70] = a3\n  1005: u64 [sp + 0x68] = a2\n  1008: u64 [sp + 0x60] = a1\n  1011: i32 a2 = a0 + 0\n  1013: i32 a3 = s1 + 0\n  1015: i32 a0 = sp + 0x40\n  1018: a1 = 0x2\n  1021: ecalli 7 // 'deposit_event'\n  1023: sp = s0 + 0xffffffffffffff60\n  1027: ra = u64 [sp + 0x98]\n  1031: s0 = u64 [sp + 0x90]\n  1035: s1 = u64 [sp + 0x88]\n  1039: sp = sp + 0xa0\n  1043: ret\n      : @15 (gas: 2)\n  1045: i32 a2 = a0 >> 0x10\n  1048: jump @20 if a2 != 0\n      : @16 (gas: 4)\n  1051: a1 = a1 + a0\n  1054: i32 a1 = a1 + 0x1f\n  1057: a1 = a1 & 0xffffffffffffffe0\n  1060: jump @20 if a1 >u 65536\n      : @17 (gas: 3)\n  1066: a2 = 0x20068\n  1071: a3 = i32 [0x20068]\n  1076: jump @19 if a3 >=u a1\n      : @18 (gas: 2)\n  1079: u32 [0x20068] = a1\n  1084: fallthrough\n      : @19 (gas: 4)\n  1085: a1 = 0x20070\n  1090: i32 a0 = a0 + 0\n  1092: a0 = a0 + a1\n  1095: ret\n      : @20 (gas: 1)\n  1097: trap\n      : @21 (gas: 6)\n  1098: sp = sp + 0xfffffffffffffff0\n  1101: u64 [sp + 0x8] = ra\n  1104: u64 [sp] = s0\n  1106: s0 = a0 & 0x1\n  1109: ecalli 4 // 'call_data_size'\n  1111: fallthrough\n      : @22 (gas: 2)\n  1112: u32 [0x20064] = a0\n  1117: jump @24 if s0 == 0\n      : @23 (gas: 1)\n  1120: ra = 8, jump @25\n      : @24 [@dyn 4] (gas: 1)\n  1124: ra = 10, jump @50\n      : @25 [@dyn 5] (gas: 15)\n  1129: sp = sp + 0xfffffffffffffda0\n  1133: a0 = sp + 0x200\n  1137: u64 [a0 + 0x58] = ra\n  1140: u64 [a0 + 0x50] = s0\n  1143: u64 [a0 + 0x48] = s1\n  1146: s0 = sp + 0x260\n  1150: sp = sp & 0xffffffffffffffe0\n  1153: a0 = sp + 0x200\n  1157: u64 [a0 + 56] = 0\n  1160: u64 [a0 + 48] = 0\n  1163: u64 [a0 + 40] = 0\n  1166: u64 [a0 + 32] = 0\n  1169: i32 a0 = sp + 0x220\n  1173: ecalli 17 // 'value_transferred'\n  1175: fallthrough\n      : @26 (gas: 9)\n  1176: a4 = sp + 0x200\n  1180: a0 = u64 [a4 + 0x30]\n  1183: a1 = u64 [a4 + 0x38]\n  1186: a2 = u64 [a4 + 0x28]\n  1189: a3 = u64 [a4 + 0x20]\n  1192: a1 = a1 | a2\n  1195: a0 = a0 | a3\n  1198: a0 = a0 | a1\n  1201: jump @40 if a0 != 0\n      : @27 (gas: 16)\n  1205: s1 = i32 [0x20064]\n  1210: a0 = s1 << 0x20\n  1213: a0 = a0 >> 0x20\n  1216: a0 = a0 + 0x1f\n  1219: a0 = a0 & 0xffffffffffffffe0\n  1222: a1 = a0 + 0xe0\n  1226: a0 = a1 <u a0\n  1229: a2 = sp + 0x200\n  1233: u64 [a2] = a1\n  1235: u64 [a2 + 0x8] = a0\n  1238: a0 = 0 if a0 != 0\n  1240: u64 [a2 + 0x10] = a0\n  1243: a0 = 0x40\n  1246: a1 = sp + 0x200\n  1250: u64 [a2 + 24] = 0\n  1253: ra = 12, jump @9\n      : @28 [@dyn 6] (gas: 3)\n  1258: a0 = 0xe0\n  1262: a1 = s1\n  1264: ra = 14, jump @15\n      : @29 [@dyn 7] (gas: 5)\n  1269: i32 a0 = a0 + 0\n  1271: a1 = s1\n  1273: a2 = 0\n  1275: ecalli 2 // 'call_data_copy'\n  1277: fallthrough\n      : @30 (gas: 1)\n  1278: jump @41 if s1 <=u 95\n      : @31 (gas: 7)\n  1283: u64 [sp + 472] = 0\n  1287: u64 [sp + 464] = 0\n  1291: u64 [sp + 448] = 0xe0\n  1297: a0 = sp + 0x1e0\n  1301: a1 = sp + 0x1c0\n  1305: u64 [sp + 456] = 0\n  1309: ra = 16, jump @396\n      : @32 [@dyn 8] (gas: 15)\n  1314: a0 = u64 [sp + 0x1e0]\n  1318: u64 [sp + 0x58] = a0\n  1321: a0 = u64 [sp + 0x1e8]\n  1325: u64 [sp + 0x48] = a0\n  1328: a0 = u64 [sp + 0x1f0]\n  1332: u64 [sp + 0x40] = a0\n  1335: a0 = u64 [sp + 0x1f8]\n  1339: u64 [sp + 0x30] = a0\n  1342: u64 [sp + 408] = 0\n  1346: u64 [sp + 400] = 0\n  1350: u64 [sp + 384] = 0x100\n  1356: a0 = sp + 0x1a0\n  1360: a1 = sp + 0x180\n  1364: u64 [sp + 392] = 0\n  1368: ra = 18, jump @396\n      : @33 [@dyn 9] (gas: 15)\n  1373: a0 = u64 [sp + 0x1a0]\n  1377: u64 [sp + 0x50] = a0\n  1380: a0 = u64 [sp + 0x1a8]\n  1384: u64 [sp + 0x28] = a0\n  1387: a0 = u64 [sp + 0x1b0]\n  1391: u64 [sp + 0x20] = a0\n  1394: a0 = u64 [sp + 0x1b8]\n  1398: u64 [sp + 0x18] = a0\n  1401: u64 [sp + 344] = 0\n  1405: u64 [sp + 336] = 0\n  1409: u64 [sp + 320] = 0x120\n  1415: a0 = sp + 0x160\n  1419: a1 = sp + 0x140\n  1423: u64 [sp + 328] = 0\n  1427: ra = 20, jump @396\n      : @34 [@dyn 10] (gas: 18)\n  1432: a0 = u64 [sp + 0x160]\n  1436: u64 [sp + 0x38] = a0\n  1439: a0 = u64 [sp + 0x168]\n  1443: u64 [sp + 0x10] = a0\n  1446: a0 = u64 [sp + 0x170]\n  1450: u64 [sp + 0x8] = a0\n  1453: s1 = u64 [sp + 0x178]\n  1457: a0 = u64 [sp + 0x30]\n  1460: u64 [sp + 0x138] = a0\n  1464: a0 = u64 [sp + 0x40]\n  1467: u64 [sp + 0x130] = a0\n  1471: a0 = u64 [sp + 0x48]\n  1474: u64 [sp + 0x128] = a0\n  1478: a0 = 0x80\n  1482: a1 = sp + 0x120\n  1486: a2 = u64 [sp + 0x58]\n  1489: u64 [sp + 0x120] = a2\n  1493: ra = 22, jump @9\n      : @35 [@dyn 11] (gas: 11)\n  1498: a0 = u64 [sp + 0x18]\n  1501: u64 [sp + 0x118] = a0\n  1505: a0 = u64 [sp + 0x20]\n  1508: u64 [sp + 0x110] = a0\n  1512: a0 = u64 [sp + 0x28]\n  1515: u64 [sp + 0x108] = a0\n  1519: a0 = 0xa0\n  1523: a1 = sp + 0x100\n  1527: a2 = u64 [sp + 0x50]\n  1530: u64 [sp + 0x100] = a2\n  1534: ra = 24, jump @9\n      : @36 [@dyn 12] (gas: 10)\n  1539: u64 [sp + 0xf8] = s1\n  1543: a0 = u64 [sp + 0x8]\n  1546: u64 [sp + 0xf0] = a0\n  1550: a0 = u64 [sp + 0x10]\n  1553: u64 [sp + 0xe8] = a0\n  1557: a0 = 0xc0\n  1561: a1 = sp + 0xe0\n  1565: a2 = u64 [sp + 0x38]\n  1568: u64 [sp + 0xe0] = a2\n  1572: ra = 26, jump @9\n      : @37 [@dyn 13] (gas: 3)\n  1577: a0 = sp + 0xc0\n  1581: a1 = 0x40\n  1584: ra = 28, jump @7\n      : @38 [@dyn 14] (gas: 12)\n  1589: a0 = u64 [sp + 0xd8]\n  1593: a1 = u64 [sp + 0xd0]\n  1597: a2 = u64 [sp + 0xc8]\n  1601: s1 = u64 [sp + 0xc0]\n  1605: a0 = a0 | a2\n  1608: a2 = s1 | a1\n  1611: a2 = a2 | a0\n  1614: a2 = a2 >> 0x20\n  1617: a0 = a0 | a1\n  1620: a0 = a0 << 0x20\n  1623: a0 = a0 | a2\n  1626: jump @42 if a0 == 0\n      : @39 (gas: 1)\n  1629: trap\n      : @40 (gas: 4)\n  1630: a1 = 0x20070\n  1635: i32 a1 = a1 + 0\n  1637: a0 = 0x1\n  1640: jump @49\n      : @41 (gas: 4)\n  1643: a1 = 0x20070\n  1648: i32 a1 = a1 + 0\n  1650: a0 = 0x1\n  1653: jump @49\n      : @42 (gas: 3)\n  1656: a0 = s1\n  1658: a1 = 0\n  1660: ra = 30, jump @15\n      : @43 [@dyn 15] (gas: 7)\n  1665: i32 a0 = a0 + 0\n  1667: a1 = 0\n  1669: a2 = 0\n  1671: ecalli 2 // 'call_data_copy'\n  1673: a0 = sp + 0xa0\n  1677: a1 = 0x80\n  1681: ra = 32, jump @7\n      : @44 [@dyn 16] (gas: 13)\n  1686: a0 = u64 [sp + 0xb8]\n  1690: a4 = 0x30090\n  1695: u64 [sp + 0x58] = a4\n  1698: a1 = u64 [sp + 0xb0]\n  1702: a2 = u64 [sp + 0xa8]\n  1706: a3 = u64 [sp + 0xa0]\n  1710: u64 [0x300a8] = a0\n  1715: u64 [0x300a0] = a1\n  1720: u64 [0x30098] = a2\n  1725: u64 [0x30090] = a3\n  1730: a0 = sp + 0x80\n  1734: a1 = 0xa0\n  1738: ra = 34, jump @7\n      : @45 [@dyn 17] (gas: 12)\n  1743: a0 = u64 [sp + 0x98]\n  1747: a1 = u64 [sp + 0x90]\n  1751: a2 = u64 [sp + 0x88]\n  1755: a3 = u64 [sp + 0x80]\n  1759: a4 = u64 [sp + 0x58]\n  1762: u64 [a4 + 0x38] = a0\n  1765: u64 [a4 + 0x30] = a1\n  1768: u64 [a4 + 0x28] = a2\n  1771: u64 [a4 + 0x20] = a3\n  1774: a0 = sp + 0x60\n  1777: a1 = 0xc0\n  1781: ra = 36, jump @7\n      : @46 [@dyn 18] (gas: 10)\n  1786: a0 = u64 [sp + 0x78]\n  1789: a1 = u64 [sp + 0x70]\n  1792: a2 = u64 [sp + 0x68]\n  1795: a3 = u64 [sp + 0x60]\n  1798: a4 = u64 [sp + 0x58]\n  1801: u64 [a4 + 0x58] = a0\n  1804: u64 [a4 + 0x50] = a1\n  1807: u64 [a4 + 0x48] = a2\n  1810: u64 [a4 + 0x40] = a3\n  1813: jump @5\n      : @47 (gas: 3)\n  1816: a0 = s1\n  1818: a1 = 0\n  1820: ra = 38, jump @15\n      : @48 [@dyn 19] (gas: 6)\n  1825: i32 a1 = a0 + 0\n  1827: a0 = 0\n  1829: a2 = 0\n  1831: ra = 0x28\n  1834: ecalli 14 // 'seal_return'\n  1836: jump @50\n      : @49 (gas: 4)\n  1838: a2 = 0\n  1840: ra = 0x28\n  1843: ecalli 14 // 'seal_return'\n  1845: fallthrough\n      : @50 [@dyn 20] (gas: 19)\n  1846: sp = sp + 0xfffffffffffff808\n  1850: a0 = sp + 0x700\n  1854: u64 [a0 + 0xf0] = ra\n  1858: u64 [a0 + 0xe8] = s0\n  1862: u64 [a0 + 0xe0] = s1\n  1866: s0 = sp + 0x7f8\n  1870: sp = sp + 0xfffffffffffff838\n  1874: sp = sp & 0xffffffffffffffe0\n  1877: s1 = sp\n  1879: a2 = s1 + 0x7ff\n  1883: a2 = a2 + 0x31\n  1886: u64 [a2 + 808] = 0\n  1890: u64 [a2 + 800] = 0\n  1894: u64 [a2 + 784] = 0x80\n  1900: a0 = 0x40\n  1903: a1 = s1 + 0x7ff\n  1907: a1 = a1 + 0x341\n  1911: u64 [a2 + 792] = 0\n  1915: ra = 42, jump @9\n      : @51 [@dyn 21] (gas: 4)\n  1920: a0 = 0x20064\n  1925: u64 [s1 + 0xb8] = a0\n  1929: a0 = i32 [0x20064]\n  1934: jump @53 if a0 >=u 4\n      : @52 (gas: 1)\n  1938: jump @354\n      : @53 (gas: 6)\n  1941: a0 = s1 + 0x1000\n  1945: i32 a0 = a0 + 0xfffffffffffffb60\n  1949: a1 = 0\n  1951: ra = 0x2c\n  1954: ecalli 3 // 'call_data_load'\n  1956: fallthrough\n      : @54 [@dyn 22] (gas: 4)\n  1957: a2 = s1 + 0x7ff\n  1961: a2 = a2 + 0x31\n  1964: a0 = i32 [a2 + 0x34c]\n  1968: jump @56 if a0 != 2205082048\n      : @55 (gas: 1)\n  1975: jump @284\n      : @56 (gas: 1)\n  1978: jump @121 if a0 == 2376576291\n      : @57 (gas: 1)\n  1986: jump @59 if a0 != 2915661614\n      : @58 (gas: 1)\n  1993: jump @228\n      : @59 (gas: 1)\n  1996: jump @153 if a0 == 3265688288\n      : @60 (gas: 1)\n  2004: jump @82 if a0 == 3283548473\n      : @61 (gas: 1)\n  2012: jump @110 if a0 == 4142735383\n      : @62 (gas: 1)\n  2020: jump @93 if a0 == 925171883\n      : @63 (gas: 1)\n  2028: jump @139 if a0 != 1302766934\n      : @64 (gas: 10)\n  2036: u64 [a2 + 904] = 0\n  2040: u64 [a2 + 896] = 0\n  2044: u64 [a2 + 888] = 0\n  2048: u64 [a2 + 880] = 0\n  2052: a0 = s1 + 0x1000\n  2056: i32 a0 = a0 + 0xfffffffffffffba0\n  2060: ra = 0x2e\n  2063: ecalli 17 // 'value_transferred'\n  2065: t0 = 0x30\n  2068: jump @487\n      : @65 [@dyn 23] (gas: 1)\n  2071: t0 = 48, jump @487\n      : @66 [@dyn 24] (gas: 8)\n  2076: a0 = u64 [a4 + 0x80]\n  2080: a1 = u64 [a4 + 0x88]\n  2084: a2 = u64 [a4 + 0x78]\n  2087: a3 = u64 [a4 + 0x70]\n  2090: a1 = a1 | a2\n  2093: a0 = a0 | a3\n  2096: a0 = a0 | a1\n  2099: jump @68 if a0 == 0\n      : @67 (gas: 1)\n  2102: jump @343\n      : @68 (gas: 3)\n  2105: a0 = u64 [s1 + 0xb8]\n  2109: a0 = i32 [a0]\n  2111: jump @70 if a0 >u 35\n      : @69 (gas: 1)\n  2115: jump @344\n      : @70 (gas: 2)\n  2118: a0 = s1 + 0x1e0\n  2122: ra = 50, jump @404\n      : @71 [@dyn 25] (gas: 11)\n  2127: a3 = s1 + 0x100\n  2131: a0 = u64 [a3 + 0xe0]\n  2135: a1 = u64 [a3 + 0xe8]\n  2139: a2 = u32 [s1 + 0x1f0]\n  2143: u64 [s1 + 472] = 0\n  2147: u64 [a3 + 0xd0] = a2\n  2151: u64 [a3 + 0xc8] = a1\n  2155: a1 = s1 + 0x1c0\n  2159: u64 [a3 + 0xc0] = a0\n  2163: a0 = 0\n  2165: ra = 52, jump @9\n      : @72 [@dyn 26] (gas: 7)\n  2170: u64 [s1 + 440] = 0\n  2174: u64 [s1 + 432] = 0\n  2178: u64 [s1 + 424] = 0\n  2182: a0 = 0x20\n  2185: a1 = s1 + 0x1a0\n  2189: u64 [s1 + 416] = 0\n  2193: ra = 54, jump @9\n      : @73 [@dyn 27] (gas: 2)\n  2198: a1 = i32 [0x20068]\n  2203: jump @75 if a1 >u 63\n      : @74 (gas: 2)\n  2207: u32 [0x20068] = 0x40\n  2213: fallthrough\n      : @75 (gas: 12)\n  2214: a0 = sp + 0xffffffffffffffe0\n  2217: a2 = a0 & 0xffffffffffffffe0\n  2220: u64 [s1 + 0xb8] = a2\n  2224: sp = a2\n  2226: a0 = 0x20070\n  2231: i32 a0 = a0 + 0\n  2233: i32 a2 = a2 + 0\n  2235: a1 = 0x40\n  2238: ra = 0x38\n  2241: ecalli 10 // 'hash_keccak_256'\n  2243: t0 = 0x3a\n  2246: jump @479\n      : @76 [@dyn 28] (gas: 1)\n  2249: t0 = 58, jump @479\n      : @77 [@dyn 29] (gas: 9)\n  2254: a5 = a4 + 0x300\n  2258: u64 [a5 + 0xa8] = a3\n  2262: u64 [a5 + 0xa0] = a2\n  2266: u64 [a5 + 0x98] = a1\n  2270: u64 [a5 + 0x90] = a0\n  2274: a0 = s1 + 0x180\n  2278: a1 = s1 + 0x7ff\n  2282: a1 = a1 + 0x3c1\n  2286: ra = 60, jump @11\n      : @78 [@dyn 30] (gas: 11)\n  2291: a0 = u64 [s1 + 0x198]\n  2295: u64 [s1 + 0xb8] = a0\n  2299: a0 = u64 [s1 + 0x190]\n  2303: u64 [s1 + 0xb0] = a0\n  2307: a0 = u64 [s1 + 0x188]\n  2311: u64 [s1 + 0xa8] = a0\n  2315: a0 = u64 [s1 + 0x180]\n  2319: u64 [s1 + 0xa0] = a0\n  2323: a0 = s1 + 0x160\n  2327: a1 = 0x40\n  2330: ra = 62, jump @7\n      : @79 [@dyn 31] (gas: 13)\n  2335: a4 = s1 + 0x100\n  2339: a0 = u64 [a4 + 0x78]\n  2342: a1 = u64 [a4 + 0x70]\n  2345: a2 = u64 [a4 + 0x68]\n  2348: a3 = u64 [a4 + 0x60]\n  2351: a0 = a0 | a2\n  2354: a2 = a3 | a1\n  2357: a2 = a2 | a0\n  2360: a2 = a2 >> 0x20\n  2363: a0 = a0 | a1\n  2366: a0 = a0 << 0x20\n  2369: a0 = a0 | a2\n  2372: jump @81 if a0 == 0\n      : @80 (gas: 1)\n  2375: jump @292\n      : @81 (gas: 14)\n  2378: a0 = u64 [s1 + 0xa0]\n  2382: a2 = s1 + 0x100\n  2386: u64 [a2 + 0x40] = a0\n  2389: a0 = u64 [s1 + 0xa8]\n  2393: u64 [a2 + 0x48] = a0\n  2396: a0 = u64 [s1 + 0xb0]\n  2400: u64 [a2 + 0x50] = a0\n  2403: a1 = s1 + 0x140\n  2407: a0 = u64 [s1 + 0xb8]\n  2411: u64 [a2 + 0x58] = a0\n  2414: a0 = a3\n  2416: u64 [s1 + 0xb8] = a3\n  2420: ra = 0x6c\n  2423: jump @9\n      : @82 (gas: 8)\n  2426: u64 [a2 + 1864] = 0\n  2430: u64 [a2 + 1856] = 0\n  2434: u64 [a2 + 1848] = 0\n  2438: u64 [a2 + 1840] = 0\n  2442: a0 = s1 + 0x1000\n  2446: i32 a0 = a0 + 0xffffffffffffff60\n  2450: ecalli 17 // 'value_transferred'\n  2452: fallthrough\n      : @83 (gas: 11)\n  2453: a3 = s1 + 0x7ff\n  2457: a3 = a3 + 0x31\n  2460: a4 = a3 + 0x700\n  2464: a0 = u64 [a4 + 0x40]\n  2467: a1 = u64 [a4 + 0x48]\n  2470: a2 = u64 [a4 + 0x38]\n  2473: a3 = u64 [a4 + 0x30]\n  2476: a1 = a1 | a2\n  2479: a0 = a0 | a3\n  2482: a0 = a0 | a1\n  2485: jump @85 if a0 == 0\n      : @84 (gas: 1)\n  2488: jump @341\n      : @85 (gas: 3)\n  2491: a0 = u64 [s1 + 0xb8]\n  2495: a0 = i32 [a0]\n  2497: jump @87 if a0 >u 3\n      : @86 (gas: 1)\n  2501: jump @341\n      : @87 (gas: 4)\n  2504: a0 = s1 + 0x7ff\n  2508: a0 = a0 + 0x2c1\n  2512: a1 = 0x40\n  2515: ra = 64, jump @7\n      : @88 [@dyn 32] (gas: 12)\n  2520: a0 = s1 + 0x7ff\n  2524: a0 = a0 + 0x31\n  2527: a2 = a0 + 0x200\n  2531: a1 = u64 [a2 + 0xa8]\n  2535: u64 [s1 + 0xb8] = a1\n  2539: a1 = u64 [a2 + 0xa0]\n  2543: u64 [s1 + 0xb0] = a1\n  2547: a1 = u64 [a2 + 0x98]\n  2551: u64 [s1 + 0xa0] = a1\n  2555: a0 = u64 [a2 + 0x90]\n  2559: u64 [s1 + 0xa8] = a0\n  2563: ra = 66, jump @0\n      : @89 [@dyn 33] (gas: 1)\n  2568: t0 = 68, jump @477\n      : @90 [@dyn 34] (gas: 1)\n  2573: jump @92 if a0 == 0\n      : @91 (gas: 1)\n  2576: jump @292\n      : @92 (gas: 15)\n  2579: a2 = u64 [0x30090]\n  2584: a1 = u64 [0x30098]\n  2589: a0 = u32 [0x300a0]\n  2594: a4 = s1 + 0x7ff\n  2598: a4 = a4 + 0x31\n  2601: u64 [a4 + 648] = 0\n  2605: a5 = a4 + 0x200\n  2609: u64 [a5 + 0x80] = a0\n  2613: u64 [a5 + 0x78] = a1\n  2616: a1 = s1 + 0x7ff\n  2620: a1 = a1 + 0x2a1\n  2624: u64 [a5 + 0x70] = a2\n  2627: a0 = a3\n  2629: ra = 0x14c\n  2633: jump @9\n      : @93 (gas: 10)\n  2636: u64 [a2 + 872] = 0\n  2640: u64 [a2 + 864] = 0\n  2644: u64 [a2 + 856] = 0\n  2648: u64 [a2 + 848] = 0\n  2652: a0 = s1 + 0x1000\n  2656: i32 a0 = a0 + 0xfffffffffffffb80\n  2660: ra = 0x46\n  2663: ecalli 17 // 'value_transferred'\n  2665: t0 = 0x48\n  2668: jump @487\n      : @94 [@dyn 35] (gas: 1)\n  2671: t0 = 72, jump @487\n      : @95 [@dyn 36] (gas: 1)\n  2676: t0 = 74, jump @486\n      : @96 [@dyn 37] (gas: 1)\n  2681: jump @98 if a0 == 0\n      : @97 (gas: 1)\n  2684: jump @345\n      : @98 (gas: 4)\n  2687: a0 = u64 [s1 + 0xb8]\n  2691: a0 = i32 [a0]\n  2693: a1 = 0x3\n  2696: jump @100 if a1 <u a0\n      : @99 (gas: 1)\n  2699: jump @346\n      : @100 (gas: 1)\n  2702: ra = 76, jump @0\n      : @101 [@dyn 38] (gas: 14)\n  2707: a1 = u64 [0x300d8]\n  2712: u64 [s1 + 0xb8] = a1\n  2716: a1 = u64 [0x300d0]\n  2721: u64 [s1 + 0xb0] = a1\n  2725: a0 = u32 [0x300e0]\n  2730: u64 [s1 + 0xa8] = a0\n  2734: a0 = 0x30070\n  2739: u64 [s1 + 0xa0] = a0\n  2743: i32 a0 = a0 + 0\n  2745: ra = 0x4e\n  2748: ecalli 5 // 'caller'\n  2750: a2 = u64 [s1 + 0xa0]\n  2754: t0 = 0x50\n  2757: jump @478\n      : @102 [@dyn 39] (gas: 2)\n  2760: a2 = u64 [s1 + 0xa0]\n  2764: t0 = 80, jump @478\n      : @103 [@dyn 40] (gas: 9)\n  2769: a2 = u64 [s1 + 0xa8]\n  2773: a1 = a1 ^ a2\n  2776: a2 = u64 [s1 + 0xb0]\n  2780: a0 = a0 ^ a2\n  2783: a0 = a0 | a1\n  2786: a1 = u64 [s1 + 0xb8]\n  2790: a1 = a1 ^ a3\n  2793: a0 = a0 | a1\n  2796: jump @105 if a0 == 0\n      : @104 (gas: 1)\n  2799: jump @347\n      : @105 (gas: 2)\n  2802: a0 = s1 + 0x100\n  2806: ra = 82, jump @419\n      : @106 [@dyn 41] (gas: 3)\n  2811: a0 = s1 + 0xe0\n  2815: a1 = 0x40\n  2818: ra = 84, jump @7\n      : @107 [@dyn 42] (gas: 12)\n  2823: a3 = u64 [s1 + 0xf8]\n  2827: a1 = u64 [s1 + 0xf0]\n  2831: a2 = u64 [s1 + 0xe8]\n  2835: a0 = u64 [s1 + 0xe0]\n  2839: a3 = a3 | a2\n  2842: a2 = a0 | a1\n  2845: a2 = a2 | a3\n  2848: a2 = a2 >> 0x20\n  2851: a1 = a1 | a3\n  2854: a1 = a1 << 0x20\n  2857: a1 = a1 | a2\n  2860: jump @109 if a1 == 0\n      : @108 (gas: 1)\n  2863: jump @292\n      : @109 (gas: 8)\n  2866: u64 [s1 + 216] = 0\n  2870: u64 [s1 + 208] = 0\n  2874: u64 [s1 + 200] = 0\n  2878: a1 = s1 + 0xc0\n  2882: u64 [s1 + 192] = 0\n  2886: u64 [s1 + 0xb8] = a0\n  2890: ra = 0x6c\n  2893: jump @9\n      : @110 (gas: 9)\n  2896: u64 [a2 + 1896] = 0\n  2900: u64 [a2 + 1888] = 0\n  2904: u64 [a2 + 1880] = 0\n  2908: u64 [a2 + 1872] = 0\n  2912: a0 = s1 + 0x1000\n  2916: i32 a0 = a0 + 0xffffffffffffff80\n  2919: ra = 0x56\n  2922: ecalli 17 // 'value_transferred'\n  2924: fallthrough\n      : @111 [@dyn 43] (gas: 4)\n  2925: a3 = s1 + 0x7ff\n  2929: a3 = a3 + 0x31\n  2932: a4 = a3 + 0x700\n  2936: t0 = 88, jump @486\n      : @112 [@dyn 44] (gas: 1)\n  2941: jump @114 if a0 == 0\n      : @113 (gas: 1)\n  2944: jump @341\n      : @114 (gas: 3)\n  2947: a0 = u64 [s1 + 0xb8]\n  2951: a0 = i32 [a0]\n  2953: jump @116 if a0 >u 35\n      : @115 (gas: 1)\n  2957: jump @341\n      : @116 (gas: 3)\n  2960: a0 = s1 + 0x7ff\n  2964: a0 = a0 + 0x321\n  2968: ra = 90, jump @404\n      : @117 [@dyn 45] (gas: 4)\n  2973: a0 = s1 + 0x7ff\n  2977: a0 = a0 + 0x301\n  2981: a1 = 0x40\n  2984: ra = 92, jump @7\n      : @118 [@dyn 46] (gas: 15)\n  2989: a3 = s1 + 0x7ff\n  2993: a3 = a3 + 0x31\n  2996: a5 = a3 + 0x200\n  3000: a4 = u64 [a5 + 0xe8]\n  3004: a1 = u64 [a5 + 0xe0]\n  3008: a2 = u64 [a5 + 0xd8]\n  3012: a0 = u64 [a5 + 0xd0]\n  3016: a4 = a4 | a2\n  3019: a2 = a0 | a1\n  3022: a2 = a2 | a4\n  3025: a2 = a2 >> 0x20\n  3028: a1 = a1 | a4\n  3031: a1 = a1 << 0x20\n  3034: a1 = a1 | a2\n  3037: jump @120 if a1 == 0\n      : @119 (gas: 1)\n  3040: jump @292\n      : @120 (gas: 9)\n  3043: u64 [a3 + 712] = 0\n  3047: u64 [a3 + 704] = 0\n  3051: u64 [a3 + 696] = 0\n  3055: a1 = s1 + 0x7ff\n  3059: a1 = a1 + 0x2e1\n  3063: u64 [a3 + 688] = 0\n  3067: u64 [s1 + 0xb8] = a0\n  3071: ra = 0x6c\n  3074: jump @9\n      : @121 (gas: 8)\n  3077: u64 [a2 + 1032] = 0\n  3081: u64 [a2 + 1024] = 0\n  3085: u64 [a2 + 1016] = 0\n  3089: u64 [a2 + 1008] = 0\n  3093: a0 = s1 + 0x1000\n  3097: i32 a0 = a0 + 0xfffffffffffffc20\n  3101: ecalli 17 // 'value_transferred'\n  3103: fallthrough\n      : @122 (gas: 10)\n  3104: a3 = s1 + 0x7ff\n  3108: a3 = a3 + 0x31\n  3111: a0 = u64 [a3 + 0x400]\n  3115: a1 = u64 [a3 + 0x408]\n  3119: a2 = u64 [a3 + 0x3f8]\n  3123: a3 = u64 [a3 + 0x3f0]\n  3127: a1 = a1 | a2\n  3130: a0 = a0 | a3\n  3133: a0 = a0 | a1\n  3136: jump @124 if a0 == 0\n      : @123 (gas: 1)\n  3139: jump @351\n      : @124 (gas: 3)\n  3142: a0 = u64 [s1 + 0xb8]\n  3146: a0 = i32 [a0]\n  3148: jump @126 if a0 >u 35\n      : @125 (gas: 1)\n  3152: jump @352\n      : @126 (gas: 2)\n  3155: a0 = s1 + 0x320\n  3159: ra = 94, jump @404\n      : @127 [@dyn 47] (gas: 11)\n  3164: a3 = s1 + 0x300\n  3168: a0 = u64 [a3 + 0x20]\n  3171: a1 = u64 [a3 + 0x28]\n  3174: a2 = u32 [s1 + 0x330]\n  3178: u64 [s1 + 792] = 0\n  3182: u64 [a3 + 0x10] = a2\n  3185: u64 [a3 + 0x8] = a1\n  3188: a1 = s1 + 0x300\n  3192: u64 [a3] = a0\n  3194: a0 = 0\n  3196: ra = 96, jump @9\n      : @128 [@dyn 48] (gas: 7)\n  3201: u64 [s1 + 760] = 0\n  3205: u64 [s1 + 752] = 0\n  3209: u64 [s1 + 744] = 0\n  3213: a0 = 0x20\n  3216: a1 = s1 + 0x2e0\n  3220: u64 [s1 + 736] = 0\n  3224: ra = 98, jump @9\n      : @129 [@dyn 49] (gas: 2)\n  3229: a1 = i32 [0x20068]\n  3234: jump @131 if a1 >u 63\n      : @130 (gas: 2)\n  3238: u32 [0x20068] = 0x40\n  3244: fallthrough\n      : @131 (gas: 12)\n  3245: a0 = sp + 0xffffffffffffffe0\n  3248: a2 = a0 & 0xffffffffffffffe0\n  3251: u64 [s1 + 0xb8] = a2\n  3255: sp = a2\n  3257: a0 = 0x20070\n  3262: i32 a0 = a0 + 0\n  3264: i32 a2 = a2 + 0\n  3266: a1 = 0x40\n  3269: ra = 0x64\n  3272: ecalli 10 // 'hash_keccak_256'\n  3274: t0 = 0x66\n  3277: jump @479\n      : @132 [@dyn 50] (gas: 1)\n  3280: t0 = 102, jump @479\n      : @133 [@dyn 51] (gas: 9)\n  3285: a5 = a4 + 0x400\n  3289: u64 [a5 + 0x28] = a3\n  3292: u64 [a5 + 0x20] = a2\n  3295: u64 [a5 + 0x18] = a1\n  3298: u64 [a5 + 0x10] = a0\n  3301: a0 = s1 + 0x2c0\n  3305: a1 = s1 + 0x7ff\n  3309: a1 = a1 + 0x441\n  3313: ra = 104, jump @11\n      : @134 [@dyn 52] (gas: 11)\n  3318: a0 = u64 [s1 + 0x2d8]\n  3322: u64 [s1 + 0xb8] = a0\n  3326: a0 = u64 [s1 + 0x2d0]\n  3330: u64 [s1 + 0xb0] = a0\n  3334: a0 = u64 [s1 + 0x2c8]\n  3338: u64 [s1 + 0xa8] = a0\n  3342: a0 = u64 [s1 + 0x2c0]\n  3346: u64 [s1 + 0xa0] = a0\n  3350: a0 = s1 + 0x2a0\n  3354: a1 = 0x40\n  3357: ra = 106, jump @7\n      : @135 [@dyn 53] (gas: 13)\n  3362: a4 = s1 + 0x200\n  3366: a0 = u64 [a4 + 0xb8]\n  3370: a1 = u64 [a4 + 0xb0]\n  3374: a2 = u64 [a4 + 0xa8]\n  3378: a3 = u64 [a4 + 0xa0]\n  3382: a0 = a0 | a2\n  3385: a2 = a3 | a1\n  3388: a2 = a2 | a0\n  3391: a2 = a2 >> 0x20\n  3394: a0 = a0 | a1\n  3397: a0 = a0 << 0x20\n  3400: a0 = a0 | a2\n  3403: jump @137 if a0 == 0\n      : @136 (gas: 1)\n  3406: jump @292\n      : @137 (gas: 13)\n  3409: a0 = u64 [s1 + 0xa0]\n  3413: a2 = s1 + 0x200\n  3417: u64 [a2 + 0x80] = a0\n  3421: a0 = u64 [s1 + 0xa8]\n  3425: u64 [a2 + 0x88] = a0\n  3429: a0 = u64 [s1 + 0xb0]\n  3433: u64 [a2 + 0x90] = a0\n  3437: a1 = s1 + 0x280\n  3441: a0 = u64 [s1 + 0xb8]\n  3445: u64 [a2 + 0x98] = a0\n  3449: a0 = a3\n  3451: u64 [s1 + 0xb8] = a3\n  3455: ra = 108, jump @9\n      : @138 [@dyn 54] (gas: 4)\n  3460: a1 = 0x20\n  3463: a0 = u64 [s1 + 0xb8]\n  3467: ra = 0x14e\n  3471: jump @15\n      : @139 (gas: 1)\n  3474: jump @141 if a0 == 1608758631\n      : @140 (gas: 1)\n  3481: jump @353\n      : @141 (gas: 10)\n  3484: u64 [a2 + 968] = 0\n  3488: u64 [a2 + 960] = 0\n  3492: u64 [a2 + 952] = 0\n  3496: u64 [a2 + 944] = 0\n  3500: a0 = s1 + 0x1000\n  3504: i32 a0 = a0 + 0xfffffffffffffbe0\n  3508: ra = 0x6e\n  3511: ecalli 17 // 'value_transferred'\n  3513: t0 = 0x70\n  3516: jump @487\n      : @142 [@dyn 55] (gas: 1)\n  3519: t0 = 112, jump @487\n      : @143 [@dyn 56] (gas: 8)\n  3524: a0 = u64 [a4 + 0xc0]\n  3528: a1 = u64 [a4 + 0xc8]\n  3532: a2 = u64 [a4 + 0xb8]\n  3536: a3 = u64 [a4 + 0xb0]\n  3540: a1 = a1 | a2\n  3543: a0 = a0 | a3\n  3546: a0 = a0 | a1\n  3549: jump @145 if a0 == 0\n      : @144 (gas: 1)\n  3552: jump @358\n      : @145 (gas: 3)\n  3555: a0 = u64 [s1 + 0xb8]\n  3559: a0 = i32 [a0]\n  3561: jump @147 if a0 >u 3\n      : @146 (gas: 1)\n  3565: jump @359\n      : @147 (gas: 3)\n  3568: a0 = s1 + 0x220\n  3572: a1 = 0x40\n  3575: ra = 114, jump @7\n      : @148 [@dyn 57] (gas: 10)\n  3580: a1 = s1 + 0x200\n  3584: a0 = u64 [a1 + 0x38]\n  3587: u64 [s1 + 0xb8] = a0\n  3591: a0 = u64 [a1 + 0x30]\n  3594: u64 [s1 + 0xb0] = a0\n  3598: a0 = u64 [a1 + 0x28]\n  3601: u64 [s1 + 0xa0] = a0\n  3605: a0 = u64 [a1 + 0x20]\n  3608: u64 [s1 + 0xa8] = a0\n  3612: ra = 116, jump @0\n      : @149 [@dyn 58] (gas: 1)\n  3617: t0 = 118, jump @477\n      : @150 [@dyn 59] (gas: 1)\n  3622: jump @152 if a0 == 0\n      : @151 (gas: 1)\n  3625: jump @292\n      : @152 (gas: 12)\n  3628: a2 = u64 [0x300b0]\n  3633: a1 = u64 [0x300b8]\n  3638: a0 = u32 [0x300c0]\n  3643: u64 [s1 + 536] = 0\n  3647: a4 = s1 + 0x200\n  3651: u64 [a4 + 0x10] = a0\n  3654: u64 [a4 + 0x8] = a1\n  3657: a1 = s1 + 0x200\n  3661: u64 [a4] = a2\n  3663: a0 = a3\n  3665: ra = 0x14c\n  3669: jump @9\n      : @153 (gas: 8)\n  3672: u64 [a2 + 1416] = 0\n  3676: u64 [a2 + 1408] = 0\n  3680: u64 [a2 + 1400] = 0\n  3684: u64 [a2 + 1392] = 0\n  3688: a0 = s1 + 0x1000\n  3692: i32 a0 = a0 + 0xfffffffffffffda0\n  3696: ecalli 17 // 'value_transferred'\n  3698: fallthrough\n      : @154 (gas: 11)\n  3699: a3 = s1 + 0x7ff\n  3703: a3 = a3 + 0x31\n  3706: a4 = a3 + 0x500\n  3710: a0 = u64 [a4 + 0x80]\n  3714: a1 = u64 [a4 + 0x88]\n  3718: a2 = u64 [a4 + 0x78]\n  3721: a3 = u64 [a4 + 0x70]\n  3724: a1 = a1 | a2\n  3727: a0 = a0 | a3\n  3730: a0 = a0 | a1\n  3733: jump @156 if a0 == 0\n      : @155 (gas: 1)\n  3736: jump @341\n      : @156 (gas: 3)\n  3739: a0 = u64 [s1 + 0xb8]\n  3743: a0 = i32 [a0]\n  3745: jump @158 if a0 >u 67\n      : @157 (gas: 1)\n  3749: jump @341\n      : @158 (gas: 3)\n  3752: a0 = s1 + 0x7ff\n  3756: a0 = a0 + 0x281\n  3760: ra = 120, jump @404\n      : @159 [@dyn 60] (gas: 25)\n  3765: a1 = s1 + 0x7ff\n  3769: a1 = a1 + 0x31\n  3772: a2 = a1 + 0x200\n  3776: a0 = u64 [a2 + 0x60]\n  3779: u64 [s1 + 0x48] = a0\n  3782: a0 = u64 [a2 + 0x58]\n  3785: u64 [s1 + 0x68] = a0\n  3788: a0 = u64 [a2 + 0x50]\n  3791: u64 [s1 + 0x70] = a0\n  3794: a0 = s1 + 0x1000\n  3798: i32 a0 = a0 + 0xfffffffffffffdc0\n  3802: a1 = 0x24\n  3805: ecalli 3 // 'call_data_load'\n  3807: a1 = s1 + 0x7ff\n  3811: a1 = a1 + 0x31\n  3814: a2 = a1 + 0x500\n  3818: a0 = u64 [a2 + 0xa8]\n  3822: u64 [s1 + 0xa8] = a0\n  3826: a0 = u64 [a2 + 0xa0]\n  3830: u64 [s1 + 0xa0] = a0\n  3834: a0 = u64 [a2 + 0x98]\n  3838: u64 [s1 + 0x98] = a0\n  3842: a0 = u64 [a2 + 0x90]\n  3846: u64 [s1 + 0xb0] = a0\n  3850: ra = 122, jump @0\n      : @160 [@dyn 61] (gas: 14)\n  3855: a0 = 0x30090\n  3860: a1 = u64 [0x300d8]\n  3865: u64 [s1 + 0x88] = a1\n  3869: a1 = u64 [0x300d0]\n  3874: u64 [s1 + 0x80] = a1\n  3878: u64 [s1 + 0x90] = a0\n  3882: a0 = u32 [0x300e0]\n  3887: u64 [s1 + 0x78] = a0\n  3890: a0 = 0x30070\n  3895: u64 [s1 + 0xb8] = a0\n  3899: i32 a0 = a0 + 0\n  3901: u64 [s1 + 0x28] = a0\n  3904: ecalli 5 // 'caller'\n  3906: fallthrough\n      : @161 (gas: 23)\n  3907: a0 = u64 [s1 + 0xb8]\n  3911: t0 = u64 [a0 + 0x8]\n  3914: a4 = u64 [a0]\n  3916: a5 = u32 [a0 + 0x10]\n  3919: a0 = reverse t0\n  3921: a1 = a0 >> 0x20\n  3924: a2 = reverse a4\n  3926: a3 = a2 << 0x20\n  3929: a1 = a1 | a3\n  3932: a0 = a0 << 0x20\n  3935: a3 = reverse a5\n  3937: a3 = a3 >> 0x20\n  3940: a0 = a0 | a3\n  3943: a2 = a2 >> 0x20\n  3946: a3 = u64 [s1 + 0x78]\n  3949: a2 = a2 ^ a3\n  3952: a3 = u64 [s1 + 0x80]\n  3956: a0 = a0 ^ a3\n  3959: a0 = a0 | a2\n  3962: a2 = u64 [s1 + 0x88]\n  3966: a1 = a1 ^ a2\n  3969: a0 = a0 | a1\n  3972: jump @163 if a0 == 0\n      : @162 (gas: 1)\n  3975: jump @360\n      : @163 (gas: 11)\n  3978: u64 [s1 + 0x50] = a5\n  3981: u64 [s1 + 0x58] = t0\n  3984: u64 [s1 + 0x60] = a4\n  3987: a0 = u64 [s1 + 0xa0]\n  3991: a1 = u64 [s1 + 0xb0]\n  3995: a0 = a0 | a1\n  3998: a1 = u64 [s1 + 0xa8]\n  4002: a2 = u64 [s1 + 0x98]\n  4006: a1 = a1 | a2\n  4009: a0 = a0 | a1\n  4012: jump @165 if a0 != 0\n      : @164 (gas: 1)\n  4015: jump @361\n      : @165 (gas: 1)\n  4018: ra = 124, jump @0\n      : @166 [@dyn 62] (gas: 11)\n  4023: a1 = u64 [s1 + 0x90]\n  4027: a0 = u64 [a1 + 0x10]\n  4030: u64 [s1 + 0x80] = a0\n  4034: a0 = u64 [a1 + 0x8]\n  4037: u64 [s1 + 0x78] = a0\n  4040: a0 = u64 [a1]\n  4042: u64 [s1 + 0x88] = a0\n  4046: a0 = s1 + 0x7ff\n  4050: a0 = a0 + 0x241\n  4054: a1 = 0x40\n  4057: ra = 126, jump @7\n      : @167 [@dyn 63] (gas: 15)\n  4062: a2 = s1 + 0x7ff\n  4066: a2 = a2 + 0x31\n  4069: t0 = u64 [a2 + 0x228]\n  4073: a1 = a2 + 0x200\n  4077: a5 = u64 [a1 + 0x20]\n  4080: a4 = u64 [a1 + 0x18]\n  4083: a0 = u64 [a1 + 0x10]\n  4086: a3 = a4 | t0\n  4089: a1 = a0 | a5\n  4092: a1 = a1 | a3\n  4095: a1 = a1 >> 0x20\n  4098: a3 = a3 | a5\n  4101: a3 = a3 << 0x20\n  4104: a1 = a1 | a3\n  4107: jump @169 if a1 == 0\n      : @168 (gas: 1)\n  4110: jump @292\n      : @169 (gas: 12)\n  4113: u64 [a2 + 512] = 0\n  4117: u64 [a2 + 504] = 0\n  4121: u64 [a2 + 496] = 0\n  4125: a3 = 0x852a12e300000000\n  4135: a1 = s1 + 0x7ff\n  4139: a1 = a1 + 0x221\n  4143: u64 [a2 + 0x208] = a3\n  4147: u64 [s1 + 0x90] = a0\n  4151: u64 [s1 + 0x40] = t0\n  4154: u64 [s1 + 0x38] = a5\n  4157: u64 [s1 + 0x30] = a4\n  4160: ra = 128, jump @9\n      : @170 [@dyn 64] (gas: 10)\n  4166: a3 = u64 [s1 + 0x90]\n  4170: a0 = u64 [s1 + 0x40]\n  4173: a1 = u64 [s1 + 0x38]\n  4176: a0 = a0 | a1\n  4179: a1 = 0xfffffffc\n  4189: a1 = a3 <u a1\n  4192: a2 = u64 [s1 + 0x30]\n  4195: a1 = 0 if a2 != 0\n  4197: a1 = 0 if a0 != 0\n  4199: jump @292 if a1 == 0\n      : @171 (gas: 17)\n  4203: a0 = 0x2400000000\n  4213: u64 [s1 + 0x20] = a0\n  4216: i32 a0 = a3 + 0x4\n  4219: a1 = u64 [s1 + 0xb0]\n  4223: a4 = s1 + 0x7ff\n  4227: a4 = a4 + 0x31\n  4230: a3 = a4 + 0x100\n  4234: u64 [a3 + 0xd0] = a1\n  4238: a1 = u64 [s1 + 0x98]\n  4242: u64 [a3 + 0xd8] = a1\n  4246: a1 = u64 [s1 + 0xa0]\n  4250: u64 [a3 + 0xe0] = a1\n  4254: a1 = s1 + 0x7ff\n  4258: a1 = a1 + 0x201\n  4262: a2 = u64 [s1 + 0xa8]\n  4266: u64 [a3 + 0xe8] = a2\n  4270: ra = 130, jump @9\n      : @172 [@dyn 65] (gas: 30)\n  4276: ecalli 11 // 'ref_time_left'\n  4278: a0 = u64 [s1 + 0x78]\n  4281: a0 = reverse a0\n  4283: a1 = a0 << 0x20\n  4286: a2 = u64 [s1 + 0x80]\n  4290: a2 = reverse a2\n  4292: a2 = a2 >> 0x20\n  4295: a3 = a2 | a1\n  4298: a1 = u64 [s1 + 0x88]\n  4302: a1 = reverse a1\n  4304: a2 = a1 << 0x20\n  4307: a0 = a0 >> 0x20\n  4310: a0 = a0 | a2\n  4313: a1 = a1 >> 0x20\n  4316: a2 = u64 [s1 + 0xb8]\n  4320: u64 [s1 + 0x10] = a0\n  4323: u64 [a2 + 0x8] = a0\n  4326: u64 [s1 + 0x78] = a3\n  4329: u64 [a2] = a3\n  4331: u64 [s1 + 0x18] = a1\n  4334: u32 [a2 + 0x10] = a1\n  4337: a0 = s1 + 0x7ff\n  4341: a0 = a0 + 0x31\n  4344: u64 [a0 + 1480] = 0\n  4348: u64 [a0 + 1472] = 0\n  4352: u64 [a0 + 1464] = 0\n  4356: u64 [a0 + 1456] = 0\n  4360: a1 = 0x24\n  4363: a0 = u64 [s1 + 0x90]\n  4367: ra = 132, jump @15\n      : @173 [@dyn 66] (gas: 4)\n  4373: u64 [s1 + 0x88] = a0\n  4377: a1 = 0x20\n  4380: a0 = u64 [s1 + 0x90]\n  4384: ra = 134, jump @15\n      : @174 [@dyn 67] (gas: 37)\n  4390: a2 = s1 + 0x7ff\n  4394: a2 = a2 + 0x31\n  4397: u32 [a2 + 1488] = 0x20\n  4402: u64 [a2 + 1544] = 0xffffffffffffffff\n  4407: u64 [a2 + 1536] = 0xffffffffffffffff\n  4412: u64 [a2 + 1528] = 0xffffffffffffffff\n  4417: u64 [a2 + 1520] = 0xffffffffffffffff\n  4422: a1 = u64 [s1 + 0xb8]\n  4426: a1 = a1 << 0x20\n  4429: a2 = a1 >> 0x20\n  4432: a1 = 0x800000000\n  4442: u64 [s1 + 0x80] = a2\n  4446: t0 = a2 | a1\n  4449: a1 = s1 + 0x7ff\n  4453: a1 = a1 + 0x5e1\n  4457: a1 = a1 << 0x20\n  4460: a1 = a1 >> 0x20\n  4463: a2 = s1 + 0x7ff\n  4467: a2 = a2 + 0x621\n  4471: a2 = a2 << 0x20\n  4474: a3 = a2 | a1\n  4477: a1 = u64 [s1 + 0x88]\n  4481: a1 = a1 << 0x20\n  4484: a1 = a1 >> 0x20\n  4487: a4 = u64 [s1 + 0x20]\n  4490: a4 = a4 | a1\n  4493: a0 = a0 << 0x20\n  4496: a0 = a0 >> 0x20\n  4499: a1 = s1 + 0x7ff\n  4503: a1 = a1 + 0x601\n  4507: a1 = a1 << 0x20\n  4510: a5 = a1 | a0\n  4513: a1 = 0xffffffffffffffff\n  4516: a2 = 0xffffffffffffffff\n  4519: a0 = t0\n  4521: ecalli 1 // 'call'\n  4523: fallthrough\n      : @175 (gas: 1)\n  4524: jump @301 if a0 != 0\n      : @176 (gas: 2)\n  4528: ecalli 13 // 'return_data_size'\n  4530: fallthrough\n      : @177 (gas: 2)\n  4531: a5 = 0x20\n  4534: jump @179 if a0 >=u a5\n      : @178 (gas: 3)\n  4537: ecalli 13 // 'return_data_size'\n  4539: a5 = a0\n  4541: fallthrough\n      : @179 (gas: 22)\n  4542: a2 = s1 + 0x7ff\n  4546: a2 = a2 + 0x31\n  4549: a3 = u64 [s1 + 0x90]\n  4553: t0 = u64 [s1 + 0x40]\n  4556: a0 = u64 [s1 + 0x38]\n  4559: a1 = u64 [s1 + 0x30]\n  4562: u64 [s1 + 64] = 0\n  4565: u64 [s1 + 0x88] = a5\n  4569: a4 = a2 + 0x100\n  4573: u64 [a4 + 0x70] = a5\n  4576: u64 [a4 + 0x90] = a3\n  4580: u64 [a2 + 376] = 0\n  4584: u64 [a4 + 0x98] = a1\n  4588: u64 [a2 + 384] = 0\n  4592: u64 [a4 + 0xa0] = a0\n  4596: u64 [a2 + 392] = 0\n  4600: a0 = s1 + 0x7ff\n  4604: a0 = a0 + 0x1c1\n  4608: a1 = s1 + 0x7ff\n  4612: a1 = a1 + 0x1a1\n  4616: u64 [a2 + 0x1a8] = t0\n  4620: ra = 136, jump @410\n      : @180 [@dyn 68] (gas: 4)\n  4626: a3 = u64 [s1 + 0x40]\n  4629: a0 = a3 >u 0\n  4631: a1 = u64 [s1 + 0x88]\n  4635: t0 = 138, jump @474\n      : @181 [@dyn 69] (gas: 1)\n  4641: jump @183 if a2 != 0\n      : @182 (gas: 1)\n  4644: jump @386\n      : @183 (gas: 4)\n  4647: a0 = s1 + 0x7ff\n  4651: a0 = a0 + 0x181\n  4655: a1 = u64 [s1 + 0x90]\n  4659: ra = 140, jump @7\n      : @184 [@dyn 70] (gas: 4)\n  4665: a3 = s1 + 0x7ff\n  4669: a3 = a3 + 0x31\n  4672: a4 = a3 + 0x100\n  4676: t0 = 142, jump @486\n      : @185 [@dyn 71] (gas: 1)\n  4682: jump @187 if a0 == 0\n      : @186 (gas: 1)\n  4685: jump @387\n      : @187 (gas: 17)\n  4688: a0 = u64 [s1 + 0x48]\n  4691: a0 = a0 << 0x20\n  4694: a2 = a0 >> 0x20\n  4697: a3 = s1 + 0x7ff\n  4701: a3 = a3 + 0x31\n  4704: u64 [a3 + 296] = 0\n  4708: a0 = u64 [s1 + 0x70]\n  4711: a4 = a3 + 0x100\n  4715: u64 [a4 + 0x10] = a0\n  4718: a0 = u64 [s1 + 0x68]\n  4721: u64 [a4 + 0x18] = a0\n  4724: a1 = s1 + 0x7ff\n  4728: a1 = a1 + 0x141\n  4732: u64 [s1 + 0x8] = a2\n  4735: u64 [a4 + 0x20] = a2\n  4738: a0 = 0\n  4740: ra = 144, jump @9\n      : @188 [@dyn 72] (gas: 10)\n  4746: a2 = s1 + 0x7ff\n  4750: a2 = a2 + 0x31\n  4753: u64 [a2 + 264] = 0\n  4757: u64 [a2 + 256] = 0\n  4761: u64 [a2 + 248] = 0\n  4765: a0 = 0x20\n  4768: a1 = s1 + 0x7ff\n  4772: a1 = a1 + 0x121\n  4776: u64 [a2 + 240] = 0\n  4780: ra = 146, jump @9\n      : @189 [@dyn 73] (gas: 7)\n  4786: a0 = sp + 0xffffffffffffffe0\n  4789: a0 = a0 & 0xffffffffffffffe0\n  4792: u64 [s1 + 0x90] = a0\n  4796: sp = a0\n  4798: a1 = 0x40\n  4801: a0 = 0\n  4803: ra = 148, jump @15\n      : @190 [@dyn 74] (gas: 12)\n  4809: a1 = sp + 0xffffffffffffffe0\n  4812: a1 = a1 & 0xffffffffffffffe0\n  4815: u64 [s1 + 0x88] = a1\n  4819: sp = a1\n  4821: i32 a0 = a0 + 0\n  4823: i32 a2 = a1 + 0\n  4825: a1 = 0x40\n  4828: ra = 0x96\n  4832: ecalli 10 // 'hash_keccak_256'\n  4834: a3 = u64 [s1 + 0x88]\n  4838: t0 = 0x98\n  4842: jump @483\n      : @191 [@dyn 75] (gas: 2)\n  4845: a3 = u64 [s1 + 0x88]\n  4849: t0 = 152, jump @483\n      : @192 [@dyn 76] (gas: 8)\n  4855: a1 = u64 [s1 + 0x90]\n  4859: u64 [a1 + 0x18] = a3\n  4862: u64 [a1 + 0x10] = a2\n  4865: u64 [a1 + 0x8] = a4\n  4868: u64 [a1] = a0\n  4870: a0 = s1 + 0x7ff\n  4874: a0 = a0 + 0x101\n  4878: ra = 154, jump @11\n      : @193 [@dyn 77] (gas: 50)\n  4884: a0 = s1 + 0x7ff\n  4888: a0 = a0 + 0x31\n  4891: t0 = u64 [a0 + 0xe8]\n  4895: t1 = u64 [a0 + 0xe0]\n  4899: a3 = u64 [a0 + 0xd0]\n  4903: u64 [s1 + 0x88] = a3\n  4907: a0 = u64 [a0 + 0xd8]\n  4911: u64 [s1 + 0x48] = a0\n  4914: a1 = sp + 0xffffffffffffffe0\n  4917: t2 = a1 & 0xffffffffffffffe0\n  4920: sp = t2\n  4922: a5 = u64 [s1 + 0x98]\n  4926: a2 = a0 ^ a5\n  4929: a1 = a0 <u a5\n  4932: a0 = u64 [s1 + 0xb0]\n  4936: a0 = a3 <u a0\n  4939: u64 [s1 + 0x40] = a0\n  4942: a1 = a0 if a2 == 0\n  4945: a0 = u64 [s1 + 0xa0]\n  4949: a4 = t1 <u a0\n  4952: u64 [s1 + 0x30] = a4\n  4955: ra = u64 [s1 + 0xa8]\n  4959: u64 [s1 + 0x38] = t0\n  4962: a2 = t0 ^ ra\n  4965: a3 = t0 <u ra\n  4968: a3 = a4 if a2 == 0\n  4971: t0 = t1 ^ a0\n  4974: a2 = t0 | a2\n  4977: a4 = t1 - a0\n  4980: a3 = a1 if a2 == 0\n  4983: a2 = a4 - a1\n  4986: a0 = a4 <u a1\n  4989: a1 = u64 [s1 + 0x38]\n  4992: a4 = a1 - ra\n  4995: a1 = u64 [s1 + 0x30]\n  4998: a4 = a4 - a1\n  5001: a4 = a4 - a0\n  5004: a0 = u64 [s1 + 0x48]\n  5007: a0 = a0 - a5\n  5010: a1 = u64 [s1 + 0x40]\n  5013: a0 = a0 - a1\n  5016: a5 = t2\n  5018: u64 [a5 + 0x18] = a4\n  5021: u64 [a5 + 0x10] = a2\n  5024: u64 [a5 + 0x8] = a0\n  5027: a0 = u64 [s1 + 0x88]\n  5031: a1 = u64 [s1 + 0xb0]\n  5035: a0 = a0 - a1\n  5038: u64 [a5] = a0\n  5040: jump @195 if a3 == 0\n      : @194 (gas: 1)\n  5043: jump @388\n      : @195 (gas: 3)\n  5046: a0 = u64 [s1 + 0x90]\n  5050: a1 = t2\n  5052: ra = 156, jump @12\n      : @196 [@dyn 78] (gas: 23)\n  5058: ecalli 11 // 'ref_time_left'\n  5060: u64 [s1 + 0x90] = a0\n  5064: a0 = u64 [s1 + 0xb8]\n  5068: a1 = u64 [s1 + 0x58]\n  5071: u64 [a0 + 0x8] = a1\n  5074: a1 = u64 [s1 + 0x60]\n  5077: u64 [a0] = a1\n  5079: a1 = u64 [s1 + 0x50]\n  5082: u32 [a0 + 0x10] = a1\n  5085: a1 = s1 + 0x7ff\n  5089: a1 = a1 + 0x31\n  5092: a0 = u64 [s1 + 0xa8]\n  5096: a2 = a1 + 0x600\n  5100: u64 [a2 + 0x48] = a0\n  5103: a0 = u64 [s1 + 0xa0]\n  5107: u64 [a2 + 0x40] = a0\n  5110: a0 = u64 [s1 + 0x98]\n  5114: u64 [a2 + 0x38] = a0\n  5117: a0 = u64 [s1 + 0xb0]\n  5121: u64 [a2 + 0x30] = a0\n  5124: a0 = 0\n  5126: a1 = 0\n  5128: ra = 158, jump @15\n      : @197 [@dyn 79] (gas: 4)\n  5134: u64 [s1 + 0x88] = a0\n  5138: a0 = 0\n  5140: a1 = 0\n  5142: ra = 160, jump @15\n      : @198 [@dyn 80] (gas: 38)\n  5148: a3 = s1 + 0x7ff\n  5152: a3 = a3 + 0x31\n  5155: u32 [a3 + 1616] = 0\n  5159: a2 = u64 [s1 + 0x90]\n  5163: a1 = a2 >u 0x8fc\n  5167: a2 = -a1\n  5169: a4 = a3 + 0x600\n  5173: u64 [a4 + 0x88] = a2\n  5177: u64 [a4 + 0x80] = a2\n  5181: u64 [a4 + 0x78] = a2\n  5184: u64 [a4 + 0x70] = a2\n  5187: a1 = a1 << 0x23\n  5190: a2 = u64 [s1 + 0x80]\n  5194: t0 = a1 | a2\n  5197: a1 = s1 + 0x7ff\n  5201: a1 = a1 + 0x661\n  5205: a1 = a1 << 0x20\n  5208: a1 = a1 >> 0x20\n  5211: a2 = s1 + 0x7ff\n  5215: a2 = a2 + 0x6a1\n  5219: a2 = a2 << 0x20\n  5222: a3 = a2 | a1\n  5225: a4 = u64 [s1 + 0x88]\n  5229: a4 = a4 << 0x20\n  5232: a4 = a4 >> 0x20\n  5235: a0 = a0 << 0x20\n  5238: a0 = a0 >> 0x20\n  5241: a1 = s1 + 0x7ff\n  5245: a1 = a1 + 0x681\n  5249: a1 = a1 << 0x20\n  5252: a5 = a1 | a0\n  5255: a1 = 0xffffffffffffffff\n  5258: a2 = 0xffffffffffffffff\n  5261: a0 = t0\n  5263: ecalli 1 // 'call'\n  5265: u64 [s1 + 0x90] = a0\n  5269: ecalli 13 // 'return_data_size'\n  5271: fallthrough\n      : @199 (gas: 2)\n  5272: a2 = u64 [s1 + 0x90]\n  5276: jump @314 if a0 != 0\n      : @200 (gas: 1)\n  5280: jump @202 if a2 == 0\n      : @201 (gas: 1)\n  5283: jump @392\n      : @202 (gas: 4)\n  5286: a0 = s1 + 0x7ff\n  5290: a0 = a0 + 0x41\n  5293: a1 = 0x40\n  5296: ra = 162, jump @7\n      : @203 [@dyn 81] (gas: 14)\n  5302: a2 = s1 + 0x7ff\n  5306: a2 = a2 + 0x31\n  5309: t0 = u64 [a2 + 0x28]\n  5312: a5 = u64 [a2 + 0x20]\n  5315: a4 = u64 [a2 + 0x18]\n  5318: a0 = u64 [a2 + 0x10]\n  5321: a3 = a4 | t0\n  5324: a1 = a0 | a5\n  5327: a1 = a1 | a3\n  5330: a1 = a1 >> 0x20\n  5333: a3 = a3 | a5\n  5336: a3 = a3 << 0x20\n  5339: a1 = a1 | a3\n  5342: jump @292 if a1 != 0\n      : @204 (gas: 14)\n  5346: u64 [a2 + 0] = 0\n  5348: a1 = s1 + 0x1000\n  5352: u64 [a1 + 4294965288] = 0\n  5356: a1 = s1 + 0x1000\n  5360: u64 [a1 + 4294965280] = 0\n  5364: a3 = 0x70a0823100000000\n  5374: a1 = s1 + 0x7ff\n  5378: a1 = a1 + 0x21\n  5381: u64 [a2 + 0x8] = a3\n  5384: u64 [s1 + 0x90] = a0\n  5388: u64 [s1 + 0x88] = t0\n  5392: u64 [s1 + 0x60] = a5\n  5395: u64 [s1 + 0x58] = a4\n  5398: ra = 164, jump @9\n      : @205 [@dyn 82] (gas: 4)\n  5404: a0 = u64 [s1 + 0x28]\n  5407: ra = 0xa6\n  5411: ecalli 0 // 'address'\n  5412: fallthrough\n      : @206 [@dyn 83] (gas: 10)\n  5413: a4 = u64 [s1 + 0x90]\n  5417: a0 = u64 [s1 + 0x88]\n  5421: a1 = u64 [s1 + 0x60]\n  5424: a0 = a0 | a1\n  5427: a1 = 0xfffffffc\n  5437: a1 = a4 <u a1\n  5440: a2 = u64 [s1 + 0x58]\n  5443: a1 = 0 if a2 != 0\n  5445: a1 = 0 if a0 != 0\n  5447: jump @292 if a1 == 0\n      : @207 (gas: 1)\n  5451: t0 = 168, jump @476\n      : @208 [@dyn 84] (gas: 11)\n  5457: a4 = s1 + 0x1000\n  5461: u64 [a4 + 4294965272] = 0\n  5465: a4 = s1 + 0x1000\n  5469: u64 [a4 + 0xfffffffffffff810] = a1\n  5473: a1 = s1 + 0x1000\n  5477: u64 [a1 + 0xfffffffffffff808] = a2\n  5481: a1 = s1 + 0x7ff\n  5485: a1 = a1 + 0x1\n  5488: a2 = s1 + 0x1000\n  5492: u64 [a2 + 0xfffffffffffff800] = a3\n  5496: ra = 170, jump @9\n      : @209 [@dyn 85] (gas: 17)\n  5502: ecalli 11 // 'ref_time_left'\n  5504: a0 = u64 [s1 + 0x10]\n  5507: a1 = u64 [s1 + 0xb8]\n  5511: u64 [a1 + 0x8] = a0\n  5514: a0 = u64 [s1 + 0x78]\n  5517: u64 [a1] = a0\n  5519: a0 = u64 [s1 + 0x18]\n  5522: u32 [a1 + 0x10] = a0\n  5525: a0 = s1 + 0x7ff\n  5529: a0 = a0 + 0x31\n  5532: u64 [a0 + 1736] = 0\n  5536: u64 [a0 + 1728] = 0\n  5540: u64 [a0 + 1720] = 0\n  5544: u64 [a0 + 1712] = 0\n  5548: a1 = 0x24\n  5551: a0 = u64 [s1 + 0x90]\n  5555: ra = 172, jump @15\n      : @210 [@dyn 86] (gas: 4)\n  5561: u64 [s1 + 0xb8] = a0\n  5565: a1 = 0x20\n  5568: a0 = u64 [s1 + 0x90]\n  5572: ra = 174, jump @15\n      : @211 [@dyn 87] (gas: 34)\n  5578: a1 = s1 + 0x7ff\n  5582: a1 = a1 + 0x31\n  5585: u32 [a1 + 1744] = 0x20\n  5590: u64 [a1 + 1800] = 0\n  5594: u64 [a1 + 1792] = 0\n  5598: u64 [a1 + 1784] = 0\n  5602: u64 [a1 + 1776] = 0\n  5606: a1 = 0x1800000000\n  5616: a2 = u64 [s1 + 0x80]\n  5620: t0 = a2 | a1\n  5623: a1 = s1 + 0x7ff\n  5627: a1 = a1 + 0x6e1\n  5631: a1 = a1 << 0x20\n  5634: a1 = a1 >> 0x20\n  5637: a2 = s1 + 0x7ff\n  5641: a2 = a2 + 0x721\n  5645: a2 = a2 << 0x20\n  5648: a3 = a2 | a1\n  5651: a1 = u64 [s1 + 0xb8]\n  5655: a1 = a1 << 0x20\n  5658: a1 = a1 >> 0x20\n  5661: a4 = u64 [s1 + 0x20]\n  5664: a4 = a4 | a1\n  5667: a0 = a0 << 0x20\n  5670: a0 = a0 >> 0x20\n  5673: a1 = s1 + 0x7ff\n  5677: a1 = a1 + 0x701\n  5681: a1 = a1 << 0x20\n  5684: a5 = a1 | a0\n  5687: a1 = 0xffffffffffffffff\n  5690: a2 = 0xffffffffffffffff\n  5693: a0 = t0\n  5695: ecalli 1 // 'call'\n  5697: fallthrough\n      : @212 (gas: 1)\n  5698: jump @333 if a0 != 0\n      : @213 (gas: 2)\n  5702: ecalli 13 // 'return_data_size'\n  5704: fallthrough\n      : @214 (gas: 2)\n  5705: a4 = 0x20\n  5708: jump @216 if a0 >=u a4\n      : @215 (gas: 3)\n  5711: ecalli 13 // 'return_data_size'\n  5713: a4 = a0\n  5715: fallthrough\n      : @216 (gas: 18)\n  5716: a2 = u64 [s1 + 0x90]\n  5720: a3 = u64 [s1 + 0x88]\n  5724: a0 = u64 [s1 + 0x60]\n  5727: a1 = u64 [s1 + 0x58]\n  5730: u64 [s1 + 136] = 0\n  5734: u64 [s1 + 0xb8] = a4\n  5738: a5 = s1 + 0x700\n  5742: u64 [a5 + 0xa0] = a4\n  5746: u64 [a5 + 0xc0] = a2\n  5750: u64 [s1 + 1960] = 0\n  5754: u64 [a5 + 0xc8] = a1\n  5758: u64 [s1 + 1968] = 0\n  5762: u64 [a5 + 0xd0] = a0\n  5766: u64 [s1 + 1976] = 0\n  5770: a0 = s1 + 0x7c0\n  5774: a1 = s1 + 0x7a0\n  5778: u64 [a5 + 0xd8] = a3\n  5782: ra = 176, jump @410\n      : @217 [@dyn 88] (gas: 4)\n  5788: a3 = u64 [s1 + 0x88]\n  5792: a0 = a3 >u 0\n  5794: a1 = u64 [s1 + 0xb8]\n  5798: t0 = 178, jump @474\n      : @218 [@dyn 89] (gas: 1)\n  5804: jump @220 if a2 != 0\n      : @219 (gas: 1)\n  5807: jump @394\n      : @220 (gas: 3)\n  5810: a0 = s1 + 0x780\n  5814: a1 = u64 [s1 + 0x90]\n  5818: ra = 180, jump @7\n      : @221 [@dyn 90] (gas: 11)\n  5824: a0 = u64 [s1 + 0x798]\n  5828: u64 [s1 + 0x90] = a0\n  5832: a0 = u64 [s1 + 0x790]\n  5836: u64 [s1 + 0x88] = a0\n  5840: a0 = u64 [s1 + 0x788]\n  5844: u64 [s1 + 0x80] = a0\n  5848: a0 = u64 [s1 + 0x780]\n  5852: u64 [s1 + 0x78] = a0\n  5855: a0 = s1 + 0x760\n  5859: a1 = 0x40\n  5862: ra = 182, jump @7\n      : @222 [@dyn 91] (gas: 13)\n  5868: a0 = s1 + 0x700\n  5872: a4 = u64 [a0 + 0x78]\n  5875: a5 = u64 [a0 + 0x70]\n  5878: a3 = u64 [a0 + 0x68]\n  5881: a2 = u64 [a0 + 0x60]\n  5884: a0 = a3 | a4\n  5887: a1 = a2 | a5\n  5890: a1 = a1 | a0\n  5893: a1 = a1 >> 0x20\n  5896: a0 = a0 | a5\n  5899: a0 = a0 << 0x20\n  5902: a0 = a0 | a1\n  5905: jump @292 if a0 != 0\n      : @223 (gas: 15)\n  5909: a0 = u64 [s1 + 0xb0]\n  5913: u64 [s1 + 0x740] = a0\n  5917: a0 = u64 [s1 + 0x98]\n  5921: u64 [s1 + 0x748] = a0\n  5925: a0 = u64 [s1 + 0xa0]\n  5929: u64 [s1 + 0x750] = a0\n  5933: a1 = s1 + 0x740\n  5937: a0 = u64 [s1 + 0xa8]\n  5941: u64 [s1 + 0x758] = a0\n  5945: a0 = a2\n  5947: u64 [s1 + 0xb8] = a2\n  5951: u64 [s1 + 0xb0] = a3\n  5955: u64 [s1 + 0xa8] = a4\n  5959: u64 [s1 + 0xa0] = a5\n  5963: ra = 184, jump @9\n      : @224 [@dyn 92] (gas: 1)\n  5969: t0 = 186, jump @482\n      : @225 [@dyn 93] (gas: 1)\n  5975: jump @292 if a1 == 0\n      : @226 (gas: 11)\n  5979: i32 a0 = a2 + 0x20\n  5982: a1 = u64 [s1 + 0x78]\n  5985: u64 [s1 + 0x720] = a1\n  5989: a1 = u64 [s1 + 0x80]\n  5993: u64 [s1 + 0x728] = a1\n  5997: a1 = u64 [s1 + 0x88]\n  6001: u64 [s1 + 0x730] = a1\n  6005: a1 = s1 + 0x720\n  6009: a3 = u64 [s1 + 0x90]\n  6013: u64 [s1 + 0x738] = a3\n  6017: ra = 188, jump @9\n      : @227 [@dyn 94] (gas: 23)\n  6023: u64 [s1 + 1784] = 0\n  6027: a0 = u64 [s1 + 0x8]\n  6030: a4 = s1 + 0x600\n  6034: u64 [a4 + 0xf0] = a0\n  6038: a0 = u64 [s1 + 0x68]\n  6041: u64 [a4 + 0xe8] = a0\n  6045: a0 = u64 [0x20000]\n  6050: a1 = u64 [0x20008]\n  6055: a2 = u64 [0x20010]\n  6060: a3 = u64 [s1 + 0x70]\n  6063: u64 [a4 + 0xe0] = a3\n  6067: a4 = s1 + 0x700\n  6071: u64 [a4 + 0x18] = a0\n  6074: u64 [a4 + 0x10] = a1\n  6077: u64 [a4 + 0x8] = a2\n  6080: a0 = u64 [0x20018]\n  6085: a1 = 0x40\n  6088: a2 = s1 + 0x700\n  6092: a3 = s1 + 0x6e0\n  6096: u64 [a4] = a0\n  6098: a0 = u64 [s1 + 0xb8]\n  6102: ra = 0xfe\n  6106: jump @13\n      : @228 (gas: 3)\n  6109: a0 = u64 [s1 + 0xb8]\n  6113: a0 = i32 [a0]\n  6115: jump @364 if a0 <=u 67\n      : @229 (gas: 2)\n  6120: a0 = s1 + 0x660\n  6124: ra = 190, jump @404\n      : @230 [@dyn 95] (gas: 23)\n  6130: a1 = s1 + 0x600\n  6134: a0 = u64 [a1 + 0x70]\n  6137: u64 [s1 + 0x58] = a0\n  6140: a0 = u64 [a1 + 0x68]\n  6143: u64 [s1 + 0x60] = a0\n  6146: a0 = u64 [a1 + 0x60]\n  6149: u64 [s1 + 0x68] = a0\n  6152: a0 = s1 + 0x1000\n  6156: i32 a0 = a0 + 0xfffffffffffffc60\n  6160: a1 = 0x24\n  6163: ecalli 3 // 'call_data_load'\n  6165: a1 = s1 + 0x7ff\n  6169: a1 = a1 + 0x31\n  6172: a2 = a1 + 0x400\n  6176: a0 = u64 [a2 + 0x48]\n  6179: u64 [s1 + 0xb0] = a0\n  6183: a0 = u64 [a2 + 0x40]\n  6186: u64 [s1 + 0xa8] = a0\n  6190: a0 = u64 [a2 + 0x38]\n  6193: u64 [s1 + 0xa0] = a0\n  6197: a0 = u64 [a2 + 0x30]\n  6200: u64 [s1 + 0x98] = a0\n  6204: ra = 192, jump @0\n      : @231 [@dyn 96] (gas: 17)\n  6210: a0 = 0x30090\n  6215: a1 = u64 [0x300d8]\n  6220: u64 [s1 + 0x80] = a1\n  6224: a1 = u64 [0x300d0]\n  6229: u64 [s1 + 0x78] = a1\n  6232: u64 [s1 + 0x88] = a0\n  6236: a0 = u32 [0x300e0]\n  6241: u64 [s1 + 0x70] = a0\n  6244: a0 = 0x30070\n  6249: u64 [s1 + 0xb8] = a0\n  6253: i32 a0 = a0 + 0\n  6255: u64 [s1 + 0x90] = a0\n  6259: ra = 0xc2\n  6263: ecalli 5 // 'caller'\n  6265: a2 = u64 [s1 + 0xb8]\n  6269: t0 = 0xc4\n  6273: jump @478\n      : @232 [@dyn 97] (gas: 2)\n  6276: a2 = u64 [s1 + 0xb8]\n  6280: t0 = 196, jump @478\n      : @233 [@dyn 98] (gas: 9)\n  6286: a2 = u64 [s1 + 0x70]\n  6289: a1 = a1 ^ a2\n  6292: a2 = u64 [s1 + 0x78]\n  6295: a0 = a0 ^ a2\n  6298: a0 = a0 | a1\n  6301: a1 = u64 [s1 + 0x80]\n  6305: a1 = a1 ^ a3\n  6308: a0 = a0 | a1\n  6311: jump @365 if a0 != 0\n      : @234 (gas: 10)\n  6315: a0 = s1 + 0x7ff\n  6319: a0 = a0 + 0x31\n  6322: u64 [a0 + 1128] = 0\n  6326: u64 [a0 + 1120] = 0\n  6330: u64 [a0 + 1112] = 0\n  6334: u64 [a0 + 1104] = 0\n  6338: a0 = s1 + 0x1000\n  6342: i32 a0 = a0 + 0xfffffffffffffc80\n  6346: ecalli 17 // 'value_transferred'\n  6348: fallthrough\n      : @235 (gas: 19)\n  6349: a2 = s1 + 0x7ff\n  6353: a2 = a2 + 0x31\n  6356: a3 = a2 + 0x400\n  6360: a0 = u64 [a3 + 0x68]\n  6363: a1 = u64 [a3 + 0x58]\n  6366: t0 = u64 [a2 + 0x450]\n  6370: a2 = u64 [a3 + 0x60]\n  6373: t1 = u64 [s1 + 0xb0]\n  6377: a0 = a0 ^ t1\n  6380: a3 = u64 [s1 + 0xa0]\n  6384: a1 = a1 ^ a3\n  6387: a0 = a0 | a1\n  6390: a5 = u64 [s1 + 0xa8]\n  6394: a1 = a2 ^ a5\n  6397: a4 = u64 [s1 + 0x98]\n  6401: a2 = t0 ^ a4\n  6404: a1 = a1 | a2\n  6407: a0 = a0 | a1\n  6410: jump @369 if a0 != 0\n      : @236 (gas: 5)\n  6414: a2 = a5\n  6416: a0 = a4 | a5\n  6419: a1 = a3 | t1\n  6422: a0 = a0 | a1\n  6425: jump @373 if a0 == 0\n      : @237 (gas: 1)\n  6429: ra = 198, jump @0\n      : @238 [@dyn 99] (gas: 4)\n  6435: a2 = u64 [s1 + 0x88]\n  6439: a0 = u64 [a2 + 0x8]\n  6442: a1 = u64 [a2 + 0x10]\n  6445: t0 = 200, jump @480\n      : @239 [@dyn 100] (gas: 10)\n  6451: a0 = u64 [s1 + 0xb8]\n  6455: u64 [s1 + 0x78] = a1\n  6458: u32 [a0 + 0x10] = a1\n  6461: u64 [s1 + 0x70] = a2\n  6464: u64 [a0 + 0x8] = a2\n  6467: u64 [s1 + 0x80] = a3\n  6471: u64 [a0] = a3\n  6473: a0 = u64 [s1 + 0x90]\n  6477: ecalli 6 // 'code_size'\n  6479: fallthrough\n      : @240 (gas: 1)\n  6480: jump @378 if a0 == 0\n      : @241 (gas: 3)\n  6484: a0 = s1 + 0x600\n  6488: a1 = 0x40\n  6491: ra = 202, jump @7\n      : @242 [@dyn 101] (gas: 13)\n  6497: a1 = s1 + 0x600\n  6501: a2 = u64 [a1 + 0x18]\n  6504: a3 = u64 [a1 + 0x10]\n  6507: a4 = u64 [a1 + 0x8]\n  6510: a0 = u64 [a1]\n  6512: a5 = a4 | a2\n  6515: a1 = a0 | a3\n  6518: a1 = a1 | a5\n  6521: a1 = a1 >> 0x20\n  6524: a5 = a5 | a3\n  6527: a5 = a5 << 0x20\n  6530: a1 = a1 | a5\n  6533: jump @292 if a1 != 0\n      : @243 (gas: 11)\n  6537: u64 [s1 + 0x38] = a4\n  6540: u64 [s1 + 0x40] = a3\n  6543: u64 [s1 + 0x48] = a2\n  6546: u64 [s1 + 1520] = 0\n  6550: u64 [s1 + 1512] = 0\n  6554: u64 [s1 + 1504] = 0\n  6558: a2 = 0x1249c58b00000000\n  6568: a1 = s1 + 0x5e0\n  6572: u64 [s1 + 0x5f8] = a2\n  6576: u64 [s1 + 0x88] = a0\n  6580: ra = 204, jump @9\n      : @244 [@dyn 102] (gas: 22)\n  6586: ecalli 11 // 'ref_time_left'\n  6588: a1 = u64 [s1 + 0xb8]\n  6592: a0 = u64 [s1 + 0x70]\n  6595: u64 [a1 + 0x8] = a0\n  6598: a0 = u64 [s1 + 0x80]\n  6602: u64 [a1] = a0\n  6604: a0 = u64 [s1 + 0x78]\n  6607: u32 [a1 + 0x10] = a0\n  6610: a1 = s1 + 0x7ff\n  6614: a1 = a1 + 0x31\n  6617: a0 = u64 [s1 + 0xb0]\n  6621: a2 = a1 + 0x400\n  6625: u64 [a2 + 0x88] = a0\n  6629: a0 = u64 [s1 + 0xa8]\n  6633: u64 [a2 + 0x80] = a0\n  6637: a0 = u64 [s1 + 0xa0]\n  6641: u64 [a2 + 0x78] = a0\n  6644: a0 = u64 [s1 + 0x98]\n  6648: u64 [a2 + 0x70] = a0\n  6651: a1 = 0x4\n  6654: a0 = u64 [s1 + 0x88]\n  6658: ra = 206, jump @15\n      : @245 [@dyn 103] (gas: 4)\n  6664: u64 [s1 + 0x50] = a0\n  6667: a0 = u64 [s1 + 0x88]\n  6671: a1 = 0\n  6673: ra = 208, jump @15\n      : @246 [@dyn 104] (gas: 38)\n  6679: a2 = s1 + 0x7ff\n  6683: a2 = a2 + 0x31\n  6686: u32 [a2 + 1168] = 0\n  6690: a3 = a2 + 0x400\n  6694: u64 [a3 + 200] = 0xffffffffffffffff\n  6699: u64 [a3 + 192] = 0xffffffffffffffff\n  6704: u64 [a3 + 184] = 0xffffffffffffffff\n  6709: u64 [a3 + 176] = 0xffffffffffffffff\n  6714: a1 = u64 [s1 + 0xb8]\n  6718: a1 = a1 << 0x20\n  6721: a3 = a1 >> 0x20\n  6724: a2 = 0x800000000\n  6734: u64 [s1 + 0x30] = a3\n  6737: t0 = a3 | a2\n  6740: a2 = s1 + 0x7ff\n  6744: a2 = a2 + 0x4a1\n  6748: a2 = a2 << 0x20\n  6751: a2 = a2 >> 0x20\n  6754: a3 = s1 + 0x7ff\n  6758: a3 = a3 + 0x4e1\n  6762: a3 = a3 << 0x20\n  6765: a3 = a3 | a2\n  6768: a2 = u64 [s1 + 0x50]\n  6771: a2 = a2 << 0x20\n  6774: a2 = a2 >> 0x20\n  6777: a1 = 0x400000000\n  6787: a4 = a2 | a1\n  6790: a0 = a0 << 0x20\n  6793: a0 = a0 >> 0x20\n  6796: a1 = s1 + 0x7ff\n  6800: a1 = a1 + 0x4c1\n  6804: a1 = a1 << 0x20\n  6807: a5 = a1 | a0\n  6810: a1 = 0xffffffffffffffff\n  6813: a2 = 0xffffffffffffffff\n  6816: a0 = t0\n  6818: ecalli 1 // 'call'\n  6820: fallthrough\n      : @247 (gas: 1)\n  6821: jump @293 if a0 != 0\n      : @248 (gas: 15)\n  6825: u64 [s1 + 1432] = 0\n  6829: u64 [s1 + 1424] = 0\n  6833: u64 [s1 + 1416] = 0\n  6837: u64 [s1 + 1408] = 0\n  6841: a0 = u64 [s1 + 0x88]\n  6845: u64 [s1 + 0x5a0] = a0\n  6849: a0 = u64 [s1 + 0x38]\n  6852: u64 [s1 + 0x5a8] = a0\n  6856: a0 = u64 [s1 + 0x40]\n  6859: u64 [s1 + 0x5b0] = a0\n  6863: a0 = s1 + 0x5a0\n  6867: a1 = s1 + 0x580\n  6871: a2 = u64 [s1 + 0x48]\n  6874: u64 [s1 + 0x5b8] = a2\n  6878: ra = 210, jump @410\n      : @249 [@dyn 105] (gas: 13)\n  6884: a0 = u64 [s1 + 0x58]\n  6887: a0 = a0 << 0x20\n  6890: a0 = a0 >> 0x20\n  6893: u64 [s1 + 1400] = 0\n  6897: u64 [s1 + 0x40] = a0\n  6900: u64 [s1 + 0x570] = a0\n  6904: a0 = u64 [s1 + 0x60]\n  6907: u64 [s1 + 0x568] = a0\n  6911: a1 = s1 + 0x560\n  6915: a0 = u64 [s1 + 0x68]\n  6918: u64 [s1 + 0x560] = a0\n  6922: a0 = 0\n  6924: ra = 212, jump @9\n      : @250 [@dyn 106] (gas: 7)\n  6930: u64 [s1 + 1368] = 0\n  6934: u64 [s1 + 1360] = 0\n  6938: u64 [s1 + 1352] = 0\n  6942: a0 = 0x20\n  6945: a1 = s1 + 0x540\n  6949: u64 [s1 + 1344] = 0\n  6953: ra = 214, jump @9\n      : @251 [@dyn 107] (gas: 7)\n  6959: a0 = sp + 0xffffffffffffffe0\n  6962: a0 = a0 & 0xffffffffffffffe0\n  6965: u64 [s1 + 0x88] = a0\n  6969: sp = a0\n  6971: a1 = 0x40\n  6974: a0 = 0\n  6976: ra = 216, jump @15\n      : @252 [@dyn 108] (gas: 12)\n  6982: a1 = sp + 0xffffffffffffffe0\n  6985: a1 = a1 & 0xffffffffffffffe0\n  6988: u64 [s1 + 0x58] = a1\n  6991: sp = a1\n  6993: i32 a0 = a0 + 0\n  6995: i32 a2 = a1 + 0\n  6997: a1 = 0x40\n  7000: ra = 0xda\n  7004: ecalli 10 // 'hash_keccak_256'\n  7006: a3 = u64 [s1 + 0x58]\n  7009: t0 = 0xdc\n  7013: jump @483\n      : @253 [@dyn 109] (gas: 2)\n  7016: a3 = u64 [s1 + 0x58]\n  7019: t0 = 220, jump @483\n      : @254 [@dyn 110] (gas: 7)\n  7025: a1 = u64 [s1 + 0x88]\n  7029: u64 [a1 + 0x18] = a3\n  7032: u64 [a1 + 0x10] = a2\n  7035: u64 [a1 + 0x8] = a4\n  7038: u64 [a1] = a0\n  7040: a0 = s1 + 0x520\n  7044: ra = 222, jump @11\n      : @255 [@dyn 111] (gas: 38)\n  7050: t2 = u64 [s1 + 0x538]\n  7054: a1 = s1 + 0x500\n  7058: a0 = u64 [a1 + 0x30]\n  7061: a4 = u64 [a1 + 0x20]\n  7064: a5 = u64 [a1 + 0x28]\n  7067: a1 = sp + 0xffffffffffffffe0\n  7070: a1 = a1 & 0xffffffffffffffe0\n  7073: sp = a1\n  7075: a3 = u64 [s1 + 0xa0]\n  7079: a3 = a3 + a5\n  7082: t0 = u64 [s1 + 0x98]\n  7086: t0 = t0 + a4\n  7089: a4 = t0 <u a4\n  7092: a3 = a3 + a4\n  7095: t1 = a3 ^ a5\n  7098: a2 = a3 <u a5\n  7101: a2 = a4 if t1 == 0\n  7104: a4 = u64 [s1 + 0xa8]\n  7108: a4 = a4 + a0\n  7111: a5 = a4 + a2\n  7114: t1 = a5 <u a4\n  7117: ra = u64 [s1 + 0xb0]\n  7121: ra = ra + t2\n  7124: a4 = a4 <u a0\n  7127: a4 = a4 + ra\n  7130: ra = a4 + t1\n  7133: t1 = a5 <u a0\n  7136: a4 = t2 ^ ra\n  7139: t2 = ra <u t2\n  7142: t2 = t1 if a4 == 0\n  7145: a0 = a0 ^ a5\n  7148: a0 = a0 | a4\n  7151: t2 = a2 if a0 == 0\n  7154: u64 [a1 + 0x10] = a5\n  7157: u64 [a1 + 0x8] = a3\n  7160: u64 [a1] = t0\n  7162: u64 [a1 + 0x18] = ra\n  7165: jump @384 if t2 != 0\n      : @256 (gas: 2)\n  7169: a0 = u64 [s1 + 0x88]\n  7173: ra = 224, jump @12\n      : @257 [@dyn 112] (gas: 3)\n  7179: a0 = s1 + 0x500\n  7183: a1 = 0x40\n  7186: ra = 226, jump @7\n      : @258 [@dyn 113] (gas: 13)\n  7192: a1 = s1 + 0x500\n  7196: a3 = u64 [a1 + 0x18]\n  7199: a4 = u64 [a1 + 0x10]\n  7202: a5 = u64 [a1 + 0x8]\n  7205: a0 = u64 [a1]\n  7207: a2 = a5 | a3\n  7210: a1 = a0 | a4\n  7213: a1 = a1 | a2\n  7216: a1 = a1 >> 0x20\n  7219: a2 = a2 | a4\n  7222: a2 = a2 << 0x20\n  7225: a1 = a1 | a2\n  7228: jump @292 if a1 != 0\n      : @259 (gas: 11)\n  7232: u64 [s1 + 1264] = 0\n  7236: u64 [s1 + 1256] = 0\n  7240: u64 [s1 + 1248] = 0\n  7244: a2 = 0x70a0823100000000\n  7254: a1 = s1 + 0x4e0\n  7258: u64 [s1 + 0x4f8] = a2\n  7262: u64 [s1 + 0x88] = a0\n  7266: u64 [s1 + 0x58] = a3\n  7269: u64 [s1 + 0x50] = a4\n  7272: u64 [s1 + 0x48] = a5\n  7275: ra = 228, jump @9\n      : @260 [@dyn 114] (gas: 4)\n  7281: a0 = u64 [s1 + 0x90]\n  7285: ra = 0xe6\n  7289: ecalli 0 // 'address'\n  7290: fallthrough\n      : @261 [@dyn 115] (gas: 10)\n  7291: a4 = u64 [s1 + 0x88]\n  7295: a0 = u64 [s1 + 0x58]\n  7298: a1 = u64 [s1 + 0x50]\n  7301: a0 = a0 | a1\n  7304: a1 = 0xfffffffc\n  7314: a1 = a4 <u a1\n  7317: a2 = u64 [s1 + 0x48]\n  7320: a1 = 0 if a2 != 0\n  7322: a1 = 0 if a0 != 0\n  7324: jump @292 if a1 == 0\n      : @262 (gas: 1)\n  7328: t0 = 232, jump @476\n      : @263 [@dyn 116] (gas: 7)\n  7334: u64 [s1 + 1240] = 0\n  7338: a4 = s1 + 0x400\n  7342: u64 [a4 + 0xd0] = a1\n  7346: u64 [a4 + 0xc8] = a2\n  7350: a1 = s1 + 0x4c0\n  7354: u64 [a4 + 0xc0] = a3\n  7358: ra = 234, jump @9\n      : @264 [@dyn 117] (gas: 17)\n  7364: ecalli 11 // 'ref_time_left'\n  7366: a0 = u64 [s1 + 0x70]\n  7369: a1 = u64 [s1 + 0xb8]\n  7373: u64 [a1 + 0x8] = a0\n  7376: a0 = u64 [s1 + 0x80]\n  7380: u64 [a1] = a0\n  7382: a0 = u64 [s1 + 0x78]\n  7385: u32 [a1 + 0x10] = a0\n  7388: a0 = s1 + 0x7ff\n  7392: a0 = a0 + 0x31\n  7395: u64 [a0 + 1288] = 0\n  7399: u64 [a0 + 1280] = 0\n  7403: u64 [a0 + 1272] = 0\n  7407: u64 [a0 + 1264] = 0\n  7411: a1 = 0x24\n  7414: a0 = u64 [s1 + 0x88]\n  7418: ra = 236, jump @15\n      : @265 [@dyn 118] (gas: 4)\n  7424: u64 [s1 + 0xb8] = a0\n  7428: a1 = 0x20\n  7431: a0 = u64 [s1 + 0x88]\n  7435: ra = 238, jump @15\n      : @266 [@dyn 119] (gas: 34)\n  7441: a1 = a0\n  7443: a0 = s1 + 0x7ff\n  7447: a0 = a0 + 0x31\n  7450: u32 [a0 + 1296] = 0x20\n  7455: u64 [a0 + 1352] = 0\n  7459: u64 [a0 + 1344] = 0\n  7463: u64 [a0 + 1336] = 0\n  7467: u64 [a0 + 1328] = 0\n  7471: a0 = 0x1800000000\n  7481: a2 = u64 [s1 + 0x30]\n  7484: a0 = a0 | a2\n  7487: a2 = s1 + 0x7ff\n  7491: a2 = a2 + 0x521\n  7495: a2 = a2 << 0x20\n  7498: a2 = a2 >> 0x20\n  7501: a3 = s1 + 0x7ff\n  7505: a3 = a3 + 0x561\n  7509: a3 = a3 << 0x20\n  7512: a3 = a3 | a2\n  7515: a2 = u64 [s1 + 0xb8]\n  7519: a2 = a2 << 0x20\n  7522: a2 = a2 >> 0x20\n  7525: a4 = 0x2400000000\n  7535: a4 = a4 | a2\n  7538: a1 = a1 << 0x20\n  7541: a1 = a1 >> 0x20\n  7544: a2 = s1 + 0x7ff\n  7548: a2 = a2 + 0x541\n  7552: a2 = a2 << 0x20\n  7555: a5 = a2 | a1\n  7558: a1 = 0xffffffffffffffff\n  7561: a2 = 0xffffffffffffffff\n  7564: ecalli 1 // 'call'\n  7566: fallthrough\n      : @267 (gas: 1)\n  7567: jump @325 if a0 != 0\n      : @268 (gas: 2)\n  7571: ecalli 13 // 'return_data_size'\n  7573: fallthrough\n      : @269 (gas: 2)\n  7574: a4 = 0x20\n  7577: jump @271 if a0 >=u a4\n      : @270 (gas: 3)\n  7580: ecalli 13 // 'return_data_size'\n  7582: a4 = a0\n  7584: fallthrough\n      : @271 (gas: 18)\n  7585: a2 = u64 [s1 + 0x88]\n  7589: a3 = u64 [s1 + 0x58]\n  7592: a0 = u64 [s1 + 0x50]\n  7595: a1 = u64 [s1 + 0x48]\n  7598: u64 [s1 + 144] = 0\n  7602: u64 [s1 + 0xb8] = a4\n  7606: a5 = s1 + 0x400\n  7610: u64 [a5 + 0x60] = a4\n  7613: u64 [a5 + 0x80] = a2\n  7617: u64 [s1 + 1128] = 0\n  7621: u64 [a5 + 0x88] = a1\n  7625: u64 [s1 + 1136] = 0\n  7629: u64 [a5 + 0x90] = a0\n  7633: u64 [s1 + 1144] = 0\n  7637: a0 = s1 + 0x480\n  7641: a1 = s1 + 0x460\n  7645: u64 [a5 + 0x98] = a3\n  7649: ra = 240, jump @410\n      : @272 [@dyn 120] (gas: 4)\n  7655: a3 = u64 [s1 + 0x90]\n  7659: a0 = a3 >u 0\n  7661: a1 = u64 [s1 + 0xb8]\n  7665: t0 = 242, jump @474\n      : @273 [@dyn 121] (gas: 1)\n  7671: jump @393 if a2 == 0\n      : @274 (gas: 3)\n  7675: a0 = s1 + 0x440\n  7679: a1 = u64 [s1 + 0x88]\n  7683: ra = 244, jump @7\n      : @275 [@dyn 122] (gas: 11)\n  7689: a0 = u64 [s1 + 0x458]\n  7693: u64 [s1 + 0x90] = a0\n  7697: a0 = u64 [s1 + 0x450]\n  7701: u64 [s1 + 0x88] = a0\n  7705: a0 = u64 [s1 + 0x448]\n  7709: u64 [s1 + 0x80] = a0\n  7713: a0 = u64 [s1 + 0x440]\n  7717: u64 [s1 + 0x78] = a0\n  7720: a0 = s1 + 0x420\n  7724: a1 = 0x40\n  7727: ra = 246, jump @7\n      : @276 [@dyn 123] (gas: 13)\n  7733: a0 = s1 + 0x400\n  7737: a4 = u64 [a0 + 0x38]\n  7740: a5 = u64 [a0 + 0x30]\n  7743: a3 = u64 [a0 + 0x28]\n  7746: a2 = u64 [a0 + 0x20]\n  7749: a0 = a3 | a4\n  7752: a1 = a2 | a5\n  7755: a1 = a1 | a0\n  7758: a1 = a1 >> 0x20\n  7761: a0 = a0 | a5\n  7764: a0 = a0 << 0x20\n  7767: a0 = a0 | a1\n  7770: jump @292 if a0 != 0\n      : @277 (gas: 15)\n  7774: a0 = u64 [s1 + 0x98]\n  7778: u64 [s1 + 0x400] = a0\n  7782: a0 = u64 [s1 + 0xa0]\n  7786: u64 [s1 + 0x408] = a0\n  7790: a0 = u64 [s1 + 0xa8]\n  7794: u64 [s1 + 0x410] = a0\n  7798: a1 = s1 + 0x400\n  7802: a0 = u64 [s1 + 0xb0]\n  7806: u64 [s1 + 0x418] = a0\n  7810: a0 = a2\n  7812: u64 [s1 + 0xb8] = a2\n  7816: u64 [s1 + 0xb0] = a3\n  7820: u64 [s1 + 0xa8] = a4\n  7824: u64 [s1 + 0xa0] = a5\n  7828: ra = 248, jump @9\n      : @278 [@dyn 124] (gas: 1)\n  7834: t0 = 250, jump @482\n      : @279 [@dyn 125] (gas: 1)\n  7840: jump @292 if a1 == 0\n      : @280 (gas: 11)\n  7844: i32 a0 = a2 + 0x20\n  7847: a1 = u64 [s1 + 0x78]\n  7850: u64 [s1 + 0x3e0] = a1\n  7854: a1 = u64 [s1 + 0x80]\n  7858: u64 [s1 + 0x3e8] = a1\n  7862: a1 = u64 [s1 + 0x88]\n  7866: u64 [s1 + 0x3f0] = a1\n  7870: a1 = s1 + 0x3e0\n  7874: a3 = u64 [s1 + 0x90]\n  7878: u64 [s1 + 0x3f8] = a3\n  7882: ra = 252, jump @9\n      : @281 [@dyn 126] (gas: 21)\n  7888: u64 [s1 + 952] = 0\n  7892: a0 = u64 [s1 + 0x40]\n  7895: a4 = s1 + 0x300\n  7899: u64 [a4 + 0xb0] = a0\n  7903: a0 = u64 [s1 + 0x60]\n  7906: u64 [a4 + 0xa8] = a0\n  7910: a0 = u64 [0x20020]\n  7915: a1 = u64 [0x20028]\n  7920: a2 = u64 [0x20030]\n  7925: a3 = u64 [s1 + 0x68]\n  7928: u64 [a4 + 0xa0] = a3\n  7932: u64 [a4 + 0xd8] = a0\n  7936: u64 [a4 + 0xd0] = a1\n  7940: u64 [a4 + 0xc8] = a2\n  7944: a0 = u64 [0x20038]\n  7949: a1 = 0x40\n  7952: a2 = s1 + 0x3c0\n  7956: a3 = s1 + 0x3a0\n  7960: u64 [a4 + 0xc0] = a0\n  7964: a0 = u64 [s1 + 0xb8]\n  7968: ra = 254, jump @13\n      : @282 [@dyn 127] (gas: 3)\n  7974: a0 = 0\n  7976: a1 = 0\n  7978: ra = 256, jump @15\n      : @283 [@dyn 128] (gas: 5)\n  7984: i32 a1 = a0 + 0\n  7986: a0 = 0\n  7988: a2 = 0\n  7990: ecalli 14 // 'seal_return'\n  7992: jump @357\n      : @284 (gas: 10)\n  7995: u64 [a2 + 1000] = 0\n  7999: u64 [a2 + 992] = 0\n  8003: u64 [a2 + 984] = 0\n  8007: u64 [a2 + 976] = 0\n  8011: a0 = s1 + 0x1000\n  8015: i32 a0 = a0 + 0xfffffffffffffc00\n  8019: ra = 0x102\n  8023: ecalli 17 // 'value_transferred'\n  8025: t0 = 0x104\n  8029: jump @487\n      : @285 [@dyn 129] (gas: 1)\n  8032: t0 = 260, jump @487\n      : @286 [@dyn 130] (gas: 8)\n  8038: a0 = u64 [a4 + 0xe0]\n  8042: a1 = u64 [a4 + 0xe8]\n  8046: a2 = u64 [a4 + 0xd8]\n  8050: a3 = u64 [a4 + 0xd0]\n  8054: a1 = a1 | a2\n  8057: a0 = a0 | a3\n  8060: a0 = a0 | a1\n  8063: jump @379 if a0 != 0\n      : @287 (gas: 3)\n  8067: a0 = u64 [s1 + 0xb8]\n  8071: a0 = i32 [a0]\n  8073: jump @380 if a0 <=u 3\n      : @288 (gas: 3)\n  8078: a0 = s1 + 0x260\n  8082: a1 = 0x40\n  8085: ra = 262, jump @7\n      : @289 [@dyn 131] (gas: 10)\n  8091: a1 = s1 + 0x200\n  8095: a0 = u64 [a1 + 0x78]\n  8098: u64 [s1 + 0xb8] = a0\n  8102: a0 = u64 [a1 + 0x70]\n  8105: u64 [s1 + 0xb0] = a0\n  8109: a0 = u64 [a1 + 0x68]\n  8112: u64 [s1 + 0xa0] = a0\n  8116: a0 = u64 [a1 + 0x60]\n  8119: u64 [s1 + 0xa8] = a0\n  8123: ra = 264, jump @0\n      : @290 [@dyn 132] (gas: 1)\n  8129: t0 = 266, jump @477\n      : @291 [@dyn 133] (gas: 1)\n  8135: jump @381 if a0 == 0\n      : @292 (gas: 1)\n  8139: trap\n      : @293 (gas: 3)\n  8140: a0 = s1 + 0x5c0\n  8144: a1 = 0x40\n  8147: ra = 268, jump @7\n      : @294 [@dyn 134] (gas: 13)\n  8153: a1 = s1 + 0x500\n  8157: a0 = u64 [a1 + 0xd8]\n  8161: u64 [s1 + 0xb0] = a0\n  8165: a0 = u64 [a1 + 0xd0]\n  8169: u64 [s1 + 0xa8] = a0\n  8173: a0 = u64 [a1 + 0xc8]\n  8177: u64 [s1 + 0xa0] = a0\n  8181: a0 = u64 [a1 + 0xc0]\n  8185: u64 [s1 + 0xb8] = a0\n  8189: ra = 0x10e\n  8193: ecalli 13 // 'return_data_size'\n  8195: t0 = 0x110\n  8199: jump @475\n      : @295 [@dyn 135] (gas: 1)\n  8202: t0 = 272, jump @475\n      : @296 [@dyn 136] (gas: 1)\n  8208: jump @292 if a1 != 0\n      : @297 (gas: 3)\n  8211: a2 = a0\n  8213: a0 = a0 >> 0x20\n  8216: jump @292 if a0 != 0\n      : @298 (gas: 1)\n  8219: t0 = 274, jump @485\n      : @299 [@dyn 137] (gas: 1)\n  8225: ra = 276, jump @15\n      : @300 [@dyn 138] (gas: 13)\n  8231: a1 = s1 + 0x7ff\n  8235: a1 = a1 + 0x31\n  8238: a2 = u64 [s1 + 0xa8]\n  8242: u32 [a1 + 0x4d0] = a2\n  8246: i32 a0 = a0 + 0\n  8248: a1 = s1 + 0x1000\n  8252: i32 a1 = a1 + 0xfffffffffffffd00\n  8256: a2 = 0\n  8258: ecalli 12 // 'return_data_copy'\n  8260: a0 = s1 + 0x7ff\n  8264: a0 = a0 + 0x31\n  8267: a0 = i32 [a0 + 0x4d0]\n  8271: jump @309\n      : @301 (gas: 4)\n  8274: a0 = s1 + 0x7ff\n  8278: a0 = a0 + 0x1e1\n  8282: a1 = 0x40\n  8285: ra = 278, jump @7\n      : @302 [@dyn 139] (gas: 15)\n  8291: a0 = s1 + 0x7ff\n  8295: a0 = a0 + 0x31\n  8298: a2 = a0 + 0x100\n  8302: a1 = u64 [a2 + 0xc8]\n  8306: u64 [s1 + 0xb0] = a1\n  8310: a1 = u64 [a2 + 0xc0]\n  8314: u64 [s1 + 0xa8] = a1\n  8318: a1 = u64 [a2 + 0xb8]\n  8322: u64 [s1 + 0xa0] = a1\n  8326: a0 = u64 [a2 + 0xb0]\n  8330: u64 [s1 + 0xb8] = a0\n  8334: ra = 0x118\n  8338: ecalli 13 // 'return_data_size'\n  8340: t0 = 0x11a\n  8344: jump @475\n      : @303 [@dyn 140] (gas: 1)\n  8347: t0 = 282, jump @475\n      : @304 [@dyn 141] (gas: 1)\n  8353: jump @292 if a1 != 0\n      : @305 (gas: 3)\n  8357: a2 = a0\n  8359: a0 = a0 >> 0x20\n  8362: jump @292 if a0 != 0\n      : @306 (gas: 1)\n  8366: t0 = 284, jump @485\n      : @307 [@dyn 142] (gas: 1)\n  8372: ra = 286, jump @15\n      : @308 [@dyn 143] (gas: 13)\n  8378: a1 = s1 + 0x7ff\n  8382: a1 = a1 + 0x31\n  8385: a2 = u64 [s1 + 0xa8]\n  8389: u32 [a1 + 0x610] = a2\n  8393: i32 a0 = a0 + 0\n  8395: a1 = s1 + 0x1000\n  8399: i32 a1 = a1 + 0xfffffffffffffe40\n  8403: a2 = 0\n  8405: ecalli 12 // 'return_data_copy'\n  8407: a0 = s1 + 0x7ff\n  8411: a0 = a0 + 0x31\n  8414: a0 = i32 [a0 + 0x610]\n  8418: fallthrough\n      : @309 (gas: 2)\n  8419: a1 = u64 [s1 + 0xb0]\n  8423: jump @292 if a0 <u a1\n      : @310 (gas: 2)\n  8427: ecalli 13 // 'return_data_size'\n  8429: fallthrough\n      : @311 (gas: 3)\n  8430: a1 = a0\n  8432: a0 = a0 >> 0x20\n  8435: jump @292 if a0 != 0\n      : @312 (gas: 3)\n  8439: a0 = u64 [s1 + 0xb8]\n  8443: u64 [s1 + 0xb0] = a1\n  8447: ra = 288, jump @15\n      : @313 [@dyn 144] (gas: 6)\n  8453: i32 a1 = a0 + 0\n  8455: a2 = i32 [s1 + 0xb0]\n  8459: a0 = 0x1\n  8462: ra = 0x158\n  8466: ecalli 14 // 'seal_return'\n  8468: jump @396\n      : @314 (gas: 6)\n  8471: ecalli 13 // 'return_data_size'\n  8473: u64 [s1 + 0x50] = a0\n  8476: a0 = s1 + 0x7ff\n  8480: a0 = a0 + 0xe1\n  8484: a1 = 0x40\n  8487: ra = 290, jump @7\n      : @315 [@dyn 145] (gas: 32)\n  8493: a5 = s1 + 0x7ff\n  8497: a5 = a5 + 0x31\n  8500: t0 = u64 [a5 + 0xc8]\n  8504: u64 [s1 + 0x58] = t0\n  8507: t1 = u64 [a5 + 0xc0]\n  8511: u64 [s1 + 0x48] = t1\n  8514: t2 = u64 [a5 + 0xb8]\n  8518: u64 [s1 + 0x60] = t2\n  8521: ra = u64 [a5 + 0xb0]\n  8525: u64 [s1 + 0x88] = ra\n  8529: a1 = u64 [s1 + 0x50]\n  8532: a0 = a1 + 0x1f\n  8535: a1 = a0 <u a1\n  8538: a0 = a0 & 0xffffffffffffffe0\n  8541: a2 = a0 + 0x20\n  8544: a0 = a2 <u a0\n  8547: a3 = a1 + a0\n  8550: a4 = a3 <u a1\n  8553: a4 = a0 if a0 == 0\n  8556: u64 [a5 + 136] = 0\n  8560: u64 [a5 + 0x70] = a2\n  8563: u64 [a5 + 0xa8] = t0\n  8567: u64 [a5 + 0xa0] = t1\n  8571: u64 [a5 + 0x98] = t2\n  8575: u64 [a5 + 0x90] = ra\n  8579: u64 [a5 + 0x78] = a3\n  8582: a0 = s1 + 0x7ff\n  8586: a0 = a0 + 0xc1\n  8590: a1 = s1 + 0x7ff\n  8594: a1 = a1 + 0xa1\n  8598: u64 [a5 + 0x80] = a4\n  8602: ra = 292, jump @410\n      : @316 [@dyn 146] (gas: 12)\n  8608: a2 = u64 [s1 + 0x88]\n  8612: a0 = u64 [s1 + 0x58]\n  8615: a1 = u64 [s1 + 0x60]\n  8618: a0 = a0 | a1\n  8621: a3 = u64 [s1 + 0x48]\n  8624: a1 = a2 | a3\n  8627: a1 = a1 | a0\n  8630: a1 = a1 >> 0x20\n  8633: a0 = a0 | a3\n  8636: a0 = a0 << 0x20\n  8639: a0 = a0 | a1\n  8642: jump @292 if a0 != 0\n      : @317 (gas: 11)\n  8646: a0 = s1 + 0x7ff\n  8650: a0 = a0 + 0x31\n  8653: u64 [a0 + 104] = 0\n  8656: u64 [a0 + 96] = 0\n  8659: u64 [a0 + 88] = 0\n  8662: a1 = s1 + 0x7ff\n  8666: a1 = a1 + 0x81\n  8670: a3 = u64 [s1 + 0x50]\n  8673: u64 [a0 + 0x50] = a3\n  8676: a0 = a2\n  8678: ra = 294, jump @9\n      : @318 [@dyn 147] (gas: 2)\n  8684: ecalli 13 // 'return_data_size'\n  8686: fallthrough\n      : @319 (gas: 10)\n  8687: a3 = u64 [s1 + 0x88]\n  8691: a1 = u64 [s1 + 0x58]\n  8694: a2 = u64 [s1 + 0x48]\n  8697: a1 = a1 | a2\n  8700: a2 = 0xffffffe0\n  8710: a2 = a3 <u a2\n  8713: a4 = u64 [s1 + 0x60]\n  8716: a2 = 0 if a4 != 0\n  8718: a2 = 0 if a1 != 0\n  8720: jump @292 if a2 == 0\n      : @320 (gas: 3)\n  8724: a1 = a0\n  8726: a0 = a0 >> 0x20\n  8729: jump @292 if a0 != 0\n      : @321 (gas: 7)\n  8733: i32 a0 = a3 + 0x20\n  8736: a2 = a1\n  8738: u64 [s1 + 0x60] = a1\n  8741: i32 a1 = a1 + 0\n  8743: u64 [s1 + 0x88] = a1\n  8747: a1 = a2\n  8749: ra = 296, jump @15\n      : @322 [@dyn 148] (gas: 10)\n  8755: a1 = s1 + 0x7ff\n  8759: a1 = a1 + 0x31\n  8762: a2 = u64 [s1 + 0x60]\n  8765: u32 [a1 + 0x690] = a2\n  8769: i32 a0 = a0 + 0\n  8771: a1 = s1 + 0x1000\n  8775: i32 a1 = a1 + 0xfffffffffffffec0\n  8779: a2 = 0\n  8781: ecalli 12 // 'return_data_copy'\n  8783: fallthrough\n      : @323 (gas: 6)\n  8784: a0 = s1 + 0x7ff\n  8788: a0 = a0 + 0x31\n  8791: a0 = i32 [a0 + 0x690]\n  8795: a2 = u64 [s1 + 0x90]\n  8799: a1 = u64 [s1 + 0x88]\n  8803: jump @200 if a0 >=u a1\n      : @324 (gas: 1)\n  8807: jump @292\n      : @325 (gas: 3)\n  8810: a0 = s1 + 0x4a0\n  8814: a1 = 0x40\n  8817: ra = 298, jump @7\n      : @326 [@dyn 149] (gas: 13)\n  8823: a1 = s1 + 0x400\n  8827: a0 = u64 [a1 + 0xb8]\n  8831: u64 [s1 + 0xb0] = a0\n  8835: a0 = u64 [a1 + 0xb0]\n  8839: u64 [s1 + 0xa8] = a0\n  8843: a0 = u64 [a1 + 0xa8]\n  8847: u64 [s1 + 0xa0] = a0\n  8851: a0 = u64 [a1 + 0xa0]\n  8855: u64 [s1 + 0xb8] = a0\n  8859: ra = 0x12c\n  8863: ecalli 13 // 'return_data_size'\n  8865: t0 = 0x12e\n  8869: jump @475\n      : @327 [@dyn 150] (gas: 1)\n  8872: t0 = 302, jump @475\n      : @328 [@dyn 151] (gas: 1)\n  8878: jump @292 if a1 != 0\n      : @329 (gas: 3)\n  8882: a2 = a0\n  8884: a0 = a0 >> 0x20\n  8887: jump @292 if a0 != 0\n      : @330 (gas: 1)\n  8891: t0 = 304, jump @485\n      : @331 [@dyn 152] (gas: 1)\n  8897: ra = 306, jump @15\n      : @332 [@dyn 153] (gas: 13)\n  8903: a1 = s1 + 0x7ff\n  8907: a1 = a1 + 0x31\n  8910: a2 = u64 [s1 + 0xa8]\n  8914: u32 [a1 + 0x550] = a2\n  8918: i32 a0 = a0 + 0\n  8920: a1 = s1 + 0x1000\n  8924: i32 a1 = a1 + 0xfffffffffffffd80\n  8928: a2 = 0\n  8930: ecalli 12 // 'return_data_copy'\n  8932: a0 = s1 + 0x7ff\n  8936: a0 = a0 + 0x31\n  8939: a0 = i32 [a0 + 0x550]\n  8943: jump @309\n      : @333 (gas: 3)\n  8946: a0 = s1 + 0x7e0\n  8950: a1 = 0x40\n  8953: ra = 308, jump @7\n      : @334 [@dyn 154] (gas: 13)\n  8959: a1 = s1 + 0x700\n  8963: a0 = u64 [a1 + 0xf8]\n  8967: u64 [s1 + 0xb0] = a0\n  8971: a0 = u64 [a1 + 0xf0]\n  8975: u64 [s1 + 0xa8] = a0\n  8979: a0 = u64 [a1 + 0xe8]\n  8983: u64 [s1 + 0xa0] = a0\n  8987: a0 = u64 [a1 + 0xe0]\n  8991: u64 [s1 + 0xb8] = a0\n  8995: ra = 0x136\n  8999: ecalli 13 // 'return_data_size'\n  9001: t0 = 0x138\n  9005: jump @475\n      : @335 [@dyn 155] (gas: 1)\n  9008: t0 = 312, jump @475\n      : @336 [@dyn 156] (gas: 1)\n  9014: jump @292 if a1 != 0\n      : @337 (gas: 3)\n  9018: a2 = a0\n  9020: a0 = a0 >> 0x20\n  9023: jump @292 if a0 != 0\n      : @338 (gas: 1)\n  9027: t0 = 314, jump @485\n      : @339 [@dyn 157] (gas: 1)\n  9033: ra = 316, jump @15\n      : @340 [@dyn 158] (gas: 13)\n  9039: a1 = s1 + 0x7ff\n  9043: a1 = a1 + 0x31\n  9046: a2 = u64 [s1 + 0xa8]\n  9050: u32 [a1 + 0x710] = a2\n  9054: i32 a0 = a0 + 0\n  9056: a1 = s1 + 0x1000\n  9060: i32 a1 = a1 + 0xffffffffffffff40\n  9064: a2 = 0\n  9066: ecalli 12 // 'return_data_copy'\n  9068: a0 = s1 + 0x7ff\n  9072: a0 = a0 + 0x31\n  9075: a0 = i32 [a0 + 0x710]\n  9079: jump @309\n      : @341 (gas: 3)\n  9082: a0 = 0\n  9084: a1 = 0\n  9086: ra = 318, jump @15\n      : @342 [@dyn 159] (gas: 5)\n  9092: i32 a1 = a0 + 0\n  9094: a0 = 0x1\n  9097: a2 = 0\n  9099: ecalli 14 // 'seal_return'\n  9101: jump @357\n      : @343 (gas: 3)\n  9104: a1 = 0x20070\n  9109: i32 a1 = a1 + 0\n  9111: jump @356\n      : @344 (gas: 3)\n  9114: a1 = 0x20070\n  9119: i32 a1 = a1 + 0\n  9121: jump @356\n      : @345 (gas: 3)\n  9124: a1 = 0x20070\n  9129: i32 a1 = a1 + 0\n  9131: jump @356\n      : @346 (gas: 3)\n  9133: a1 = 0x20070\n  9138: i32 a1 = a1 + 0\n  9140: jump @356\n      : @347 (gas: 8)\n  9142: u64 [s1 + 304] = 0\n  9146: u64 [s1 + 296] = 0\n  9150: u64 [s1 + 288] = 0\n  9154: a0 = 0xc39fa00400000000\n  9164: a1 = s1 + 0x120\n  9168: u64 [s1 + 0x138] = a0\n  9172: a0 = 0\n  9174: ra = 320, jump @9\n      : @348 [@dyn 160] (gas: 2)\n  9180: a1 = i32 [0x20068]\n  9185: jump @350 if a1 >u 31\n      : @349 (gas: 4)\n  9189: u32 [0x20068] = 0x20\n  9195: a1 = 0x20070\n  9200: i32 a1 = a1 + 0\n  9202: jump @377\n      : @350 (gas: 3)\n  9205: a1 = 0x20070\n  9210: i32 a1 = a1 + 0\n  9212: jump @377\n      : @351 (gas: 3)\n  9215: a1 = 0x20070\n  9220: i32 a1 = a1 + 0\n  9222: jump @356\n      : @352 (gas: 3)\n  9224: a1 = 0x20070\n  9229: i32 a1 = a1 + 0\n  9231: jump @356\n      : @353 (gas: 3)\n  9233: a0 = u64 [s1 + 0xb8]\n  9237: a0 = i32 [a0]\n  9239: fallthrough\n      : @354 (gas: 1)\n  9240: jump @357 if a0 == 0\n      : @355 (gas: 3)\n  9243: a1 = 0x20070\n  9248: i32 a1 = a1 + 0\n  9250: fallthrough\n      : @356 (gas: 4)\n  9251: a0 = 0x1\n  9254: a2 = 0\n  9256: ecalli 14 // 'seal_return'\n  9258: fallthrough\n      : @357 (gas: 6)\n  9259: a1 = 0x20070\n  9264: i32 a1 = a1 + 0\n  9266: a0 = 0\n  9268: a2 = 0\n  9270: ecalli 14 // 'seal_return'\n  9272: jump @357\n      : @358 (gas: 6)\n  9274: a1 = 0x20070\n  9279: i32 a1 = a1 + 0\n  9281: a0 = 0x1\n  9284: a2 = 0\n  9286: ecalli 14 // 'seal_return'\n  9288: jump @357\n      : @359 (gas: 6)\n  9290: a1 = 0x20070\n  9295: i32 a1 = a1 + 0\n  9297: a0 = 0x1\n  9300: a2 = 0\n  9302: ecalli 14 // 'seal_return'\n  9304: jump @357\n      : @360 (gas: 12)\n  9306: a2 = s1 + 0x7ff\n  9310: a2 = a2 + 0x31\n  9313: u64 [a2 + 576] = 0\n  9317: u64 [a2 + 568] = 0\n  9321: a0 = 0xc39fa00400000000\n  9331: u64 [a2 + 0x248] = a0\n  9335: a1 = s1 + 0x7ff\n  9339: a1 = a1 + 0x261\n  9343: u64 [a2 + 560] = 0\n  9347: a0 = 0\n  9349: ra = 0x142\n  9353: jump @9\n      : @361 (gas: 8)\n  9356: u64 [s1 + 1680] = 0\n  9360: u64 [s1 + 1672] = 0\n  9364: u64 [s1 + 1664] = 0\n  9368: a0 = 0x2c5211c600000000\n  9378: a1 = s1 + 0x680\n  9382: u64 [s1 + 0x698] = a0\n  9386: a0 = 0\n  9388: ra = 322, jump @9\n      : @362 [@dyn 161] (gas: 3)\n  9394: a1 = 0x4\n  9397: a0 = 0\n  9399: ra = 324, jump @15\n      : @363 [@dyn 162] (gas: 2)\n  9405: i32 a1 = a0 + 0\n  9407: jump @377\n      : @364 (gas: 6)\n  9410: a1 = 0x20070\n  9415: i32 a1 = a1 + 0\n  9417: a0 = 0x1\n  9420: a2 = 0\n  9422: ecalli 14 // 'seal_return'\n  9424: jump @357\n      : @365 (gas: 8)\n  9427: u64 [s1 + 1616] = 0\n  9431: u64 [s1 + 1608] = 0\n  9435: u64 [s1 + 1600] = 0\n  9439: a0 = 0xc39fa00400000000\n  9449: a1 = s1 + 0x640\n  9453: u64 [s1 + 0x658] = a0\n  9457: a0 = 0\n  9459: ra = 326, jump @9\n      : @366 [@dyn 163] (gas: 2)\n  9465: a1 = i32 [0x20068]\n  9470: jump @368 if a1 >u 31\n      : @367 (gas: 4)\n  9474: u32 [0x20068] = 0x20\n  9480: a1 = 0x20070\n  9485: i32 a1 = a1 + 0\n  9487: jump @377\n      : @368 (gas: 3)\n  9490: a1 = 0x20070\n  9495: i32 a1 = a1 + 0\n  9497: jump @377\n      : @369 (gas: 8)\n  9500: u64 [s1 + 1584] = 0\n  9504: u64 [s1 + 1576] = 0\n  9508: u64 [s1 + 1568] = 0\n  9512: a0 = 0x2c5211c600000000\n  9522: a1 = s1 + 0x620\n  9526: u64 [s1 + 0x638] = a0\n  9530: a0 = 0\n  9532: ra = 328, jump @9\n      : @370 [@dyn 164] (gas: 2)\n  9538: a1 = i32 [0x20068]\n  9543: jump @372 if a1 >u 31\n      : @371 (gas: 4)\n  9547: u32 [0x20068] = 0x20\n  9553: a1 = 0x20070\n  9558: i32 a1 = a1 + 0\n  9560: jump @377\n      : @372 (gas: 3)\n  9562: a1 = 0x20070\n  9567: i32 a1 = a1 + 0\n  9569: jump @377\n      : @373 (gas: 8)\n  9571: u64 [s1 + 848] = 0\n  9575: u64 [s1 + 840] = 0\n  9579: u64 [s1 + 832] = 0\n  9583: a0 = 0x2c5211c600000000\n  9593: a1 = s1 + 0x340\n  9597: u64 [s1 + 0x358] = a0\n  9601: a0 = 0\n  9603: ra = 330, jump @9\n      : @374 [@dyn 165] (gas: 2)\n  9609: a1 = i32 [0x20068]\n  9614: jump @376 if a1 >u 31\n      : @375 (gas: 4)\n  9618: u32 [0x20068] = 0x20\n  9624: a1 = 0x20070\n  9629: i32 a1 = a1 + 0\n  9631: jump @377\n      : @376 (gas: 3)\n  9633: a1 = 0x20070\n  9638: i32 a1 = a1 + 0\n  9640: fallthrough\n      : @377 (gas: 4)\n  9641: a0 = 0x1\n  9644: a2 = 0x4\n  9647: ecalli 14 // 'seal_return'\n  9649: fallthrough\n      : @378 (gas: 6)\n  9650: a1 = 0x20070\n  9655: i32 a1 = a1 + 0\n  9657: a0 = 0x1\n  9660: a2 = 0\n  9662: ecalli 14 // 'seal_return'\n  9664: jump @357\n      : @379 (gas: 6)\n  9667: a1 = 0x20070\n  9672: i32 a1 = a1 + 0\n  9674: a0 = 0x1\n  9677: a2 = 0\n  9679: ecalli 14 // 'seal_return'\n  9681: jump @357\n      : @380 (gas: 6)\n  9684: a1 = 0x20070\n  9689: i32 a1 = a1 + 0\n  9691: a0 = 0x1\n  9694: a2 = 0\n  9696: ecalli 14 // 'seal_return'\n  9698: jump @357\n      : @381 (gas: 11)\n  9701: a2 = u64 [0x300d0]\n  9706: a1 = u64 [0x300d8]\n  9711: a0 = u32 [0x300e0]\n  9716: u64 [s1 + 600] = 0\n  9720: a4 = s1 + 0x200\n  9724: u64 [a4 + 0x50] = a0\n  9727: u64 [a4 + 0x48] = a1\n  9730: a1 = s1 + 0x240\n  9734: u64 [a4 + 0x40] = a2\n  9737: a0 = a3\n  9739: ra = 332, jump @9\n      : @382 [@dyn 166] (gas: 3)\n  9745: a1 = 0x20\n  9748: a0 = u64 [s1 + 0xa8]\n  9752: ra = 334, jump @15\n      : @383 [@dyn 167] (gas: 5)\n  9758: i32 a1 = a0 + 0\n  9760: a2 = 0x20\n  9763: a0 = 0\n  9765: ecalli 14 // 'seal_return'\n  9767: fallthrough\n      : @384 (gas: 8)\n  9768: u64 [s1 + 912] = 0\n  9772: u64 [s1 + 904] = 0\n  9776: u64 [s1 + 896] = 0\n  9780: a0 = 0x4e487b7100000000\n  9790: a1 = s1 + 0x380\n  9794: u64 [s1 + 0x398] = a0\n  9798: a0 = 0\n  9800: ra = 336, jump @9\n      : @385 [@dyn 168] (gas: 8)\n  9806: u64 [s1 + 888] = 0\n  9810: u64 [s1 + 880] = 0\n  9814: u64 [s1 + 864] = 0x11\n  9819: a0 = 0x4\n  9822: a1 = s1 + 0x360\n  9826: u64 [s1 + 872] = 0\n  9830: ra = 0x154\n  9834: jump @9\n      : @386 (gas: 3)\n  9837: a1 = 0x20070\n  9842: i32 a1 = a1 + 0\n  9844: jump @395\n      : @387 (gas: 12)\n  9847: a2 = s1 + 0x7ff\n  9851: a2 = a2 + 0x31\n  9854: u64 [a2 + 320] = 0\n  9858: u64 [a2 + 312] = 0\n  9862: a0 = 0xbb1205c200000000\n  9872: u64 [a2 + 0x148] = a0\n  9876: a1 = s1 + 0x7ff\n  9880: a1 = a1 + 0x161\n  9884: u64 [a2 + 304] = 0\n  9888: a0 = 0\n  9890: ra = 0x142\n  9894: jump @9\n      : @388 (gas: 8)\n  9897: u64 [s1 + 1744] = 0\n  9901: u64 [s1 + 1736] = 0\n  9905: u64 [s1 + 1728] = 0\n  9909: a0 = 0x4e487b7100000000\n  9919: a1 = s1 + 0x6c0\n  9923: u64 [s1 + 0x6d8] = a0\n  9927: a0 = 0\n  9929: ra = 338, jump @9\n      : @389 [@dyn 169] (gas: 7)\n  9935: u64 [s1 + 1720] = 0\n  9939: u64 [s1 + 1712] = 0\n  9943: u64 [s1 + 1696] = 0x11\n  9948: a0 = 0x4\n  9951: a1 = s1 + 0x6a0\n  9955: u64 [s1 + 1704] = 0\n  9959: ra = 340, jump @9\n      : @390 [@dyn 170] (gas: 3)\n  9965: a1 = 0x24\n  9968: a0 = 0\n  9970: ra = 342, jump @15\n      : @391 [@dyn 171] (gas: 5)\n  9976: i32 a1 = a0 + 0\n  9978: a0 = 0x1\n  9981: a2 = 0x24\n  9984: ecalli 14 // 'seal_return'\n  9986: fallthrough\n      : @392 (gas: 12)\n  9987: a2 = s1 + 0x7ff\n  9991: a2 = a2 + 0x31\n  9994: u64 [a2 + 64] = 0\n  9997: u64 [a2 + 56] = 0\n 10000: a0 = 0xbb1205c200000000\n 10010: u64 [a2 + 0x48] = a0\n 10013: a1 = s1 + 0x7ff\n 10017: a1 = a1 + 0x61\n 10020: u64 [a2 + 48] = 0\n 10023: a0 = 0\n 10025: ra = 0x142\n 10029: jump @9\n      : @393 (gas: 3)\n 10032: a1 = 0x20070\n 10037: i32 a1 = a1 + 0\n 10039: jump @395\n      : @394 (gas: 3)\n 10041: a1 = 0x20070\n 10046: i32 a1 = a1 + 0\n 10048: fallthrough\n      : @395 (gas: 4)\n 10049: a0 = 0x1\n 10052: ra = 0x158\n 10056: ecalli 14 // 'seal_return'\n 10058: fallthrough\n      : @396 [@dyn 172] (gas: 18)\n 10059: sp = sp + 0xffffffffffffffc0\n 10062: u64 [sp + 0x38] = ra\n 10065: u64 [sp + 0x30] = s0\n 10068: u64 [sp + 0x28] = s1\n 10071: s0 = sp + 0x40\n 10074: sp = sp & 0xfffffffffffffff0\n 10077: a2 = u64 [a1 + 0x10]\n 10080: a3 = u64 [a1 + 0x18]\n 10083: a4 = u64 [a1 + 0x8]\n 10086: a1 = u64 [a1]\n 10088: a3 = a3 | a4\n 10091: a4 = a1 | a2\n 10094: a4 = a4 | a3\n 10097: a4 = a4 >> 0x20\n 10100: a2 = a2 | a3\n 10103: a2 = a2 << 0x20\n 10106: a2 = a2 | a4\n 10109: jump @402 if a2 != 0\n      : @397 (gas: 3)\n 10112: s1 = a0\n 10114: a0 = sp\n 10116: ra = 346, jump @7\n      : @398 [@dyn 173] (gas: 1)\n 10122: t0 = 348, jump @481\n      : @399 [@dyn 174] (gas: 1)\n 10128: jump @403 if a3 == 0\n      : @400 (gas: 1)\n 10131: t0 = 350, jump @484\n      : @401 [@dyn 175] (gas: 1)\n 10137: ret\n      : @402 (gas: 1)\n 10139: trap\n      : @403 (gas: 7)\n 10140: a1 = 0x20070\n 10145: i32 a1 = a1 + 0\n 10147: a0 = 0x1\n 10150: a2 = 0\n 10152: ra = 0x160\n 10156: ecalli 14 // 'seal_return'\n 10158: fallthrough\n      : @404 [@dyn 176] (gas: 13)\n 10159: sp = sp + 0xffffffffffffffc0\n 10162: u64 [sp + 0x38] = ra\n 10165: u64 [sp + 0x30] = s0\n 10168: u64 [sp + 0x28] = s1\n 10171: s0 = sp + 0x40\n 10174: sp = sp & 0xffffffffffffffe0\n 10177: s1 = a0\n 10179: i32 a0 = sp + 0\n 10181: a1 = 0x4\n 10184: ra = 0x162\n 10188: ecalli 3 // 'call_data_load'\n 10190: t0 = 0x164\n 10194: jump @481\n      : @405 [@dyn 177] (gas: 1)\n 10197: t0 = 356, jump @481\n      : @406 [@dyn 178] (gas: 1)\n 10203: jump @409 if a3 == 0\n      : @407 (gas: 1)\n 10206: t0 = 358, jump @484\n      : @408 [@dyn 179] (gas: 1)\n 10212: ret\n      : @409 (gas: 7)\n 10214: a1 = 0x20070\n 10219: i32 a1 = a1 + 0\n 10221: a0 = 0x1\n 10224: a2 = 0\n 10226: ra = 0x168\n 10230: ecalli 14 // 'seal_return'\n 10232: fallthrough\n      : @410 [@dyn 180] (gas: 46)\n 10233: sp = sp + 0xffffffffffffff70\n 10237: u64 [sp + 0x88] = ra\n 10241: u64 [sp + 0x80] = s0\n 10245: u64 [sp + 0x78] = s1\n 10248: s0 = sp + 0x90\n 10252: sp = sp & 0xfffffffffffffff0\n 10255: t0 = a0\n 10257: a2 = u64 [a1]\n 10259: t2 = u64 [a0 + 0x8]\n 10262: a5 = u64 [a1 + 0x8]\n 10265: t1 = u64 [a0]\n 10267: a3 = a2 + 0x1f\n 10270: ra = a3 <u a2\n 10273: a2 = a5 + ra\n 10276: a3 = a3 & 0xffffffffffffffe0\n 10279: u64 [sp + 0x8] = t1\n 10282: t1 = t1 + a3\n 10285: a4 = t1 <u a3\n 10288: a3 = a2 + t2\n 10291: a3 = a3 + a4\n 10294: s1 = a3 ^ a2\n 10297: a0 = a3 <u a2\n 10300: a0 = a4 if s1 == 0\n 10303: a4 = u64 [t0 + 0x18]\n 10306: a5 = a2 <u a5\n 10309: s1 = u64 [a1 + 0x10]\n 10312: t0 = u64 [t0 + 0x10]\n 10315: a1 = u64 [a1 + 0x18]\n 10318: a5 = ra if ra == 0\n 10321: a5 = a5 + s1\n 10324: s1 = a5 <u s1\n 10327: a2 = a5 + t0\n 10330: a0 = a0 + a2\n 10333: a5 = a2 <u a5\n 10336: a2 = a0 <u a2\n 10339: a1 = a1 + a4\n 10342: a1 = a1 + s1\n 10345: a1 = a1 + a5\n 10348: a5 = a1 + a2\n 10351: a1 = a5 >u 0\n 10353: a2 = a0 >u 0\n 10355: a2 = a1 if a5 != 0\n 10358: a1 = a0 | a5\n 10361: s1 = a3 >u 0\n 10363: s1 = a2 if a1 != 0\n 10366: jump @414 if s1 != 0\n      : @411 (gas: 13)\n 10369: a1 = u64 [sp + 0x8]\n 10372: a1 = t1 <u a1\n 10375: a2 = a3 ^ t2\n 10378: s1 = a3 <u t2\n 10381: s1 = a1 if a2 == 0\n 10384: a1 = a0 <u t0\n 10387: a2 = a5 ^ a4\n 10390: a4 = a5 <u a4\n 10393: a4 = a1 if a2 == 0\n 10396: a1 = a0 ^ t0\n 10399: a1 = a1 | a2\n 10402: a4 = s1 if a1 == 0\n 10405: jump @414 if a4 != 0\n      : @412 (gas: 7)\n 10408: u64 [sp + 0x50] = t1\n 10411: u64 [sp + 0x58] = a3\n 10414: u64 [sp + 0x60] = a0\n 10417: a0 = 0x40\n 10420: a1 = sp + 0x50\n 10423: u64 [sp + 0x68] = a5\n 10426: ra = 362, jump @9\n      : @413 [@dyn 181] (gas: 6)\n 10432: sp = s0 + 0xffffffffffffff70\n 10436: ra = u64 [sp + 0x88]\n 10440: s0 = u64 [sp + 0x80]\n 10444: s1 = u64 [sp + 0x78]\n 10447: sp = sp + 0x90\n 10451: ret\n      : @414 (gas: 8)\n 10453: u64 [sp + 64] = 0\n 10456: u64 [sp + 56] = 0\n 10459: u64 [sp + 48] = 0\n 10462: a0 = 0x4e487b7100000000\n 10472: a1 = sp + 0x30\n 10475: u64 [sp + 0x48] = a0\n 10478: a0 = 0\n 10480: ra = 364, jump @9\n      : @415 [@dyn 182] (gas: 7)\n 10486: u64 [sp + 40] = 0\n 10489: u64 [sp + 32] = 0\n 10492: u64 [sp + 16] = 0x41\n 10496: a0 = 0x4\n 10499: a1 = sp + 0x10\n 10502: u64 [sp + 24] = 0\n 10505: ra = 366, jump @9\n      : @416 [@dyn 183] (gas: 2)\n 10511: a1 = i32 [0x20068]\n 10516: jump @418 if a1 >u 63\n      : @417 (gas: 2)\n 10520: u32 [0x20068] = 0x40\n 10526: fallthrough\n      : @418 (gas: 7)\n 10527: a1 = 0x20070\n 10532: i32 a1 = a1 + 0\n 10534: a0 = 0x1\n 10537: a2 = 0x24\n 10540: ra = 0x170\n 10544: ecalli 14 // 'seal_return'\n 10546: fallthrough\n      : @419 [@dyn 184] (gas: 11)\n 10547: sp = sp + 0xfffffffffffffbc0\n 10551: a1 = sp + 0x400\n 10555: u64 [a1 + 0x38] = ra\n 10558: u64 [a1 + 0x30] = s0\n 10561: u64 [a1 + 0x28] = s1\n 10564: s0 = sp + 0x440\n 10568: sp = sp & 0xffffffffffffffe0\n 10571: u64 [sp + 0x20] = a0\n 10574: a0 = sp + 0x3a0\n 10578: a1 = 0x40\n 10581: ra = 370, jump @7\n      : @420 [@dyn 185] (gas: 19)\n 10587: a4 = sp + 0x300\n 10591: a0 = u64 [a4 + 0xb8]\n 10595: u64 [sp + 0xc8] = a0\n 10599: s1 = u64 [a4 + 0xb0]\n 10603: a1 = u64 [a4 + 0xa8]\n 10607: u64 [sp + 0xc0] = a1\n 10611: a2 = u64 [a4 + 0xa0]\n 10615: u64 [sp + 0xd0] = a2\n 10619: u64 [a4 + 120] = 0\n 10622: u64 [a4 + 112] = 0\n 10625: u64 [a4 + 104] = 0\n 10628: u64 [a4 + 96] = 0x40\n 10632: u64 [a4 + 0x98] = a0\n 10636: u64 [a4 + 0x90] = s1\n 10640: u64 [a4 + 0x88] = a1\n 10644: a0 = sp + 0x380\n 10648: a1 = sp + 0x360\n 10652: u64 [a4 + 0x80] = a2\n 10656: ra = 372, jump @410\n      : @421 [@dyn 186] (gas: 12)\n 10662: a0 = u64 [sp + 0xd0]\n 10666: a2 = u64 [sp + 0xc8]\n 10670: a1 = u64 [sp + 0xc0]\n 10674: a2 = a2 | a1\n 10677: a1 = a0 | s1\n 10680: a1 = a1 | a2\n 10683: a1 = a1 >> 0x20\n 10686: u64 [sp + 0xa8] = s1\n 10690: a2 = a2 | s1\n 10693: a2 = a2 << 0x20\n 10696: a1 = a1 | a2\n 10699: jump @465 if a1 != 0\n      : @422 (gas: 8)\n 10703: a2 = sp + 0x300\n 10707: u64 [a2 + 88] = 0\n 10710: u64 [a2 + 80] = 0\n 10713: u64 [a2 + 72] = 0\n 10716: s1 = 0x1\n 10719: a1 = sp + 0x340\n 10723: u64 [a2 + 0x40] = s1\n 10726: ra = 374, jump @9\n      : @423 [@dyn 187] (gas: 11)\n 10732: a2 = u64 [sp + 0xd0]\n 10736: a1 = u64 [sp + 0xc8]\n 10740: a0 = u64 [sp + 0xa8]\n 10744: a0 = a0 | a1\n 10747: s1 = s1 << 0x20\n 10750: s1 = s1 + 0xffffffffffffffe0\n 10753: a1 = a2 <u s1\n 10756: a3 = u64 [sp + 0xc0]\n 10760: a1 = 0 if a3 != 0\n 10762: a1 = 0 if a0 != 0\n 10764: jump @465 if a1 == 0\n      : @424 (gas: 7)\n 10768: a0 = i32 [0x20064]\n 10773: u64 [sp + 0xb8] = a0\n 10777: a0 = a2 + 0x20\n 10780: a1 = 0x20\n 10783: u64 [sp + 0xd8] = a0\n 10787: s1 = a2\n 10789: ra = 376, jump @15\n      : @425 [@dyn 188] (gas: 7)\n 10795: i32 a0 = a0 + 0\n 10797: a1 = 0x20\n 10800: a2 = u64 [sp + 0xb8]\n 10804: ecalli 2 // 'call_data_copy'\n 10806: a0 = sp + 0x320\n 10810: a1 = s1\n 10812: ra = 378, jump @7\n      : @426 [@dyn 189] (gas: 9)\n 10818: a4 = sp + 0x300\n 10822: a0 = u64 [a4 + 0x30]\n 10825: a1 = u64 [a4 + 0x38]\n 10828: a2 = u64 [a4 + 0x28]\n 10831: a3 = u64 [a4 + 0x20]\n 10834: a1 = a1 | a2\n 10837: a0 = a0 | a3\n 10840: a0 = a0 | a1\n 10843: jump @466 if a0 == 0\n      : @427 (gas: 1)\n 10847: ra = 380, jump @0\n      : @428 [@dyn 190] (gas: 12)\n 10853: s1 = 0x30090\n 10858: a0 = u64 [0x30090]\n 10863: a1 = u64 [0x30098]\n 10868: a2 = u32 [0x300a0]\n 10873: a3 = sp + 0x300\n 10877: u64 [a3 + 24] = 0\n 10880: u64 [a3 + 0x10] = a2\n 10883: u64 [a3 + 0x8] = a1\n 10886: a1 = sp + 0x300\n 10890: u64 [a3] = a0\n 10892: a0 = u64 [sp + 0xd8]\n 10896: ra = 382, jump @9\n      : @429 [@dyn 191] (gas: 1)\n 10902: ra = 384, jump @0\n      : @430 [@dyn 192] (gas: 24)\n 10908: a0 = u64 [s1 + 0x28]\n 10911: a1 = u64 [s1 + 0x30]\n 10914: a2 = u64 [s1 + 0x20]\n 10917: a0 = reverse a0\n 10919: a3 = a0 << 0x20\n 10922: a1 = reverse a1\n 10924: a1 = a1 >> 0x20\n 10927: a3 = a3 | a1\n 10930: a0 = a0 >> 0x20\n 10933: a1 = reverse a2\n 10935: s1 = 0x30070\n 10940: a2 = a1 << 0x20\n 10943: a0 = a0 | a2\n 10946: a1 = a1 >> 0x20\n 10949: u64 [sp + 0x10] = a1\n 10952: u32 [0x30080] = a1\n 10957: u64 [sp + 0x8] = a0\n 10960: u64 [0x30078] = a0\n 10965: u64 [sp + 0x18] = a3\n 10968: u64 [0x30070] = a3\n 10973: i32 a0 = s1 + 0\n 10975: u64 [sp + 0x28] = a0\n 10978: ecalli 6 // 'code_size'\n 10980: fallthrough\n      : @431 (gas: 1)\n 10981: jump @471 if a0 == 0\n      : @432 (gas: 4)\n 10985: u64 [sp + 0x30] = s1\n 10988: a0 = sp + 0x2e0\n 10992: a1 = 0x40\n 10995: ra = 386, jump @7\n      : @433 [@dyn 193] (gas: 15)\n 11001: a3 = sp + 0x200\n 11005: a2 = u64 [a3 + 0xf8]\n 11009: s1 = u64 [a3 + 0xf0]\n 11013: a1 = u64 [a3 + 0xe8]\n 11017: a0 = u64 [a3 + 0xe0]\n 11021: u64 [sp + 0x40] = a1\n 11024: u64 [sp + 0x38] = a2\n 11027: a2 = a2 | a1\n 11030: a1 = a0 | s1\n 11033: a1 = a1 | a2\n 11036: a1 = a1 >> 0x20\n 11039: a2 = a2 | s1\n 11042: a2 = a2 << 0x20\n 11045: a1 = a1 | a2\n 11048: jump @465 if a1 != 0\n      : @434 (gas: 9)\n 11052: a3 = sp + 0x200\n 11056: u64 [a3 + 208] = 0\n 11060: u64 [a3 + 200] = 0\n 11064: u64 [a3 + 192] = 0\n 11068: a2 = 0x744532ae00000000\n 11078: a1 = sp + 0x2c0\n 11082: u64 [a3 + 0xd8] = a2\n 11086: u64 [sp + 0x48] = a0\n 11089: ra = 388, jump @9\n      : @435 [@dyn 194] (gas: 12)\n 11095: a1 = u64 [sp + 0x48]\n 11098: u64 [sp + 0x78] = s1\n 11101: a3 = u64 [sp + 0x38]\n 11104: a3 = a3 | s1\n 11107: s1 = 0x100000000\n 11117: a0 = 0xfffffffc\n 11127: a0 = a1 <u a0\n 11130: a2 = u64 [sp + 0x40]\n 11133: a0 = 0 if a2 != 0\n 11135: u64 [sp + 0xb8] = a3\n 11139: a0 = 0 if a3 != 0\n 11141: jump @465 if a0 == 0\n      : @436 (gas: 8)\n 11145: i32 a0 = a1 + 0x4\n 11148: a2 = sp + 0x200\n 11152: u64 [a2 + 184] = 0\n 11156: u64 [a2 + 176] = 0\n 11160: u64 [a2 + 168] = 0\n 11164: a1 = sp + 0x2a0\n 11168: u64 [a2 + 160] = 0\n 11172: ra = 390, jump @9\n      : @437 [@dyn 195] (gas: 4)\n 11178: a0 = u64 [sp + 0x28]\n 11181: ra = 0x188\n 11185: ecalli 0 // 'address'\n 11186: fallthrough\n      : @438 [@dyn 196] (gas: 8)\n 11187: a4 = u64 [sp + 0x48]\n 11190: a0 = s1 + 0xffffffffffffffdc\n 11193: a0 = a4 <u a0\n 11196: a1 = u64 [sp + 0x40]\n 11199: a0 = 0 if a1 != 0\n 11201: a1 = u64 [sp + 0xb8]\n 11205: a0 = 0 if a1 != 0\n 11207: jump @465 if a0 == 0\n      : @439 (gas: 4)\n 11211: a2 = u64 [sp + 0x30]\n 11214: a0 = u64 [a2 + 0x8]\n 11217: a1 = i32 [a2 + 0x10]\n 11220: t0 = 394, jump @480\n      : @440 [@dyn 197] (gas: 8)\n 11226: i32 a0 = a4 + 0x24\n 11229: a4 = sp + 0x200\n 11233: u64 [a4 + 152] = 0\n 11237: u64 [a4 + 0x90] = a1\n 11241: u64 [a4 + 0x88] = a2\n 11245: a1 = sp + 0x280\n 11249: u64 [a4 + 0x80] = a3\n 11253: ra = 396, jump @9\n      : @441 [@dyn 198] (gas: 10)\n 11259: a1 = u64 [sp + 0x48]\n 11262: s1 = 0x100000000\n 11272: u64 [sp + 0xb0] = s1\n 11276: a0 = 0xffffffbc\n 11286: a0 = a1 <u a0\n 11289: a2 = u64 [sp + 0x40]\n 11292: a0 = 0 if a2 != 0\n 11294: a2 = u64 [sp + 0xb8]\n 11298: a0 = 0 if a2 != 0\n 11300: jump @465 if a0 == 0\n      : @442 (gas: 8)\n 11304: i32 a0 = a1 + 0x44\n 11307: a2 = sp + 0x200\n 11311: u64 [a2 + 120] = 0\n 11314: u64 [a2 + 112] = 0\n 11317: u64 [a2 + 96] = 0x60\n 11321: a1 = sp + 0x260\n 11325: u64 [a2 + 104] = 0\n 11328: ra = 398, jump @9\n      : @443 [@dyn 199] (gas: 4)\n 11334: a0 = sp + 0x240\n 11338: s1 = u64 [sp + 0xd0]\n 11342: a1 = s1\n 11344: ra = 400, jump @7\n      : @444 [@dyn 200] (gas: 9)\n 11350: a2 = u64 [sp + 0x48]\n 11353: a0 = u64 [sp + 0xb0]\n 11357: a0 = a0 + 0xffffffffffffff9c\n 11360: a0 = a2 <u a0\n 11363: a1 = u64 [sp + 0x40]\n 11366: a0 = 0 if a1 != 0\n 11368: a3 = u64 [sp + 0xb8]\n 11372: a0 = 0 if a3 != 0\n 11374: jump @465 if a0 == 0\n      : @445 (gas: 31)\n 11378: a0 = u64 [sp + 0xd8]\n 11382: a0 = a0 <u s1\n 11385: a1 = u64 [sp + 0xc0]\n 11389: a3 = a1 + a0\n 11392: u64 [sp + 0xb0] = a3\n 11396: a1 = a3 <u a1\n 11399: a1 = a0 if a0 == 0\n 11402: a0 = u64 [sp + 0xa8]\n 11406: s1 = a0 + a1\n 11409: a0 = s1 <u a0\n 11412: a1 = u64 [sp + 0xc8]\n 11416: a0 = a0 + a1\n 11419: u64 [sp + 0xb8] = a0\n 11423: a3 = u64 [sp + 0x258]\n 11427: a1 = u64 [sp + 0x250]\n 11431: a4 = u64 [sp + 0x248]\n 11435: a5 = u64 [sp + 0x240]\n 11439: a0 = 0xffffffff\n 11449: u64 [sp + 0x50] = a0\n 11452: i32 a0 = a2 + 0x64\n 11455: u64 [sp + 0x58] = a5\n 11458: a2 = sp + 0x200\n 11462: u64 [a2 + 0x20] = a5\n 11465: u64 [sp + 0x60] = a4\n 11468: u64 [a2 + 0x28] = a4\n 11471: u64 [sp + 0x68] = a1\n 11474: u64 [a2 + 0x30] = a1\n 11477: a1 = sp + 0x220\n 11481: u64 [sp + 0x70] = a3\n 11484: u64 [a2 + 0x38] = a3\n 11487: ra = 402, jump @9\n      : @446 [@dyn 201] (gas: 23)\n 11493: a4 = s1\n 11495: ra = u64 [sp + 0xb0]\n 11499: a5 = 0\n 11501: a3 = 0\n 11503: t0 = 0\n 11505: t1 = 0\n 11507: a1 = u64 [sp + 0x48]\n 11510: a0 = a1 + 0x84\n 11514: u64 [sp + 0xd0] = a0\n 11518: a0 = a0 <u a1\n 11521: s1 = u64 [sp + 0x40]\n 11524: a1 = s1 + a0\n 11527: u64 [sp + 0xc0] = a1\n 11531: s1 = a1 <u s1\n 11534: s1 = a0 if a0 == 0\n 11537: t2 = u64 [sp + 0x78]\n 11540: s1 = s1 + t2\n 11543: u64 [sp + 0xa8] = s1\n 11547: a0 = s1 <u t2\n 11550: a1 = u64 [sp + 0x38]\n 11553: a0 = a0 + a1\n 11556: u64 [sp + 0xc8] = a0\n 11560: fallthrough\n      : @447 (gas: 18)\n 11561: a0 = u64 [sp + 0x58]\n 11564: a0 = a5 <u a0\n 11567: a2 = u64 [sp + 0x60]\n 11570: a1 = a3 ^ a2\n 11573: u64 [sp + 0xa0] = a3\n 11577: a2 = a3 <u a2\n 11580: a2 = a0 if a1 == 0\n 11583: s1 = u64 [sp + 0x68]\n 11586: a0 = t0 <u s1\n 11589: a3 = u64 [sp + 0x70]\n 11592: a1 = t1 ^ a3\n 11595: u64 [sp + 0x98] = t1\n 11599: a3 = t1 <u a3\n 11602: a3 = a0 if a1 == 0\n 11605: a0 = t0 ^ s1\n 11608: a0 = a0 | a1\n 11611: a3 = a2 if a0 == 0\n 11614: jump @453 if a3 == 0\n      : @448 (gas: 14)\n 11618: u64 [sp + 0x80] = t0\n 11622: u64 [sp + 0x88] = a5\n 11626: a2 = u64 [sp + 0xd8]\n 11630: a0 = a2 | a4\n 11633: u64 [sp + 0xb0] = ra\n 11637: a1 = u64 [sp + 0xb8]\n 11641: a1 = ra | a1\n 11644: a0 = a0 | a1\n 11647: a0 = a0 >> 0x20\n 11650: u64 [sp + 0x90] = a4\n 11654: a1 = a1 | a4\n 11657: a1 = a1 << 0x20\n 11660: a0 = a0 | a1\n 11663: jump @465 if a0 != 0\n      : @449 (gas: 4)\n 11667: a0 = sp + 0x140\n 11671: u64 [sp + 0xd8] = a2\n 11675: a1 = a2\n 11677: ra = 404, jump @7\n      : @450 [@dyn 202] (gas: 12)\n 11683: a0 = u64 [sp + 0xd0]\n 11687: s1 = u64 [sp + 0xa8]\n 11691: a2 = a0 | s1\n 11694: a1 = u64 [sp + 0xc8]\n 11698: a3 = u64 [sp + 0xc0]\n 11702: a1 = a1 | a3\n 11705: a2 = a2 | a1\n 11708: a2 = a2 >> 0x20\n 11711: a1 = a1 | s1\n 11714: a1 = a1 << 0x20\n 11717: a1 = a1 | a2\n 11720: jump @465 if a1 != 0\n      : @451 (gas: 14)\n 11724: a4 = u64 [sp + 0x150]\n 11728: a1 = u64 [sp + 0x148]\n 11732: a2 = u64 [sp + 0x140]\n 11736: a3 = u64 [sp + 0x50]\n 11739: a4 = a4 & a3\n 11742: a1 = a1 & 0xffffffffffffffff\n 11745: a2 = a2 & 0xffffffffffffffff\n 11748: u64 [sp + 312] = 0\n 11752: u64 [sp + 0x120] = a2\n 11756: u64 [sp + 0x128] = a1\n 11760: a1 = sp + 0x120\n 11764: u64 [sp + 0x130] = a4\n 11768: u64 [sp + 0xd0] = a0\n 11772: ra = 406, jump @9\n      : @452 [@dyn 203] (gas: 45)\n 11778: a0 = u64 [sp + 0xd0]\n 11782: t0 = a0 + 0x20\n 11785: a2 = t0 <u a0\n 11788: a0 = u64 [sp + 0xc0]\n 11792: t2 = a0 + a2\n 11795: a3 = t2 <u a0\n 11798: a3 = a2 if a2 == 0\n 11801: ra = s1 + a3\n 11804: a2 = ra <u s1\n 11807: a0 = u64 [sp + 0xc8]\n 11811: a0 = a0 + a2\n 11814: u64 [sp + 0xc8] = a0\n 11818: a0 = u64 [sp + 0xd8]\n 11822: a2 = a0 + 0x20\n 11825: a4 = a2 <u a0\n 11828: a0 = u64 [sp + 0xb0]\n 11832: a1 = a0 + a4\n 11835: s1 = a1 <u a0\n 11838: s1 = a4 if a4 == 0\n 11841: a0 = u64 [sp + 0x90]\n 11845: a4 = a0 + s1\n 11848: s1 = a4 <u a0\n 11851: a0 = u64 [sp + 0xb8]\n 11855: a0 = a0 + s1\n 11858: u64 [sp + 0xb8] = a0\n 11862: a5 = u64 [sp + 0x88]\n 11866: a5 = a5 + 0x1\n 11869: s1 = a5 <u 0x1\n 11872: a3 = u64 [sp + 0xa0]\n 11876: a3 = a3 + s1\n 11879: s1 = a5 | a3\n 11882: s1 = s1 <u 0x1\n 11885: a0 = u64 [sp + 0x80]\n 11889: s1 = s1 + a0\n 11892: a0 = s1 <u a0\n 11895: t1 = u64 [sp + 0x98]\n 11899: t1 = t1 + a0\n 11902: u64 [sp + 0xd0] = t0\n 11906: u64 [sp + 0xc0] = t2\n 11910: u64 [sp + 0xa8] = ra\n 11914: u64 [sp + 0xd8] = a2\n 11918: ra = a1\n 11920: t0 = s1\n 11922: t2 = u64 [sp + 0x78]\n 11925: jump @447\n      : @453 (gas: 26)\n 11928: a0 = u64 [sp + 0x48]\n 11931: t0 = u64 [sp + 0xd0]\n 11935: t1 = t0 <u a0\n 11938: s1 = u64 [sp + 0x40]\n 11941: a1 = u64 [sp + 0xc0]\n 11945: a3 = a1 ^ s1\n 11948: a2 = a1 <u s1\n 11951: a2 = t1 if a3 == 0\n 11954: a3 = u64 [sp + 0xa8]\n 11958: a5 = a3 - t2\n 11961: t2 = a3 <u t2\n 11964: a4 = u64 [sp + 0xc8]\n 11968: a3 = u64 [sp + 0x38]\n 11971: a4 = a4 - a3\n 11974: a4 = a4 - t2\n 11977: a3 = a5 <u a2\n 11980: a4 = a4 - a3\n 11983: u64 [sp + 0xd8] = a4\n 11987: a5 = a5 - a2\n 11990: u64 [sp + 0xc8] = a5\n 11994: a1 = a1 - s1\n 11997: a1 = a1 - t1\n 12000: u64 [sp + 0xc0] = a1\n 12004: s1 = t0 - a0\n 12007: ecalli 11 // 'ref_time_left'\n 12009: fallthrough\n      : @454 (gas: 25)\n 12010: u64 [sp + 0xd0] = a0\n 12014: a1 = u64 [sp + 0x30]\n 12017: a0 = u64 [sp + 0x8]\n 12020: u64 [a1 + 0x8] = a0\n 12023: a0 = u64 [sp + 0x18]\n 12026: u64 [a1] = a0\n 12028: a0 = u64 [sp + 0x10]\n 12031: u32 [a1 + 0x10] = a0\n 12034: a4 = sp + 0x300\n 12038: u64 [a4 + 216] = 0\n 12042: a5 = 0\n 12044: u64 [a4 + 208] = 0\n 12048: u64 [a4 + 200] = 0\n 12052: a2 = u64 [sp + 0xc8]\n 12056: a0 = s1 | a2\n 12059: a1 = u64 [sp + 0xd8]\n 12063: a3 = u64 [sp + 0xc0]\n 12067: a1 = a1 | a3\n 12070: a0 = a0 | a1\n 12073: a0 = a0 >> 0x20\n 12076: a1 = a1 | a2\n 12079: a1 = a1 << 0x20\n 12082: a0 = a0 | a1\n 12085: u64 [a4 + 192] = 0\n 12089: jump @465 if a0 != 0\n      : @455 (gas: 7)\n 12093: i32 a0 = s1 + 0\n 12095: u64 [sp + 0xc8] = a0\n 12099: a1 = s1\n 12101: u64 [sp + 0xb8] = s1\n 12105: s1 = u64 [sp + 0x48]\n 12108: a0 = s1\n 12110: ra = 408, jump @15\n      : @456 [@dyn 204] (gas: 4)\n 12116: u64 [sp + 0xd8] = a0\n 12120: a0 = s1\n 12122: a1 = 0\n 12124: ra = 410, jump @15\n      : @457 [@dyn 205] (gas: 39)\n 12130: u32 [sp + 992] = 0\n 12134: a1 = u64 [sp + 0xc8]\n 12138: a1 = a1 >u 0\n 12140: a3 = u64 [sp + 0xd0]\n 12144: a2 = a3 >u 0x8fc\n 12148: a1 = a1 | a2\n 12151: a2 = -a1\n 12153: a3 = sp + 0x400\n 12157: u64 [a3 + 0x18] = a2\n 12160: u64 [a3 + 0x10] = a2\n 12163: u64 [a3 + 0x8] = a2\n 12166: u64 [a3] = a2\n 12168: a2 = u64 [sp + 0x30]\n 12171: a2 = a2 << 0x20\n 12174: a2 = a2 >> 0x20\n 12177: a1 = a1 << 0x23\n 12180: t0 = a1 | a2\n 12183: a1 = sp + 0x3c0\n 12187: a1 = a1 << 0x20\n 12190: a1 = a1 >> 0x20\n 12193: a2 = sp + 0x400\n 12197: a2 = a2 << 0x20\n 12200: a3 = a2 | a1\n 12203: a1 = u64 [sp + 0xd8]\n 12207: a1 = a1 << 0x20\n 12210: a1 = a1 >> 0x20\n 12213: a4 = u64 [sp + 0xb8]\n 12217: a4 = a4 << 0x20\n 12220: a4 = a4 | a1\n 12223: a0 = a0 << 0x20\n 12226: a0 = a0 >> 0x20\n 12229: a1 = sp + 0x3e0\n 12233: a1 = a1 << 0x20\n 12236: a5 = a1 | a0\n 12239: a1 = 0xffffffffffffffff\n 12242: a2 = 0xffffffffffffffff\n 12245: a0 = t0\n 12247: ecalli 1 // 'call'\n 12249: fallthrough\n      : @458 (gas: 1)\n 12250: jump @464 if a0 != 0\n      : @459 (gas: 16)\n 12254: u64 [sp + 504] = 0\n 12258: u64 [sp + 496] = 0\n 12262: u64 [sp + 488] = 0\n 12266: u64 [sp + 480] = 0\n 12270: a0 = u64 [sp + 0x48]\n 12273: a3 = sp + 0x200\n 12277: u64 [a3] = a0\n 12279: a0 = u64 [sp + 0x40]\n 12282: u64 [a3 + 0x8] = a0\n 12285: a0 = u64 [sp + 0x78]\n 12288: u64 [a3 + 0x10] = a0\n 12291: a0 = sp + 0x200\n 12295: a1 = sp + 0x1e0\n 12299: a2 = u64 [sp + 0x38]\n 12302: u64 [a3 + 0x18] = a2\n 12305: ra = 412, jump @410\n      : @460 [@dyn 206] (gas: 3)\n 12311: a0 = sp + 0x1c0\n 12315: a1 = 0x40\n 12318: ra = 414, jump @7\n      : @461 [@dyn 207] (gas: 12)\n 12324: a0 = u64 [sp + 0x1d8]\n 12328: a1 = u64 [sp + 0x1d0]\n 12332: a2 = u64 [sp + 0x1c8]\n 12336: s1 = u64 [sp + 0x1c0]\n 12340: a0 = a0 | a2\n 12343: a2 = s1 | a1\n 12346: a2 = a2 | a0\n 12349: a2 = a2 >> 0x20\n 12352: a0 = a0 | a1\n 12355: a0 = a0 << 0x20\n 12358: a0 = a0 | a2\n 12361: jump @465 if a0 != 0\n      : @462 (gas: 7)\n 12365: u64 [sp + 440] = 0\n 12369: u64 [sp + 432] = 0\n 12373: u64 [sp + 424] = 0\n 12377: a1 = sp + 0x1a0\n 12381: u64 [sp + 416] = 0\n 12385: a0 = s1\n 12387: ra = 416, jump @9\n      : @463 [@dyn 208] (gas: 33)\n 12393: a0 = u64 [sp + 0x28]\n 12396: ecalli 5 // 'caller'\n 12398: a2 = u64 [sp + 0x30]\n 12401: a0 = u64 [a2 + 0x8]\n 12404: a1 = i32 [a2 + 0x10]\n 12407: a2 = u64 [a2]\n 12409: a3 = reverse a0\n 12411: a0 = a3 << 0x20\n 12414: a1 = reverse a1\n 12416: a1 = a1 >> 0x20\n 12419: t0 = a1 | a0\n 12422: a3 = a3 >> 0x20\n 12425: a1 = reverse a2\n 12427: a2 = a1 << 0x20\n 12430: a2 = a2 | a3\n 12433: a1 = a1 >> 0x20\n 12436: u64 [sp + 376] = 0\n 12440: a3 = u64 [0x20040]\n 12445: a4 = u64 [0x20048]\n 12450: a5 = u64 [0x20050]\n 12455: a0 = u64 [0x20058]\n 12460: u64 [sp + 0x198] = a3\n 12464: u64 [sp + 0x190] = a4\n 12468: u64 [sp + 0x188] = a5\n 12472: u64 [sp + 0x180] = a0\n 12476: u64 [sp + 0x170] = a1\n 12480: u64 [sp + 0x168] = a2\n 12484: a1 = 0x20\n 12487: a2 = sp + 0x180\n 12491: a3 = sp + 0x160\n 12495: u64 [sp + 0x160] = t0\n 12499: a0 = s1\n 12501: ra = 418, jump @13\n      : @464 [@dyn 209] (gas: 13)\n 12507: a0 = u64 [sp + 0x20]\n 12510: a1 = 0\n 12512: u64 [a0 + 24] = 0\n 12515: u64 [a0 + 16] = 0\n 12518: u64 [a0 + 8] = 0\n 12521: u64 [a0 + 0] = 0\n 12523: sp = s0 + 0xfffffffffffffbc0\n 12527: a0 = sp + 0x400\n 12531: ra = u64 [a0 + 0x38]\n 12534: s0 = u64 [a0 + 0x30]\n 12537: s1 = u64 [a0 + 0x28]\n 12540: sp = sp + 0x440\n 12544: ret\n      : @465 (gas: 1)\n 12546: trap\n      : @466 (gas: 8)\n 12547: u64 [sp + 272] = 0\n 12551: u64 [sp + 264] = 0\n 12555: u64 [sp + 256] = 0\n 12559: a0 = 0x4e487b7100000000\n 12569: a1 = sp + 0x100\n 12573: u64 [sp + 0x118] = a0\n 12577: a0 = 0\n 12579: ra = 420, jump @9\n      : @467 [@dyn 210] (gas: 7)\n 12585: u64 [sp + 248] = 0\n 12589: u64 [sp + 240] = 0\n 12593: u64 [sp + 224] = 0x32\n 12598: a0 = 0x4\n 12601: a1 = sp + 0xe0\n 12605: u64 [sp + 232] = 0\n 12609: ra = 422, jump @9\n      : @468 [@dyn 211] (gas: 2)\n 12615: a1 = i32 [0x20068]\n 12620: jump @470 if a1 >u 63\n      : @469 (gas: 2)\n 12624: u32 [0x20068] = 0x40\n 12630: fallthrough\n      : @470 (gas: 6)\n 12631: a1 = 0x20070\n 12636: i32 a1 = a1 + 0\n 12638: a0 = 0x1\n 12641: a2 = 0x24\n 12644: ecalli 14 // 'seal_return'\n 12646: fallthrough\n      : @471 (gas: 8)\n 12647: a1 = 0x20070\n 12652: i32 a1 = a1 + 0\n 12654: a0 = 0x1\n 12657: a2 = 0\n 12659: ecalli 14 // 'seal_return'\n 12661: a0 = 0\n 12663: ra = 0x1a8\n 12667: jump @21\n      : @472 [export #0: 'call'] (gas: 2)\n 12670: a0 = 0\n 12672: ra = 424, jump @21\n      : @473 [@dyn 212] [export #1: 'deploy'] (gas: 2)\n 12678: a0 = 0x1\n 12681: ra = 426, jump @21\n      : @474 [@dyn 213] (gas: 9)\n 12687: a1 = a1 <u 0x20\n 12690: a1 = a1 ^ 0x1\n 12693: a1 = a0 if a3 != 0\n 12696: a0 = a3 >u 0\n 12698: a2 = a3 >u 0\n 12700: a2 = a0 if a3 == 0\n 12703: a0 = a3 | a3\n 12706: a2 = a1 if a0 == 0\n 12709: jump [t0]\n      : @475 (gas: 12)\n 12711: a1 = u64 [s1 + 0xb0]\n 12715: a2 = u64 [s1 + 0xa0]\n 12719: a1 = a1 | a2\n 12722: a3 = u64 [s1 + 0xa8]\n 12726: a2 = u64 [s1 + 0xb8]\n 12730: a2 = a2 | a3\n 12733: a2 = a2 | a1\n 12736: a2 = a2 >> 0x20\n 12739: a1 = a1 | a3\n 12742: a1 = a1 << 0x20\n 12745: a1 = a1 | a2\n 12748: jump [t0]\n      : @476 (gas: 16)\n 12750: a2 = u64 [s1 + 0xb8]\n 12754: a0 = u64 [a2 + 0x8]\n 12757: a1 = i32 [a2 + 0x10]\n 12760: a2 = u64 [a2]\n 12762: a0 = reverse a0\n 12764: a3 = a0 << 0x20\n 12767: a1 = reverse a1\n 12769: a1 = a1 >> 0x20\n 12772: a3 = a3 | a1\n 12775: a0 = a0 >> 0x20\n 12778: a1 = reverse a2\n 12780: a2 = a1 << 0x20\n 12783: a2 = a2 | a0\n 12786: a1 = a1 >> 0x20\n 12789: i32 a0 = a4 + 0x4\n 12792: jump [t0]\n      : @477 (gas: 13)\n 12794: a0 = u64 [s1 + 0xb8]\n 12798: a1 = u64 [s1 + 0xa0]\n 12802: a0 = a0 | a1\n 12805: a1 = u64 [s1 + 0xa8]\n 12809: a3 = a1\n 12811: a2 = u64 [s1 + 0xb0]\n 12815: a1 = a1 | a2\n 12818: a1 = a1 | a0\n 12821: a1 = a1 >> 0x20\n 12824: a0 = a0 | a2\n 12827: a0 = a0 << 0x20\n 12830: a0 = a0 | a1\n 12833: jump [t0]\n      : @478 (gas: 14)\n 12835: a0 = u64 [a2 + 0x8]\n 12838: a1 = u64 [a2]\n 12840: a2 = i32 [a2 + 0x10]\n 12843: a0 = reverse a0\n 12845: a3 = a0 >> 0x20\n 12848: a1 = reverse a1\n 12850: a4 = a1 << 0x20\n 12853: a3 = a3 | a4\n 12856: a0 = a0 << 0x20\n 12859: a2 = reverse a2\n 12861: a2 = a2 >> 0x20\n 12864: a0 = a0 | a2\n 12867: a1 = a1 >> 0x20\n 12870: jump [t0]\n      : @479 (gas: 12)\n 12872: a3 = u64 [s1 + 0xb8]\n 12876: a0 = u64 [a3 + 0x18]\n 12879: a1 = u64 [a3 + 0x10]\n 12882: a2 = u64 [a3 + 0x8]\n 12885: a3 = u64 [a3]\n 12887: a0 = reverse a0\n 12889: a1 = reverse a1\n 12891: a2 = reverse a2\n 12893: a3 = reverse a3\n 12895: a4 = s1 + 0x7ff\n 12899: a4 = a4 + 0x31\n 12902: jump [t0]\n      : @480 (gas: 12)\n 12904: a2 = u64 [a2]\n 12906: a0 = reverse a0\n 12908: a3 = a0 << 0x20\n 12911: a1 = reverse a1\n 12913: a1 = a1 >> 0x20\n 12916: a3 = a3 | a1\n 12919: a0 = a0 >> 0x20\n 12922: a1 = reverse a2\n 12924: a2 = a1 << 0x20\n 12927: a2 = a2 | a0\n 12930: a1 = a1 >> 0x20\n 12933: jump [t0]\n      : @481 (gas: 10)\n 12935: a0 = u64 [sp + 0x10]\n 12938: a1 = u64 [sp + 0x18]\n 12941: a2 = 0x100000000\n 12951: a2 = a2 ^ a0\n 12954: a2 = a2 | a1\n 12957: a3 = a0 >> 0x20\n 12960: a3 = a3 <u 0x1\n 12963: a3 = 0 if a1 != 0\n 12965: a3 = 0 if a2 == 0\n 12967: jump [t0]\n      : @482 (gas: 10)\n 12969: a2 = u64 [s1 + 0xb8]\n 12973: a0 = u64 [s1 + 0xa8]\n 12977: a1 = u64 [s1 + 0xa0]\n 12981: a0 = a0 | a1\n 12984: a1 = 0xffffffe0\n 12994: a1 = a2 <u a1\n 12997: a3 = u64 [s1 + 0xb0]\n 13001: a1 = 0 if a3 != 0\n 13003: a1 = 0 if a0 != 0\n 13005: jump [t0]\n      : @483 (gas: 9)\n 13007: a0 = u64 [a3 + 0x18]\n 13010: a1 = u64 [a3 + 0x10]\n 13013: a2 = u64 [a3 + 0x8]\n 13016: a3 = u64 [a3]\n 13018: a0 = reverse a0\n 13020: a4 = reverse a1\n 13022: a2 = reverse a2\n 13024: a3 = reverse a3\n 13026: jump [t0]\n      : @484 (gas: 12)\n 13028: a2 = u64 [sp]\n 13030: a3 = u64 [sp + 0x8]\n 13033: u64 [s1] = a2\n 13035: u64 [s1 + 0x8] = a3\n 13038: u64 [s1 + 0x10] = a0\n 13041: u64 [s1 + 0x18] = a1\n 13044: sp = s0 + 0xffffffffffffffc0\n 13047: ra = u64 [sp + 0x38]\n 13050: s0 = u64 [sp + 0x30]\n 13053: s1 = u64 [sp + 0x28]\n 13056: sp = sp + 0x40\n 13059: jump [t0]\n      : @485 (gas: 6)\n 13061: i32 a0 = a2 + 0\n 13063: u64 [s1 + 0xb0] = a0\n 13067: a0 = u64 [s1 + 0xb8]\n 13071: a1 = a2\n 13073: u64 [s1 + 0xa8] = a2\n 13077: jump [t0]\n      : @486 (gas: 8)\n 13079: a0 = u64 [a4 + 0x60]\n 13082: a1 = u64 [a4 + 0x68]\n 13085: a2 = u64 [a4 + 0x58]\n 13088: a3 = u64 [a4 + 0x50]\n 13091: a1 = a1 | a2\n 13094: a0 = a0 | a3\n 13097: a0 = a0 | a1\n 13100: jump [t0]\n      : @487 (gas: 4)\n 13102: a3 = s1 + 0x7ff\n 13106: a3 = a3 + 0x31\n 13109: a4 = a3 + 0x300\n 13113: jump [t0]\n","bytecode":{"object":"50564d0000143d000000000000010700c1f000c00080036460332e067e72c47ff1f58e5982c2f2109581cf68deb3ac4f4eb7b254143ef2c2c3ab5178ddc6491492f41577f537bf0a2f65c27c1419050190eea6182c2038bcf42b8ea3decd30fcadb6d39e3f7dead6d83b96f41964177ffe73ee4a7a0618136000000004812c1200000000070000000b0000001900000027000000350000003b0000004400000051000000630000006e0000007d0000008a0000009a000000aa000000b5000000c7000000d20000006164647265737363616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c6572636f64655f73697a656465706f7369745f6576656e746765745f696d6d757461626c655f646174616765745f73746f72616765686173685f6b656363616b5f3235367265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051102b17e0463616c6cb186066465706c6f7906bb5280d502b33b6a00b201b40364046904ea04f50422055d059805da0503062906350681069606cf06fa06210736078007a50717081c084f087a089608c908ce08f3081f09d809080a0d0a6f0a740a790a930ac80ad10afb0a070b6d0b7d0b9d0bad0b5c0c810c9d0cd00cd50cf60c220d840dbf0dc40dfc0d210e260eb50e0f0fb70fde0f4610b410151126111212211239124a128a12b212c912ed12f7121413c2130e141c14b6141c15251551157e15b915ca159c16ac16c016ec16511757178717f217421884188e18231933196119ba19081a171ae41a121b2f1b461b681b711b8a1b0b1c181c711c7b1ca61cc41c001d111de71df71d091e351e9a1ea01ed01e261f301f601f661f9b1fc11fc71fd91f0a2010202120272063209b20a120b420ba2005212d21a021ec2133227722a822ae22c122c722ff223023362349234f238423dc23b224bd24f9244225892511261e264e26cf26ed26f8264b278a2790279927af27d527db27e427f927c028f6280f2933295b29a629ec292b2a422a652a962a9c2af92a572baa2bb32bda2bfb2b462c562ce52ca32d022e542f622f173024306930db302931473186318f319511e87b10107b15087b163306600002390560000251051c3307900003837783680a080139076000022003600002ac5710821010821508821695111832000039086000025108d406330790000383770a0f28c7069511f07b10087b15648964753308206497501002b0037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b1982851082861833082050100468026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a09821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a109551a08210588215509511603200951160ff7b1098007b1590007b1688009515a0008411e082ab7b1b3882ab087b1b3082ab107b1b2882aa187b1a20829a7b1a18829a087b1a10829a107b1a088299187b1964865010066582186f888219086f99821a106faa821b186fbb7b1b587b1a507b19487b18408218206f888219286f99821a306faa821b386fbb7b1b787b1a707b19687b18608379836a8317403308020a07955160ff8210980082159000821688009511a00032008b7910520931c8780883881f8488e05638000001253309680002390a680002ae8a093d086800020133087000028377c887073200009511f07b10087b158475010a04013d076400025105075010080950100ad2029511a0fd951700027b70587b75507b7648951560028411e095170002491738491730491728491720831720020a1101951b000282b73082b83882b92882ba20d49808d4a707d487075207ad01390664000297672098772095771f8477e09578e000d87807951900027b987b970894777b97103307409518000249191850100ca9fc3307e000646850100e25ff8377646833090a020154165f6d014921d8014921d0014921c001e0009517e0019518c0014921c8015010102e228217e0017b17588217e8017b17488217f0017b17408217f8017b173049219801492190014921800100019517a0019518800149218801501012f3218217a0017b17508217a8017b17288217b0017b17208217b8017b17184921580149215001492140012001951760019518400149214801501014b821821760017b1738821768017b1710821770017b1708821678018217307b1738018217407b1730018217487b17280133078000951820018219587b192001501016b9fb8217187b1718018217207b1710018217287b1708013307a000951800018219507b19000150101890fb7b16f8008217087b17f0008217107b17e8003307c0009518e0008219387b19e00050101a6afb9517c00033084050101c24fa8217d8008218d0008219c8008216c000d49707d48609d47909989920d48707977720d4970751071e003308700002838833070128c6003308700002838833070128b9006467330850101e99fd8377330833090a029517a00033088000501020c3f98217b800330b9000037b1b588218b0008219a800821aa0003e07a800033e08a000033e099800033e0a900003951780003308a0005010228af9821798008218900082198800821a8000821b587bb7387bb8307bb9287bba209517603308c0005010245ff9821778821870821968821a60821b587bb7587bb8507bb9487bba40282af964673308501026f9fc8378330733093300280a0e280a33093300280a0e01951108f8951700077b70f0007b75e8007b76e0009515f807951138f88411e064169569ff0795993149292803492920034929100380003307409568ff07958841034929180350102a13fa33076400027b67b80039076400025517040728861c95670010837760fb330833002c0a03019569ff0795993181974c035247c0e16e830a288417514723ada78d4b0452472e77c9ad0a2814105147e072a6c28c06514739f9b6c3a60151471720edf674035147ab0025376802524756a5a64da60549298803492980034929780349297003956700108377a0fb33002e0a11330230281a2b501230172b82b7800082b8880082b97882ba70d49808d4a707d48707510706285a1b8267b80081775617230728571b9567e001501032651f956a000182a7e00082a8e8008069f0014926d8017ba9d0007ba8c8009568c0017ba7c000330750103419f94926b8014926b0014926a8013307209568a0014926a001501036fdf8390868000256183f0b200368000240019517e08479e07b69b80064913307700002837783993308403300380a0a33023a28822950123a7f2995bc00037bcaa8007bc9a0007bc898007bc79000956780019568ff079588c10350103c92f9826798017b67b800826790017b67b000826788017b67a800826780017b67a0009567600133084050103e3af7956b000182b77882b87082b96882ba60d49707d48a09d47909989920d48707977720d497075107062884168267a000956900017b97408267a8007b97488267b0007b9750956840018267b8007b975864a77b6ab80033006c2817f84929480749294007492938074929300795670010837760ff0a1101956aff0795aa3195ab000782b74082b84882b93882ba30d49808d4a707d4870751070628c2198267b80081775617030728b5199567ff079577c10233084050104081f69567ff07957731957900028298a8007b68b8008298a0007b68b000829898007b68a000829790007b67a800501042fdf5501244f22751070628bb153a099000033a089800033807a00003956bff0795bb31492b880295bc00027bc780007bc8789568ff079588a1027bc97064a733004c012845f74929680349296003492958034929500395670010837780fb3300460a1133024828c228501248bf2850124aa3285107062828198267b8008177330803ac780628221950104c72f53a08d800037b68b8003a08d000037b68b0003807e000037b67a80033077000037b67a000837733004e0a058269a000330250285e278269a00050125057278269a800d398088269b000d39707d487078268b800d3a808d4870751070628c718956700015010523d1e9567e00033084050105452f5826af8008268f0008269e8008267e000d49a0ad48709d4a909989920d4a808978820d49808510806289c144926d8004926d0004926c8009568c0004926c0007b67b80033006c2841f649296807492960074929580749295007956700108377803300560a1101956aff0795aa3195ab00075012589f2751070628fa178267b80081775617230728ed179567ff079577210350105a171c9567ff079577010333084050105cacf4956aff0795aa3195ac000282cbe80082c8e00082c9d80082c7d000d49b0bd48709d4b909989920d4b808978820d4980851080628eb13492ac802492ac002492ab8029568ff079588e102492ab0027b67b80033006c288cf549290804492900044929f8034929f00395670010837720fc0a1101956aff0795aa3182a7000482a8080482a9f80382aaf003d49808d4a707d4870751070628bc178267b80081775617230728b8179567200350105e581b956a000382a72082a82880693003492618037ba9107ba808956800037ba7330750106012f54926f8024926f0024926e8023307209568e0024926e002501062f6f4390868000256183f0b200368000240019517e08479e07b69b80064913307700002837783993308403300640a0a330266287b25501266782595bc00047bca287bc9207bc8187bc7109567c0029568ff07958841045010688ff58267d8027b67b8008267d0027b67b0008267c8027b67a8008267c0027b67a0009567a00233084050106a37f3956b000282b7b80082b8b00082b9a80082baa000d49707d48a09d47909989920d48707977720d49707510706287d128267a000956900027b9780008267a8007b9788008267b0007b979000956880028267b8007b97980064a77b6ab80050106c0ff43308208267b80033004e012886f6514767b5e35f0a2878164929c8034929c0034929b8034929b003956700108377e0fb33006e0a113302702872255012706f2582b7c00082b8c80082b9b80082bab000d49808d4a707d48707510706285a168267b800817756170307285d16956720023308405010725df2956800028287387b67b8008287307b67b0008287287b67a0008287207b67a800501074e4f1501276d92351070628a2113a09b000033a08b800033807c0000349261802956b00027bb7107bb808956800027bb964a733004c012839f349298805492980054929780549297005956700108377a0fd0a1101956aff0795aa3195ab000582b7800082b8880082b97882ba70d49808d4a707d4870751070628e2148267b80081775617430728d5149567ff0795778102501078ff189568ff07958831958900028297607b67488297587b67688297507b6770956700108377c0fd3308240a039568ff07958831958900058297a8007b67a8008297a0007b67a000829798007b679800829790007b67b00050107af6f033079000033a08d800037b6888003a08d000037b6880007b6790003807e000037b677833077000037b67b80083777b67280a05018267b800827208827b807c106f279878206fb9979a20d4a8089777206fca98aa20d4a707989920826a78d3a909826a8000d3a707d4970782698800d39808d4870751070628d3147b6c507b62587b6b608267a0008268b000d487078268a80082699800d49808d4870752070628dd1450107c4ef0826890008287107b6780008287087b677882877b6788009567ff079577410233084050107e7bf09569ff079599318292280295980002828c20828b18828710d42b0ad4c708d4a808988820d4ca0a97aa20d4a80851080628bd0f492900024929f8014929f001140a00000000e3122a859568ff07958821027b9a08027b6790007b62407b6c387b6b30502080004ef1826a9000826740826838d487071408fcffffff00000000d88a08826930949894785108640f140700000000240000007b672083a7048268b000956bff0795bb3195ba00017ba8d000826898007ba8d8008268a0007ba8e0009568ff07958801028269a8007ba9e80050208200e0f00a0b8267786f77977820826980006f99989920d4890a826888006f88978920987720d497079888208269b8007b67107b97087b6a787b9a7b68187a98109567ff079577314927c8054927c0054927b8054927b005330824826790005020840006f37b6788003308208267900050208600f5f29569ff079599314829d0052049290806ff49290006ff4929f805ff4929f005ff8268b800978820988920140800000000080000007b698000d489029568ff079588e1059788209888209569ff0795992106979920d4890a82688800978820988820826b20d48b0b9777209877209568ff0795880106978820d4780c3308ff3309ff64270a01015207a60e0a0d01330c20aec7080a0d647c019569ff07959931826a90008262408267388268304916407b6c8800959b00017bbc707bba9000492978017bb89800492980017bb7a000492988019567ff079577c1019568ff079588a1017b92a80150208800ed15826a408ea78268880050228a00741f5209062849149567ff07957781018268900050208c0021ee956aff0795aa3195ab000150228e00d320510706282a14826748977720987920956aff0795aa31492a280182677095ab00017bb7108267687bb7189568ff07958841017b69087bb9203307502090000aef9569ff0795993149290801492900014929f8003307209568ff07958821014929f00050209200e2ee9517e08477e07b679000647133084033075020940052f19518e08488e07b688800648183778389330840330096000a0a826a88003302980028e51f826a880050229800de1f826890007b8a187b89107b8b087b879567ff079577010150209a0072ef9567ff079577318272e8008273e000827ad0007b6a88008277d8007b67489518e08484e06441826c9800d3c709d8c7088267b000d87a077b6740da97088267a000d8730b7b6b308260a8007b6238d30209d8020ada9b0ad37302d49209c9730bda980ac98b09d88b07826838c9080b826830c98b0bc97b0b826748c9c707826840c98707644c7bcb187bc9107bc708826788008268b000c987077bc7510a0628f61282679000644850209c0045ef0a0b7b6790008267b8008268587b78088268607b788268507a78109568ff079588318267a800958900067b97488267a0007b9740826798007b97388267b0007b97303307330850209e000df07b678800330733085020a000ffef956aff0795aa31482a5006826990008e98fc089a8995ab00067bb988007bb980007bb9787bb97097882382698000d498029568ff07958861069788209888209569ff079599a106979920d4890a826b880097bb2098bb209777209877209568ff0795888106978820d4780c3308ff3309ff64270a017b6790000a0d018269900052077b0c5109062860129567ff079577413308405020a200a4eb9569ff07959931829228829c20829b18829710d42b0ad4c708d4a808988820d4ca0a97aa20d4a8085208ed0a490995680010492828f895680010492820f8140a000000003182a0709568ff079588217b9a087b6790007b6288007b6c607b6b585020a40078ec8267283300a6000a01826b900082678800826860d487071408fcffffff00000000d88b08826958949894785108840a5022a800831c956b0010492b18f8956b00107bb810f8956800107b8908f89568ff07958801956900107b9a00f85020aa0016ec0a0b8267108268b8007b87088267787b878267187a87109567ff079577314927c8064927c0064927b8064927b006330824826790005020ac0062ee7b67b800330820826790005020ae0051ee9568ff079588314828d0062049280807492800074928f8064928f0061408000000001800000082698000d489029568ff079588e1069788209888209569ff0795992107979920d4890a8268b800978820988820826b20d48b0b9777209877209568ff0795880107978820d4780c3308ff3309ff64270a01015207b00c0a0d01330b20aeb7080a0d647b0182699000826a8800826760826858492688007b6bb800956c00077bcba0007bc9c0004926a8077bc8c8004926b0077bc7d0004926b8079567c0079568a0077bcad8005020b0006311826a88008ea78268b8005022b200e91a520906288a1095678007826890005020b4009ae9826798077b679000826790077b678800826788077b678000826780077b6778956760073308405020b6006ee995670007827b78827c70827a68827960d4ba07d4c908d47808988820d4c707977720d487075207ba088267b0007b674007826798007b6748078267a0007b675007956840078267a8007b67580764977b69b8007b6ab0007b6ba8007b6ca0005020b80043ea5022ba00581b510874088397208268787b682007826880007b682807826888007b68300795682007826a90007b6a38075020bc000dea4926f806826708956b00067bb7f0008267687bb7e8003a070000023a080800023a09100002826a707bbae000956b00077bb7187bb8107bb9083a0718000233084095690007956ae0067bb78267b8003300fe002890eb8267b8008177541743df0c956760065020be00c30f956800068287707b67588287687b67608287607b676895670010837760fc3308240a039568ff07958831958900048297487b67b0008297407b67a8008297387b67a0008297307b6798005020c000c4e733079000033a08d800037b6880003a08d000037b68787b6788003807e000037b677033077000037b67b80083777b6790003300c2000a058269b8003302c40028a2198269b8005022c4009b19826970d39808826978d39707d4870782688000d3a808d4870752072c0c9567ff079577314927680449276004492758044927500495670010837780fc0a11019569ff07959931959a000482a76882a8588292500482a9608263b000d33707826aa000d3a808d48707826ca800d3c908826b9800d3b209d49808d487075207120c64c9d4cb07d43a08d4870751074a0c5020c600e3e6826988008297088298105022c8003b198267b8007b68787a78107b69707b79087b6a80007b7a826790000a06015107620c956700063308405020ca00f9e695680006828918828a10828b088287d49b0cd4a708d4c808988820d4ac0c97cc20d4c808520846067b6b387b6a407b69484926f0054926e8054926e0051409000000008bc549129568e0057b69f8057b6788005020cc00dae70a0b8268b8008267707b8708826780007b878267787a87109568ff079588318267b000958900047b9788008267a8007b9780008267a0007b9778826798007b9770330804826788005020ce0013ea7b67508267880033085020d00004ea9569ff0795993148299004959a0004492ac800ff492ac000ff492ab800ff492ab000ff8268b800978820988a20140900000000080000007b6a30d49a029569ff079599a104979920989920956aff0795aae10497aa20d49a0a82695097992098992014080000000004000000d4890b9777209877209568ff079588c104978820d4780c3308ff3309ff64270a01015207270549269805492690054926880549268005826788007b67a0058267387b67a8058267407b67b0059567a005956880058269487b69b8055020d2001b0d826758977720987720492678057b67407b6770058267607b676805956860058267687b67600533075020d40082e649265805492650054926480533072095684005492640055020d60065e69517e08477e07b678800647133084033075020d800d5e89518e08488e07b68586481837783893308403300da000a0a826a583302dc00286a17826a585022dc006417826888007b8a187b89107b8b087b87956720055020de00fce68264380595680005828730828b20828c289518e08488e06481826aa000c8ca0a82629800c8b202d8b20bc8ba0ad3ca03d8ca09da3b09826ba800c87b0bc89b0cd8bc038260b000c84000d87b0bc80b0bc83b00d87c03d3040bd84004dab304d3c707d4b707da79047b8c107b8a087b827b801852042b0a826788005020e000fce6956700053308405020e20042e495680005828a18828b10828c088287d4ac09d4b708d49808988820d4b909979920d4980852088f034926f0044926e8044926e0041409000000003182a0709568e0047b69f8047b6788007b6a587b6b507b6c485020e40023e5826790003300e6000a01826b8800826758826850d487071408fcffffff00000000d88b088269489498947851082f035022e8002e154926d804956b00047bb8d0007bb9c8009568c0047bbac0005020ea00d0e40a0b8267708268b8007b8708826780007b878267787a87109567ff0795773149270805492700054927f8044927f004330824826788005020ec001be77b67b800330820826788005020ee000ae764789567ff0795773148271005204927480549274005492738054927300514070000000018000000826930d497079569ff0795992105979920989920956aff0795aa610597aa20d49a0a8269b800979920989920140b0000000024000000d49b0b9788209888209569ff0795994105979920d4890c3308ff3309ff0a01015207db040a0d01330b20aeb7080a0d647b0182698800826a58826750826848492690007b6bb800956c00047bcb607bc98000492668047bc88800492670047bc790004926780495678004956860047bca98005020f000180a826a90008ea78268b8005022f2009e135109390995674004826888005020f40051e2826758047b679000826750047b678800826748047b678000826740047b6778956720043308405020f60025e295670004827b38827c30827a28827920d4ba07d4c908d47808988820d4c707977720d4870752077101826798007b6700048267a0007b6708048267a8007b671004956800048267b0007b67180464977b69b8007b6ab0007b6ba8007b6ca0005020f800fae25022fa000f1451082b018397208268787b68e003826880007b68e803826888007b68f0039568e003826a90007b6af8035020fc00c4e24926b803826740956b00037bb7b0008267607bb7a8003a072000023a082800023a09300002826a687bbaa0007bb7d8007bb8d0007bb9c8003a073800023308409569c003956aa0037bb7c0008267b8005020fe004ae43307330850200001ebe48378330733090a0e28f3044929e8034929e0034929d8034929d00395670010837700fc330002010a113302040128d11350220401ce1382b7e00082b8e80082b9d80082bad000d49808d4a707d48707520744068267b80081775417034b069567600233084050200601bfe0956800028287787b67b8008287707b67b0008287687b67a0008287607b67a8005020080145e050220a01391251071e06009567c00533084050200c0181e0956800058287d8007b67b0008287d0007b67a8008287c8007b67a0008287c0007b67b80033000e010a0d3302100128a011502210019d115208bb64799877205207b350221201ea1250201401f4e39568ff079588318269a8007a89d004837795680010838800fd33090a0c9567ff079577318177d0042894009567ff079577e10133084050201601f7df9567ff07957731957900018298c8007b68b0008298c0007b68a8008298b8007b68a0008297b0007b67b800330018010a0d33021a01280f1150221a010c1152082aff6479987720520721ff50221c01571250201e0161e39568ff079588318269a8007a891006837795680010838840fe33090a0c9567ff0795773181771006018268b000ac87e4fe0a0d0164789877205207d8fe8267b8007b68b0005020200116e383788169b000330701330058010a0e2837060a0d7b67509567ff079577e100330840502022012ddf956cff0795cc3182c2c8007b625882c3c0007b634882c4b8007b646082c0b0007b60880082685095871fd887088477e0957920d87907c8780ad88a0bda770b492c88007bc9707bc2a8007bc3a0007bc498007bc090007bca789567ff079577c1009568ff079588a1007bcb8000502024015f0682698800826758826860d48707826a48d4a908d47808988820d4a707977720d48707520709fe9567ff079577314917684917604917589568ff0795888100826a507b7a50649750202601a8df0a0d01826a8800826858826948d498081409e0ffffff00000000d89a09826b6094b994895109bbfd64789877205207b2fd83a72064897b686083887b688800649850202801e8e19568ff079588318269607a8990068377956800108388c0fe33090a0c019567ff07957731817790068269900082688800ae873df22864fd9567a00433084050202a01e3dd956800048287b8007b67b0008287b0007b67a8008287a8007b67a0008287a0007b67b80033002c010a0d33022e0128020f50222e01ff0e52081dfd6479987720520714fd502230014a105020320154e19568ff079588318269a8007a895005837795680010838880fd33090a0c9567ff079577318177500528f4fd9567e007330840502034015bdd956800078287f8007b67b0008287f0007b67a8008287e8007b67a0008287e0007b67b800330036010a0d33023801287a0e50223801770e520895fc647998772052078cfc50223a01c20f50203c01cce09568ff079588318269a8007a891007837795680010838840ff33090a0c9567ff0795773181771007286cfd3307330850203e0197e0837833070133090a0e289e0033087000028388288c003308700002838828820033087000028388287833087000028388286f49263001492628014926200114070000000004a09fc3956820017b673801330750204001b8dd390868000256181f142003680002203308700002838828b7013308700002838828ad0133087000028388281d3308700002838828148267b800817701510713330870000283880133070133090a0e0133087000028388330733090a0e28f33308700002838833070133090a0e28e33308700002838833070133090a0e28d39569ff07959931492940024929380214070000000004a09fc37b9748029568ff0795886102492930023307330042012805dd492690064926880649268006140700000000c611522c956880067b679806330750204201e2dc3308043307502044015edf837828ea003308700002838833070133090a0e285bff49265006492648064926400614070000000004a09fc3956840067b6758063307502046019bdc390868000256181f1420036800022033087000028388289a0033087000028388289000492630064926280649262006140700000000c611522c956820067b67380633075020480152dc390868000256181f13200368000220330870000283882851330870000283882848492650034926480349264003140700000000c611522c956840037b675803330750204a010bdc390868000256181f1320036800022033087000028388280a33087000028388013307013309040a0e013308700002838833070133090a0e286bfe3308700002838833070133090a0e285afe3308700002838833070133090a0e2849fe3a09d000033a08d800033807e0000349265802956b00027bb7507bb848956840027bb94064a750204c0183db3308208267a80050204e01fddd837833092033070a0e01492690034926880349268003140700000000717b484e956880037b67980333075020500146db492678034926700349266003113307049568600349266803330054012824db3308700002838828cd009569ff079599314929400149293801140700000000c20512bb7b9748019568ff07958861014929300133073300420128e8da4926d0064926c8064926c006140700000000717b484e9568c0067b67d806330750205201c5da4926b8064926b0064926a006113307049568a0064926a80650205401a7da33082433075020560123dd83783307013309240a0e019569ff07959931491940491938140700000000c20512bb7b97489568ff079588614919303307330042012861da33087000028388280a3308700002838801330701330058010a0e019511c07b10387b15307b16289515408411f0828910828a18828b088288d4ba0ad4980bd4ab0b98bb20d4a909979920d4b90952091e6476641750205a01d0d850225c01fd0a510a0c50225e01510b320000330870000283883307013309330060010a0e019511c07b10387b15307b16289515408411e064768317330804330062010a033302640128b50a50226401b20a510a0b50226601060b3200330870000283883307013309330068010a0e01951170ff7b1088007b1580007b1678951590008411f064728289827408828c088273959a1fd89a00c80c0984aae07b1308c8a303d8a30bc8490ac8ba0ad39a06d89a07da6b07822b18d8c90c828610822210828818da000cc86c0cd86c06c82c09c89707d8c90cd89709c8b808c86808c8c808c8980c8ec88e79dbc809d4c7088ea6db8906520657821808d88308d34a09d84a06da9806d82708d3bc09d8bc0bda980bd32708d49808da860b520b307b13507b1a587b17603307409518507b1c6850206a01d4d8955170ff8210880082158000821678951190003200491140491138491130140700000000717b484e9518307b1748330750206c019ed84911284911204911104133070495181049111850206e0185d8390868000256183f0b2003680002400133087000028388330701330924330070010a0e019511c0fb951800047b80387b85307b8628951540048411e07b17209517a00333084050207201ffd6951b000382b7b8007b17c80082b6b00082b8a8007b18c00082b9a0007b19d000491b78491b70491b68491b60407bb798007bb690007bb8880095178003951860037bb980005020740159fe8217d0008219c8008218c000d48909d46708d498089888207b16a800d46909979920d498085208370795190003491958491950491948330601951840037b964050207601a8d78219d0008218c8008217a800d487079766209566e0d86908821ac00094a894785108f60639076400027b17b8009597203308207b17d800649650207801f0d983773308208219b8000a0295172003646850207a0118d6951b000382b73082b83882b92882ba20d49808d4a707d487075107a80650207c01a1d533069000033a079000033a089800033809a00003951a0003491a187ba9107ba808951800037ba78217d80050207e01fed6502080016ad58267288268308269206f77977a206f88988820d48a0a9877206f983306700003978920d497079888207b18103d088000037b17083e077800037b1a183e0a70000383677b17280a0601510782067b16309517e0023308405020820161d5951a000282a9f80082a6f00082a8e80082a7e0007b18407b1938d48909d46708d49808988820d46909979920d498085208da05951a0002492ad000492ac800492ac000140900000000ae3245749518c0027ba9d8007b1748502084013dd68218487b1678821a38d46a0a140600000000010000001407fcffffff00000000d8780782194094977b1ab80094a751077d05838704951900024929b8004929b0004929a8009518a0024929a00050208601ead5821728330088010a01821b489567dcd87b0782184094878218b800948751073b0582193082970881981050228a01940683b724951b0002492b98007bb890007bb98800951880027bba800050208c0199d5821848140600000000010000007b16b0001407bcffffff00000000d8780782194094978219b80094975107de0483874495190002491978491970491960609518600249196850208e014ed5951740028216d00064685020900104d48219488217b00095779cd879078218409487821ab80094a7510794048217d800d867078218c000c8780a7b1ab000d88a08da77088217a800c88706d876078218c800c887077b17b800821a580282185002821b4802821c40021407ffffffff000000007b17508397647b1c58951900027b9c207b1b607b9b287b18687b9830951820027b1a707b9a3850209201afd4646b8210b000330c330a33023303821848958784007b17d000d88707821640c876087b18c000d86806da7706821478c846067b16a800d84607821838c887077b17c80001821758d87c07821960d39a087b1aa000d89a09da8709821668d86207821a70d3a3087b139800d8a30ada870ad36207d48707da790a510a3a017b1280007b1c88008219d800d4b9077b10b0008218b800d48008d487079877207b1b9000d4b808978820d4870752077303951740017b19d800649850209401b7d28217d0008216a800d467098218c800821ac000d4a808d48909989920d46808978820d4980852083a03821b50018218480182194001821a50d2ab0b8488ff8499ff492138017b1920017b182801951820017b1b30017b17d0005020960192d38217d000957220d872098217c000c89704d8740ada990ac8a600d860098217c800c897077b17c8008217d800957920d8790b8217b000c8b708d87806dabb0682179000c8670bd87b068217b800c867077b17b800821c880095cc0188c601821aa000c86a0ad4ac0688660182178000c87606d8760782139800c873037b12d0007b14c0007b10a8007b19d800648064628214782894fe8217488212d000d872038216408218c000d3680ad86809daa309821aa800c94a0cd84a04821bc800821a38c9ab0bc94b0bd89c0ac9ab0b7b1bd800c99c0c7b1cc800c96808c938087b18c000c972060a0b017b17d0008218308217087b87088217187b878217107a8710951b0003492bd800330c492bd000492bc8008219c800d496078218d800821ac000d4a808d48707987720d49808978820d48707492bc0005207c90183677b17c80064687b16b800821648646750209801c7d47b17d8006467330850209a01b9d44821e0038218c8008e88821ad0008ea9fc08d498089a89951a00047ba9187ba9107ba9087ba9821930979920989920978823d498029518c00397882098882095190004979920d4890a8218d800978820988820821bb80097bb20d48b0b9777209877209518e003978820d4780c3308ff3309ff64270a0101520701014921f8014921f0014921e8014921e001821748951a00027ba78217407ba7088217787ba710951700029518e0018219387ba91850209c01e8f79517c00133084050209e0136d08217d8018218d0018219c8018216c001d49707d48609d47909989920d48707977720d497075207b9004921b8014921b0014921a8019518a0014921a00164675020a0012bd18217280a0582193082970881981082996f7a97a7206f88988820d4780298aa206f98978920d4a909988820492178013a0a4000023a0b4800023a0c5000023a075800027b1a98017b1b90017b1c88017b1780017b1870017b19680133082095198001951a60017b12600164675020a20195d2821720330849171849171049170849079551c0fb9517000482703882753082762895114004320000492110014921080149210001140700000000717b484e951800017b17180133075020a4016bd04921f8004921f0004921e000323307049518e0004921e8005020a6014dd0390868000256183f0b20036800024001330870000283883307013309240a0e013308700002838833070133090a0e33073300a80128cfd233075020a801cad23307015020aa01c1d2888820858801dba7088ea78ea9daa709d4aa07da780932028268b0008269a000d49808826aa8008269b800d4a909d48909989920d4a808978820d4980832028269b80082970881981082996f77977a206f88988820d48a0a9877206f98978920d4790998882083b70432028267b8008268a000d487078268a800648a8269b000d49808d47808988820d49707977720d48707320282970882988199106f77987a206f88978b20d4ba0a9777206f99989920d497079888203202826ab80082a71882a81082a90882aa6f776f886f996faa956bff0795bb31320282996f77977a206f88988820d48a0a9877206f98978920d47909988820320282171082181814090000000001000000d37909d48909987a2088aa01948a939a32028269b8008267a8008268a000d487071408e0ffffff00000000d88908826ab00094a89478320282a71882a81082a90882aa6f776f8b6f996faa32028219821a087b697b6a087b67107b68189551c0821038821530821628951140320283977b67b0008267b80064987b69a800320282b76082b86882b95882ba50d49808d4a707d487073202956aff0795aa3195ab00033202490a21a11a4292d210a1925429a42449922449922449922449922449922449922449922449922449922449922449aa9294529294942454a5242549922449922449922449922449922449922449922449499294a4aa24254994a492a42a494992922425294955559292a42495244544444a92242549525129a5244929a524a9a488882849128490309426a521112292442249a2912449222449244a492444a16a880822224422914844101121128944228288089148241289444422241289884488442222112221222249926428092515aa22428444440821448488882449222449922415aa5469444444a44844908808214224a234128104041210101010101111919210912449a24884888888882844442242886012854a4a42444444448888888888844892244992442412894891444444341249922489221109918888888808210921442222112912111191921092284908112244885224112291449244888488882449924444442411119134122189221121222112111149922489888888242222a2918888244914891049441215222211214430894225252192242242444444442444444492244922222222228a90880412111191921011912489229110894422114212428848a2221111118d444492248922112112499244a44844444444841022448484288d9452929224914492248948449284482445444224224992244922228088882441240920a9082089484444444444504a94444912494a22111189201241248410422401442292882492248948921a4d6a24922422111111111111a40892880822112449229148129114442222111124510a92a812452482485244108988882445124922892449922449922425894849141491a424129148245241541089882222492422894822492292a4a2114924412449922449141111402411499038220920a90822222222114189a4241211910822114442444400918824228924492292a446931a914444444444444410459044041111119148104992244922222222228a88088248222222228248442284908824211145240a11449224112912894422118410211112a2882212419224928844444434124924124924924449228824882489a2110922494992249244440011111449944422222212490489824844082144124012914424490248129124352222221289884490241289481444442282244a41922a5122092249114424498a449224912492244992242522880491a4244912111140442409228e2401241541444444502251128988480491088a8488880092882422892480241149d26852234944242222222282288288082222222291209224499244444444441411110491444444440491884408211111211111410555898888882241444492884224884422910882180922222222228a04290982484411158944248844444444441409a2441044228aa8488c688988a048941291201289442292244912898848444404912449924424494452d0481240525122a52888248aa89188884482888888888822419408824844111589448288888888882241940882484411158954502aa184122a5444041051102208259450a1a2094d0d55855285524522028888281211014414a4a08452898800220a4204a1841211014414840842858a8800220a4204a14293865209a5124a25841091440a1241a91111404441444844249448440011114522228088828890882005258d2401249222a142134d9224494992241504091a4ad124492a5124485028452322914a4a922449922449922449924a4a92244992244992041191284900494112498210c150128d481249248888888848121111114144244924894892481011491215219228285114449224892084102249144190a494a490242121a134120922222249922411111140448224092080a42812111111244e92a24812242222224800114052148924224144412249514422914412898888009244922492a0a84a449248924812932492248924494444229244928828884844922411114912111111441249924844124922894424912492484444258924924412499248249146929444141189489224a2285210154414912249499248228924922492a4464444a2248948824810119124492222220a52924a494a12218410111191882848498a48128d8800220a2242228210c150d250aa4841822495a48844244952249592942445248a24494a2925294991a4aa48959294a4248024a922220124aa2455554a9224a988a2244952240200"},"deployedBytecode":{"object":""},"methodIdentifiers":{"claimRewards()":"372500ab","comptroller()":"5fe3b567","getPendingRewards(address)":"f6ed2017","getStakedAmount(address)":"4da6a556","habitTracker()":"836ee1c0","mToken()":"c3b6f939","stake(address,uint256)":"adc9772e","unstake(address,uint256)":"c2a672e0","userStakes(address)":"8da7ad23"}},"irOptimized":"/// @use-src 1:\"contracts/adapters/MoonwellAdapter.sol\", 2:\"contracts/interfaces/IStakingAdapter.sol\"\nobject \"MoonwellAdapter_1367\" {\n    code {\n        {\n            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n            let _1 := memoryguard(0xe0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MoonwellAdapter_1367\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n            let value2 := abi_decode_address_fromMemory(add(_1, 64))\n            /// @src 1:2611:2627  \"mToken = _mToken\"\n            mstore(128, value0)\n            /// @src 1:2637:2663  \"comptroller = _comptroller\"\n            mstore(160, value1)\n            /// @src 1:2673:2701  \"habitTracker = _habitTracker\"\n            mstore(192, value2)\n            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"MoonwellAdapter_1367_deployed\")\n            codecopy(_2, dataoffset(\"MoonwellAdapter_1367_deployed\"), _3)\n            setimmutable(_2, \"1089\", mload(/** @src 1:2611:2627  \"mToken = _mToken\" */ 128))\n            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n            setimmutable(_2, \"1091\", mload(/** @src 1:2637:2663  \"comptroller = _comptroller\" */ 160))\n            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n            setimmutable(_2, \"1093\", mload(/** @src 1:2673:2701  \"habitTracker = _habitTracker\" */ 192))\n            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n            return(_2, _3)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 1:\"contracts/adapters/MoonwellAdapter.sol\"\n    object \"MoonwellAdapter_1367_deployed\" {\n        code {\n            {\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(0))\n                    case 0x372500ab {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 1:2265:2322  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 1:2269:2295  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 1:2269:2279  \"msg.sender\" */ caller(), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ and(/** @src 1:2283:2295  \"habitTracker\" */ loadimmutable(\"1093\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:2265:2322  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 1:2304:2322  \"OnlyHabitTracker()\"\n                            mstore(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0, /** @src 1:2304:2322  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:2332:2333  \"_\"\n                        let _2 := /** @src 1:4916:5531  \"function claimRewards() external onlyHabitTracker returns (uint256 claimed) {...\" */ fun_claimRewards_inner()\n                        /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _2)\n                        return(memPos, 32)\n                    }\n                    case 0x4da6a556 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _3 := sload(keccak256(0, 64))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _3)\n                        return(memPos_1, 32)\n                    }\n                    case 0x5fe3b567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, and(/** @src 1:1668:1704  \"address public immutable comptroller\" */ loadimmutable(\"1091\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_2, 32)\n                    }\n                    case 0x836ee1c0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, and(/** @src 1:1736:1773  \"address public immutable habitTracker\" */ loadimmutable(\"1093\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_3, 32)\n                    }\n                    case 0x8da7ad23 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _4 := sload(keccak256(0, 64))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _4)\n                        return(memPos_4, 32)\n                    }\n                    case 0xadc9772e {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value := calldataload(36)\n                        /// @src 1:2265:2322  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 1:2269:2295  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 1:2269:2279  \"msg.sender\" */ caller(), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ and(/** @src 1:2283:2295  \"habitTracker\" */ loadimmutable(\"1093\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:2265:2322  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 1:2304:2322  \"OnlyHabitTracker()\"\n                            mstore(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0, /** @src 1:2304:2322  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:3169:3216  \"if (msg.value != amount) revert InvalidAmount()\"\n                        if /** @src 1:3173:3192  \"msg.value != amount\" */ iszero(eq(/** @src 1:3173:3182  \"msg.value\" */ callvalue(), /** @src 1:3173:3192  \"msg.value != amount\" */ value))\n                        /// @src 1:3169:3216  \"if (msg.value != amount) revert InvalidAmount()\"\n                        {\n                            /// @src 1:3201:3216  \"InvalidAmount()\"\n                            mstore(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0, /** @src 1:3201:3216  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 1:3226:3265  \"if (amount == 0) revert InvalidAmount()\"\n                        if /** @src 1:3230:3241  \"amount == 0\" */ iszero(value)\n                        /// @src 1:3226:3265  \"if (amount == 0) revert InvalidAmount()\"\n                        {\n                            /// @src 1:3250:3265  \"InvalidAmount()\"\n                            mstore(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0, /** @src 1:3201:3216  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            /// @src 1:3250:3265  \"InvalidAmount()\"\n                            revert(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        let _5 := and(/** @src 1:3350:3356  \"mToken\" */ loadimmutable(\"1089\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1))\n                        /// @src 1:3336:3379  \"IMTokenNative(mToken).mint{value: amount}()\"\n                        if iszero(extcodesize(_5))\n                        {\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 1:3336:3379  \"IMTokenNative(mToken).mint{value: amount}()\"\n                        let _6 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ mload(64)\n                        /// @src 1:3336:3379  \"IMTokenNative(mToken).mint{value: amount}()\"\n                        mstore(_6, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ shl(224, 0x1249c58b))\n                        /// @src 1:3336:3379  \"IMTokenNative(mToken).mint{value: amount}()\"\n                        let _7 := call(gas(), _5, value, _6, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 4, /** @src 1:3336:3379  \"IMTokenNative(mToken).mint{value: amount}()\" */ _6, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0)\n                        /// @src 1:3336:3379  \"IMTokenNative(mToken).mint{value: amount}()\"\n                        if iszero(_7)\n                        {\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 1:3336:3379  \"IMTokenNative(mToken).mint{value: amount}()\"\n                        if _7\n                        {\n                            finalize_allocation(_6, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0)\n                            _1 := 0\n                        }\n                        let _8 := and(value0, sub(shl(160, 1), 1))\n                        mstore(_1, _8)\n                        mstore(32, _1)\n                        let dataSlot := keccak256(_1, 64)\n                        let _9 := sload(/** @src 1:3445:3471  \"userStakes[user] += amount\" */ dataSlot)\n                        /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                        let sum := add(_9, value)\n                        if gt(_9, sum)\n                        {\n                            mstore(_1, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(_1, 36)\n                        }\n                        sstore(dataSlot, sum)\n                        /// @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        let _10 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ mload(64)\n                        /// @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        mstore(_10, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\" */ add(_10, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 4), /** @src 1:3548:3552  \"this\" */ address())\n                        /// @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        let _11 := staticcall(gas(), _5, _10, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 36, /** @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\" */ _10, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32)\n                        /// @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        if iszero(_11)\n                        {\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, _1, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        let expr := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1\n                        /// @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        if _11\n                        {\n                            let _12 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32\n                            /// @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                            if gt(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32, /** @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\" */ returndatasize()) { _12 := returndatasize() }\n                            finalize_allocation(_10, _12)\n                            let value0_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            if slt(sub(/** @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\" */ add(_10, _12), _10), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            value0_1 := mload(/** @src 1:3508:3554  \"IMTokenNative(mToken).balanceOf(address(this))\" */ _10)\n                            expr := value0_1\n                        }\n                        /// @src 1:3487:3555  \"Staked(user, amount, IMTokenNative(mToken).balanceOf(address(this)))\"\n                        let _13 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ mload(64)\n                        mstore(_13, value)\n                        mstore(add(_13, 32), expr)\n                        /// @src 1:3487:3555  \"Staked(user, amount, IMTokenNative(mToken).balanceOf(address(this)))\"\n                        log2(_13, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 64, /** @src 1:3487:3555  \"Staked(user, amount, IMTokenNative(mToken).balanceOf(address(this)))\" */ 0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90, _8)\n                        /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                        return(_1, _1)\n                    }\n                    case 0xc2a672e0 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value0_2 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        /// @src 1:2283:2295  \"habitTracker\"\n                        let _14 := loadimmutable(\"1093\")\n                        /// @src 1:2265:2322  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 1:2269:2295  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 1:2269:2279  \"msg.sender\" */ caller(), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ and(/** @src 1:2283:2295  \"habitTracker\" */ _14, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:2265:2322  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 1:2304:2322  \"OnlyHabitTracker()\"\n                            mstore(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, /** @src 1:2304:2322  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, 4)\n                        }\n                        /// @src 1:4031:4070  \"if (amount == 0) revert InvalidAmount()\"\n                        if /** @src 1:4035:4046  \"amount == 0\" */ iszero(value_1)\n                        /// @src 1:4031:4070  \"if (amount == 0) revert InvalidAmount()\"\n                        {\n                            /// @src 1:4055:4070  \"InvalidAmount()\"\n                            mstore(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, /** @src 1:3201:3216  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            /// @src 1:4055:4070  \"InvalidAmount()\"\n                            revert(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, 4)\n                        }\n                        let _15 := and(/** @src 1:4173:4179  \"mToken\" */ loadimmutable(\"1089\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1))\n                        /// @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\"\n                        let _16 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ mload(64)\n                        /// @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\"\n                        mstore(_16, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ shl(224, 0x852a12e3))\n                        mstore(/** @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\" */ add(_16, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 4), value_1)\n                        /// @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\"\n                        let _17 := call(gas(), _15, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, /** @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\" */ _16, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 36, /** @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\" */ _16, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32)\n                        /// @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\"\n                        if iszero(_17)\n                        {\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, _1, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\"\n                        let expr_1 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1\n                        /// @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\"\n                        if _17\n                        {\n                            let _18 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32\n                            /// @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\"\n                            if gt(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32, /** @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\" */ returndatasize()) { _18 := returndatasize() }\n                            finalize_allocation(_16, _18)\n                            let value0_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            if slt(sub(/** @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\" */ add(_16, _18), _16), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            value0_3 := mload(/** @src 1:4159:4205  \"IMTokenNative(mToken).redeemUnderlying(amount)\" */ _16)\n                            expr_1 := value0_3\n                        }\n                        /// @src 1:4215:4250  \"if (err != 0) revert RedeemFailed()\"\n                        if /** @src 1:4219:4227  \"err != 0\" */ iszero(iszero(expr_1))\n                        /// @src 1:4215:4250  \"if (err != 0) revert RedeemFailed()\"\n                        {\n                            /// @src 1:4236:4250  \"RedeemFailed()\"\n                            mstore(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, /** @src 1:4236:4250  \"RedeemFailed()\" */ shl(225, 0x5d8902e1))\n                            revert(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, 4)\n                        }\n                        let _19 := and(value0_2, sub(shl(160, 1), 1))\n                        mstore(_1, _19)\n                        mstore(32, _1)\n                        let dataSlot_1 := keccak256(_1, 64)\n                        let _20 := sload(/** @src 1:4308:4334  \"userStakes[user] -= amount\" */ dataSlot_1)\n                        /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                        let diff := sub(_20, value_1)\n                        if gt(diff, _20)\n                        {\n                            mstore(_1, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(_1, 36)\n                        }\n                        sstore(dataSlot_1, diff)\n                        /// @src 1:4453:4489  \"habitTracker.call{value: amount}(\\\"\\\")\"\n                        let expr_component := call(gas(), _14, value_1, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, _1, _1, _1)\n                        /// @src 1:4453:4489  \"habitTracker.call{value: amount}(\\\"\\\")\"\n                        let data := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _21 := returndatasize()\n                            if gt(_21, 0xffffffffffffffff)\n                            {\n                                mstore(_1, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(_1, 36)\n                            }\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, add(and(add(_21, 31), not(31)), 32))\n                            mstore(memPtr, _21)\n                            data := memPtr\n                            returndatacopy(add(memPtr, 32), _1, returndatasize())\n                        }\n                        /// @src 1:4499:4534  \"if (!success) revert RedeemFailed()\"\n                        if /** @src 1:4503:4511  \"!success\" */ iszero(expr_component)\n                        /// @src 1:4499:4534  \"if (!success) revert RedeemFailed()\"\n                        {\n                            /// @src 1:4520:4534  \"RedeemFailed()\"\n                            mstore(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, /** @src 1:4236:4250  \"RedeemFailed()\" */ shl(225, 0x5d8902e1))\n                            /// @src 1:4520:4534  \"RedeemFailed()\"\n                            revert(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1, 4)\n                        }\n                        /// @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        let _22 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ mload(64)\n                        /// @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        mstore(_22, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\" */ add(_22, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 4), /** @src 1:4613:4617  \"this\" */ address())\n                        /// @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        let _23 := staticcall(gas(), _15, _22, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 36, /** @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\" */ _22, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32)\n                        /// @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        if iszero(_23)\n                        {\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, _1, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        let expr_2 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ _1\n                        /// @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                        if _23\n                        {\n                            let _24 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32\n                            /// @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\"\n                            if gt(/** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32, /** @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\" */ returndatasize()) { _24 := returndatasize() }\n                            finalize_allocation(_22, _24)\n                            let value0_4 := /** @src -1:-1:-1 */ 0\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            if slt(sub(/** @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\" */ add(_22, _24), _22), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                            value0_4 := mload(/** @src 1:4573:4619  \"IMTokenNative(mToken).balanceOf(address(this))\" */ _22)\n                            expr_2 := value0_4\n                        }\n                        /// @src 1:4550:4620  \"Unstaked(user, amount, IMTokenNative(mToken).balanceOf(address(this)))\"\n                        let _25 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ mload(64)\n                        mstore(_25, value_1)\n                        mstore(add(_25, 32), expr_2)\n                        /// @src 1:4550:4620  \"Unstaked(user, amount, IMTokenNative(mToken).balanceOf(address(this)))\"\n                        log2(_25, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 64, /** @src 1:4550:4620  \"Unstaked(user, amount, IMTokenNative(mToken).balanceOf(address(this)))\" */ 0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e, _19)\n                        /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                        return(_1, _1)\n                    }\n                    case 0xc3b6f939 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, and(/** @src 1:1607:1638  \"address public immutable mToken\" */ loadimmutable(\"1089\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_5, 32)\n                    }\n                    case 0xf6ed2017 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        pop(abi_decode_address())\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _1)\n                        return(memPos_6, 32)\n                    }\n                }\n                if iszero(calldatasize()) { stop() }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            /// @src 1:4916:5531  \"function claimRewards() external onlyHabitTracker returns (uint256 claimed) {...\"\n            function fun_claimRewards_inner() -> var_claimed\n            {\n                /// @src 1:5029:5045  \"new address[](1)\"\n                let memPtr := /** @src -1:-1:-1 */ 0\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                let _1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                _1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                size := 64\n                let memPtr_1 := mload(size)\n                finalize_allocation(memPtr_1, size)\n                mstore(memPtr_1, /** @src 1:5043:5044  \"1\" */ 0x01)\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                let dataStart := add(memPtr_1, 32)\n                calldatacopy(dataStart, calldatasize(), add(size, not(31)))\n                if iszero(mload(memPtr_1))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 0x24)\n                }\n                mstore(dataStart, and(/** @src 1:5068:5074  \"mToken\" */ loadimmutable(\"1089\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1)))\n                let _2 := and(/** @src 1:5160:5171  \"comptroller\" */ loadimmutable(\"1091\"), /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ sub(shl(160, 1), 1))\n                /// @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\"\n                if iszero(extcodesize(_2))\n                {\n                    /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\"\n                let _3 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ mload(size)\n                /// @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\"\n                mstore(_3, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ shl(225, 0x3a229957))\n                let tail := add(/** @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\" */ _3, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 100)\n                mstore(/** @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\" */ add(_3, 4), /** @src -1:-1:-1 */ 0)\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                mstore(add(/** @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\" */ _3, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 36), /** @src 1:5196:5200  \"this\" */ address())\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                mstore(add(/** @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\" */ _3, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 68), 96)\n                let pos := tail\n                let length := mload(memPtr_1)\n                mstore(tail, length)\n                pos := add(/** @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\" */ _3, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 132)\n                let srcPtr := dataStart\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                for { }\n                lt(i, length)\n                {\n                    i := add(i, /** @src 1:5043:5044  \"1\" */ 0x01)\n                }\n                /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, 32)\n                    srcPtr := add(srcPtr, 32)\n                }\n                /// @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\"\n                let trySuccessCondition := call(gas(), _2, /** @src -1:-1:-1 */ 0, /** @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\" */ _3, sub(pos, _3), _3, /** @src -1:-1:-1 */ 0)\n                /// @src 1:5147:5211  \"IComptroller(comptroller).claimReward(0, address(this), markets)\"\n                if trySuccessCondition\n                {\n                    finalize_allocation(_3, /** @src -1:-1:-1 */ 0)\n                    /// @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\"\n                    memPtr := /** @src -1:-1:-1 */ 0\n                }\n                /// @src 1:5143:5525  \"try IComptroller(comptroller).claimReward(0, address(this), markets) {...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:5350:5379  \"RewardsClaimed(msg.sender, 0)\"\n                    let _4 := /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ mload(size)\n                    mstore(_4, /** @src -1:-1:-1 */ memPtr)\n                    /// @src 1:5350:5379  \"RewardsClaimed(msg.sender, 0)\"\n                    log2(_4, /** @src 1:1557:6576  \"contract MoonwellAdapter is IStakingAdapter {...\" */ 32, /** @src 1:5350:5379  \"RewardsClaimed(msg.sender, 0)\" */ 0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe, /** @src 1:5365:5375  \"msg.sender\" */ caller())\n                    /// @src 1:5393:5401  \"return 0\"\n                    var_claimed := /** @src -1:-1:-1 */ memPtr\n                    /// @src 1:5393:5401  \"return 0\"\n                    leave\n                }\n                default /// @src 1:5143:5525  \"try IComptroller(comptroller).claimReward(0, address(this), markets) {...\"\n                {\n                    /// @src 1:5468:5476  \"return 0\"\n                    var_claimed := /** @src -1:-1:-1 */ memPtr\n                    /// @src 1:5468:5476  \"return 0\"\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220708ea4eaedaaa76e76ea321c9a47ed0f6b93073686a036640d1fe6ab86ea375464736f6c634300081c0033\"\n    }\n}\n","hash":"0de16cbfc6f16f5806da9a88e3c8649e209b81673ecaf8746afee2e2c1afc9cf","factoryDependencies":{}}},"contracts/interfaces/IStakingAdapter.sol":{"IStakingAdapter":{"abi":[{"inputs":[],"name":"claimRewards","outputs":[{"internalType":"uint256","name":"claimed","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getPendingRewards","outputs":[{"internalType":"uint256","name":"pending","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getStakedAmount","outputs":[{"internalType":"uint256","name":"staked","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pending\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"staked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allows HabitTracker to integrate with any staking protocol Terminology: - Yield Stake: User rewards staked in external protocol (principal) - Yield Rewards: Additional rewards generated from external protocol\",\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"Returns 0 if no yield rewards available or not supported\",\"returns\":{\"claimed\":\"Amount of yield rewards claimed\"}},\"getPendingRewards(address)\":{\"details\":\"Returns 0 if not supported by protocol\",\"params\":{\"who\":\"Address to check\"},\"returns\":{\"pending\":\"Pending yield rewards\"}},\"getStakedAmount(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"staked\":\"Total yield stake by address (excludes yield rewards)\"}},\"stake(address,uint256)\":{\"details\":\"For native token staking, msg.value should equal amount\",\"params\":{\"amount\":\"Amount to stake (user's earned rewards)\",\"user\":\"Address of the user whose rewards are being staked\"}},\"unstake(address,uint256)\":{\"details\":\"Unstaked tokens (principal + yield rewards) should be sent back to HabitTracker\",\"params\":{\"amount\":\"Amount to unstake\",\"user\":\"Address of the user whose rewards are being unstaked\"}}},\"title\":\"IStakingAdapter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated yield rewards from external protocol\"},\"getPendingRewards(address)\":{\"notice\":\"Get pending unclaimed yield rewards for an address\"},\"getStakedAmount(address)\":{\"notice\":\"Get total yield stake amount for an address (principal only)\"},\"stake(address,uint256)\":{\"notice\":\"Create yield stake by staking user rewards into external protocol\"},\"unstake(address,uint256)\":{\"notice\":\"Unstake from external protocol (yield stake + yield rewards)\"}},\"notice\":\"Chain-agnostic interface for external staking protocols\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakingAdapter.sol\":\"IStakingAdapter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0xff215acb9a3b8a764a939626ef6ffd975ed411f991532ada8de923118abdb8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd9c3f4c8b956e7f11b867deb027df0e788cdf40f6c3fad3a9aae551dc6653c\",\"dweb:/ipfs/QmP48raHm1VChRAWYdgq9aSVcyG1qUWD1hawJimyJczHGk\"]}},\"version\":1}","evm":{"methodIdentifiers":{"claimRewards()":"372500ab","getPendingRewards(address)":"f6ed2017","getStakedAmount(address)":"4da6a556","stake(address,uint256)":"adc9772e","unstake(address,uint256)":"c2a672e0"}},"irOptimized":""}},"contracts/mocks/MockStakingRewards.sol":{"MockStakingRewards":{"abi":[{"inputs":[{"internalType":"uint256","name":"_ratePerSecond","type":"uint256"},{"internalType":"address","name":"_habitTracker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"OnlyHabitTracker","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"claimRewards","outputs":[{"internalType":"uint256","name":"claimed","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getPendingRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getStakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"habitTracker","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ratePerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_habitTracker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyHabitTracker\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"habitTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratePerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Linear reward rate: rewards = staked * ratePerSecond * timeStaked\",\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"Returns 0 if no yield rewards available or not supported\",\"returns\":{\"claimed\":\"Amount of yield rewards claimed\"}},\"constructor\":{\"params\":{\"_habitTracker\":\"HabitTracker contract address\",\"_ratePerSecond\":\"Reward rate (e.g., 1e15 = 0.1% per second)\"}},\"getPendingRewards(address)\":{\"details\":\"Returns 0 if not supported by protocol\",\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"Pending yield rewards\"}},\"getStakedAmount(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"Total yield stake by address (excludes yield rewards)\"}},\"stake(address,uint256)\":{\"details\":\"For native token staking, msg.value should equal amount\",\"params\":{\"amount\":\"Amount to stake (user's earned rewards)\",\"user\":\"Address of the user whose rewards are being staked\"}},\"unstake(address,uint256)\":{\"details\":\"Unstaked tokens (principal + yield rewards) should be sent back to HabitTracker\",\"params\":{\"amount\":\"Amount to unstake\",\"user\":\"Address of the user whose rewards are being unstaked\"}}},\"title\":\"MockStakingRewards\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated yield rewards from external protocol\"},\"getPendingRewards(address)\":{\"notice\":\"Get pending unclaimed yield rewards for an address\"},\"getStakedAmount(address)\":{\"notice\":\"Get total yield stake amount for an address (principal only)\"},\"stake(address,uint256)\":{\"notice\":\"Create yield stake by staking user rewards into external protocol\"},\"unstake(address,uint256)\":{\"notice\":\"Unstake from external protocol (yield stake + yield rewards)\"}},\"notice\":\"Simple mock staking contract for testing on Passet Hub\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockStakingRewards.sol\":\"MockStakingRewards\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakingAdapter.sol\":{\"keccak256\":\"0xff215acb9a3b8a764a939626ef6ffd975ed411f991532ada8de923118abdb8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd9c3f4c8b956e7f11b867deb027df0e788cdf40f6c3fad3a9aae551dc6653c\",\"dweb:/ipfs/QmP48raHm1VChRAWYdgq9aSVcyG1qUWD1hawJimyJczHGk\"]},\"contracts/mocks/MockStakingRewards.sol\":{\"keccak256\":\"0x108da3bcefaeff8501b02fc56553e10136de69cc9d66268272a66ffe935e78c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f3f82e2d0cf5492ebefe539d91f22606058461553c7a0cca7ba03cf15dcf143\",\"dweb:/ipfs/QmY67hLLPKq8bqSpTptPXXLcusTVSEM8Q8mN6tsMnVzQZ8\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 100/65744 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 4084\n// Code size = 13797 bytes\n\n      : @0 (gas: 7)\n     0: sp = sp + 0xffffffffffffffe8\n     3: u64 [sp + 0x10] = ra\n     6: u64 [sp + 0x8] = s0\n     9: u64 [sp] = s1\n    11: s1 = 0x20060\n    16: s0 = i32 [0x20060]\n    21: jump @3 if s0 == 0\n      : @1 (gas: 5)\n    24: a0 = 0x30090\n    29: i32 a0 = a0 + 0\n    31: i32 a1 = s1 + 0\n    33: ecalli 7 // 'get_immutable_data'\n    35: fallthrough\n      : @2 (gas: 3)\n    36: a0 = i32 [0x20060]\n    41: u32 [0x20060] = 0\n    46: jump @4 if a0 <u s0\n      : @3 (gas: 5)\n    49: ra = u64 [sp + 0x10]\n    52: s0 = u64 [sp + 0x8]\n    55: s1 = u64 [sp]\n    57: sp = sp + 0x18\n    60: ret\n      : @4 (gas: 1)\n    62: trap\n      : @5 (gas: 2)\n    63: a1 = i32 [0x20060]\n    68: jump @46 if a1 == 0\n      : @6 (gas: 4)\n    72: a0 = 0x30090\n    77: i32 a0 = a0 + 0\n    79: ecalli 15 // 'set_immutable_data'\n    81: jump @46\n      : @7 (gas: 8)\n    84: sp = sp + 0xfffffffffffffff0\n    87: u64 [sp + 0x8] = ra\n    90: u64 [sp] = s0\n    92: a2 = a1\n    94: s0 = a0\n    96: a1 = 0x20\n    99: a0 = a2\n   101: ra = 2, jump @15\n      : @8 [@dyn 1] (gas: 100)\n   106: a1 = u8 [a0 + 0x1]\n   109: a2 = u8 [a0]\n   111: a3 = u8 [a0 + 0x2]\n   114: a4 = u8 [a0 + 0x3]\n   117: a1 = a1 << 0x8\n   120: a1 = a1 | a2\n   123: a3 = a3 << 0x10\n   126: a4 = a4 << 0x18\n   129: a3 = a3 | a4\n   132: a1 = a1 | a3\n   135: a2 = u8 [a0 + 0x5]\n   138: a3 = u8 [a0 + 0x4]\n   141: a4 = u8 [a0 + 0x6]\n   144: a5 = u8 [a0 + 0x7]\n   147: a2 = a2 << 0x8\n   150: a2 = a2 | a3\n   153: a4 = a4 << 0x10\n   156: a5 = a5 << 0x18\n   159: a4 = a4 | a5\n   162: a2 = a2 | a4\n   165: a2 = a2 << 0x20\n   168: t0 = a2 | a1\n   171: a2 = u8 [a0 + 0x9]\n   174: a3 = u8 [a0 + 0x8]\n   177: a4 = u8 [a0 + 0xa]\n   180: a5 = u8 [a0 + 0xb]\n   183: a2 = a2 << 0x8\n   186: a2 = a2 | a3\n   189: a4 = a4 << 0x10\n   192: a5 = a5 << 0x18\n   195: a4 = a4 | a5\n   198: a2 = a2 | a4\n   201: a3 = u8 [a0 + 0xd]\n   204: a4 = u8 [a0 + 0xc]\n   207: a5 = u8 [a0 + 0xe]\n   210: a1 = u8 [a0 + 0xf]\n   213: a3 = a3 << 0x8\n   216: a3 = a3 | a4\n   219: a5 = a5 << 0x10\n   222: a1 = a1 << 0x18\n   225: a1 = a1 | a5\n   228: a1 = a1 | a3\n   231: a1 = a1 << 0x20\n   234: t1 = a1 | a2\n   237: a1 = u8 [a0 + 0x11]\n   240: a3 = u8 [a0 + 0x10]\n   243: a4 = u8 [a0 + 0x12]\n   246: a5 = u8 [a0 + 0x13]\n   249: a1 = a1 << 0x8\n   252: a1 = a1 | a3\n   255: a4 = a4 << 0x10\n   258: a5 = a5 << 0x18\n   261: a4 = a4 | a5\n   264: a1 = a1 | a4\n   267: a3 = u8 [a0 + 0x15]\n   270: a4 = u8 [a0 + 0x14]\n   273: a5 = u8 [a0 + 0x16]\n   276: a2 = u8 [a0 + 0x17]\n   279: a3 = a3 << 0x8\n   282: a3 = a3 | a4\n   285: a5 = a5 << 0x10\n   288: a2 = a2 << 0x18\n   291: a2 = a2 | a5\n   294: a2 = a2 | a3\n   297: a2 = a2 << 0x20\n   300: a3 = a2 | a1\n   303: a1 = u8 [a0 + 0x19]\n   306: a2 = u8 [a0 + 0x18]\n   309: a4 = u8 [a0 + 0x1a]\n   312: a5 = u8 [a0 + 0x1b]\n   315: a1 = a1 << 0x8\n   318: a1 = a1 | a2\n   321: a4 = a4 << 0x10\n   324: a5 = a5 << 0x18\n   327: a4 = a4 | a5\n   330: a1 = a1 | a4\n   333: a2 = u8 [a0 + 0x1d]\n   336: a4 = u8 [a0 + 0x1c]\n   339: a5 = u8 [a0 + 0x1e]\n   342: a0 = u8 [a0 + 0x1f]\n   345: a2 = a2 << 0x8\n   348: a2 = a2 | a4\n   351: a5 = a5 << 0x10\n   354: a0 = a0 << 0x18\n   357: a0 = a0 | a5\n   360: a0 = a0 | a2\n   363: a0 = a0 << 0x20\n   366: a0 = a0 | a1\n   369: a0 = reverse a0\n   371: a1 = reverse a3\n   373: a2 = reverse t1\n   375: a3 = reverse t0\n   377: u64 [s0 + 0x18] = a3\n   380: u64 [s0 + 0x10] = a2\n   383: u64 [s0 + 0x8] = a1\n   386: u64 [s0] = a0\n   388: ra = u64 [sp + 0x8]\n   391: s0 = u64 [sp]\n   393: sp = sp + 0x10\n   396: ret\n      : @9 (gas: 12)\n   398: sp = sp + 0xffffffffffffffd8\n   401: u64 [sp + 0x20] = ra\n   404: u64 [sp + 0x18] = s0\n   407: u64 [sp + 0x10] = s1\n   410: a2 = u64 [a1]\n   412: u64 [sp + 0x8] = a2\n   415: a2 = u64 [a1 + 0x8]\n   418: u64 [sp] = a2\n   420: s0 = u64 [a1 + 0x10]\n   423: s1 = u64 [a1 + 0x18]\n   426: a1 = 0x20\n   429: ra = 4, jump @15\n      : @10 [@dyn 2] (gas: 71)\n   434: a1 = reverse s1\n   436: a2 = reverse s0\n   438: a3 = u64 [sp]\n   440: a3 = reverse a3\n   442: a4 = u64 [sp + 0x8]\n   445: a4 = reverse a4\n   447: u8 [a0 + 0x18] = a4\n   450: u8 [a0 + 0x10] = a3\n   453: u8 [a0 + 0x8] = a2\n   456: u8 [a0] = a1\n   458: a5 = a4 >> 0x38\n   461: u8 [a0 + 0x1f] = a5\n   464: a5 = a4 >> 0x30\n   467: u8 [a0 + 0x1e] = a5\n   470: a5 = a4 >> 0x28\n   473: u8 [a0 + 0x1d] = a5\n   476: a5 = a4 >> 0x20\n   479: u8 [a0 + 0x1c] = a5\n   482: a5 = a4 >> 0x18\n   485: u8 [a0 + 0x1b] = a5\n   488: a5 = a4 >> 0x10\n   491: u8 [a0 + 0x1a] = a5\n   494: a4 = a4 >> 0x8\n   497: u8 [a0 + 0x19] = a4\n   500: a4 = a3 >> 0x38\n   503: u8 [a0 + 0x17] = a4\n   506: a4 = a3 >> 0x30\n   509: u8 [a0 + 0x16] = a4\n   512: a4 = a3 >> 0x28\n   515: u8 [a0 + 0x15] = a4\n   518: a4 = a3 >> 0x20\n   521: u8 [a0 + 0x14] = a4\n   524: a4 = a3 >> 0x18\n   527: u8 [a0 + 0x13] = a4\n   530: a4 = a3 >> 0x10\n   533: u8 [a0 + 0x12] = a4\n   536: a3 = a3 >> 0x8\n   539: u8 [a0 + 0x11] = a3\n   542: a3 = a2 >> 0x38\n   545: u8 [a0 + 0xf] = a3\n   548: a3 = a2 >> 0x30\n   551: u8 [a0 + 0xe] = a3\n   554: a3 = a2 >> 0x28\n   557: u8 [a0 + 0xd] = a3\n   560: a3 = a2 >> 0x20\n   563: u8 [a0 + 0xc] = a3\n   566: a3 = a2 >> 0x18\n   569: u8 [a0 + 0xb] = a3\n   572: a3 = a2 >> 0x10\n   575: u8 [a0 + 0xa] = a3\n   578: a2 = a2 >> 0x8\n   581: u8 [a0 + 0x9] = a2\n   584: a2 = a1 >> 0x38\n   587: u8 [a0 + 0x7] = a2\n   590: a2 = a1 >> 0x30\n   593: u8 [a0 + 0x6] = a2\n   596: a2 = a1 >> 0x28\n   599: u8 [a0 + 0x5] = a2\n   602: a2 = a1 >> 0x20\n   605: u8 [a0 + 0x4] = a2\n   608: a2 = a1 >> 0x18\n   611: u8 [a0 + 0x3] = a2\n   614: a2 = a1 >> 0x10\n   617: u8 [a0 + 0x2] = a2\n   620: a1 = a1 >> 0x8\n   623: u8 [a0 + 0x1] = a1\n   626: ra = u64 [sp + 0x20]\n   629: s0 = u64 [sp + 0x18]\n   632: s1 = u64 [sp + 0x10]\n   635: sp = sp + 0x28\n   638: ret\n      : @11 (gas: 48)\n   640: sp = sp + 0xffffffffffffffa0\n   643: u64 [sp + 0x58] = ra\n   646: u64 [sp + 0x50] = s0\n   649: u64 [sp + 0x48] = s1\n   652: s0 = sp + 0x60\n   655: sp = sp & 0xffffffffffffffe0\n   658: s1 = a0\n   660: a0 = u64 [a1 + 0x18]\n   663: a2 = u64 [a1 + 0x10]\n   666: a3 = u64 [a1 + 0x8]\n   669: a1 = u64 [a1]\n   671: a0 = reverse a0\n   673: a2 = reverse a2\n   675: a3 = reverse a3\n   677: a1 = reverse a1\n   679: u64 [sp + 0x18] = a1\n   682: u64 [sp + 0x10] = a3\n   685: u64 [sp + 0x8] = a2\n   688: u64 [sp] = a0\n   690: u64 [sp + 56] = 0\n   693: u64 [sp + 48] = 0\n   696: u64 [sp + 40] = 0\n   699: u64 [sp + 32] = 0\n   702: u32 [sp + 64] = 0x20\n   706: i32 a1 = sp + 0\n   708: i32 a3 = sp + 0x20\n   711: i32 a4 = sp + 0x40\n   714: a2 = 0xffffffffffffffff\n   717: a0 = 0\n   719: ecalli 8 // 'get_storage'\n   721: a0 = u64 [sp + 0x38]\n   724: a1 = u64 [sp + 0x30]\n   727: a2 = u64 [sp + 0x28]\n   730: a3 = u64 [sp + 0x20]\n   733: a0 = reverse a0\n   735: a1 = reverse a1\n   737: a2 = reverse a2\n   739: a3 = reverse a3\n   741: u64 [s1 + 0x18] = a3\n   744: u64 [s1 + 0x10] = a2\n   747: u64 [s1 + 0x8] = a1\n   750: u64 [s1] = a0\n   752: sp = s0 + 0xffffffffffffffa0\n   755: ra = u64 [sp + 0x58]\n   758: s0 = u64 [sp + 0x50]\n   761: s1 = u64 [sp + 0x48]\n   764: sp = sp + 0x60\n   767: ret\n      : @12 (gas: 40)\n   769: sp = sp + 0xffffffffffffffa0\n   772: u64 [sp + 0x58] = ra\n   775: u64 [sp + 0x50] = s0\n   778: s0 = sp + 0x60\n   781: sp = sp & 0xffffffffffffffe0\n   784: t0 = u64 [a0]\n   786: a3 = u64 [a0 + 0x8]\n   789: a4 = u64 [a0 + 0x10]\n   792: a0 = u64 [a0 + 0x18]\n   795: t1 = u64 [a1]\n   797: a2 = u64 [a1 + 0x8]\n   800: a5 = u64 [a1 + 0x10]\n   803: a1 = u64 [a1 + 0x18]\n   806: t2 = reverse a0\n   808: a4 = reverse a4\n   810: a3 = reverse a3\n   812: a0 = reverse t0\n   814: t0 = reverse a1\n   816: a5 = reverse a5\n   818: a2 = reverse a2\n   820: a1 = reverse t1\n   822: u64 [sp + 0x18] = a0\n   825: u64 [sp + 0x10] = a3\n   828: u64 [sp + 0x8] = a4\n   831: u64 [sp] = t2\n   833: u64 [sp + 0x38] = a1\n   836: u64 [sp + 0x30] = a2\n   839: u64 [sp + 0x28] = a5\n   842: u64 [sp + 0x20] = t0\n   845: i32 a1 = sp + 0\n   847: i32 a3 = sp + 0x20\n   850: a2 = 0xffffffffffffffff\n   853: a4 = 0x20\n   856: a0 = 0\n   858: ecalli 16 // 'set_storage'\n   860: sp = s0 + 0xffffffffffffffa0\n   863: ra = u64 [sp + 0x58]\n   866: s0 = u64 [sp + 0x50]\n   869: sp = sp + 0x60\n   872: ret\n      : @13 (gas: 24)\n   874: sp = sp + 0xffffffffffffff60\n   878: u64 [sp + 0x98] = ra\n   882: u64 [sp + 0x90] = s0\n   886: u64 [sp + 0x88] = s1\n   890: s0 = sp + 0xa0\n   894: sp = sp & 0xffffffffffffffe0\n   897: a4 = u64 [a3]\n   899: u64 [sp + 0x38] = a4\n   902: a4 = u64 [a3 + 0x8]\n   905: u64 [sp + 0x30] = a4\n   908: a4 = u64 [a3 + 0x10]\n   911: u64 [sp + 0x28] = a4\n   914: a3 = u64 [a3 + 0x18]\n   917: u64 [sp + 0x20] = a3\n   920: a3 = u64 [a2]\n   922: u64 [sp + 0x18] = a3\n   925: a3 = u64 [a2 + 0x8]\n   928: u64 [sp + 0x10] = a3\n   931: a3 = u64 [a2 + 0x10]\n   934: u64 [sp + 0x8] = a3\n   937: a2 = u64 [a2 + 0x18]\n   940: u64 [sp] = a2\n   942: s1 = a1\n   944: ra = 6, jump @15\n      : @14 [@dyn 3] (gas: 35)\n   948: a1 = u64 [sp]\n   950: a1 = reverse a1\n   952: a2 = u64 [sp + 0x8]\n   955: a2 = reverse a2\n   957: a3 = u64 [sp + 0x10]\n   960: a3 = reverse a3\n   962: a4 = u64 [sp + 0x18]\n   965: a4 = reverse a4\n   967: u64 [sp + 0x58] = a4\n   970: u64 [sp + 0x50] = a3\n   973: u64 [sp + 0x48] = a2\n   976: u64 [sp + 0x40] = a1\n   979: a1 = u64 [sp + 0x20]\n   982: a1 = reverse a1\n   984: a2 = u64 [sp + 0x28]\n   987: a2 = reverse a2\n   989: a3 = u64 [sp + 0x30]\n   992: a3 = reverse a3\n   994: a4 = u64 [sp + 0x38]\n   997: a4 = reverse a4\n   999: u64 [sp + 0x78] = a4\n  1002: u64 [sp + 0x70] = a3\n  1005: u64 [sp + 0x68] = a2\n  1008: u64 [sp + 0x60] = a1\n  1011: i32 a2 = a0 + 0\n  1013: i32 a3 = s1 + 0\n  1015: i32 a0 = sp + 0x40\n  1018: a1 = 0x2\n  1021: ecalli 6 // 'deposit_event'\n  1023: sp = s0 + 0xffffffffffffff60\n  1027: ra = u64 [sp + 0x98]\n  1031: s0 = u64 [sp + 0x90]\n  1035: s1 = u64 [sp + 0x88]\n  1039: sp = sp + 0xa0\n  1043: ret\n      : @15 (gas: 2)\n  1045: i32 a2 = a0 >> 0x10\n  1048: jump @20 if a2 != 0\n      : @16 (gas: 4)\n  1051: a1 = a1 + a0\n  1054: i32 a1 = a1 + 0x1f\n  1057: a1 = a1 & 0xffffffffffffffe0\n  1060: jump @20 if a1 >u 65536\n      : @17 (gas: 3)\n  1066: a2 = 0x20068\n  1071: a3 = i32 [0x20068]\n  1076: jump @19 if a3 >=u a1\n      : @18 (gas: 2)\n  1079: u32 [0x20068] = a1\n  1084: fallthrough\n      : @19 (gas: 4)\n  1085: a1 = 0x20070\n  1090: i32 a0 = a0 + 0\n  1092: a0 = a0 + a1\n  1095: ret\n      : @20 (gas: 1)\n  1097: trap\n      : @21 (gas: 6)\n  1098: sp = sp + 0xfffffffffffffff0\n  1101: u64 [sp + 0x8] = ra\n  1104: u64 [sp] = s0\n  1106: s0 = a0 & 0x1\n  1109: ecalli 4 // 'call_data_size'\n  1111: fallthrough\n      : @22 (gas: 2)\n  1112: u32 [0x20064] = a0\n  1117: jump @24 if s0 == 0\n      : @23 (gas: 1)\n  1120: ra = 8, jump @25\n      : @24 [@dyn 4] (gas: 1)\n  1124: ra = 10, jump @49\n      : @25 [@dyn 5] (gas: 13)\n  1129: sp = sp + 0xfffffffffffffe80\n  1133: u64 [sp + 0x178] = ra\n  1137: u64 [sp + 0x170] = s0\n  1141: u64 [sp + 0x168] = s1\n  1145: s0 = sp + 0x180\n  1149: sp = sp & 0xffffffffffffffe0\n  1152: u64 [sp + 344] = 0\n  1156: u64 [sp + 336] = 0\n  1160: u64 [sp + 328] = 0\n  1164: u64 [sp + 320] = 0\n  1168: i32 a0 = sp + 0x140\n  1172: ecalli 17 // 'value_transferred'\n  1174: fallthrough\n      : @26 (gas: 8)\n  1175: a0 = u64 [sp + 0x150]\n  1179: a1 = u64 [sp + 0x158]\n  1183: a2 = u64 [sp + 0x148]\n  1187: a3 = u64 [sp + 0x140]\n  1191: a1 = a1 | a2\n  1194: a0 = a0 | a3\n  1197: a0 = a0 | a1\n  1200: jump @39 if a0 != 0\n      : @27 (gas: 15)\n  1204: s1 = i32 [0x20064]\n  1209: a0 = s1 << 0x20\n  1212: a0 = a0 >> 0x20\n  1215: a0 = a0 + 0x1f\n  1218: a0 = a0 & 0xffffffffffffffe0\n  1221: a1 = a0 + 0xc0\n  1225: a0 = a1 <u a0\n  1228: u64 [sp + 312] = 0\n  1232: u64 [sp + 0x120] = a1\n  1236: u64 [sp + 0x128] = a0\n  1240: a0 = 0 if a0 != 0\n  1242: u64 [sp + 0x130] = a0\n  1246: a0 = 0x40\n  1249: a1 = sp + 0x120\n  1253: ra = 12, jump @9\n      : @28 [@dyn 6] (gas: 3)\n  1258: a0 = 0xc0\n  1262: a1 = s1\n  1264: ra = 14, jump @15\n      : @29 [@dyn 7] (gas: 5)\n  1269: i32 a0 = a0 + 0\n  1271: a1 = s1\n  1273: a2 = 0\n  1275: ecalli 2 // 'call_data_copy'\n  1277: fallthrough\n      : @30 (gas: 1)\n  1278: jump @40 if s1 <u 64\n      : @31 (gas: 3)\n  1283: a0 = sp + 0x100\n  1287: a1 = 0xc0\n  1291: ra = 16, jump @7\n      : @32 [@dyn 8] (gas: 11)\n  1296: a0 = u64 [sp + 0x118]\n  1300: u64 [sp + 0x38] = a0\n  1303: a0 = u64 [sp + 0x110]\n  1307: u64 [sp + 0x30] = a0\n  1310: a0 = u64 [sp + 0x108]\n  1314: u64 [sp + 0x20] = a0\n  1317: a0 = u64 [sp + 0x100]\n  1321: u64 [sp + 0x18] = a0\n  1324: a0 = sp + 0xe0\n  1328: a1 = 0xe0\n  1332: ra = 18, jump @7\n      : @33 [@dyn 9] (gas: 11)\n  1337: a1 = u64 [sp + 0xf0]\n  1341: s1 = u64 [sp + 0xf8]\n  1345: a0 = 0x100000000\n  1355: a0 = a0 ^ a1\n  1358: a0 = a0 | s1\n  1361: u64 [sp + 0x28] = a1\n  1364: a1 = a1 >> 0x20\n  1367: a1 = a1 <u 0x1\n  1370: a1 = 0 if s1 != 0\n  1372: a1 = 0 if a0 == 0\n  1374: jump @41 if a1 == 0\n      : @34 (gas: 15)\n  1378: a0 = u64 [sp + 0xe8]\n  1382: u64 [sp + 0x8] = a0\n  1385: a0 = u64 [sp + 0xe0]\n  1389: u64 [sp + 0x10] = a0\n  1392: a0 = u64 [sp + 0x18]\n  1395: u64 [sp + 0xc0] = a0\n  1399: a0 = u64 [sp + 0x20]\n  1402: u64 [sp + 0xc8] = a0\n  1406: a0 = u64 [sp + 0x30]\n  1409: u64 [sp + 0xd0] = a0\n  1413: a0 = 0x80\n  1417: a1 = sp + 0xc0\n  1421: a2 = u64 [sp + 0x38]\n  1424: u64 [sp + 0xd8] = a2\n  1428: ra = 20, jump @9\n      : @35 [@dyn 10] (gas: 10)\n  1433: u64 [sp + 0xb8] = s1\n  1437: a0 = u64 [sp + 0x28]\n  1440: u64 [sp + 0xb0] = a0\n  1444: a0 = u64 [sp + 0x8]\n  1447: u64 [sp + 0xa8] = a0\n  1451: a0 = 0xa0\n  1455: a1 = sp + a0\n  1458: a2 = u64 [sp + 0x10]\n  1461: u64 [sp + 0xa0] = a2\n  1465: ra = 22, jump @9\n      : @36 [@dyn 11] (gas: 3)\n  1470: a0 = sp + 0x80\n  1474: a1 = 0x40\n  1477: ra = 24, jump @7\n      : @37 [@dyn 12] (gas: 12)\n  1482: a0 = u64 [sp + 0x98]\n  1486: a1 = u64 [sp + 0x90]\n  1490: a2 = u64 [sp + 0x88]\n  1494: s1 = u64 [sp + 0x80]\n  1498: a0 = a0 | a2\n  1501: a2 = s1 | a1\n  1504: a2 = a2 | a0\n  1507: a2 = a2 >> 0x20\n  1510: a0 = a0 | a1\n  1513: a0 = a0 << 0x20\n  1516: a0 = a0 | a2\n  1519: jump @42 if a0 == 0\n      : @38 (gas: 1)\n  1522: trap\n      : @39 (gas: 4)\n  1523: a1 = 0x20070\n  1528: i32 a1 = a1 + 0\n  1530: a0 = 0x1\n  1533: jump @48\n      : @40 (gas: 4)\n  1536: a1 = 0x20070\n  1541: i32 a1 = a1 + 0\n  1543: a0 = 0x1\n  1546: jump @48\n      : @41 (gas: 4)\n  1549: a1 = 0x20070\n  1554: i32 a1 = a1 + 0\n  1556: a0 = 0x1\n  1559: jump @48\n      : @42 (gas: 3)\n  1562: a0 = s1\n  1564: a1 = 0\n  1566: ra = 26, jump @15\n      : @43 [@dyn 13] (gas: 7)\n  1571: i32 a0 = a0 + 0\n  1573: a1 = 0\n  1575: a2 = 0\n  1577: ecalli 2 // 'call_data_copy'\n  1579: a0 = sp + 0x60\n  1582: a1 = 0x80\n  1586: ra = 28, jump @7\n      : @44 [@dyn 14] (gas: 13)\n  1591: a0 = u64 [sp + 0x78]\n  1594: a4 = 0x30090\n  1599: u64 [sp + 0x38] = a4\n  1602: a1 = u64 [sp + 0x70]\n  1605: a2 = u64 [sp + 0x68]\n  1608: a3 = u64 [sp + 0x60]\n  1611: u64 [0x300a8] = a0\n  1616: u64 [0x300a0] = a1\n  1621: u64 [0x30098] = a2\n  1626: u64 [0x30090] = a3\n  1631: a0 = sp + 0x40\n  1634: a1 = 0xa0\n  1638: ra = 30, jump @7\n      : @45 [@dyn 15] (gas: 10)\n  1643: a0 = u64 [sp + 0x58]\n  1646: a1 = u64 [sp + 0x50]\n  1649: a2 = u64 [sp + 0x48]\n  1652: a3 = u64 [sp + 0x40]\n  1655: a4 = u64 [sp + 0x38]\n  1658: u64 [a4 + 0x38] = a0\n  1661: u64 [a4 + 0x30] = a1\n  1664: u64 [a4 + 0x28] = a2\n  1667: u64 [a4 + 0x20] = a3\n  1670: jump @5\n      : @46 (gas: 3)\n  1673: a0 = s1\n  1675: a1 = 0\n  1677: ra = 32, jump @15\n      : @47 [@dyn 16] (gas: 6)\n  1682: i32 a1 = a0 + 0\n  1684: a0 = 0\n  1686: a2 = 0\n  1688: ra = 0x22\n  1691: ecalli 14 // 'seal_return'\n  1693: jump @49\n      : @48 (gas: 4)\n  1695: a2 = 0\n  1697: ra = 0x22\n  1700: ecalli 14 // 'seal_return'\n  1702: fallthrough\n      : @49 [@dyn 17] (gas: 19)\n  1703: sp = sp + 0xfffffffffffff808\n  1707: a0 = sp + 0x700\n  1711: u64 [a0 + 0xf0] = ra\n  1715: u64 [a0 + 0xe8] = s0\n  1719: u64 [a0 + 0xe0] = s1\n  1723: s0 = sp + 0x7f8\n  1727: sp = sp + 0xfffffffffffffc18\n  1731: sp = sp & 0xffffffffffffffe0\n  1734: s1 = sp\n  1736: a2 = s1 + 0x7ff\n  1740: a2 = a2 + 0x11\n  1743: u64 [a2 + 232] = 0\n  1747: u64 [a2 + 224] = 0\n  1751: u64 [a2 + 208] = 0x80\n  1757: a0 = 0x40\n  1760: a1 = s1 + 0x7ff\n  1764: a1 = a1 + 0xe1\n  1768: u64 [a2 + 216] = 0\n  1772: ra = 36, jump @9\n      : @50 [@dyn 18] (gas: 4)\n  1777: a0 = 0x20064\n  1782: u64 [s1 + 0x98] = a0\n  1786: a0 = i32 [0x20064]\n  1791: jump @52 if a0 >=u 4\n      : @51 (gas: 1)\n  1795: jump @257\n      : @52 (gas: 6)\n  1798: a0 = s1 + 0x1000\n  1802: i32 a0 = a0 + 0xfffffffffffff900\n  1806: a1 = 0\n  1808: ra = 0x26\n  1811: ecalli 3 // 'call_data_load'\n  1813: fallthrough\n      : @53 [@dyn 19] (gas: 4)\n  1814: a2 = s1 + 0x7ff\n  1818: a2 = a2 + 0x11\n  1821: a0 = i32 [a2 + 0x10c]\n  1825: jump @189 if a0 == 2205082048\n      : @54 (gas: 1)\n  1833: jump @113 if a0 == 2399083160\n      : @55 (gas: 1)\n  1841: jump @164 if a0 == 2915661614\n      : @56 (gas: 1)\n  1849: jump @129 if a0 == 3265688288\n      : @57 (gas: 1)\n  1857: jump @77 if a0 == 4142735383\n      : @58 (gas: 1)\n  1865: jump @98 if a0 == 4236126317\n      : @59 (gas: 1)\n  1873: jump @86 if a0 == 925171883\n      : @60 (gas: 1)\n  1881: jump @120 if a0 != 1302766934\n      : @61 (gas: 9)\n  1889: u64 [a2 + 392] = 0\n  1893: u64 [a2 + 384] = 0\n  1897: u64 [a2 + 376] = 0\n  1901: u64 [a2 + 368] = 0\n  1905: a0 = s1 + 0x1000\n  1909: i32 a0 = a0 + 0xfffffffffffff980\n  1913: ra = 0x28\n  1916: ecalli 17 // 'value_transferred'\n  1918: fallthrough\n      : @62 [@dyn 20] (gas: 4)\n  1919: a3 = s1 + 0x7ff\n  1923: a3 = a3 + 0x11\n  1926: a4 = a3 + 0x100\n  1930: t0 = 42, jump @444\n      : @63 [@dyn 21] (gas: 1)\n  1935: jump @196 if a0 != 0\n      : @64 (gas: 3)\n  1939: a0 = u64 [s1 + 0x98]\n  1943: a0 = i32 [a0]\n  1945: jump @197 if a0 <=u 35\n      : @65 (gas: 2)\n  1950: a0 = s1 + 0x260\n  1954: ra = 44, jump @274\n      : @66 [@dyn 22] (gas: 11)\n  1959: a3 = s1 + 0x200\n  1963: a0 = u64 [a3 + 0x60]\n  1966: a1 = u64 [a3 + 0x68]\n  1969: a2 = u32 [s1 + 0x270]\n  1973: u64 [s1 + 600] = 0\n  1977: u64 [a3 + 0x50] = a2\n  1980: u64 [a3 + 0x48] = a1\n  1983: a1 = s1 + 0x240\n  1987: u64 [a3 + 0x40] = a0\n  1990: a0 = 0\n  1992: ra = 46, jump @9\n      : @67 [@dyn 23] (gas: 7)\n  1997: u64 [s1 + 568] = 0\n  2001: u64 [s1 + 560] = 0\n  2005: u64 [s1 + 552] = 0\n  2009: a0 = 0x20\n  2012: a1 = s1 + 0x220\n  2016: u64 [s1 + 544] = 0\n  2020: ra = 48, jump @9\n      : @68 [@dyn 24] (gas: 2)\n  2025: a1 = i32 [0x20068]\n  2030: jump @70 if a1 >u 63\n      : @69 (gas: 2)\n  2034: u32 [0x20068] = 0x40\n  2040: fallthrough\n      : @70 (gas: 13)\n  2041: a0 = sp + 0xffffffffffffffe0\n  2044: a2 = a0 & 0xffffffffffffffe0\n  2047: u64 [s1 + 0x98] = a2\n  2051: sp = a2\n  2053: a0 = 0x20070\n  2058: i32 a0 = a0 + 0\n  2060: i32 a2 = a2 + 0\n  2062: a1 = 0x40\n  2065: ra = 0x32\n  2068: ecalli 9 // 'hash_keccak_256'\n  2070: a3 = u64 [s1 + 0x98]\n  2074: t0 = 0x34\n  2077: jump @440\n      : @71 [@dyn 25] (gas: 2)\n  2080: a3 = u64 [s1 + 0x98]\n  2084: t0 = 52, jump @440\n      : @72 [@dyn 26] (gas: 8)\n  2089: u64 [a5 + 0xa8] = a3\n  2093: u64 [a5 + 0xa0] = a2\n  2097: u64 [a5 + 0x98] = a1\n  2101: u64 [a5 + 0x90] = a0\n  2105: a0 = s1 + 0x200\n  2109: a1 = s1 + 0x7ff\n  2113: a1 = a1 + 0x1a1\n  2117: ra = 54, jump @11\n      : @73 [@dyn 27] (gas: 12)\n  2122: a1 = s1 + 0x200\n  2126: a0 = u64 [a1 + 0x18]\n  2129: u64 [s1 + 0x98] = a0\n  2133: a0 = u64 [a1 + 0x10]\n  2136: u64 [s1 + 0x90] = a0\n  2140: a0 = u64 [a1 + 0x8]\n  2143: u64 [s1 + 0x88] = a0\n  2147: a0 = u64 [a1]\n  2149: u64 [s1 + 0x80] = a0\n  2153: a0 = s1 + 0x1e0\n  2157: a1 = 0x40\n  2160: ra = 56, jump @7\n      : @74 [@dyn 28] (gas: 6)\n  2165: a4 = s1 + 0x100\n  2169: a0 = u64 [a4 + 0xf8]\n  2173: a1 = u64 [a4 + 0xf0]\n  2177: a2 = u64 [a4 + 0xe8]\n  2181: a3 = u64 [a4 + 0xe0]\n  2185: t0 = 58, jump @437\n      : @75 [@dyn 29] (gas: 1)\n  2190: jump @195 if a0 != 0\n      : @76 (gas: 14)\n  2194: a0 = u64 [s1 + 0x80]\n  2198: a2 = s1 + 0x100\n  2202: u64 [a2 + 0xc0] = a0\n  2206: a0 = u64 [s1 + 0x88]\n  2210: u64 [a2 + 0xc8] = a0\n  2214: a0 = u64 [s1 + 0x90]\n  2218: u64 [a2 + 0xd0] = a0\n  2222: a1 = s1 + 0x1c0\n  2226: a0 = u64 [s1 + 0x98]\n  2230: u64 [a2 + 0xd8] = a0\n  2234: a0 = a3\n  2236: u64 [s1 + 0x98] = a3\n  2240: ra = 0x6a\n  2243: jump @9\n      : @77 (gas: 8)\n  2246: u64 [a2 + 872] = 0\n  2250: u64 [a2 + 864] = 0\n  2254: u64 [a2 + 856] = 0\n  2258: u64 [a2 + 848] = 0\n  2262: a0 = s1 + 0x1000\n  2266: i32 a0 = a0 + 0xfffffffffffffb60\n  2270: ecalli 17 // 'value_transferred'\n  2272: fallthrough\n      : @78 (gas: 11)\n  2273: a3 = s1 + 0x7ff\n  2277: a3 = a3 + 0x11\n  2280: a4 = a3 + 0x300\n  2284: a0 = u64 [a4 + 0x60]\n  2287: a1 = u64 [a4 + 0x68]\n  2290: a2 = u64 [a4 + 0x58]\n  2293: a3 = u64 [a4 + 0x50]\n  2296: a1 = a1 | a2\n  2299: a0 = a0 | a3\n  2302: a0 = a0 | a1\n  2305: jump @198 if a0 != 0\n      : @79 (gas: 3)\n  2309: a0 = u64 [s1 + 0x98]\n  2313: a0 = i32 [a0]\n  2315: jump @199 if a0 <=u 35\n      : @80 (gas: 3)\n  2320: a0 = s1 + 0x7ff\n  2324: a0 = a0 + 0x1\n  2327: ra = 60, jump @274\n      : @81 [@dyn 30] (gas: 15)\n  2332: a0 = s1 + 0x1000\n  2336: a2 = u64 [a0 + 0xfffffffffffff800]\n  2340: a0 = s1 + 0x1000\n  2344: a0 = u64 [a0 + 0xfffffffffffff808]\n  2348: a3 = s1 + 0x7ff\n  2352: a3 = a3 + 0x11\n  2355: a1 = u64 [a3]\n  2357: a3 = u64 [a3 + 0x8]\n  2360: u64 [s1 + 0x7d8] = a3\n  2364: u64 [s1 + 0x7d0] = a1\n  2368: u64 [s1 + 0x7c8] = a0\n  2372: a0 = s1 + 0x7e0\n  2376: a1 = s1 + 0x7c0\n  2380: u64 [s1 + 0x7c0] = a2\n  2384: ra = 62, jump @362\n      : @82 [@dyn 31] (gas: 11)\n  2389: a0 = u64 [s1 + 0x7f8]\n  2393: u64 [s1 + 0x98] = a0\n  2397: a0 = u64 [s1 + 0x7f0]\n  2401: u64 [s1 + 0x90] = a0\n  2405: a0 = u64 [s1 + 0x7e8]\n  2409: u64 [s1 + 0x88] = a0\n  2413: a0 = u64 [s1 + 0x7e0]\n  2417: u64 [s1 + 0x80] = a0\n  2421: a0 = s1 + 0x7a0\n  2425: a1 = 0x40\n  2428: ra = 64, jump @7\n      : @83 [@dyn 32] (gas: 6)\n  2433: a4 = s1 + 0x700\n  2437: a0 = u64 [a4 + 0xb8]\n  2441: a1 = u64 [a4 + 0xb0]\n  2445: a2 = u64 [a4 + 0xa8]\n  2449: a3 = u64 [a4 + 0xa0]\n  2453: t0 = 66, jump @437\n      : @84 [@dyn 33] (gas: 1)\n  2458: jump @195 if a0 != 0\n      : @85 (gas: 14)\n  2462: a0 = u64 [s1 + 0x80]\n  2466: a2 = s1 + 0x700\n  2470: u64 [a2 + 0x80] = a0\n  2474: a0 = u64 [s1 + 0x88]\n  2478: u64 [a2 + 0x88] = a0\n  2482: a0 = u64 [s1 + 0x90]\n  2486: u64 [a2 + 0x90] = a0\n  2490: a1 = s1 + 0x780\n  2494: a0 = u64 [s1 + 0x98]\n  2498: u64 [a2 + 0x98] = a0\n  2502: a0 = a3\n  2504: u64 [s1 + 0x98] = a3\n  2508: ra = 0x6a\n  2511: jump @9\n      : @86 (gas: 8)\n  2514: u64 [a2 + 360] = 0\n  2518: u64 [a2 + 352] = 0\n  2522: u64 [a2 + 344] = 0\n  2526: u64 [a2 + 336] = 0\n  2530: a0 = s1 + 0x1000\n  2534: i32 a0 = a0 + 0xfffffffffffff960\n  2538: ecalli 17 // 'value_transferred'\n  2540: fallthrough\n      : @87 (gas: 11)\n  2541: a3 = s1 + 0x7ff\n  2545: a3 = a3 + 0x11\n  2548: a4 = a3 + 0x100\n  2552: a0 = u64 [a4 + 0x60]\n  2555: a1 = u64 [a4 + 0x68]\n  2558: a2 = u64 [a4 + 0x58]\n  2561: a3 = u64 [a4 + 0x50]\n  2564: a1 = a1 | a2\n  2567: a0 = a0 | a3\n  2570: a0 = a0 | a1\n  2573: jump @200 if a0 != 0\n      : @88 (gas: 4)\n  2577: a0 = u64 [s1 + 0x98]\n  2581: a0 = i32 [a0]\n  2583: a1 = 0x3\n  2586: jump @201 if a1 >=u a0\n      : @89 (gas: 1)\n  2590: ra = 68, jump @0\n      : @90 [@dyn 34] (gas: 14)\n  2595: a1 = u64 [0x300b8]\n  2600: u64 [s1 + 0x98] = a1\n  2604: a1 = u64 [0x300b0]\n  2609: u64 [s1 + 0x90] = a1\n  2613: a0 = u32 [0x300c0]\n  2618: u64 [s1 + 0x88] = a0\n  2622: a0 = 0x30070\n  2627: u64 [s1 + 0x80] = a0\n  2631: i32 a0 = a0 + 0\n  2633: ra = 0x46\n  2636: ecalli 5 // 'caller'\n  2638: a2 = u64 [s1 + 0x80]\n  2642: t0 = 0x48\n  2645: jump @439\n      : @91 [@dyn 35] (gas: 2)\n  2648: a2 = u64 [s1 + 0x80]\n  2652: t0 = 72, jump @439\n      : @92 [@dyn 36] (gas: 9)\n  2657: a2 = u64 [s1 + 0x88]\n  2661: a1 = a1 ^ a2\n  2664: a2 = u64 [s1 + 0x90]\n  2668: a0 = a0 ^ a2\n  2671: a0 = a0 | a1\n  2674: a1 = u64 [s1 + 0x98]\n  2678: a1 = a1 ^ a3\n  2681: a0 = a0 | a1\n  2684: jump @202 if a0 != 0\n      : @93 (gas: 2)\n  2688: a0 = s1 + 0x180\n  2692: ra = 74, jump @300\n      : @94 [@dyn 37] (gas: 11)\n  2697: a0 = u64 [s1 + 0x198]\n  2701: u64 [s1 + 0x98] = a0\n  2705: a0 = u64 [s1 + 0x190]\n  2709: u64 [s1 + 0x90] = a0\n  2713: a0 = u64 [s1 + 0x188]\n  2717: u64 [s1 + 0x88] = a0\n  2721: a0 = u64 [s1 + 0x180]\n  2725: u64 [s1 + 0x80] = a0\n  2729: a0 = s1 + 0x160\n  2733: a1 = 0x40\n  2736: ra = 76, jump @7\n      : @95 [@dyn 38] (gas: 6)\n  2741: a4 = s1 + 0x100\n  2745: a0 = u64 [a4 + 0x78]\n  2748: a1 = u64 [a4 + 0x70]\n  2751: a2 = u64 [a4 + 0x68]\n  2754: a3 = u64 [a4 + 0x60]\n  2757: t0 = 78, jump @437\n      : @96 [@dyn 39] (gas: 1)\n  2762: jump @195 if a0 != 0\n      : @97 (gas: 14)\n  2766: a0 = u64 [s1 + 0x80]\n  2770: a2 = s1 + 0x100\n  2774: u64 [a2 + 0x40] = a0\n  2777: a0 = u64 [s1 + 0x88]\n  2781: u64 [a2 + 0x48] = a0\n  2784: a0 = u64 [s1 + 0x90]\n  2788: u64 [a2 + 0x50] = a0\n  2791: a1 = s1 + 0x140\n  2795: a0 = u64 [s1 + 0x98]\n  2799: u64 [a2 + 0x58] = a0\n  2802: a0 = a3\n  2804: u64 [s1 + 0x98] = a3\n  2808: ra = 0x6a\n  2811: jump @9\n      : @98 (gas: 9)\n  2814: u64 [a2 + 904] = 0\n  2818: u64 [a2 + 896] = 0\n  2822: u64 [a2 + 888] = 0\n  2826: u64 [a2 + 880] = 0\n  2830: a0 = s1 + 0x1000\n  2834: i32 a0 = a0 + 0xfffffffffffffb80\n  2838: ra = 0x50\n  2841: ecalli 17 // 'value_transferred'\n  2843: fallthrough\n      : @99 [@dyn 40] (gas: 4)\n  2844: a3 = s1 + 0x7ff\n  2848: a3 = a3 + 0x11\n  2851: a4 = a3 + 0x300\n  2855: t0 = 82, jump @444\n      : @100 [@dyn 41] (gas: 1)\n  2860: jump @206 if a0 != 0\n      : @101 (gas: 3)\n  2864: a0 = u64 [s1 + 0x98]\n  2868: a0 = i32 [a0]\n  2870: jump @207 if a0 <=u 35\n      : @102 (gas: 3)\n  2875: a0 = s1 + 0x7ff\n  2879: a0 = a0 + 0xc1\n  2883: ra = 84, jump @274\n      : @103 [@dyn 42] (gas: 13)\n  2888: a3 = s1 + 0x7ff\n  2892: a3 = a3 + 0x11\n  2895: a0 = u64 [a3 + 0xb0]\n  2899: a1 = u64 [a3 + 0xb8]\n  2903: a2 = u32 [a3 + 0xc0]\n  2907: u64 [a3 + 168] = 0\n  2911: u64 [a3 + 0xa0] = a2\n  2915: u64 [a3 + 0x98] = a1\n  2919: a1 = s1 + 0x7ff\n  2923: a1 = a1 + 0xa1\n  2927: u64 [a3 + 0x90] = a0\n  2931: a0 = 0\n  2933: ra = 86, jump @9\n      : @104 [@dyn 43] (gas: 11)\n  2938: a0 = s1 + 0x7ff\n  2942: a0 = a0 + 0x11\n  2945: u64 [a0 + 136] = 0\n  2949: u64 [a0 + 128] = 0\n  2953: u64 [a0 + 120] = 0\n  2956: a2 = a0\n  2958: a0 = 0x20\n  2961: a1 = s1 + 0x7ff\n  2965: a1 = a1 + 0x81\n  2969: u64 [a2 + 112] = 0\n  2972: ra = 88, jump @9\n      : @105 [@dyn 44] (gas: 2)\n  2977: a1 = i32 [0x20068]\n  2982: jump @107 if a1 >u 63\n      : @106 (gas: 2)\n  2986: u32 [0x20068] = 0x40\n  2992: fallthrough\n      : @107 (gas: 13)\n  2993: a0 = sp + 0xffffffffffffffe0\n  2996: a2 = a0 & 0xffffffffffffffe0\n  2999: u64 [s1 + 0x98] = a2\n  3003: sp = a2\n  3005: a0 = 0x20070\n  3010: i32 a0 = a0 + 0\n  3012: i32 a2 = a2 + 0\n  3014: a1 = 0x40\n  3017: ra = 0x5a\n  3020: ecalli 9 // 'hash_keccak_256'\n  3022: a3 = u64 [s1 + 0x98]\n  3026: t0 = 0x5c\n  3029: jump @441\n      : @108 [@dyn 45] (gas: 2)\n  3032: a3 = u64 [s1 + 0x98]\n  3036: t0 = 92, jump @441\n      : @109 [@dyn 46] (gas: 10)\n  3041: a5 = a4 + 0x300\n  3045: u64 [a5 + 0xa8] = a3\n  3049: u64 [a5 + 0xa0] = a2\n  3053: u64 [a5 + 0x98] = a1\n  3057: u64 [a5 + 0x90] = a0\n  3061: a0 = s1 + 0x7ff\n  3065: a0 = a0 + 0x61\n  3068: a1 = s1 + 0x7ff\n  3072: a1 = a1 + 0x3a1\n  3076: ra = 94, jump @11\n      : @110 [@dyn 47] (gas: 14)\n  3081: a1 = s1 + 0x7ff\n  3085: a1 = a1 + 0x11\n  3088: a0 = u64 [a1 + 0x68]\n  3091: u64 [s1 + 0x98] = a0\n  3095: a0 = u64 [a1 + 0x60]\n  3098: u64 [s1 + 0x90] = a0\n  3102: a0 = u64 [a1 + 0x58]\n  3105: u64 [s1 + 0x88] = a0\n  3109: a0 = u64 [a1 + 0x50]\n  3112: u64 [s1 + 0x80] = a0\n  3116: a0 = s1 + 0x7ff\n  3120: a0 = a0 + 0x41\n  3123: a1 = 0x40\n  3126: ra = 96, jump @7\n      : @111 [@dyn 48] (gas: 14)\n  3131: a3 = s1 + 0x7ff\n  3135: a3 = a3 + 0x11\n  3138: a0 = u64 [a3 + 0x48]\n  3141: a1 = u64 [a3 + 0x40]\n  3144: a2 = u64 [a3 + 0x38]\n  3147: a4 = u64 [a3 + 0x30]\n  3150: a0 = a0 | a2\n  3153: a2 = a4 | a1\n  3156: a2 = a2 | a0\n  3159: a2 = a2 >> 0x20\n  3162: a0 = a0 | a1\n  3165: a0 = a0 << 0x20\n  3168: a0 = a0 | a2\n  3171: jump @195 if a0 != 0\n      : @112 (gas: 14)\n  3175: a0 = u64 [s1 + 0x80]\n  3179: u64 [a3 + 0x10] = a0\n  3182: a0 = u64 [s1 + 0x88]\n  3186: u64 [a3 + 0x18] = a0\n  3189: a0 = u64 [s1 + 0x90]\n  3193: u64 [a3 + 0x20] = a0\n  3196: a1 = s1 + 0x7ff\n  3200: a1 = a1 + 0x21\n  3203: a0 = u64 [s1 + 0x98]\n  3207: u64 [a3 + 0x28] = a0\n  3210: a0 = a4\n  3212: u64 [s1 + 0x98] = a4\n  3216: ra = 0x6a\n  3219: jump @9\n      : @113 (gas: 8)\n  3222: u64 [a2 + 552] = 0\n  3226: u64 [a2 + 544] = 0\n  3230: u64 [a2 + 536] = 0\n  3234: u64 [a2 + 528] = 0\n  3238: a0 = s1 + 0x1000\n  3242: i32 a0 = a0 + 0xfffffffffffffa20\n  3246: ecalli 17 // 'value_transferred'\n  3248: fallthrough\n      : @114 (gas: 11)\n  3249: a3 = s1 + 0x7ff\n  3253: a3 = a3 + 0x11\n  3256: a4 = a3 + 0x200\n  3260: a0 = u64 [a4 + 0x20]\n  3263: a1 = u64 [a4 + 0x28]\n  3266: a2 = u64 [a4 + 0x18]\n  3269: a3 = u64 [a4 + 0x10]\n  3272: a1 = a1 | a2\n  3275: a0 = a0 | a3\n  3278: a0 = a0 | a1\n  3281: jump @208 if a0 != 0\n      : @115 (gas: 3)\n  3285: a0 = u64 [s1 + 0x98]\n  3289: a0 = i32 [a0]\n  3291: jump @209 if a0 <=u 3\n      : @116 (gas: 3)\n  3296: a0 = s1 + 0x320\n  3300: a1 = 0x40\n  3303: ra = 98, jump @7\n      : @117 [@dyn 49] (gas: 10)\n  3308: a1 = s1 + 0x300\n  3312: a0 = u64 [a1 + 0x38]\n  3315: u64 [s1 + 0x98] = a0\n  3319: a0 = u64 [a1 + 0x30]\n  3322: u64 [s1 + 0x90] = a0\n  3326: a0 = u64 [a1 + 0x28]\n  3329: u64 [s1 + 0x80] = a0\n  3333: a0 = u64 [a1 + 0x20]\n  3336: u64 [s1 + 0x88] = a0\n  3340: ra = 100, jump @0\n      : @118 [@dyn 50] (gas: 13)\n  3345: a0 = u64 [s1 + 0x98]\n  3349: a1 = u64 [s1 + 0x80]\n  3353: a0 = a0 | a1\n  3356: a1 = u64 [s1 + 0x88]\n  3360: a4 = a1\n  3362: a2 = u64 [s1 + 0x90]\n  3366: a1 = a1 | a2\n  3369: a1 = a1 | a0\n  3372: a1 = a1 >> 0x20\n  3375: a0 = a0 | a2\n  3378: a0 = a0 << 0x20\n  3381: a0 = a0 | a1\n  3384: jump @195 if a0 != 0\n      : @119 (gas: 13)\n  3388: a2 = u64 [0x30090]\n  3393: a1 = u64 [0x30098]\n  3398: a3 = u64 [0x300a0]\n  3403: a0 = u64 [0x300a8]\n  3408: a5 = s1 + 0x300\n  3412: u64 [a5 + 0x18] = a0\n  3415: u64 [a5 + 0x10] = a3\n  3418: u64 [a5 + 0x8] = a1\n  3421: a1 = s1 + 0x300\n  3425: u64 [a5] = a2\n  3427: a0 = a4\n  3429: ra = 0xcc\n  3433: jump @9\n      : @120 (gas: 1)\n  3436: jump @210 if a0 != 1872738698\n      : @121 (gas: 8)\n  3444: u64 [a2 + 456] = 0\n  3448: u64 [a2 + 448] = 0\n  3452: u64 [a2 + 440] = 0\n  3456: u64 [a2 + 432] = 0\n  3460: a0 = s1 + 0x1000\n  3464: i32 a0 = a0 + 0xfffffffffffff9c0\n  3468: ecalli 17 // 'value_transferred'\n  3470: fallthrough\n      : @122 (gas: 11)\n  3471: a3 = s1 + 0x7ff\n  3475: a3 = a3 + 0x11\n  3478: a4 = a3 + 0x100\n  3482: a0 = u64 [a4 + 0xc0]\n  3486: a1 = u64 [a4 + 0xc8]\n  3490: a2 = u64 [a4 + 0xb8]\n  3494: a3 = u64 [a4 + 0xb0]\n  3498: a1 = a1 | a2\n  3501: a0 = a0 | a3\n  3504: a0 = a0 | a1\n  3507: jump @214 if a0 != 0\n      : @123 (gas: 3)\n  3511: a0 = u64 [s1 + 0x98]\n  3515: a0 = i32 [a0]\n  3517: jump @215 if a0 <=u 3\n      : @124 (gas: 17)\n  3522: a0 = s1 + 0x1000\n  3526: i32 a0 = a0 + 0xfffffffffffff9e0\n  3530: ecalli 0 // 'balance'\n  3531: a0 = s1 + 0x7ff\n  3535: a0 = a0 + 0x11\n  3538: a2 = a0 + 0x100\n  3542: a1 = u64 [a2 + 0xe8]\n  3546: u64 [s1 + 0x98] = a1\n  3550: a1 = u64 [a2 + 0xe0]\n  3554: u64 [s1 + 0x90] = a1\n  3558: a1 = u64 [a2 + 0xd8]\n  3562: u64 [s1 + 0x88] = a1\n  3566: a0 = u64 [a2 + 0xd0]\n  3570: u64 [s1 + 0x80] = a0\n  3574: a0 = s1 + 0x2a0\n  3578: a1 = 0x40\n  3581: ra = 102, jump @7\n      : @125 [@dyn 51] (gas: 6)\n  3586: a4 = s1 + 0x200\n  3590: a0 = u64 [a4 + 0xb8]\n  3594: a1 = u64 [a4 + 0xb0]\n  3598: a2 = u64 [a4 + 0xa8]\n  3602: a3 = u64 [a4 + 0xa0]\n  3606: t0 = 104, jump @437\n      : @126 [@dyn 52] (gas: 1)\n  3611: jump @195 if a0 != 0\n      : @127 (gas: 13)\n  3615: a0 = u64 [s1 + 0x80]\n  3619: a2 = s1 + 0x200\n  3623: u64 [a2 + 0x80] = a0\n  3627: a0 = u64 [s1 + 0x88]\n  3631: u64 [a2 + 0x88] = a0\n  3635: a0 = u64 [s1 + 0x90]\n  3639: u64 [a2 + 0x90] = a0\n  3643: a1 = s1 + 0x280\n  3647: a0 = u64 [s1 + 0x98]\n  3651: u64 [a2 + 0x98] = a0\n  3655: a0 = a3\n  3657: u64 [s1 + 0x98] = a3\n  3661: ra = 106, jump @9\n      : @128 [@dyn 53] (gas: 4)\n  3666: a1 = 0x20\n  3669: a0 = u64 [s1 + 0x98]\n  3673: ra = 0xce\n  3677: jump @15\n      : @129 (gas: 9)\n  3680: u64 [a2 + 648] = 0\n  3684: u64 [a2 + 640] = 0\n  3688: u64 [a2 + 632] = 0\n  3692: u64 [a2 + 624] = 0\n  3696: a0 = s1 + 0x1000\n  3700: i32 a0 = a0 + 0xfffffffffffffa80\n  3704: ra = 0x6c\n  3707: ecalli 17 // 'value_transferred'\n  3709: fallthrough\n      : @130 [@dyn 54] (gas: 4)\n  3710: a3 = s1 + 0x7ff\n  3714: a3 = a3 + 0x11\n  3717: a4 = a3 + 0x200\n  3721: t0 = 110, jump @444\n      : @131 [@dyn 55] (gas: 1)\n  3726: jump @216 if a0 != 0\n      : @132 (gas: 3)\n  3730: a0 = u64 [s1 + 0x98]\n  3734: a0 = i32 [a0]\n  3736: jump @217 if a0 <=u 67\n      : @133 (gas: 2)\n  3741: a0 = s1 + 0x760\n  3745: ra = 112, jump @274\n      : @134 [@dyn 56] (gas: 25)\n  3750: a1 = s1 + 0x700\n  3754: a0 = u64 [a1 + 0x78]\n  3757: u64 [s1 + 0x20] = a0\n  3760: a0 = u64 [a1 + 0x70]\n  3763: u64 [s1 + 0x58] = a0\n  3766: a0 = u64 [a1 + 0x68]\n  3769: u64 [s1 + 0x70] = a0\n  3772: a0 = u64 [a1 + 0x60]\n  3775: u64 [s1 + 0x78] = a0\n  3778: a0 = s1 + 0x1000\n  3782: i32 a0 = a0 + 0xfffffffffffffaa0\n  3786: a1 = 0x24\n  3789: ecalli 3 // 'call_data_load'\n  3791: a0 = s1 + 0x7ff\n  3795: a0 = a0 + 0x11\n  3798: a2 = a0 + 0x200\n  3802: a1 = u64 [a2 + 0xa8]\n  3806: u64 [s1 + 0x98] = a1\n  3810: a1 = u64 [a2 + 0xa0]\n  3814: u64 [s1 + 0x90] = a1\n  3818: a1 = u64 [a2 + 0x98]\n  3822: u64 [s1 + 0x88] = a1\n  3826: a0 = u64 [a2 + 0x90]\n  3830: u64 [s1 + 0x80] = a0\n  3834: ra = 114, jump @0\n      : @135 [@dyn 57] (gas: 11)\n  3839: a1 = u64 [0x300b8]\n  3844: u64 [s1 + 0x68] = a1\n  3847: a1 = u64 [0x300b0]\n  3852: u64 [s1 + 0x50] = a1\n  3855: a0 = u32 [0x300c0]\n  3860: u64 [s1 + 0x48] = a0\n  3863: a0 = 0x30070\n  3868: u64 [s1 + 0x60] = a0\n  3871: i32 a0 = a0 + 0\n  3873: ecalli 5 // 'caller'\n  3875: fallthrough\n      : @136 (gas: 23)\n  3876: a0 = u64 [s1 + 0x60]\n  3879: t0 = u64 [a0 + 0x8]\n  3882: a4 = u64 [a0]\n  3884: a5 = u32 [a0 + 0x10]\n  3887: a0 = reverse t0\n  3889: a1 = a0 >> 0x20\n  3892: a2 = reverse a4\n  3894: a3 = a2 << 0x20\n  3897: a1 = a1 | a3\n  3900: a0 = a0 << 0x20\n  3903: a3 = reverse a5\n  3905: a3 = a3 >> 0x20\n  3908: a0 = a0 | a3\n  3911: a2 = a2 >> 0x20\n  3914: a3 = u64 [s1 + 0x48]\n  3917: a2 = a2 ^ a3\n  3920: a3 = u64 [s1 + 0x50]\n  3923: a0 = a0 ^ a3\n  3926: a0 = a0 | a2\n  3929: a2 = u64 [s1 + 0x68]\n  3932: a1 = a1 ^ a2\n  3935: a0 = a0 | a1\n  3938: jump @218 if a0 != 0\n      : @137 (gas: 11)\n  3942: u64 [s1 + 0x30] = a5\n  3945: u64 [s1 + 0x38] = t0\n  3948: u64 [s1 + 0x40] = a4\n  3951: a0 = u64 [s1 + 0x90]\n  3955: a1 = u64 [s1 + 0x80]\n  3959: a0 = a0 | a1\n  3962: a1 = u64 [s1 + 0x98]\n  3966: a2 = u64 [s1 + 0x88]\n  3970: a1 = a1 | a2\n  3973: a0 = a0 | a1\n  3976: jump @222 if a0 == 0\n      : @138 (gas: 14)\n  3980: a0 = u64 [s1 + 0x58]\n  3983: a0 = a0 << 0x20\n  3986: a2 = a0 >> 0x20\n  3989: u64 [s1 + 1848] = 0\n  3993: a0 = u64 [s1 + 0x78]\n  3996: a3 = s1 + 0x700\n  4000: u64 [a3 + 0x20] = a0\n  4003: a0 = u64 [s1 + 0x70]\n  4006: u64 [a3 + 0x28] = a0\n  4009: a1 = s1 + 0x720\n  4013: u64 [s1 + 0x48] = a2\n  4016: u64 [a3 + 0x30] = a2\n  4019: a0 = 0\n  4021: ra = 116, jump @9\n      : @139 [@dyn 58] (gas: 7)\n  4026: u64 [s1 + 1816] = 0\n  4030: u64 [s1 + 1808] = 0\n  4034: u64 [s1 + 1800] = 0\n  4038: a0 = 0x20\n  4041: a1 = s1 + 0x700\n  4045: u64 [s1 + 1792] = 0\n  4049: ra = 118, jump @9\n      : @140 [@dyn 59] (gas: 4)\n  4054: a0 = 0x20068\n  4059: u64 [s1 + 0x68] = a0\n  4062: a0 = i32 [0x20068]\n  4067: jump @142 if a0 >u 63\n      : @141 (gas: 3)\n  4071: a1 = u64 [s1 + 0x68]\n  4074: u32 [a1 + 0] = 0x40\n  4077: fallthrough\n      : @142 (gas: 15)\n  4078: a0 = sp + 0xffffffffffffffe0\n  4081: a2 = a0 & 0xffffffffffffffe0\n  4084: u64 [s1 + 0x18] = a2\n  4087: sp = a2\n  4089: a0 = 0x20070\n  4094: u64 [s1 + 0x28] = a0\n  4097: i32 a0 = a0 + 0\n  4099: i32 a2 = a2 + 0\n  4101: a1 = 0x40\n  4104: u64 [s1 + 0x50] = a0\n  4107: ra = 0x78\n  4110: ecalli 9 // 'hash_keccak_256'\n  4112: a3 = u64 [s1 + 0x18]\n  4115: t0 = 0x7a\n  4118: jump @441\n      : @143 [@dyn 60] (gas: 2)\n  4121: a3 = u64 [s1 + 0x18]\n  4124: t0 = 122, jump @441\n      : @144 [@dyn 61] (gas: 9)\n  4129: a5 = a4 + 0x200\n  4133: u64 [a5 + 0xc8] = a3\n  4137: u64 [a5 + 0xc0] = a2\n  4141: u64 [a5 + 0xb8] = a1\n  4145: u64 [a5 + 0xb0] = a0\n  4149: a0 = s1 + 0x6e0\n  4153: a1 = s1 + 0x7ff\n  4157: a1 = a1 + 0x2c1\n  4161: ra = 124, jump @11\n      : @145 [@dyn 62] (gas: 21)\n  4166: a1 = s1 + 0x600\n  4170: a0 = u64 [a1 + 0xf8]\n  4174: t0 = u64 [s1 + 0x6e0]\n  4178: a2 = u64 [a1 + 0xf0]\n  4182: a3 = u64 [a1 + 0xe8]\n  4186: a5 = u64 [s1 + 0x98]\n  4190: a4 = a0 ^ a5\n  4193: a1 = a0 <u a5\n  4196: a0 = u64 [s1 + 0x90]\n  4200: a5 = a2 <u a0\n  4203: a5 = a1 if a4 != 0\n  4206: a1 = u64 [s1 + 0x88]\n  4210: t1 = a3 ^ a1\n  4213: a3 = a3 <u a1\n  4216: a1 = u64 [s1 + 0x80]\n  4220: a1 = t0 <u a1\n  4223: a1 = a3 if t1 != 0\n  4226: a0 = a0 ^ a2\n  4229: a0 = a0 | a4\n  4232: a1 = a5 if a0 != 0\n  4235: jump @226 if a1 != 0\n      : @146 (gas: 10)\n  4239: a0 = u64 [s1 + 0x78]\n  4242: u64 [s1 + 0x6c0] = a0\n  4246: a0 = u64 [s1 + 0x70]\n  4249: u64 [s1 + 0x6c8] = a0\n  4253: a0 = u64 [s1 + 0x58]\n  4256: u64 [s1 + 0x6d0] = a0\n  4260: a0 = s1 + 0x6c0\n  4264: a1 = u64 [s1 + 0x20]\n  4267: u64 [s1 + 0x6d8] = a1\n  4271: ra = 126, jump @416\n      : @147 [@dyn 63] (gas: 11)\n  4276: u64 [s1 + 1720] = 0\n  4280: a0 = u64 [s1 + 0x48]\n  4283: a2 = s1 + 0x600\n  4287: u64 [a2 + 0xb0] = a0\n  4291: a0 = u64 [s1 + 0x70]\n  4294: u64 [a2 + 0xa8] = a0\n  4298: a1 = s1 + 0x6a0\n  4302: a0 = u64 [s1 + 0x78]\n  4305: u64 [a2 + 0xa0] = a0\n  4309: a0 = 0\n  4311: ra = 128, jump @9\n      : @148 [@dyn 64] (gas: 7)\n  4317: u64 [s1 + 1688] = 0\n  4321: u64 [s1 + 1680] = 0\n  4325: u64 [s1 + 1672] = 0\n  4329: a0 = 0x20\n  4332: a1 = s1 + 0x680\n  4336: u64 [s1 + 1664] = 0\n  4340: ra = 130, jump @9\n      : @149 [@dyn 65] (gas: 7)\n  4346: a0 = sp + 0xffffffffffffffe0\n  4349: a0 = a0 & 0xffffffffffffffe0\n  4352: u64 [s1 + 0x58] = a0\n  4355: sp = a0\n  4357: a0 = u64 [s1 + 0x68]\n  4360: a0 = i32 [a0]\n  4362: jump @151 if a0 >u 63\n      : @150 (gas: 3)\n  4366: a1 = u64 [s1 + 0x68]\n  4369: u32 [a1 + 0] = 0x40\n  4372: fallthrough\n      : @151 (gas: 12)\n  4373: a0 = sp + 0xffffffffffffffe0\n  4376: a0 = a0 & 0xffffffffffffffe0\n  4379: u64 [s1 + 0x20] = a0\n  4382: sp = a0\n  4384: i32 a2 = a0 + 0\n  4386: a1 = 0x40\n  4389: a0 = u64 [s1 + 0x50]\n  4392: ra = 0x84\n  4396: ecalli 9 // 'hash_keccak_256'\n  4398: a3 = u64 [s1 + 0x20]\n  4401: t0 = 0x86\n  4405: jump @442\n      : @152 [@dyn 66] (gas: 2)\n  4408: a3 = u64 [s1 + 0x20]\n  4411: t0 = 134, jump @442\n      : @153 [@dyn 67] (gas: 7)\n  4417: a1 = u64 [s1 + 0x58]\n  4420: u64 [a1 + 0x18] = a3\n  4423: u64 [a1 + 0x10] = a2\n  4426: u64 [a1 + 0x8] = a4\n  4429: u64 [a1] = a0\n  4431: a0 = s1 + 0x660\n  4435: ra = 136, jump @11\n      : @154 [@dyn 68] (gas: 20)\n  4441: a3 = u64 [s1 + 0x660]\n  4445: a0 = u64 [s1 + 0x668]\n  4449: a1 = u64 [s1 + 0x670]\n  4453: a2 = u64 [s1 + 0x678]\n  4457: a4 = u64 [s1 + 0x98]\n  4461: u64 [s1 + 0x618] = a4\n  4465: a4 = u64 [s1 + 0x90]\n  4469: u64 [s1 + 0x610] = a4\n  4473: a4 = u64 [s1 + 0x88]\n  4477: u64 [s1 + 0x608] = a4\n  4481: a4 = u64 [s1 + 0x80]\n  4485: u64 [s1 + 0x600] = a4\n  4489: u64 [s1 + 0x638] = a2\n  4493: u64 [s1 + 0x630] = a1\n  4497: u64 [s1 + 0x628] = a0\n  4501: a0 = s1 + 0x640\n  4505: a1 = s1 + 0x620\n  4509: a2 = s1 + 0x600\n  4513: u64 [s1 + 0x620] = a3\n  4517: ra = 138, jump @347\n      : @155 [@dyn 69] (gas: 16)\n  4523: a4 = s1 + 0x600\n  4527: a0 = u64 [a4 + 0x58]\n  4530: a1 = u64 [a4 + 0x50]\n  4533: a2 = u64 [a4 + 0x48]\n  4536: a3 = u64 [a4 + 0x40]\n  4539: a4 = s1 + 0x7ff\n  4543: a4 = a4 + 0x11\n  4546: a5 = a4 + 0x200\n  4550: u64 [a5 + 0xe8] = a0\n  4554: u64 [a5 + 0xe0] = a1\n  4558: u64 [a5 + 0xd8] = a2\n  4562: u64 [a5 + 0xd0] = a3\n  4566: a1 = s1 + 0x7ff\n  4570: a1 = a1 + 0x2e1\n  4574: a0 = u64 [s1 + 0x58]\n  4577: ra = 140, jump @12\n      : @156 [@dyn 70] (gas: 51)\n  4583: ecalli 11 // 'ref_time_left'\n  4585: a2 = u64 [s1 + 0x60]\n  4588: a1 = u64 [s1 + 0x38]\n  4591: u64 [a2 + 0x8] = a1\n  4594: a1 = u64 [s1 + 0x40]\n  4597: u64 [a2] = a1\n  4599: a1 = u64 [s1 + 0x30]\n  4602: u32 [a2 + 0x10] = a1\n  4605: a0 = a0 >u 0x8fc\n  4609: a1 = -a0\n  4611: a3 = s1 + 0x7ff\n  4615: a3 = a3 + 0x11\n  4618: a4 = a3 + 0x300\n  4622: u64 [a4 + 0x48] = a1\n  4625: u64 [a4 + 0x40] = a1\n  4628: u64 [a4 + 0x38] = a1\n  4631: u64 [a4 + 0x30] = a1\n  4634: a1 = u64 [s1 + 0x98]\n  4638: u64 [a4 + 0x8] = a1\n  4641: a1 = u64 [s1 + 0x90]\n  4645: u64 [a4] = a1\n  4647: a1 = u64 [s1 + 0x88]\n  4651: u64 [a3 + 0x2f8] = a1\n  4655: a1 = u64 [s1 + 0x80]\n  4659: u64 [a3 + 0x2f0] = a1\n  4663: u32 [a3 + 784] = 0\n  4667: a1 = a2 << 0x20\n  4670: a1 = a1 >> 0x20\n  4673: a0 = a0 << 0x23\n  4676: a0 = a0 | a1\n  4679: a1 = s1 + 0x7ff\n  4683: a1 = a1 + 0x301\n  4687: a1 = a1 << 0x20\n  4690: a1 = a1 >> 0x20\n  4693: a2 = s1 + 0x7ff\n  4697: a2 = a2 + 0x341\n  4701: a2 = a2 << 0x20\n  4704: a3 = a2 | a1\n  4707: a4 = u64 [s1 + 0x28]\n  4710: a4 = a4 << 0x20\n  4713: a4 = a4 >> 0x20\n  4716: a1 = s1 + 0x7ff\n  4720: a1 = a1 + 0x321\n  4724: a1 = a1 << 0x20\n  4727: a5 = a1 | a4\n  4730: a1 = 0xffffffffffffffff\n  4733: a2 = 0xffffffffffffffff\n  4736: ecalli 1 // 'call'\n  4738: u64 [s1 + 0x60] = a0\n  4741: a0 = s1 + 0x5e0\n  4745: ra = 142, jump @278\n      : @157 [@dyn 71] (gas: 2)\n  4751: a0 = u64 [s1 + 0x60]\n  4754: jump @227 if a0 != 0\n      : @158 (gas: 3)\n  4758: a0 = s1 + 0x5a0\n  4762: a1 = 0x40\n  4765: ra = 144, jump @7\n      : @159 [@dyn 72] (gas: 6)\n  4771: a4 = s1 + 0x500\n  4775: a0 = u64 [a4 + 0xb8]\n  4779: a1 = u64 [a4 + 0xb0]\n  4783: a2 = u64 [a4 + 0xa8]\n  4787: a3 = u64 [a4 + 0xa0]\n  4791: t0 = 146, jump @437\n      : @160 [@dyn 73] (gas: 1)\n  4797: jump @195 if a0 != 0\n      : @161 (gas: 12)\n  4801: a0 = u64 [s1 + 0x80]\n  4805: u64 [s1 + 0x580] = a0\n  4809: a0 = u64 [s1 + 0x88]\n  4813: u64 [s1 + 0x588] = a0\n  4817: a0 = u64 [s1 + 0x90]\n  4821: u64 [s1 + 0x590] = a0\n  4825: a1 = s1 + 0x580\n  4829: a0 = u64 [s1 + 0x98]\n  4833: u64 [s1 + 0x598] = a0\n  4837: a0 = a3\n  4839: u64 [s1 + 0x98] = a3\n  4843: ra = 148, jump @9\n      : @162 [@dyn 74] (gas: 21)\n  4849: u64 [s1 + 1368] = 0\n  4853: a0 = u64 [s1 + 0x48]\n  4856: a4 = s1 + 0x500\n  4860: u64 [a4 + 0x50] = a0\n  4863: a0 = u64 [s1 + 0x70]\n  4866: u64 [a4 + 0x48] = a0\n  4869: a0 = u64 [0x20000]\n  4874: a1 = u64 [0x20008]\n  4879: a2 = u64 [0x20010]\n  4884: a3 = u64 [s1 + 0x78]\n  4887: u64 [a4 + 0x40] = a3\n  4890: u64 [a4 + 0x78] = a0\n  4893: u64 [a4 + 0x70] = a1\n  4896: u64 [a4 + 0x68] = a2\n  4899: a0 = u64 [0x20018]\n  4904: a1 = 0x20\n  4907: a2 = s1 + 0x560\n  4911: a3 = s1 + 0x540\n  4915: u64 [a4 + 0x60] = a0\n  4918: a0 = u64 [s1 + 0x98]\n  4922: ra = 150, jump @13\n      : @163 [@dyn 75] (gas: 5)\n  4928: a0 = 0\n  4930: a1 = u64 [s1 + 0x50]\n  4933: a2 = 0\n  4935: ecalli 14 // 'seal_return'\n  4937: jump @259\n      : @164 (gas: 3)\n  4940: a0 = u64 [s1 + 0x98]\n  4944: a0 = i32 [a0]\n  4946: jump @231 if a0 <=u 67\n      : @165 (gas: 2)\n  4951: a0 = s1 + 0x4e0\n  4955: ra = 152, jump @274\n      : @166 [@dyn 76] (gas: 25)\n  4961: a1 = s1 + 0x400\n  4965: a0 = u64 [a1 + 0xf8]\n  4969: u64 [s1 + 0x60] = a0\n  4972: a0 = u64 [a1 + 0xf0]\n  4976: u64 [s1 + 0x68] = a0\n  4979: a0 = u64 [a1 + 0xe8]\n  4983: u64 [s1 + 0x90] = a0\n  4987: a0 = u64 [a1 + 0xe0]\n  4991: u64 [s1 + 0x98] = a0\n  4995: a0 = s1 + 0x1000\n  4999: i32 a0 = a0 + 0xfffffffffffffa40\n  5003: a1 = 0x24\n  5006: ecalli 3 // 'call_data_load'\n  5008: a1 = s1 + 0x7ff\n  5012: a1 = a1 + 0x11\n  5015: a2 = a1 + 0x200\n  5019: a0 = u64 [a2 + 0x48]\n  5022: u64 [s1 + 0x88] = a0\n  5026: a0 = u64 [a2 + 0x40]\n  5029: u64 [s1 + 0x80] = a0\n  5033: a0 = u64 [a2 + 0x38]\n  5036: u64 [s1 + 0x78] = a0\n  5039: a0 = u64 [a2 + 0x30]\n  5042: u64 [s1 + 0x70] = a0\n  5045: ra = 154, jump @0\n      : @167 [@dyn 77] (gas: 14)\n  5051: a1 = u64 [0x300b8]\n  5056: u64 [s1 + 0x58] = a1\n  5059: a1 = u64 [0x300b0]\n  5064: u64 [s1 + 0x50] = a1\n  5067: a0 = u32 [0x300c0]\n  5072: u64 [s1 + 0x48] = a0\n  5075: a0 = 0x30070\n  5080: u64 [s1 + 0x40] = a0\n  5083: i32 a0 = a0 + 0\n  5085: ra = 0x9c\n  5089: ecalli 5 // 'caller'\n  5091: a2 = u64 [s1 + 0x40]\n  5094: t0 = 0x9e\n  5098: jump @439\n      : @168 [@dyn 78] (gas: 2)\n  5101: a2 = u64 [s1 + 0x40]\n  5104: t0 = 158, jump @439\n      : @169 [@dyn 79] (gas: 9)\n  5110: a2 = u64 [s1 + 0x48]\n  5113: a1 = a1 ^ a2\n  5116: a2 = u64 [s1 + 0x50]\n  5119: a0 = a0 ^ a2\n  5122: a0 = a0 | a1\n  5125: a1 = u64 [s1 + 0x58]\n  5128: a1 = a1 ^ a3\n  5131: a0 = a0 | a1\n  5134: jump @232 if a0 != 0\n      : @170 (gas: 10)\n  5138: a0 = s1 + 0x7ff\n  5142: a0 = a0 + 0x11\n  5145: u64 [a0 + 616] = 0\n  5149: u64 [a0 + 608] = 0\n  5153: u64 [a0 + 600] = 0\n  5157: u64 [a0 + 592] = 0\n  5161: a0 = s1 + 0x1000\n  5165: i32 a0 = a0 + 0xfffffffffffffa60\n  5169: ecalli 17 // 'value_transferred'\n  5171: fallthrough\n      : @171 (gas: 19)\n  5172: a2 = s1 + 0x7ff\n  5176: a2 = a2 + 0x11\n  5179: a3 = a2 + 0x200\n  5183: a0 = u64 [a3 + 0x68]\n  5186: a1 = u64 [a3 + 0x58]\n  5189: t0 = u64 [a2 + 0x250]\n  5193: a2 = u64 [a3 + 0x60]\n  5196: t1 = u64 [s1 + 0x88]\n  5200: a0 = a0 ^ t1\n  5203: a3 = u64 [s1 + 0x78]\n  5206: a1 = a1 ^ a3\n  5209: a0 = a0 | a1\n  5212: a5 = u64 [s1 + 0x80]\n  5216: a1 = a2 ^ a5\n  5219: a4 = u64 [s1 + 0x70]\n  5222: a2 = t0 ^ a4\n  5225: a1 = a1 | a2\n  5228: a0 = a0 | a1\n  5231: jump @236 if a0 != 0\n      : @172 (gas: 4)\n  5235: a0 = a4 | a5\n  5238: a1 = a3 | t1\n  5241: a0 = a0 | a1\n  5244: jump @240 if a0 == 0\n      : @173 (gas: 10)\n  5248: a0 = u64 [s1 + 0x98]\n  5252: u64 [s1 + 0x480] = a0\n  5256: a0 = u64 [s1 + 0x90]\n  5260: u64 [s1 + 0x488] = a0\n  5264: a0 = u64 [s1 + 0x60]\n  5267: u64 [s1 + 0x498] = a0\n  5271: a0 = s1 + 0x480\n  5275: a1 = u64 [s1 + 0x68]\n  5278: u64 [s1 + 0x490] = a1\n  5282: ra = 160, jump @416\n      : @174 [@dyn 80] (gas: 14)\n  5288: a0 = u64 [s1 + 0x68]\n  5291: a0 = a0 << 0x20\n  5294: a0 = a0 >> 0x20\n  5297: u64 [s1 + 1144] = 0\n  5301: u64 [s1 + 0x50] = a0\n  5304: a2 = s1 + 0x400\n  5308: u64 [a2 + 0x70] = a0\n  5311: a0 = u64 [s1 + 0x90]\n  5315: u64 [a2 + 0x68] = a0\n  5318: a1 = s1 + 0x460\n  5322: a0 = u64 [s1 + 0x98]\n  5326: u64 [a2 + 0x60] = a0\n  5329: a0 = 0\n  5331: ra = 162, jump @9\n      : @175 [@dyn 81] (gas: 7)\n  5337: u64 [s1 + 1112] = 0\n  5341: u64 [s1 + 1104] = 0\n  5345: u64 [s1 + 1096] = 0\n  5349: a0 = 0x20\n  5352: a1 = s1 + 0x440\n  5356: u64 [s1 + 1088] = 0\n  5360: ra = 164, jump @9\n      : @176 [@dyn 82] (gas: 7)\n  5366: a0 = sp + 0xffffffffffffffe0\n  5369: a0 = a0 & 0xffffffffffffffe0\n  5372: u64 [s1 + 0x68] = a0\n  5375: sp = a0\n  5377: a2 = 0x20068\n  5382: a0 = i32 [0x20068]\n  5387: jump @178 if a0 >u 63\n      : @177 (gas: 2)\n  5391: u32 [0x20068] = 0x40\n  5397: fallthrough\n      : @178 (gas: 15)\n  5398: u64 [s1 + 0x48] = a2\n  5401: a0 = sp + 0xffffffffffffffe0\n  5404: a2 = a0 & 0xffffffffffffffe0\n  5407: u64 [s1 + 0x60] = a2\n  5410: sp = a2\n  5412: a0 = 0x20070\n  5417: i32 a0 = a0 + 0\n  5419: i32 a2 = a2 + 0\n  5421: a1 = 0x40\n  5424: u64 [s1 + 0x58] = a0\n  5427: ra = 0xa6\n  5431: ecalli 9 // 'hash_keccak_256'\n  5433: a3 = u64 [s1 + 0x60]\n  5436: t0 = 0xa8\n  5440: jump @442\n      : @179 [@dyn 83] (gas: 2)\n  5443: a3 = u64 [s1 + 0x60]\n  5446: t0 = 168, jump @442\n      : @180 [@dyn 84] (gas: 7)\n  5452: a1 = u64 [s1 + 0x68]\n  5455: u64 [a1 + 0x18] = a3\n  5458: u64 [a1 + 0x10] = a2\n  5461: u64 [a1 + 0x8] = a4\n  5464: u64 [a1] = a0\n  5466: a0 = s1 + 0x420\n  5470: ra = 170, jump @11\n      : @181 [@dyn 85] (gas: 38)\n  5476: t2 = u64 [s1 + 0x438]\n  5480: a1 = s1 + 0x400\n  5484: a0 = u64 [a1 + 0x30]\n  5487: a4 = u64 [a1 + 0x20]\n  5490: a5 = u64 [a1 + 0x28]\n  5493: a1 = sp + 0xffffffffffffffe0\n  5496: a1 = a1 & 0xffffffffffffffe0\n  5499: sp = a1\n  5501: a3 = u64 [s1 + 0x78]\n  5504: a3 = a3 + a5\n  5507: t0 = u64 [s1 + 0x70]\n  5510: t0 = t0 + a4\n  5513: a4 = t0 <u a4\n  5516: a3 = a3 + a4\n  5519: t1 = a3 ^ a5\n  5522: a2 = a3 <u a5\n  5525: a2 = a4 if t1 == 0\n  5528: a4 = u64 [s1 + 0x80]\n  5532: a4 = a4 + a0\n  5535: a5 = a4 + a2\n  5538: t1 = a5 <u a4\n  5541: ra = u64 [s1 + 0x88]\n  5545: ra = ra + t2\n  5548: a4 = a4 <u a0\n  5551: a4 = a4 + ra\n  5554: ra = a4 + t1\n  5557: t1 = a5 <u a0\n  5560: a4 = t2 ^ ra\n  5563: t2 = ra <u t2\n  5566: t2 = t1 if a4 == 0\n  5569: a0 = a0 ^ a5\n  5572: a0 = a0 | a4\n  5575: t2 = a2 if a0 == 0\n  5578: u64 [a1 + 0x10] = a5\n  5581: u64 [a1 + 0x8] = a3\n  5584: u64 [a1] = t0\n  5586: u64 [a1 + 0x18] = ra\n  5589: jump @245 if t2 != 0\n      : @182 (gas: 2)\n  5593: a0 = u64 [s1 + 0x68]\n  5596: ra = 172, jump @12\n      : @183 [@dyn 86] (gas: 3)\n  5602: a0 = s1 + 0x400\n  5606: a1 = 0x40\n  5609: ra = 174, jump @7\n      : @184 [@dyn 87] (gas: 6)\n  5615: a4 = s1 + 0x400\n  5619: a0 = u64 [a4 + 0x18]\n  5622: a1 = u64 [a4 + 0x10]\n  5625: a2 = u64 [a4 + 0x8]\n  5628: a3 = u64 [a4]\n  5630: t0 = 176, jump @437\n      : @185 [@dyn 88] (gas: 1)\n  5636: jump @195 if a0 != 0\n      : @186 (gas: 12)\n  5640: a0 = u64 [s1 + 0x70]\n  5643: u64 [s1 + 0x3e0] = a0\n  5647: a0 = u64 [s1 + 0x78]\n  5650: u64 [s1 + 0x3e8] = a0\n  5654: a0 = u64 [s1 + 0x80]\n  5658: u64 [s1 + 0x3f0] = a0\n  5662: a1 = s1 + 0x3e0\n  5666: a0 = u64 [s1 + 0x88]\n  5670: u64 [s1 + 0x3f8] = a0\n  5674: a0 = a3\n  5676: u64 [s1 + 0x88] = a3\n  5680: ra = 178, jump @9\n      : @187 [@dyn 89] (gas: 21)\n  5686: u64 [s1 + 952] = 0\n  5690: a0 = u64 [s1 + 0x50]\n  5693: a4 = s1 + 0x300\n  5697: u64 [a4 + 0xb0] = a0\n  5701: a0 = u64 [s1 + 0x90]\n  5705: u64 [a4 + 0xa8] = a0\n  5709: a0 = u64 [0x20020]\n  5714: a1 = u64 [0x20028]\n  5719: a2 = u64 [0x20030]\n  5724: a3 = u64 [s1 + 0x98]\n  5728: u64 [a4 + 0xa0] = a3\n  5732: u64 [a4 + 0xd8] = a0\n  5736: u64 [a4 + 0xd0] = a1\n  5740: u64 [a4 + 0xc8] = a2\n  5744: a0 = u64 [0x20038]\n  5749: a1 = 0x20\n  5752: a2 = s1 + 0x3c0\n  5756: a3 = s1 + 0x3a0\n  5760: u64 [a4 + 0xc0] = a0\n  5764: a0 = u64 [s1 + 0x88]\n  5768: ra = 180, jump @13\n      : @188 [@dyn 90] (gas: 5)\n  5774: a0 = 0\n  5776: a1 = u64 [s1 + 0x58]\n  5779: a2 = 0\n  5781: ecalli 14 // 'seal_return'\n  5783: jump @259\n      : @189 (gas: 8)\n  5786: u64 [a2 + 520] = 0\n  5790: u64 [a2 + 512] = 0\n  5794: u64 [a2 + 504] = 0\n  5798: u64 [a2 + 496] = 0\n  5802: a0 = s1 + 0x1000\n  5806: i32 a0 = a0 + 0xfffffffffffffa00\n  5810: ecalli 17 // 'value_transferred'\n  5812: fallthrough\n      : @190 (gas: 10)\n  5813: a3 = s1 + 0x7ff\n  5817: a3 = a3 + 0x11\n  5820: a0 = u64 [a3 + 0x200]\n  5824: a1 = u64 [a3 + 0x208]\n  5828: a2 = u64 [a3 + 0x1f8]\n  5832: a3 = u64 [a3 + 0x1f0]\n  5836: a1 = a1 | a2\n  5839: a0 = a0 | a3\n  5842: a0 = a0 | a1\n  5845: jump @250 if a0 != 0\n      : @191 (gas: 3)\n  5849: a0 = u64 [s1 + 0x98]\n  5853: a0 = i32 [a0]\n  5855: jump @251 if a0 <=u 3\n      : @192 (gas: 3)\n  5860: a0 = s1 + 0x2e0\n  5864: a1 = 0x40\n  5867: ra = 182, jump @7\n      : @193 [@dyn 91] (gas: 10)\n  5873: a1 = s1 + 0x200\n  5877: a0 = u64 [a1 + 0xf8]\n  5881: u64 [s1 + 0x98] = a0\n  5885: a0 = u64 [a1 + 0xf0]\n  5889: u64 [s1 + 0x90] = a0\n  5893: a0 = u64 [a1 + 0xe8]\n  5897: u64 [s1 + 0x80] = a0\n  5901: a0 = u64 [a1 + 0xe0]\n  5905: u64 [s1 + 0x88] = a0\n  5909: ra = 184, jump @0\n      : @194 [@dyn 92] (gas: 13)\n  5915: a0 = u64 [s1 + 0x98]\n  5919: a1 = u64 [s1 + 0x80]\n  5923: a0 = a0 | a1\n  5926: a1 = u64 [s1 + 0x88]\n  5930: a3 = a1\n  5932: a2 = u64 [s1 + 0x90]\n  5936: a1 = a1 | a2\n  5939: a1 = a1 | a0\n  5942: a1 = a1 >> 0x20\n  5945: a0 = a0 | a2\n  5948: a0 = a0 << 0x20\n  5951: a0 = a0 | a1\n  5954: jump @252 if a0 == 0\n      : @195 (gas: 1)\n  5958: trap\n      : @196 (gas: 6)\n  5959: a1 = 0x20070\n  5964: i32 a1 = a1 + 0\n  5966: a0 = 0x1\n  5969: a2 = 0\n  5971: ecalli 14 // 'seal_return'\n  5973: jump @259\n      : @197 (gas: 6)\n  5976: a1 = 0x20070\n  5981: i32 a1 = a1 + 0\n  5983: a0 = 0x1\n  5986: a2 = 0\n  5988: ecalli 14 // 'seal_return'\n  5990: jump @259\n      : @198 (gas: 6)\n  5993: a1 = 0x20070\n  5998: i32 a1 = a1 + 0\n  6000: a0 = 0x1\n  6003: a2 = 0\n  6005: ecalli 14 // 'seal_return'\n  6007: jump @259\n      : @199 (gas: 6)\n  6010: a1 = 0x20070\n  6015: i32 a1 = a1 + 0\n  6017: a0 = 0x1\n  6020: a2 = 0\n  6022: ecalli 14 // 'seal_return'\n  6024: jump @259\n      : @200 (gas: 6)\n  6027: a1 = 0x20070\n  6032: i32 a1 = a1 + 0\n  6034: a0 = 0x1\n  6037: a2 = 0\n  6039: ecalli 14 // 'seal_return'\n  6041: jump @259\n      : @201 (gas: 6)\n  6044: a1 = 0x20070\n  6049: i32 a1 = a1 + 0\n  6051: a0 = 0x1\n  6054: a2 = 0\n  6056: ecalli 14 // 'seal_return'\n  6058: jump @259\n      : @202 (gas: 8)\n  6061: u64 [s1 + 432] = 0\n  6065: u64 [s1 + 424] = 0\n  6069: u64 [s1 + 416] = 0\n  6073: a0 = 0xc39fa00400000000\n  6083: a1 = s1 + 0x1a0\n  6087: u64 [s1 + 0x1b8] = a0\n  6091: a0 = 0\n  6093: ra = 186, jump @9\n      : @203 [@dyn 93] (gas: 2)\n  6099: a1 = i32 [0x20068]\n  6104: jump @205 if a1 >u 31\n      : @204 (gas: 3)\n  6108: u32 [0x20068] = 0x20\n  6114: a1 = 0x20070\n  6119: jump @244\n      : @205 (gas: 2)\n  6122: a1 = 0x20070\n  6127: jump @244\n      : @206 (gas: 6)\n  6130: a1 = 0x20070\n  6135: i32 a1 = a1 + 0\n  6137: a0 = 0x1\n  6140: a2 = 0\n  6142: ecalli 14 // 'seal_return'\n  6144: jump @259\n      : @207 (gas: 6)\n  6147: a1 = 0x20070\n  6152: i32 a1 = a1 + 0\n  6154: a0 = 0x1\n  6157: a2 = 0\n  6159: ecalli 14 // 'seal_return'\n  6161: jump @259\n      : @208 (gas: 6)\n  6164: a1 = 0x20070\n  6169: i32 a1 = a1 + 0\n  6171: a0 = 0x1\n  6174: a2 = 0\n  6176: ecalli 14 // 'seal_return'\n  6178: jump @259\n      : @209 (gas: 6)\n  6181: a1 = 0x20070\n  6186: i32 a1 = a1 + 0\n  6188: a0 = 0x1\n  6191: a2 = 0\n  6193: ecalli 14 // 'seal_return'\n  6195: jump @259\n      : @210 (gas: 1)\n  6198: jump @256 if a0 != 753512109\n      : @211 (gas: 10)\n  6206: a0 = s1 + 0x7ff\n  6210: a0 = a0 + 0x11\n  6213: u64 [a0 + 296] = 0\n  6217: u64 [a0 + 288] = 0\n  6221: u64 [a0 + 280] = 0\n  6225: u64 [a0 + 272] = 0\n  6229: a0 = s1 + 0x1000\n  6233: i32 a0 = a0 + 0xfffffffffffff920\n  6237: ecalli 17 // 'value_transferred'\n  6239: fallthrough\n      : @212 (gas: 11)\n  6240: a3 = s1 + 0x7ff\n  6244: a3 = a3 + 0x11\n  6247: a4 = a3 + 0x100\n  6251: a0 = u64 [a4 + 0x20]\n  6254: a1 = u64 [a4 + 0x28]\n  6257: a2 = u64 [a4 + 0x18]\n  6260: a3 = u64 [a4 + 0x10]\n  6263: a1 = a1 | a2\n  6266: a0 = a0 | a3\n  6269: a0 = a0 | a1\n  6272: jump @260 if a0 == 0\n      : @213 (gas: 6)\n  6276: a1 = 0x20070\n  6281: i32 a1 = a1 + 0\n  6283: a0 = 0x1\n  6286: a2 = 0\n  6288: ecalli 14 // 'seal_return'\n  6290: jump @259\n      : @214 (gas: 6)\n  6293: a1 = 0x20070\n  6298: i32 a1 = a1 + 0\n  6300: a0 = 0x1\n  6303: a2 = 0\n  6305: ecalli 14 // 'seal_return'\n  6307: jump @259\n      : @215 (gas: 6)\n  6310: a1 = 0x20070\n  6315: i32 a1 = a1 + 0\n  6317: a0 = 0x1\n  6320: a2 = 0\n  6322: ecalli 14 // 'seal_return'\n  6324: jump @259\n      : @216 (gas: 6)\n  6327: a1 = 0x20070\n  6332: i32 a1 = a1 + 0\n  6334: a0 = 0x1\n  6337: a2 = 0\n  6339: ecalli 14 // 'seal_return'\n  6341: jump @259\n      : @217 (gas: 6)\n  6344: a1 = 0x20070\n  6349: i32 a1 = a1 + 0\n  6351: a0 = 0x1\n  6354: a2 = 0\n  6356: ecalli 14 // 'seal_return'\n  6358: jump @259\n      : @218 (gas: 8)\n  6361: u64 [s1 + 1872] = 0\n  6365: u64 [s1 + 1864] = 0\n  6369: u64 [s1 + 1856] = 0\n  6373: a0 = 0xc39fa00400000000\n  6383: a1 = s1 + 0x740\n  6387: u64 [s1 + 0x758] = a0\n  6391: a0 = 0\n  6393: ra = 188, jump @9\n      : @219 [@dyn 94] (gas: 2)\n  6399: a1 = i32 [0x20068]\n  6404: jump @221 if a1 >u 31\n      : @220 (gas: 3)\n  6408: u32 [0x20068] = 0x20\n  6414: a1 = 0x20070\n  6419: jump @244\n      : @221 (gas: 2)\n  6422: a1 = 0x20070\n  6427: jump @244\n      : @222 (gas: 8)\n  6430: u64 [s1 + 1296] = 0\n  6434: u64 [s1 + 1288] = 0\n  6438: u64 [s1 + 1280] = 0\n  6442: a0 = 0x2c5211c600000000\n  6452: a1 = s1 + 0x500\n  6456: u64 [s1 + 0x518] = a0\n  6460: a0 = 0\n  6462: ra = 190, jump @9\n      : @223 [@dyn 95] (gas: 2)\n  6468: a1 = i32 [0x20068]\n  6473: jump @225 if a1 >u 31\n      : @224 (gas: 3)\n  6477: u32 [0x20068] = 0x20\n  6483: a1 = 0x20070\n  6488: jump @244\n      : @225 (gas: 2)\n  6491: a1 = 0x20070\n  6496: jump @244\n      : @226 (gas: 9)\n  6499: u64 [s1 + 1328] = 0\n  6503: u64 [s1 + 1320] = 0\n  6507: u64 [s1 + 1312] = 0\n  6511: a0 = 0xf4d678b800000000\n  6521: a1 = s1 + 0x520\n  6525: u64 [s1 + 0x538] = a0\n  6529: a0 = 0\n  6531: ra = 0xc0\n  6535: jump @9\n      : @227 (gas: 8)\n  6538: u64 [s1 + 1488] = 0\n  6542: u64 [s1 + 1480] = 0\n  6546: u64 [s1 + 1472] = 0\n  6550: a0 = 0x90b8ec1800000000\n  6560: a1 = s1 + 0x5c0\n  6564: u64 [s1 + 0x5d8] = a0\n  6568: a0 = 0\n  6570: ra = 192, jump @9\n      : @228 [@dyn 96] (gas: 3)\n  6576: a0 = u64 [s1 + 0x68]\n  6579: a0 = i32 [a0]\n  6581: jump @230 if a0 >u 31\n      : @229 (gas: 3)\n  6585: a1 = u64 [s1 + 0x68]\n  6588: u32 [a1 + 0] = 0x20\n  6591: fallthrough\n      : @230 (gas: 5)\n  6592: a0 = 0x1\n  6595: a2 = 0x4\n  6598: a1 = u64 [s1 + 0x50]\n  6601: ecalli 14 // 'seal_return'\n  6603: fallthrough\n      : @231 (gas: 6)\n  6604: a1 = 0x20070\n  6609: i32 a1 = a1 + 0\n  6611: a0 = 0x1\n  6614: a2 = 0\n  6616: ecalli 14 // 'seal_return'\n  6618: jump @259\n      : @232 (gas: 8)\n  6621: u64 [s1 + 1232] = 0\n  6625: u64 [s1 + 1224] = 0\n  6629: u64 [s1 + 1216] = 0\n  6633: a0 = 0xc39fa00400000000\n  6643: a1 = s1 + 0x4c0\n  6647: u64 [s1 + 0x4d8] = a0\n  6651: a0 = 0\n  6653: ra = 194, jump @9\n      : @233 [@dyn 97] (gas: 2)\n  6659: a1 = i32 [0x20068]\n  6664: jump @235 if a1 >u 31\n      : @234 (gas: 3)\n  6668: u32 [0x20068] = 0x20\n  6674: a1 = 0x20070\n  6679: jump @244\n      : @235 (gas: 2)\n  6682: a1 = 0x20070\n  6687: jump @244\n      : @236 (gas: 8)\n  6690: u64 [s1 + 1200] = 0\n  6694: u64 [s1 + 1192] = 0\n  6698: u64 [s1 + 1184] = 0\n  6702: a0 = 0x2c5211c600000000\n  6712: a1 = s1 + 0x4a0\n  6716: u64 [s1 + 0x4b8] = a0\n  6720: a0 = 0\n  6722: ra = 196, jump @9\n      : @237 [@dyn 98] (gas: 2)\n  6728: a1 = i32 [0x20068]\n  6733: jump @239 if a1 >u 31\n      : @238 (gas: 3)\n  6737: u32 [0x20068] = 0x20\n  6743: a1 = 0x20070\n  6748: jump @244\n      : @239 (gas: 2)\n  6750: a1 = 0x20070\n  6755: jump @244\n      : @240 (gas: 8)\n  6757: u64 [s1 + 848] = 0\n  6761: u64 [s1 + 840] = 0\n  6765: u64 [s1 + 832] = 0\n  6769: a0 = 0x2c5211c600000000\n  6779: a1 = s1 + 0x340\n  6783: u64 [s1 + 0x358] = a0\n  6787: a0 = 0\n  6789: ra = 198, jump @9\n      : @241 [@dyn 99] (gas: 2)\n  6795: a1 = i32 [0x20068]\n  6800: jump @243 if a1 >u 31\n      : @242 (gas: 3)\n  6804: u32 [0x20068] = 0x20\n  6810: a1 = 0x20070\n  6815: jump @244\n      : @243 (gas: 2)\n  6817: a1 = 0x20070\n  6822: fallthrough\n      : @244 (gas: 5)\n  6823: i32 a1 = a1 + 0\n  6825: a0 = 0x1\n  6828: a2 = 0x4\n  6831: ecalli 14 // 'seal_return'\n  6833: fallthrough\n      : @245 (gas: 8)\n  6834: u64 [s1 + 912] = 0\n  6838: u64 [s1 + 904] = 0\n  6842: u64 [s1 + 896] = 0\n  6846: a0 = 0x4e487b7100000000\n  6856: a1 = s1 + 0x380\n  6860: u64 [s1 + 0x398] = a0\n  6864: a0 = 0\n  6866: ra = 200, jump @9\n      : @246 [@dyn 100] (gas: 7)\n  6872: u64 [s1 + 888] = 0\n  6876: u64 [s1 + 880] = 0\n  6880: u64 [s1 + 864] = 0x11\n  6885: a0 = 0x4\n  6888: a1 = s1 + 0x360\n  6892: u64 [s1 + 872] = 0\n  6896: ra = 202, jump @9\n      : @247 [@dyn 101] (gas: 3)\n  6902: a0 = u64 [s1 + 0x48]\n  6905: a0 = i32 [a0]\n  6907: jump @249 if a0 >u 63\n      : @248 (gas: 3)\n  6911: a1 = u64 [s1 + 0x48]\n  6914: u32 [a1 + 0] = 0x40\n  6917: fallthrough\n      : @249 (gas: 5)\n  6918: a0 = 0x1\n  6921: a2 = 0x24\n  6924: a1 = u64 [s1 + 0x58]\n  6927: ecalli 14 // 'seal_return'\n  6929: fallthrough\n      : @250 (gas: 6)\n  6930: a1 = 0x20070\n  6935: i32 a1 = a1 + 0\n  6937: a0 = 0x1\n  6940: a2 = 0\n  6942: ecalli 14 // 'seal_return'\n  6944: jump @259\n      : @251 (gas: 6)\n  6946: a1 = 0x20070\n  6951: i32 a1 = a1 + 0\n  6953: a0 = 0x1\n  6956: a2 = 0\n  6958: ecalli 14 // 'seal_return'\n  6960: jump @259\n      : @252 (gas: 11)\n  6962: a2 = u64 [0x300b0]\n  6967: a1 = u64 [0x300b8]\n  6972: a0 = u32 [0x300c0]\n  6977: u64 [s1 + 728] = 0\n  6981: a4 = s1 + 0x200\n  6985: u64 [a4 + 0xd0] = a0\n  6989: u64 [a4 + 0xc8] = a1\n  6993: a1 = s1 + 0x2c0\n  6997: u64 [a4 + 0xc0] = a2\n  7001: a0 = a3\n  7003: ra = 204, jump @9\n      : @253 [@dyn 102] (gas: 3)\n  7009: a1 = 0x20\n  7012: a0 = u64 [s1 + 0x88]\n  7016: ra = 206, jump @15\n      : @254 [@dyn 103] (gas: 2)\n  7022: i32 a1 = a0 + 0\n  7024: fallthrough\n      : @255 (gas: 6)\n  7025: a2 = 0x20\n  7028: a0 = 0\n  7030: ecalli 14 // 'seal_return'\n  7032: a0 = u64 [s1 + 0x98]\n  7036: a0 = i32 [a0]\n  7038: jump @257\n      : @256 (gas: 3)\n  7040: a0 = u64 [s1 + 0x98]\n  7044: a0 = i32 [a0]\n  7046: fallthrough\n      : @257 (gas: 1)\n  7047: jump @259 if a0 == 0\n      : @258 (gas: 6)\n  7050: a1 = 0x20070\n  7055: i32 a1 = a1 + 0\n  7057: a0 = 0x1\n  7060: a2 = 0\n  7062: ecalli 14 // 'seal_return'\n  7064: fallthrough\n      : @259 (gas: 6)\n  7065: a1 = 0x20070\n  7070: i32 a1 = a1 + 0\n  7072: a0 = 0\n  7074: a2 = 0\n  7076: ecalli 14 // 'seal_return'\n  7078: jump @259\n      : @260 (gas: 3)\n  7080: a0 = u64 [s1 + 0x98]\n  7084: a0 = i32 [a0]\n  7086: jump @262 if a0 >u 35\n      : @261 (gas: 6)\n  7090: a1 = 0x20070\n  7095: i32 a1 = a1 + 0\n  7097: a0 = 0x1\n  7100: a2 = 0\n  7102: ecalli 14 // 'seal_return'\n  7104: jump @259\n      : @262 (gas: 2)\n  7106: a0 = s1 + 0x120\n  7110: ra = 208, jump @274\n      : @263 [@dyn 104] (gas: 11)\n  7116: a3 = s1 + 0x100\n  7120: a0 = u64 [a3 + 0x20]\n  7123: a1 = u64 [a3 + 0x28]\n  7126: a2 = u32 [s1 + 0x130]\n  7130: u64 [s1 + 280] = 0\n  7134: u64 [a3 + 0x10] = a2\n  7137: u64 [a3 + 0x8] = a1\n  7140: a1 = s1 + 0x100\n  7144: u64 [a3] = a0\n  7146: a0 = 0\n  7148: ra = 210, jump @9\n      : @264 [@dyn 105] (gas: 7)\n  7154: u64 [s1 + 248] = 0\n  7158: u64 [s1 + 240] = 0\n  7162: u64 [s1 + 224] = 0x1\n  7167: a0 = 0x20\n  7170: a1 = s1 + 0xe0\n  7174: u64 [s1 + 232] = 0\n  7178: ra = 212, jump @9\n      : @265 [@dyn 106] (gas: 4)\n  7184: a0 = 0x20068\n  7189: u64 [s1 + 0x98] = a0\n  7193: a0 = i32 [0x20068]\n  7198: jump @267 if a0 >u 63\n      : @266 (gas: 3)\n  7202: a1 = u64 [s1 + 0x98]\n  7206: u32 [a1 + 0] = 0x40\n  7209: fallthrough\n      : @267 (gas: 14)\n  7210: a0 = sp + 0xffffffffffffffe0\n  7213: a2 = a0 & 0xffffffffffffffe0\n  7216: u64 [s1 + 0x88] = a2\n  7220: sp = a2\n  7222: a0 = 0x20070\n  7227: u64 [s1 + 0x90] = a0\n  7231: i32 a0 = a0 + 0\n  7233: i32 a2 = a2 + 0\n  7235: a1 = 0x40\n  7238: ra = 0xd6\n  7242: ecalli 9 // 'hash_keccak_256'\n  7244: a3 = u64 [s1 + 0x88]\n  7248: t0 = 0xd8\n  7252: jump @440\n      : @268 [@dyn 107] (gas: 2)\n  7255: a3 = u64 [s1 + 0x88]\n  7259: t0 = 216, jump @440\n      : @269 [@dyn 108] (gas: 8)\n  7265: u64 [a5 + 0x48] = a3\n  7268: u64 [a5 + 0x40] = a2\n  7271: u64 [a5 + 0x38] = a1\n  7274: u64 [a5 + 0x30] = a0\n  7277: a0 = s1 + 0xc0\n  7281: a1 = s1 + 0x7ff\n  7285: a1 = a1 + 0x141\n  7289: ra = 218, jump @11\n      : @270 [@dyn 109] (gas: 11)\n  7295: a2 = u64 [s1 + 0xc0]\n  7299: a0 = u64 [s1 + 0xc8]\n  7303: a1 = u64 [s1 + 0xd0]\n  7307: a3 = u64 [s1 + 0xd8]\n  7311: u64 [s1 + 0xb8] = a3\n  7315: u64 [s1 + 0xb0] = a1\n  7319: u64 [s1 + 0xa8] = a0\n  7323: a0 = 0x80\n  7327: a1 = s1 + 0xa0\n  7331: u64 [s1 + 0xa0] = a2\n  7335: ra = 220, jump @9\n      : @271 [@dyn 110] (gas: 3)\n  7341: a0 = u64 [s1 + 0x98]\n  7345: a0 = i32 [a0]\n  7347: jump @273 if a0 >u 159\n      : @272 (gas: 5)\n  7352: a1 = u64 [s1 + 0x98]\n  7356: u32 [a1 + 0] = 0xa0\n  7360: a0 = u64 [s1 + 0x90]\n  7364: i32 a1 = a0 + 0x80\n  7368: jump @255\n      : @273 (gas: 3)\n  7371: a0 = u64 [s1 + 0x90]\n  7375: i32 a1 = a0 + 0x80\n  7379: jump @255\n      : @274 (gas: 11)\n  7382: sp = sp + 0xffffffffffffffc0\n  7385: u64 [sp + 0x38] = ra\n  7388: u64 [sp + 0x30] = s0\n  7391: u64 [sp + 0x28] = s1\n  7394: s0 = sp + 0x40\n  7397: sp = sp & 0xffffffffffffffe0\n  7400: s1 = a0\n  7402: i32 a0 = sp + 0\n  7404: a1 = 0x4\n  7407: ecalli 3 // 'call_data_load'\n  7409: fallthrough\n      : @275 (gas: 10)\n  7410: a0 = u64 [sp + 0x10]\n  7413: a1 = u64 [sp + 0x18]\n  7416: a2 = 0x100000000\n  7426: a2 = a2 ^ a0\n  7429: a2 = a2 | a1\n  7432: a3 = a0 >> 0x20\n  7435: a3 = a3 <u 0x1\n  7438: a3 = 0 if a1 != 0\n  7440: a3 = 0 if a2 == 0\n  7442: jump @277 if a3 == 0\n      : @276 (gas: 12)\n  7445: a2 = u64 [sp]\n  7447: a3 = u64 [sp + 0x8]\n  7450: u64 [s1] = a2\n  7452: u64 [s1 + 0x8] = a3\n  7455: u64 [s1 + 0x10] = a0\n  7458: u64 [s1 + 0x18] = a1\n  7461: sp = s0 + 0xffffffffffffffc0\n  7464: ra = u64 [sp + 0x38]\n  7467: s0 = u64 [sp + 0x30]\n  7470: s1 = u64 [sp + 0x28]\n  7473: sp = sp + 0x40\n  7476: ret\n      : @277 (gas: 7)\n  7478: a1 = 0x20070\n  7483: i32 a1 = a1 + 0\n  7485: a0 = 0x1\n  7488: a2 = 0\n  7490: ra = 0xde\n  7494: ecalli 14 // 'seal_return'\n  7496: fallthrough\n      : @278 [@dyn 111] (gas: 9)\n  7497: sp = sp + 0xffffffffffffff00\n  7501: u64 [sp + 0xf8] = ra\n  7505: u64 [sp + 0xf0] = s0\n  7509: u64 [sp + 0xe8] = s1\n  7513: s0 = sp + 0x100\n  7517: sp = sp & 0xffffffffffffffe0\n  7520: s1 = a0\n  7522: ecalli 13 // 'return_data_size'\n  7524: fallthrough\n      : @279 (gas: 1)\n  7525: jump @293 if a0 == 0\n      : @280 (gas: 6)\n  7529: u64 [sp + 0x10] = s1\n  7532: ecalli 13 // 'return_data_size'\n  7534: s1 = a0\n  7536: a0 = sp + 0xc0\n  7540: a1 = 0x40\n  7543: ra = 224, jump @7\n      : @281 [@dyn 112] (gas: 30)\n  7549: t1 = u64 [sp + 0xd8]\n  7553: t2 = u64 [sp + 0xd0]\n  7557: ra = u64 [sp + 0xc8]\n  7561: t0 = u64 [sp + 0xc0]\n  7565: a0 = s1 + 0x1f\n  7568: u64 [sp + 0x18] = s1\n  7571: a1 = a0 <u s1\n  7574: a0 = a0 & 0xffffffffffffffe0\n  7577: a2 = a0 + 0x3f\n  7580: a0 = a2 <u a0\n  7583: a3 = a1 + a0\n  7586: a2 = a2 & 0xffffffffffffffe0\n  7589: a1 = a3 + ra\n  7592: u64 [sp + 0x38] = t0\n  7595: t0 = t0 + a2\n  7598: a2 = t0 <u a2\n  7601: a1 = a1 + a2\n  7604: a4 = a1 ^ a3\n  7607: a3 = a1 <u a3\n  7610: a3 = a2 if a4 == 0\n  7613: a3 = a3 + t2\n  7616: a4 = a3 <u t2\n  7619: a2 = t1 + a4\n  7622: a5 = a3 >u 0\n  7624: s1 = a2 >u 0\n  7626: s1 = a5 if a2 == 0\n  7629: a5 = a3 | a2\n  7632: a0 = a1 >u 0\n  7634: a0 = s1 if a5 != 0\n  7637: jump @295 if a0 != 0\n      : @282 (gas: 12)\n  7641: a0 = u64 [sp + 0x38]\n  7644: a0 = t0 <u a0\n  7647: a5 = a1 ^ ra\n  7650: s1 = a1 <u ra\n  7653: s1 = a0 if a5 == 0\n  7656: a0 = a2 ^ t1\n  7659: a5 = a2 <u t1\n  7662: a4 = a5 if a0 != 0\n  7665: a5 = a3 ^ t2\n  7668: a0 = a0 | a5\n  7671: a4 = s1 if a0 == 0\n  7674: jump @295 if a4 != 0\n      : @283 (gas: 10)\n  7678: u64 [sp + 0xa0] = t0\n  7682: u64 [sp + 0xa8] = a1\n  7686: u64 [sp + 0xb0] = a3\n  7690: a0 = 0x40\n  7693: a1 = sp + 0xa0\n  7697: u64 [sp + 0xb8] = a2\n  7701: u64 [sp + 0x30] = t1\n  7704: s1 = t2\n  7706: u64 [sp + 0x28] = ra\n  7709: ra = 226, jump @9\n      : @284 [@dyn 113] (gas: 12)\n  7715: a2 = u64 [sp + 0x38]\n  7718: a0 = a2 | s1\n  7721: a1 = u64 [sp + 0x30]\n  7724: a3 = u64 [sp + 0x28]\n  7727: a1 = a1 | a3\n  7730: a0 = a0 | a1\n  7733: a0 = a0 >> 0x20\n  7736: u64 [sp + 0x20] = s1\n  7739: a1 = a1 | s1\n  7742: a1 = a1 << 0x20\n  7745: a1 = a1 | a0\n  7748: jump @292 if a1 != 0\n      : @285 (gas: 8)\n  7752: a0 = a2\n  7754: u64 [sp + 152] = 0\n  7758: u64 [sp + 144] = 0\n  7762: u64 [sp + 136] = 0\n  7766: a1 = sp + 0x80\n  7770: a2 = u64 [sp + 0x18]\n  7773: u64 [sp + 0x80] = a2\n  7777: ra = 228, jump @9\n      : @286 [@dyn 114] (gas: 2)\n  7783: ecalli 13 // 'return_data_size'\n  7785: fallthrough\n      : @287 (gas: 10)\n  7786: a4 = u64 [sp + 0x38]\n  7789: a1 = u64 [sp + 0x20]\n  7792: a2 = u64 [sp + 0x30]\n  7795: a1 = a1 | a2\n  7798: a2 = 0xffffffe0\n  7808: a2 = a4 <u a2\n  7811: a3 = u64 [sp + 0x28]\n  7814: a2 = 0 if a3 != 0\n  7816: a2 = 0 if a1 != 0\n  7818: jump @292 if a2 == 0\n      : @288 (gas: 3)\n  7821: s1 = a0\n  7823: a0 = a0 >> 0x20\n  7826: jump @292 if a0 != 0\n      : @289 (gas: 5)\n  7829: i32 a0 = a4 + 0x20\n  7832: i32 a1 = s1 + 0\n  7834: u64 [sp + 0x18] = a1\n  7837: a1 = s1\n  7839: ra = 230, jump @15\n      : @290 [@dyn 115] (gas: 6)\n  7845: u32 [sp + 0xe0] = s1\n  7849: i32 a0 = a0 + 0\n  7851: i32 a1 = sp + 0xe0\n  7855: a2 = 0\n  7857: ecalli 12 // 'return_data_copy'\n  7859: fallthrough\n      : @291 (gas: 8)\n  7860: a4 = u64 [sp + 0x38]\n  7863: a0 = i32 [sp + 0xe0]\n  7867: s1 = u64 [sp + 0x10]\n  7870: a1 = u64 [sp + 0x30]\n  7873: a2 = u64 [sp + 0x20]\n  7876: a3 = u64 [sp + 0x28]\n  7879: a5 = u64 [sp + 0x18]\n  7882: jump @294 if a0 >=u a5\n      : @292 (gas: 1)\n  7885: trap\n      : @293 (gas: 5)\n  7886: a3 = 0\n  7888: a2 = 0\n  7890: a1 = 0\n  7892: a4 = 0x60\n  7895: fallthrough\n      : @294 (gas: 10)\n  7896: u64 [s1] = a4\n  7898: u64 [s1 + 0x8] = a3\n  7901: u64 [s1 + 0x10] = a2\n  7904: u64 [s1 + 0x18] = a1\n  7907: sp = s0 + 0xffffffffffffff00\n  7911: ra = u64 [sp + 0xf8]\n  7915: s0 = u64 [sp + 0xf0]\n  7919: s1 = u64 [sp + 0xe8]\n  7923: sp = sp + 0x100\n  7927: ret\n      : @295 (gas: 8)\n  7929: u64 [sp + 112] = 0\n  7932: u64 [sp + 104] = 0\n  7935: u64 [sp + 96] = 0\n  7938: a0 = 0x4e487b7100000000\n  7948: a1 = sp + 0x60\n  7951: u64 [sp + 0x78] = a0\n  7954: a0 = 0\n  7956: ra = 232, jump @9\n      : @296 [@dyn 116] (gas: 7)\n  7962: u64 [sp + 88] = 0\n  7965: u64 [sp + 80] = 0\n  7968: u64 [sp + 64] = 0x41\n  7972: a0 = 0x4\n  7975: a1 = sp + 0x40\n  7978: u64 [sp + 72] = 0\n  7981: ra = 234, jump @9\n      : @297 [@dyn 117] (gas: 2)\n  7987: a1 = i32 [0x20068]\n  7992: jump @299 if a1 >u 63\n      : @298 (gas: 2)\n  7996: u32 [0x20068] = 0x40\n  8002: fallthrough\n      : @299 (gas: 7)\n  8003: a1 = 0x20070\n  8008: i32 a1 = a1 + 0\n  8010: a0 = 0x1\n  8013: a2 = 0x24\n  8016: ra = 0xec\n  8020: ecalli 14 // 'seal_return'\n  8022: fallthrough\n      : @300 [@dyn 118] (gas: 17)\n  8023: sp = sp + 0xfffffffffffffce0\n  8027: a1 = sp + 0x300\n  8031: u64 [a1 + 0x18] = ra\n  8034: u64 [a1 + 0x10] = s0\n  8037: u64 [a1 + 0x8] = s1\n  8040: s0 = sp + 0x320\n  8044: sp = sp & 0xffffffffffffffe0\n  8047: s1 = sp\n  8049: u64 [s1 + 0x18] = a0\n  8052: a0 = 0x30070\n  8057: u64 [s1 + 0x38] = a0\n  8060: i32 a0 = a0 + 0\n  8062: u64 [s1 + 0x10] = a0\n  8065: ra = 0xee\n  8069: ecalli 5 // 'caller'\n  8071: t0 = 0xf0\n  8075: jump @438\n      : @301 [@dyn 119] (gas: 1)\n  8078: t0 = 240, jump @438\n      : @302 [@dyn 120] (gas: 8)\n  8084: u64 [s1 + 504] = 0\n  8088: a2 = s1 + 0x100\n  8092: u64 [a2 + 0xf0] = a1\n  8096: u64 [a2 + 0xe8] = a0\n  8100: a0 = s1 + 0x200\n  8104: a1 = s1 + 0x1e0\n  8108: u64 [a2 + 0xe0] = a3\n  8112: ra = 242, jump @362\n      : @303 [@dyn 121] (gas: 11)\n  8118: a0 = u64 [s1 + 0x218]\n  8122: u64 [s1 + 0x40] = a0\n  8125: a0 = u64 [s1 + 0x210]\n  8129: u64 [s1 + 0x48] = a0\n  8132: a0 = u64 [s1 + 0x208]\n  8136: u64 [s1 + 0x50] = a0\n  8139: a0 = u64 [s1 + 0x200]\n  8143: u64 [s1 + 0x58] = a0\n  8146: i32 a0 = s1 + 0x220\n  8150: ecalli 0 // 'balance'\n  8151: fallthrough\n      : @304 (gas: 8)\n  8152: a5 = u64 [s1 + 0x238]\n  8156: t1 = u64 [s1 + 0x230]\n  8160: t0 = u64 [s1 + 0x228]\n  8164: ra = u64 [s1 + 0x220]\n  8168: a0 = t0 | a5\n  8171: a1 = ra | t1\n  8174: a0 = a0 | a1\n  8177: jump @340 if a0 == 0\n      : @305 (gas: 51)\n  8181: a0 = a0 <u 0x1\n  8184: u64 [s1 + 0xd8] = a0\n  8188: a1 = clz t1\n  8190: a2 = a1 + 0x40\n  8193: a1 = clz a5\n  8195: a1 = a2 if a5 == 0\n  8198: a2 = clz ra\n  8200: a2 = a2 + 0x40\n  8203: a3 = clz t0\n  8205: a3 = a2 if t0 == 0\n  8208: a2 = a3 + 0x80\n  8212: a4 = t1 | a5\n  8215: a1 = a2 if a4 == 0\n  8218: u64 [s1 + 0x30] = t0\n  8221: u64 [s1 + 0x60] = a5\n  8224: a5 = a2 <u a3\n  8227: a5 = 0 if a4 != 0\n  8229: a3 = a5 >u 0\n  8231: a2 = a1 <u 0xfd\n  8235: a4 = a2 ^ 0x1\n  8238: a3 = a4 if a5 == 0\n  8241: a2 = a3 <u 0x1\n  8244: a2 = a2 + 0xffffffffffffffff\n  8247: t2 = -a3\n  8249: a5 = -a5\n  8251: t0 = a5 - a4\n  8254: a0 = 0xfc - a1\n  8258: u64 [s1 + 0xc0] = t2\n  8262: a1 = t2 >u 0\n  8264: a4 = a2 >u 0\n  8266: u64 [s1 + 0xc8] = a2\n  8270: a4 = a1 if a2 == 0\n  8273: a1 = t0 >u 0\n  8275: u64 [s1 + 0xd0] = a0\n  8279: a0 = a0 <u 0x100\n  8283: a0 = a0 ^ 0x1\n  8286: a0 = a1 if t0 != 0\n  8289: a0 = a4 if a3 != 0\n  8292: a2 = u64 [s1 + 0xd8]\n  8296: a2 = a2 | a0\n  8299: a4 = u64 [s1 + 0x60]\n  8302: a4 = 0 if a2 != 0\n  8304: u64 [s1 + 0x20] = t1\n  8307: a1 = t1\n  8309: a1 = 0 if a2 != 0\n  8311: a3 = u64 [s1 + 0x30]\n  8314: a3 = 0 if a2 != 0\n  8316: a5 = ra\n  8318: a5 = 0 if a2 != 0\n  8320: u64 [s1 + 0x28] = ra\n  8323: jump @321 if a2 != 0\n      : @306 (gas: 8)\n  8327: a0 = u64 [s1 + 0xd0]\n  8331: a2 = a0 ^ 0xff\n  8335: t1 = u64 [s1 + 0xc0]\n  8339: a0 = a2 | t1\n  8342: t2 = u64 [s1 + 0xc8]\n  8346: a2 = t0 | t2\n  8349: a2 = a2 | a0\n  8352: jump @321 if a2 == 0\n      : @307 (gas: 19)\n  8356: a2 = u64 [s1 + 0xd0]\n  8360: a1 = a2 + 0x1\n  8363: u64 [s1 + 0xd8] = a1\n  8367: a0 = a1 <u 0x1\n  8370: a0 = a0 + t0\n  8373: u64 [s1 + 0xb8] = a0\n  8377: a0 = a0 | a1\n  8380: a0 = a0 <u 0x1\n  8383: a0 = a0 + t1\n  8386: u64 [s1 + 0xa8] = a0\n  8390: a0 = a0 <u t1\n  8393: a0 = a0 + t2\n  8396: u64 [s1 + 0xb0] = a0\n  8400: a1 = 0xff - a2\n  8404: u64 [s1 + 0xc0] = a1\n  8408: a2 = 0x80 - a1\n  8412: a0 = u64 [s1 + 0x28]\n  8415: a1 = u64 [s1 + 0x30]\n  8418: ra = 244, jump @445\n      : @308 [@dyn 122] (gas: 6)\n  8424: u64 [s1 + 0xc8] = a0\n  8428: u64 [s1 + 0x98] = a1\n  8432: a0 = u64 [s1 + 0x20]\n  8435: a1 = u64 [s1 + 0x60]\n  8438: a2 = u64 [s1 + 0xc0]\n  8442: ra = 246, jump @450\n      : @309 [@dyn 123] (gas: 9)\n  8448: u64 [s1 + 0xa0] = a0\n  8452: a0 = u64 [s1 + 0x98]\n  8456: a0 = a0 | a1\n  8459: u64 [s1 + 0x98] = a0\n  8463: a1 = u64 [s1 + 0xd0]\n  8467: a2 = 0x7f - a1\n  8470: a0 = u64 [s1 + 0x28]\n  8473: a1 = u64 [s1 + 0x30]\n  8476: ra = 248, jump @450\n      : @310 [@dyn 124] (gas: 18)\n  8482: a2 = u64 [s1 + 0xc0]\n  8486: a3 = a2 <u 0x80\n  8490: u64 [s1 + 0xd0] = a3\n  8494: a4 = u64 [s1 + 0x98]\n  8498: a1 = a4 if a3 != 0\n  8501: a4 = u64 [s1 + 0x60]\n  8504: a1 = a4 if a2 == 0\n  8507: u64 [s1 + 0x90] = a1\n  8511: a1 = u64 [s1 + 0xc8]\n  8515: a4 = u64 [s1 + 0xa0]\n  8519: a1 = a1 | a4\n  8522: a1 = a0 if a3 == 0\n  8525: a0 = u64 [s1 + 0x20]\n  8528: a1 = a0 if a2 == 0\n  8531: u64 [s1 + 0xc8] = a1\n  8535: a0 = u64 [s1 + 0x28]\n  8538: a1 = u64 [s1 + 0x30]\n  8541: ra = 250, jump @450\n      : @311 [@dyn 125] (gas: 13)\n  8547: a4 = u64 [s1 + 0xa8]\n  8551: a5 = u64 [s1 + 0xb0]\n  8555: a2 = u64 [s1 + 0xb8]\n  8559: a5 = a5 | a2\n  8562: a3 = u64 [s1 + 0xd8]\n  8566: a3 = a3 | a4\n  8569: a3 = a3 | a5\n  8572: a2 = u64 [s1 + 0xd0]\n  8576: a1 = 0 if a2 == 0\n  8578: u64 [s1 + 0xc0] = a1\n  8582: a0 = 0 if a2 == 0\n  8584: u64 [s1 + 0xd0] = a0\n  8588: jump @319 if a3 == 0\n      : @312 (gas: 5)\n  8592: a0 = u64 [s1 + 0xd8]\n  8596: a2 = a0 + 0xffffffffffffff80\n  8599: a0 = u64 [s1 + 0x20]\n  8602: a1 = u64 [s1 + 0x60]\n  8605: ra = 252, jump @445\n      : @313 [@dyn 126] (gas: 6)\n  8611: u64 [s1 + 0x98] = a0\n  8615: u64 [s1 + 0xa0] = a1\n  8619: a0 = u64 [s1 + 0x28]\n  8622: a1 = u64 [s1 + 0x30]\n  8625: a2 = u64 [s1 + 0xd8]\n  8629: ra = 254, jump @445\n      : @314 [@dyn 127] (gas: 7)\n  8635: u64 [s1 + 0x80] = a0\n  8639: u64 [s1 + 0x88] = a1\n  8643: a1 = u64 [s1 + 0xd8]\n  8647: a2 = 0x80 - a1\n  8651: a0 = u64 [s1 + 0x20]\n  8654: a1 = u64 [s1 + 0x60]\n  8657: ra = 256, jump @450\n      : @315 [@dyn 128] (gas: 20)\n  8663: a2 = u64 [s1 + 0x88]\n  8667: a1 = a1 | a2\n  8670: a2 = u64 [s1 + 0xd8]\n  8674: a3 = a2 <u 0x80\n  8678: u64 [s1 + 0x88] = a3\n  8682: a4 = u64 [s1 + 0xa0]\n  8686: a1 = a4 if a3 == 0\n  8689: a4 = u64 [s1 + 0x30]\n  8692: a1 = a4 if a2 == 0\n  8695: u64 [s1 + 0xa0] = a1\n  8699: a1 = u64 [s1 + 0x80]\n  8703: a0 = a0 | a1\n  8706: a1 = u64 [s1 + 0x98]\n  8710: a0 = a1 if a3 == 0\n  8713: a1 = u64 [s1 + 0x28]\n  8716: a0 = a1 if a2 == 0\n  8719: u64 [s1 + 0x98] = a0\n  8723: a0 = u64 [s1 + 0x20]\n  8726: a1 = u64 [s1 + 0x60]\n  8729: ra = 258, jump @445\n      : @316 [@dyn 129] (gas: 8)\n  8735: a5 = 0\n  8737: a2 = u64 [s1 + 0x88]\n  8741: a1 = 0 if a2 == 0\n  8743: a0 = 0 if a2 == 0\n  8745: u64 [s1 + 112] = 0x9\n  8749: u64 [s1 + 104] = 0\n  8752: ra = u64 [s1 + 0x90]\n  8756: fallthrough\n      : @317 (gas: 91)\n  8757: u64 [s1 + 0x80] = a1\n  8761: u64 [s1 + 0x88] = a5\n  8765: u64 [s1 + 120] = 0\n  8768: a1 = u64 [s1 + 0x98]\n  8772: a2 = a1 >> 0x3f\n  8775: a5 = u64 [s1 + 0xa0]\n  8779: a3 = a5 << 0x1\n  8782: t1 = a3 | a2\n  8785: a2 = a1 << 0x1\n  8788: a4 = ra >> 0x3f\n  8791: a4 = a4 | a2\n  8794: u64 [s1 + 0x90] = a4\n  8798: a3 = u64 [s1 + 0x68]\n  8801: a1 = a3 ^ t1\n  8804: u64 [s1 + 0x98] = a1\n  8808: a1 = a3 <u t1\n  8811: a2 = u64 [s1 + 0x70]\n  8814: t0 = a2 <u a4\n  8817: a2 = u64 [s1 + 0x98]\n  8821: t0 = a1 if a2 != 0\n  8824: a1 = u64 [s1 + 0x80]\n  8828: a1 = a1 << 0x1\n  8831: a4 = a0 >> 0x3f\n  8834: a1 = a1 | a4\n  8837: u64 [s1 + 0x80] = a1\n  8841: a4 = a5 >> 0x3f\n  8844: a0 = a0 << 0x1\n  8847: a4 = a4 | a0\n  8850: a0 = ra << 0x1\n  8853: a1 = u64 [s1 + 0xc8]\n  8857: a5 = a1 >> 0x3f\n  8860: a0 = a0 | a5\n  8863: u64 [s1 + 0xa0] = a0\n  8867: a5 = a1 << 0x1\n  8870: a0 = u64 [s1 + 0xc0]\n  8874: a1 = a0 >> 0x3f\n  8877: a1 = a1 | a5\n  8880: a5 = a0 << 0x1\n  8883: a0 = u64 [s1 + 0xd0]\n  8887: ra = a0 >> 0x3f\n  8890: a5 = a5 | ra\n  8893: a0 = a0 << 0x1\n  8896: a2 = u64 [s1 + 0x88]\n  8900: a0 = a0 | a2\n  8903: u64 [s1 + 0xd0] = a0\n  8907: a0 = a5 | 0\n  8909: u64 [s1 + 0xc0] = a0\n  8913: a0 = a1 | 0\n  8915: u64 [s1 + 0xc8] = a0\n  8919: a0 = u64 [s1 + 0xa0]\n  8923: ra = a0 | 0\n  8925: a0 = a3 - a4\n  8928: a0 = a0 <u t0\n  8931: a1 = a3 <u a4\n  8934: t2 = u64 [s1 + 0x80]\n  8938: a5 = a3 - t2\n  8941: a5 = a5 - a1\n  8944: a5 = a5 - a0\n  8947: t0 = a5 >>a 0x3f\n  8950: a0 = t0 & 0xa\n  8953: a2 = u64 [s1 + 0x90]\n  8957: a1 = a2 - a0\n  8960: u64 [s1 + 0x98] = a1\n  8964: a1 = a2 <u a0\n  8967: a0 = t1 - a1\n  8970: u64 [s1 + 0xa0] = a0\n  8974: a1 = 0 if t1 != 0\n  8976: a0 = a4 - a1\n  8979: a1 = a4 <u a1\n  8982: a1 = t2 - a1\n  8985: a3 = u64 [s1 + 0xd8]\n  8989: a5 = u64 [s1 + 0xb8]\n  8993: a2 = a3 | a5\n  8996: a2 = a2 <u 0x1\n  8999: a4 = u64 [s1 + 0xa8]\n  9003: t1 = a4 <u a2\n  9006: a4 = a4 - a2\n  9009: a2 = a3 <u 0x1\n  9012: a5 = a5 - a2\n  9015: a2 = u64 [s1 + 0xb0]\n  9019: a2 = a2 - t1\n  9022: a3 = a3 + 0xffffffffffffffff\n  9025: u64 [s1 + 0xb8] = a5\n  9029: u64 [s1 + 0xb0] = a2\n  9033: a2 = a2 | a5\n  9036: u64 [s1 + 0xd8] = a3\n  9040: a3 = a3 | a4\n  9043: a2 = a2 | a3\n  9046: a5 = t0 & 0x1\n  9049: u64 [s1 + 0xa8] = a4\n  9053: jump @317 if a2 != 0\n      : @318 (gas: 1)\n  9057: jump @320\n      : @319 (gas: 4)\n  9059: a5 = 0\n  9061: u64 [s1 + 120] = 0\n  9064: ra = u64 [s1 + 0x90]\n  9068: fallthrough\n      : @320 (gas: 19)\n  9069: a2 = u64 [s1 + 0xc8]\n  9073: a0 = a2 >> 0x3f\n  9076: a1 = ra << 0x1\n  9079: a0 = a0 | a1\n  9082: a3 = u64 [s1 + 0xc0]\n  9086: a1 = a3 >> 0x3f\n  9089: a2 = a2 << 0x1\n  9092: a1 = a1 | a2\n  9095: a4 = u64 [s1 + 0xd0]\n  9099: a2 = a4 >> 0x3f\n  9102: a3 = a3 << 0x1\n  9105: a4 = a4 << 0x1\n  9108: a5 = a5 | a4\n  9111: a4 = u64 [s1 + 0x78]\n  9114: a2 = a2 | a4\n  9117: a3 = a3 | a2\n  9120: a1 = a1 | a4\n  9123: a4 = a4 | a0\n  9126: fallthrough\n      : @321 (gas: 31)\n  9127: u64 [s1 + 0xc8] = a1\n  9131: t2 = u64 [s1 + 0x58]\n  9134: u64 [s1 + 0xd8] = a5\n  9138: t0 = t2 <u a5\n  9141: a0 = u64 [s1 + 0x50]\n  9144: a5 = a0 ^ a3\n  9147: t1 = a0 <u a3\n  9150: t1 = t0 if a5 == 0\n  9153: a5 = u64 [s1 + 0x48]\n  9156: ra = a5 <u a1\n  9159: a2 = u64 [s1 + 0x40]\n  9162: t0 = a2 ^ a4\n  9165: u64 [s1 + 0xd0] = a4\n  9169: a4 = a2 <u a4\n  9172: a4 = ra if t0 == 0\n  9175: ra = a0\n  9177: a1 = a3\n  9179: a3 = u64 [s1 + 0xc8]\n  9183: a0 = a5 ^ a3\n  9186: a0 = a0 | t0\n  9189: a4 = t1 if a0 == 0\n  9192: a0 = u64 [s1 + 0xd8]\n  9196: t2 = a0 if a4 == 0\n  9199: ra = a1 if a4 == 0\n  9202: a5 = a3 if a4 == 0\n  9205: a0 = u64 [s1 + 0xd0]\n  9209: a2 = a0 if a4 == 0\n  9212: a0 = ra | a2\n  9215: a1 = t2 | a5\n  9218: a0 = a0 | a1\n  9221: jump @340 if a0 == 0\n      : @322 (gas: 33)\n  9225: a1 = u64 [s1 + 0x60]\n  9228: a0 = a2 ^ a1\n  9231: u64 [s1 + 0xd8] = a0\n  9235: a0 = a1\n  9237: t1 = u64 [s1 + 0x30]\n  9240: t0 = ra ^ t1\n  9243: a4 = ra <u t1\n  9246: a1 = u64 [s1 + 0x28]\n  9249: a3 = t2 <u a1\n  9252: a3 = a4 if t0 != 0\n  9255: a1 = a2 <u a0\n  9258: t0 = u64 [s1 + 0x20]\n  9261: a4 = a5 <u t0\n  9264: a0 = u64 [s1 + 0xd8]\n  9268: a4 = a1 if a0 != 0\n  9271: a1 = a5 ^ t0\n  9274: a0 = a0 | a1\n  9277: a3 = a4 if a0 != 0\n  9280: a0 = u64 [s1 + 0x60]\n  9283: a2 = a0 if a3 == 0\n  9286: u64 [s1 + 0x40] = a2\n  9289: a5 = t0 if a3 == 0\n  9292: u64 [s1 + 0x48] = a5\n  9295: ra = t1 if a3 == 0\n  9298: u64 [s1 + 0x50] = ra\n  9301: a0 = u64 [s1 + 0x28]\n  9304: t2 = a0 if a3 == 0\n  9307: u64 [s1 + 0x58] = t2\n  9310: a0 = u64 [s1 + 0x10]\n  9313: ra = 0x104\n  9317: ecalli 5 // 'caller'\n  9319: t0 = 0x106\n  9323: jump @438\n      : @323 [@dyn 130] (gas: 1)\n  9326: t0 = 262, jump @438\n      : @324 [@dyn 131] (gas: 7)\n  9332: u64 [s1 + 472] = 0\n  9336: u64 [s1 + 0x1d0] = a1\n  9340: u64 [s1 + 0x1c8] = a0\n  9344: a1 = s1 + 0x1c0\n  9348: u64 [s1 + 0x1c0] = a3\n  9352: a0 = 0\n  9354: ra = 264, jump @9\n      : @325 [@dyn 132] (gas: 7)\n  9360: u64 [s1 + 440] = 0\n  9364: u64 [s1 + 432] = 0\n  9368: u64 [s1 + 416] = 0x1\n  9373: a0 = 0x20\n  9376: a1 = s1 + 0x1a0\n  9380: u64 [s1 + 424] = 0\n  9384: ra = 266, jump @9\n      : @326 [@dyn 133] (gas: 3)\n  9390: i32 a0 = s1 + 0x240\n  9394: ecalli 10 // 'now'\n  9396: fallthrough\n      : @327 (gas: 12)\n  9397: a2 = 0x20068\n  9402: a3 = s1 + 0x200\n  9406: a0 = u64 [a3 + 0x58]\n  9409: u64 [s1 + 0xc0] = a0\n  9413: a0 = u64 [a3 + 0x50]\n  9416: u64 [s1 + 0xc8] = a0\n  9420: a0 = u64 [a3 + 0x48]\n  9423: u64 [s1 + 0xd0] = a0\n  9427: a0 = i32 [0x20068]\n  9432: a1 = u64 [a3 + 0x40]\n  9435: u64 [s1 + 0xb8] = a1\n  9439: jump @329 if a0 >u 63\n      : @328 (gas: 2)\n  9443: u32 [0x20068] = 0x40\n  9449: fallthrough\n      : @329 (gas: 16)\n  9450: u64 [s1 + 0xa8] = a2\n  9454: a0 = sp + 0xffffffffffffffe0\n  9457: a2 = a0 & 0xffffffffffffffe0\n  9460: u64 [s1 + 0xb0] = a2\n  9464: sp = a2\n  9466: a0 = 0x20070\n  9471: u64 [s1 + 0xd8] = a0\n  9475: i32 a0 = a0 + 0\n  9477: i32 a2 = a2 + 0\n  9479: a1 = 0x40\n  9482: u64 [s1 + 0xa0] = a0\n  9486: ra = 0x10c\n  9490: ecalli 9 // 'hash_keccak_256'\n  9492: a3 = u64 [s1 + 0xb0]\n  9496: t0 = 0x10e\n  9500: jump @435\n      : @330 [@dyn 134] (gas: 2)\n  9503: a3 = u64 [s1 + 0xb0]\n  9507: t0 = 270, jump @435\n      : @331 [@dyn 135] (gas: 15)\n  9513: u64 [s1 + 0x278] = a3\n  9517: u64 [s1 + 0x270] = a2\n  9521: u64 [s1 + 0x268] = a1\n  9525: u64 [s1 + 0x260] = a0\n  9529: a0 = u64 [s1 + 0xc0]\n  9533: u64 [s1 + 0x298] = a0\n  9537: a0 = u64 [s1 + 0xc8]\n  9541: u64 [s1 + 0x290] = a0\n  9545: a0 = u64 [s1 + 0xd0]\n  9549: u64 [s1 + 0x288] = a0\n  9553: a0 = u64 [s1 + 0xb8]\n  9557: u64 [s1 + 0x280] = a0\n  9561: a0 = s1 + 0x260\n  9565: a1 = s1 + 0x280\n  9569: ra = 272, jump @12\n      : @332 [@dyn 136] (gas: 1)\n  9575: ra = 274, jump @0\n      : @333 [@dyn 137] (gas: 62)\n  9581: a1 = u64 [0x300b0]\n  9586: u64 [s1 + 0xd0] = a1\n  9590: a1 = u64 [0x300c0]\n  9595: u64 [s1 + 0xc8] = a1\n  9599: a0 = u64 [0x300b8]\n  9604: u64 [s1 + 0xc0] = a0\n  9608: ecalli 11 // 'ref_time_left'\n  9610: a1 = u64 [s1 + 0xc0]\n  9614: a1 = reverse a1\n  9616: a2 = a1 << 0x20\n  9619: a3 = u64 [s1 + 0xc8]\n  9623: a3 = reverse a3\n  9625: a3 = a3 >> 0x20\n  9628: a2 = a2 | a3\n  9631: a1 = a1 >> 0x20\n  9634: a3 = u64 [s1 + 0xd0]\n  9638: a3 = reverse a3\n  9640: a4 = a3 << 0x20\n  9643: a1 = a1 | a4\n  9646: a3 = a3 >> 0x20\n  9649: a4 = u64 [s1 + 0x38]\n  9652: u32 [a4 + 0x10] = a3\n  9655: u64 [a4 + 0x8] = a1\n  9658: u64 [a4] = a2\n  9660: a1 = u64 [s1 + 0x40]\n  9663: a2 = s1 + 0x200\n  9667: u64 [a2 + 0xb8] = a1\n  9671: a1 = u64 [s1 + 0x48]\n  9674: u64 [a2 + 0xb0] = a1\n  9678: a1 = u64 [s1 + 0x50]\n  9681: u64 [a2 + 0xa8] = a1\n  9685: a1 = u64 [s1 + 0x58]\n  9688: u64 [a2 + 0xa0] = a1\n  9692: u32 [s1 + 704] = 0\n  9696: a0 = a0 >u 0x8fc\n  9700: a1 = -a0\n  9702: u64 [a2 + 0xf8] = a1\n  9706: u64 [a2 + 0xf0] = a1\n  9710: u64 [a2 + 0xe8] = a1\n  9714: u64 [a2 + 0xe0] = a1\n  9718: a1 = a4 << 0x20\n  9721: a1 = a1 >> 0x20\n  9724: a0 = a0 << 0x23\n  9727: a0 = a0 | a1\n  9730: a1 = s1 + 0x2a0\n  9734: a1 = a1 << 0x20\n  9737: a1 = a1 >> 0x20\n  9740: a2 = s1 + 0x2e0\n  9744: a2 = a2 << 0x20\n  9747: a3 = a2 | a1\n  9750: a4 = u64 [s1 + 0xd8]\n  9754: a4 = a4 << 0x20\n  9757: a4 = a4 >> 0x20\n  9760: a1 = s1 + 0x2c0\n  9764: a1 = a1 << 0x20\n  9767: a5 = a1 | a4\n  9770: a1 = 0xffffffffffffffff\n  9773: a2 = 0xffffffffffffffff\n  9776: ecalli 1 // 'call'\n  9778: u64 [s1 + 0xd8] = a0\n  9782: a0 = s1 + 0x180\n  9786: ra = 276, jump @278\n      : @334 [@dyn 138] (gas: 2)\n  9792: a0 = u64 [s1 + 0xd8]\n  9796: jump @343 if a0 != 0\n      : @335 (gas: 3)\n  9800: a0 = s1 + 0x140\n  9804: a1 = 0x40\n  9807: ra = 278, jump @7\n      : @336 [@dyn 139] (gas: 13)\n  9813: a4 = s1 + 0x100\n  9817: a3 = u64 [a4 + 0x58]\n  9820: a1 = u64 [a4 + 0x50]\n  9823: a2 = u64 [a4 + 0x48]\n  9826: a0 = u64 [a4 + 0x40]\n  9829: a3 = a3 | a2\n  9832: a2 = a0 | a1\n  9835: a2 = a2 | a3\n  9838: a2 = a2 >> 0x20\n  9841: a1 = a1 | a3\n  9844: a1 = a1 << 0x20\n  9847: a1 = a1 | a2\n  9850: jump @342 if a1 != 0\n      : @337 (gas: 11)\n  9854: a1 = u64 [s1 + 0x58]\n  9857: u64 [s1 + 0x120] = a1\n  9861: a1 = u64 [s1 + 0x50]\n  9864: u64 [s1 + 0x128] = a1\n  9868: a1 = u64 [s1 + 0x48]\n  9871: u64 [s1 + 0x130] = a1\n  9875: a1 = s1 + 0x120\n  9879: a2 = u64 [s1 + 0x40]\n  9882: u64 [s1 + 0x138] = a2\n  9886: u64 [s1 + 0xd8] = a0\n  9890: ra = 280, jump @9\n      : @338 [@dyn 140] (gas: 34)\n  9896: a0 = u64 [s1 + 0x10]\n  9899: ecalli 5 // 'caller'\n  9901: a2 = u64 [s1 + 0x38]\n  9904: a0 = u64 [a2 + 0x8]\n  9907: a1 = i32 [a2 + 0x10]\n  9910: a2 = u64 [a2]\n  9912: a3 = reverse a0\n  9914: a0 = a3 << 0x20\n  9917: a1 = reverse a1\n  9919: a1 = a1 >> 0x20\n  9922: t0 = a1 | a0\n  9925: a3 = a3 >> 0x20\n  9928: a2 = reverse a2\n  9930: a1 = a2 << 0x20\n  9933: a1 = a1 | a3\n  9936: a2 = a2 >> 0x20\n  9939: u64 [s1 + 248] = 0\n  9943: a3 = u64 [0x20040]\n  9948: a4 = u64 [0x20048]\n  9953: a5 = u64 [0x20050]\n  9958: a0 = u64 [0x20058]\n  9963: u64 [s1 + 0x118] = a3\n  9967: a3 = s1 + 0x100\n  9971: u64 [a3 + 0x10] = a4\n  9974: u64 [a3 + 0x8] = a5\n  9977: u64 [a3] = a0\n  9979: u64 [s1 + 0xf0] = a2\n  9983: u64 [s1 + 0xe8] = a1\n  9987: a1 = 0x20\n  9990: a2 = s1 + 0x100\n  9994: a3 = s1 + 0xe0\n  9998: u64 [s1 + 0xe0] = t0\n 10002: a0 = u64 [s1 + 0xd8]\n 10006: ra = 282, jump @13\n      : @339 [@dyn 141] (gas: 5)\n 10012: a4 = u64 [s1 + 0x40]\n 10015: a3 = u64 [s1 + 0x48]\n 10018: a2 = u64 [s1 + 0x50]\n 10021: a1 = u64 [s1 + 0x58]\n 10024: jump @341\n      : @340 (gas: 5)\n 10026: a1 = 0\n 10028: a2 = 0\n 10030: a3 = 0\n 10032: a4 = 0\n 10034: fallthrough\n      : @341 (gas: 12)\n 10035: a0 = u64 [s1 + 0x18]\n 10038: u64 [a0] = a1\n 10040: u64 [a0 + 0x8] = a2\n 10043: u64 [a0 + 0x10] = a3\n 10046: u64 [a0 + 0x18] = a4\n 10049: sp = s0 + 0xfffffffffffffce0\n 10053: a0 = sp + 0x300\n 10057: ra = u64 [a0 + 0x18]\n 10060: s0 = u64 [a0 + 0x10]\n 10063: s1 = u64 [a0 + 0x8]\n 10066: sp = sp + 0x320\n 10070: ret\n      : @342 (gas: 1)\n 10072: trap\n      : @343 (gas: 8)\n 10073: u64 [s1 + 368] = 0\n 10077: u64 [s1 + 360] = 0\n 10081: u64 [s1 + 352] = 0\n 10085: a0 = 0x90b8ec1800000000\n 10095: a1 = s1 + 0x160\n 10099: u64 [s1 + 0x178] = a0\n 10103: a0 = 0\n 10105: ra = 284, jump @9\n      : @344 [@dyn 142] (gas: 3)\n 10111: a0 = u64 [s1 + 0xa8]\n 10115: a0 = i32 [a0]\n 10117: jump @346 if a0 >u 31\n      : @345 (gas: 3)\n 10121: a1 = u64 [s1 + 0xa8]\n 10125: u32 [a1 + 0] = 0x20\n 10128: fallthrough\n      : @346 (gas: 6)\n 10129: a0 = 0x1\n 10132: a2 = 0x4\n 10135: a1 = u64 [s1 + 0xa0]\n 10139: ra = 0x11e\n 10143: ecalli 14 // 'seal_return'\n 10145: fallthrough\n      : @347 [@dyn 143] (gas: 30)\n 10146: sp = sp + 0xffffffffffffff80\n 10149: u64 [sp + 0x78] = ra\n 10152: u64 [sp + 0x70] = s0\n 10155: u64 [sp + 0x68] = s1\n 10158: s0 = sp + 0x80\n 10162: sp = sp & 0xfffffffffffffff0\n 10165: a4 = u64 [a2]\n 10167: a3 = u64 [a1]\n 10169: s1 = u64 [a2 + 0x8]\n 10172: t1 = u64 [a1 + 0x8]\n 10175: t2 = u64 [a2 + 0x10]\n 10178: a5 = u64 [a1 + 0x10]\n 10181: a2 = u64 [a2 + 0x18]\n 10184: a1 = u64 [a1 + 0x18]\n 10187: t0 = t1 ^ s1\n 10190: u64 [sp + 0x8] = s1\n 10193: s1 = t1 <u s1\n 10196: u64 [sp + 0x18] = a4\n 10199: u64 [sp + 0x10] = a3\n 10202: a3 = a3 <u a4\n 10205: u64 [sp] = a3\n 10207: s1 = a3 if t0 == 0\n 10210: a3 = a1 ^ a2\n 10213: ra = a1 <u a2\n 10216: t0 = a5 <u t2\n 10219: ra = t0 if a3 == 0\n 10222: a4 = a5 ^ t2\n 10225: a3 = a3 | a4\n 10228: ra = s1 if a3 == 0\n 10231: jump @349 if ra != 0\n      : @348 (gas: 23)\n 10234: a3 = a5 - t2\n 10237: a1 = a1 - a2\n 10240: a1 = a1 - t0\n 10243: a2 = a3 <u s1\n 10246: a1 = a1 - a2\n 10249: a3 = a3 - s1\n 10252: a2 = u64 [sp + 0x8]\n 10255: a2 = t1 - a2\n 10258: a4 = u64 [sp]\n 10260: a2 = a2 - a4\n 10263: a4 = u64 [sp + 0x18]\n 10266: a5 = u64 [sp + 0x10]\n 10269: a4 = a5 - a4\n 10272: u64 [a0] = a4\n 10274: u64 [a0 + 0x8] = a2\n 10277: u64 [a0 + 0x10] = a3\n 10280: u64 [a0 + 0x18] = a1\n 10283: sp = s0 + 0xffffffffffffff80\n 10286: ra = u64 [sp + 0x78]\n 10289: s0 = u64 [sp + 0x70]\n 10292: s1 = u64 [sp + 0x68]\n 10295: sp = sp + 0x80\n 10299: ret\n      : @349 (gas: 8)\n 10301: u64 [sp + 80] = 0\n 10304: u64 [sp + 72] = 0\n 10307: u64 [sp + 64] = 0\n 10310: a0 = 0x4e487b7100000000\n 10320: a1 = sp + 0x40\n 10323: u64 [sp + 0x58] = a0\n 10326: a0 = 0\n 10328: ra = 288, jump @9\n      : @350 [@dyn 144] (gas: 7)\n 10334: u64 [sp + 56] = 0\n 10337: u64 [sp + 48] = 0\n 10340: u64 [sp + 32] = 0x11\n 10344: a0 = 0x4\n 10347: a1 = sp + 0x20\n 10350: u64 [sp + 40] = 0\n 10353: ra = 290, jump @9\n      : @351 [@dyn 145] (gas: 2)\n 10359: a1 = i32 [0x20068]\n 10364: jump @353 if a1 >u 63\n      : @352 (gas: 2)\n 10368: u32 [0x20068] = 0x40\n 10374: fallthrough\n      : @353 (gas: 7)\n 10375: a1 = 0x20070\n 10380: i32 a1 = a1 + 0\n 10382: a0 = 0x1\n 10385: a2 = 0x24\n 10388: ra = 0x124\n 10392: ecalli 14 // 'seal_return'\n 10394: fallthrough\n      : @354 [@dyn 146] (gas: 70)\n 10395: sp = sp + 0xffffffffffffff40\n 10399: u64 [sp + 0xb8] = ra\n 10403: u64 [sp + 0xb0] = s0\n 10407: u64 [sp + 0xa8] = s1\n 10411: s0 = sp + 0xc0\n 10415: sp = sp & 0xfffffffffffffff0\n 10418: ra = u64 [a2]\n 10420: t0 = u64 [a1]\n 10422: a3 = u64 [a1 + 0x8]\n 10425: u64 [sp + 0x58] = a0\n 10428: a4 = u64 [a2 + 0x8]\n 10431: a0 = t0 mulhu ra\n 10434: s1 = a3 * ra\n 10437: a0 = a0 + s1\n 10440: s1 = a0 <u s1\n 10443: a5 = a3 mulhu ra\n 10446: a5 = a5 + s1\n 10449: s1 = t0 * a4\n 10452: a0 = a0 + s1\n 10455: u64 [sp + 0x50] = a0\n 10458: a0 = a0 <u s1\n 10461: s1 = t0 mulhu a4\n 10464: a0 = a0 + s1\n 10467: a0 = a0 + a5\n 10470: a5 = a0 <u a5\n 10473: s1 = a3 mulhu a4\n 10476: a5 = a5 + s1\n 10479: s1 = a3 * a4\n 10482: a0 = a0 + s1\n 10485: u64 [sp + 0x48] = a0\n 10488: s1 = a0 <u s1\n 10491: a5 = a5 + s1\n 10494: u64 [sp + 0x40] = a5\n 10497: t1 = u64 [a2 + 0x10]\n 10500: a2 = u64 [a2 + 0x18]\n 10503: t2 = u64 [a1 + 0x18]\n 10506: a0 = u64 [a1 + 0x10]\n 10509: a5 = a3 * t1\n 10512: u64 [sp + 0x20] = a2\n 10515: s1 = a2 * t0\n 10518: a1 = s1 + a5\n 10521: u64 [sp + 0x28] = a4\n 10524: s1 = a4 * a0\n 10527: a2 = t2 * ra\n 10530: a2 = a2 + s1\n 10533: s1 = t1 * t0\n 10536: a5 = a0 * ra\n 10539: s1 = s1 + a5\n 10542: u64 [sp + 0x30] = t1\n 10545: a4 = t1 mulhu t0\n 10548: u64 [sp + 0x10] = a4\n 10551: a4 = a4 + a1\n 10554: t1 = a0 mulhu ra\n 10557: a1 = t1 + a2\n 10560: a2 = s1 <u a5\n 10563: u64 [sp + 0x18] = a1\n 10566: u64 [sp + 0x8] = a4\n 10569: a5 = a1 + a4\n 10572: a2 = a2 + a5\n 10575: u64 [sp + 0x38] = t2\n 10578: a5 = a3 | t2\n 10581: a1 = t0 | a0\n 10584: a1 = a1 | a5\n 10587: a4 = u64 [sp + 0x40]\n 10590: a5 = u64 [sp + 0x48]\n 10593: s1 = s1 + a5\n 10596: t2 = s1 <u a5\n 10599: a2 = a2 + a4\n 10602: a2 = a2 + t2\n 10605: jump @356 if a1 == 0\n      : @355 (gas: 50)\n 10609: a1 = a2 ^ a4\n 10612: u64 [sp + 0x48] = a2\n 10615: a2 = u64 [sp + 0x48]\n 10618: a2 = a2 <u a4\n 10621: t2 = a2 if a1 != 0\n 10624: u64 [sp + 0x40] = s1\n 10627: a1 = u64 [sp + 0x10]\n 10630: a2 = u64 [sp + 0x8]\n 10633: s1 = a2 <u a1\n 10636: a2 = a3 >u 0\n 10638: a1 = u64 [sp + 0x20]\n 10641: a5 = a1 >u 0\n 10643: a2 = a2 & a5\n 10646: a5 = a1 mulhu t0\n 10649: a5 = a5 >u 0\n 10651: a2 = a2 | a5\n 10654: a4 = t1\n 10656: t1 = u64 [sp + 0x30]\n 10659: a3 = a3 mulhu t1\n 10662: a3 = a3 >u 0\n 10664: a2 = a2 | a3\n 10667: a2 = a2 | s1\n 10670: u64 [sp + 0x10] = a2\n 10673: a2 = u64 [sp + 0x18]\n 10676: a2 = a2 <u a4\n 10679: a4 = u64 [sp + 0x28]\n 10682: a3 = a4 >u 0\n 10684: s1 = u64 [sp + 0x38]\n 10687: a5 = s1 >u 0\n 10689: a3 = a3 & a5\n 10692: a5 = s1 mulhu ra\n 10695: a5 = a5 >u 0\n 10697: a3 = a3 | a5\n 10700: a5 = a4 mulhu a0\n 10703: a5 = a5 >u 0\n 10705: a3 = a3 | a5\n 10708: a2 = a2 | a3\n 10711: a3 = t1 | a1\n 10714: a5 = a0 | s1\n 10717: s1 = u64 [sp + 0x40]\n 10720: a3 = a3 >u 0\n 10722: a5 = a5 >u 0\n 10724: a3 = a3 & a5\n 10727: a2 = a2 | a3\n 10730: a1 = u64 [sp + 0x10]\n 10733: a1 = a1 | a2\n 10736: a2 = u64 [sp + 0x48]\n 10739: a0 = a1 | t2\n 10742: a0 = a0 & 0x1\n 10745: jump @357 if a0 != 0\n      : @356 (gas: 13)\n 10748: a0 = t0 * ra\n 10751: a1 = u64 [sp + 0x58]\n 10754: u64 [a1] = a0\n 10756: a0 = u64 [sp + 0x50]\n 10759: u64 [a1 + 0x8] = a0\n 10762: u64 [a1 + 0x10] = s1\n 10765: u64 [a1 + 0x18] = a2\n 10768: sp = s0 + 0xffffffffffffff40\n 10772: ra = u64 [sp + 0xb8]\n 10776: s0 = u64 [sp + 0xb0]\n 10780: s1 = u64 [sp + 0xa8]\n 10784: sp = sp + 0xc0\n 10788: ret\n      : @357 (gas: 8)\n 10790: u64 [sp + 144] = 0\n 10794: u64 [sp + 136] = 0\n 10798: u64 [sp + 128] = 0\n 10802: a0 = 0x4e487b7100000000\n 10812: a1 = sp + 0x80\n 10816: u64 [sp + 0x98] = a0\n 10820: a0 = 0\n 10822: ra = 294, jump @9\n      : @358 [@dyn 147] (gas: 7)\n 10828: u64 [sp + 120] = 0\n 10831: u64 [sp + 112] = 0\n 10834: u64 [sp + 96] = 0x11\n 10838: a0 = 0x4\n 10841: a1 = sp + 0x60\n 10844: u64 [sp + 104] = 0\n 10847: ra = 296, jump @9\n      : @359 [@dyn 148] (gas: 2)\n 10853: a1 = i32 [0x20068]\n 10858: jump @361 if a1 >u 63\n      : @360 (gas: 2)\n 10862: u32 [0x20068] = 0x40\n 10868: fallthrough\n      : @361 (gas: 7)\n 10869: a1 = 0x20070\n 10874: i32 a1 = a1 + 0\n 10876: a0 = 0x1\n 10879: a2 = 0x24\n 10882: ra = 0x12a\n 10886: ecalli 14 // 'seal_return'\n 10888: fallthrough\n      : @362 [@dyn 149] (gas: 22)\n 10889: sp = sp + 0xfffffffffffffc00\n 10893: a2 = sp + 0x300\n 10897: u64 [a2 + 0xf8] = ra\n 10901: u64 [a2 + 0xf0] = s0\n 10905: u64 [a2 + 0xe8] = s1\n 10909: s0 = sp + 0x400\n 10913: sp = sp & 0xffffffffffffffe0\n 10916: s1 = sp\n 10918: a2 = u64 [a1]\n 10920: a3 = u64 [a1 + 0x8]\n 10923: a1 = u32 [a1 + 0x10]\n 10926: u64 [s1 + 0x18] = a0\n 10929: u64 [s1 + 824] = 0\n 10933: u64 [s1 + 0x88] = a1\n 10937: u64 [s1 + 0x330] = a1\n 10941: u64 [s1 + 0x90] = a3\n 10945: u64 [s1 + 0x328] = a3\n 10949: a1 = s1 + 0x320\n 10953: u64 [s1 + 0x98] = a2\n 10957: u64 [s1 + 0x320] = a2\n 10961: a0 = 0\n 10963: ra = 300, jump @9\n      : @363 [@dyn 150] (gas: 7)\n 10969: u64 [s1 + 792] = 0\n 10973: u64 [s1 + 784] = 0\n 10977: u64 [s1 + 768] = 0x1\n 10982: a0 = 0x20\n 10985: a1 = s1 + 0x300\n 10989: u64 [s1 + 776] = 0\n 10993: ra = 302, jump @9\n      : @364 [@dyn 151] (gas: 3)\n 10999: a2 = 0x20068\n 11004: a0 = i32 [0x20068]\n 11009: jump @366 if a0 >u 63\n      : @365 (gas: 2)\n 11013: u32 [0x20068] = 0x40\n 11019: fallthrough\n      : @366 (gas: 15)\n 11020: u64 [s1 + 0x80] = a2\n 11024: a0 = sp + 0xffffffffffffffe0\n 11027: a2 = a0 & 0xffffffffffffffe0\n 11030: u64 [s1 + 0x70] = a2\n 11033: sp = a2\n 11035: a0 = 0x20070\n 11040: i32 a0 = a0 + 0\n 11042: i32 a2 = a2 + 0\n 11044: a1 = 0x40\n 11047: u64 [s1 + 0x78] = a0\n 11050: ra = 0x130\n 11054: ecalli 9 // 'hash_keccak_256'\n 11056: a3 = u64 [s1 + 0x70]\n 11059: t0 = 0x132\n 11063: jump @436\n      : @367 [@dyn 152] (gas: 2)\n 11066: a3 = u64 [s1 + 0x70]\n 11069: t0 = 306, jump @436\n      : @368 [@dyn 153] (gas: 7)\n 11075: u64 [a4 + 0x58] = a3\n 11078: u64 [a4 + 0x50] = a2\n 11081: u64 [a4 + 0x48] = a1\n 11084: u64 [a4 + 0x40] = a0\n 11087: a0 = s1 + 0x2e0\n 11091: a1 = s1 + 0x340\n 11095: ra = 308, jump @11\n      : @369 [@dyn 154] (gas: 9)\n 11101: a4 = s1 + 0x200\n 11105: a0 = u64 [a4 + 0xf0]\n 11109: a1 = u64 [a4 + 0xf8]\n 11113: a2 = u64 [a4 + 0xe8]\n 11117: a3 = u64 [a4 + 0xe0]\n 11121: a1 = a1 | a2\n 11124: a0 = a0 | a3\n 11127: a0 = a0 | a1\n 11130: jump @412 if a0 == 0\n      : @370 (gas: 11)\n 11134: u64 [s1 + 728] = 0\n 11138: a0 = u64 [s1 + 0x98]\n 11142: a2 = s1 + 0x200\n 11146: u64 [a2 + 0xc0] = a0\n 11150: a0 = u64 [s1 + 0x90]\n 11154: u64 [a2 + 0xc8] = a0\n 11158: a1 = s1 + 0x2c0\n 11162: a0 = u64 [s1 + 0x88]\n 11166: u64 [a2 + 0xd0] = a0\n 11170: a0 = 0\n 11172: ra = 310, jump @9\n      : @371 [@dyn 155] (gas: 7)\n 11178: u64 [s1 + 696] = 0\n 11182: u64 [s1 + 688] = 0\n 11186: u64 [s1 + 680] = 0\n 11190: a0 = 0x20\n 11193: a1 = s1 + 0x2a0\n 11197: u64 [s1 + 672] = 0\n 11201: ra = 312, jump @9\n      : @372 [@dyn 156] (gas: 3)\n 11207: a2 = u64 [s1 + 0x80]\n 11211: a0 = i32 [a2]\n 11213: jump @374 if a0 >u 63\n      : @373 (gas: 3)\n 11217: u32 [a2 + 0] = 0x40\n 11220: t0 = 0x13a\n 11224: jump @443\n      : @374 (gas: 1)\n 11227: t0 = 314, jump @443\n      : @375 [@dyn 157] (gas: 5)\n 11233: ra = 0x13c\n 11237: ecalli 9 // 'hash_keccak_256'\n 11239: a3 = u64 [s1 + 0x70]\n 11242: t0 = 0x13e\n 11246: jump @436\n      : @376 [@dyn 158] (gas: 2)\n 11249: a3 = u64 [s1 + 0x70]\n 11252: t0 = 318, jump @436\n      : @377 [@dyn 159] (gas: 7)\n 11258: u64 [a4 + 0x78] = a3\n 11261: u64 [a4 + 0x70] = a2\n 11264: u64 [a4 + 0x68] = a1\n 11267: u64 [a4 + 0x60] = a0\n 11270: a0 = s1 + 0x280\n 11274: a1 = s1 + 0x360\n 11278: ra = 320, jump @11\n      : @378 [@dyn 160] (gas: 9)\n 11284: a4 = s1 + 0x200\n 11288: a0 = u64 [a4 + 0x90]\n 11292: a1 = u64 [a4 + 0x98]\n 11296: a2 = u64 [a4 + 0x88]\n 11300: a3 = u64 [a4 + 0x80]\n 11304: a1 = a1 | a2\n 11307: a0 = a0 | a3\n 11310: a0 = a0 | a1\n 11313: jump @412 if a0 == 0\n      : @379 (gas: 10)\n 11317: u64 [s1 + 632] = 0\n 11321: a0 = u64 [s1 + 0x98]\n 11325: u64 [s1 + 0x260] = a0\n 11329: a0 = u64 [s1 + 0x90]\n 11333: u64 [s1 + 0x268] = a0\n 11337: a1 = s1 + 0x260\n 11341: a0 = u64 [s1 + 0x88]\n 11345: u64 [s1 + 0x270] = a0\n 11349: a0 = 0\n 11351: ra = 322, jump @9\n      : @380 [@dyn 161] (gas: 7)\n 11357: u64 [s1 + 600] = 0\n 11361: u64 [s1 + 592] = 0\n 11365: u64 [s1 + 576] = 0x1\n 11370: a0 = 0x20\n 11373: a1 = s1 + 0x240\n 11377: u64 [s1 + 584] = 0\n 11381: ra = 324, jump @9\n      : @381 [@dyn 162] (gas: 3)\n 11387: a1 = u64 [s1 + 0x80]\n 11391: a0 = i32 [a1]\n 11393: jump @383 if a0 >u 63\n      : @382 (gas: 3)\n 11397: u32 [a1 + 0] = 0x40\n 11400: t0 = 0x146\n 11404: jump @443\n      : @383 (gas: 1)\n 11407: t0 = 326, jump @443\n      : @384 [@dyn 163] (gas: 5)\n 11413: ra = 0x148\n 11417: ecalli 9 // 'hash_keccak_256'\n 11419: a3 = u64 [s1 + 0x70]\n 11422: t0 = 0x14a\n 11426: jump @435\n      : @385 [@dyn 164] (gas: 2)\n 11429: a3 = u64 [s1 + 0x70]\n 11432: t0 = 330, jump @435\n      : @386 [@dyn 165] (gas: 7)\n 11438: u64 [s1 + 0x398] = a3\n 11442: u64 [s1 + 0x390] = a2\n 11446: u64 [s1 + 0x388] = a1\n 11450: u64 [s1 + 0x380] = a0\n 11454: a0 = s1 + 0x220\n 11458: a1 = s1 + 0x380\n 11462: ra = 332, jump @11\n      : @387 [@dyn 166] (gas: 31)\n 11468: a0 = u64 [s1 + 0x220]\n 11472: u64 [s1 + 0x70] = a0\n 11475: a0 = u64 [s1 + 0x228]\n 11479: u64 [s1 + 0x68] = a0\n 11482: a0 = u64 [s1 + 0x230]\n 11486: u64 [s1 + 0x60] = a0\n 11489: a0 = u64 [s1 + 0x238]\n 11493: u64 [s1 + 0x58] = a0\n 11496: i32 a0 = s1 + 0x3a0\n 11500: ecalli 10 // 'now'\n 11502: a4 = s1 + 0x300\n 11506: a3 = u64 [a4 + 0xa0]\n 11510: a0 = u64 [a4 + 0xa8]\n 11514: a1 = u64 [a4 + 0xb0]\n 11518: a2 = u64 [a4 + 0xb8]\n 11522: a4 = u64 [s1 + 0x58]\n 11525: u64 [s1 + 0x1d8] = a4\n 11529: a4 = u64 [s1 + 0x60]\n 11532: u64 [s1 + 0x1d0] = a4\n 11536: a4 = u64 [s1 + 0x68]\n 11539: u64 [s1 + 0x1c8] = a4\n 11543: a4 = u64 [s1 + 0x70]\n 11546: u64 [s1 + 0x1c0] = a4\n 11550: u64 [s1 + 0x1f8] = a2\n 11554: u64 [s1 + 0x1f0] = a1\n 11558: u64 [s1 + 0x1e8] = a0\n 11562: a0 = s1 + 0x200\n 11566: a1 = s1 + 0x1e0\n 11570: a2 = s1 + 0x1c0\n 11574: u64 [s1 + 0x1e0] = a3\n 11578: ra = 334, jump @347\n      : @388 [@dyn 167] (gas: 20)\n 11584: a1 = s1 + 0x200\n 11588: a0 = u64 [a1 + 0x18]\n 11591: u64 [s1 + 0x58] = a0\n 11594: a0 = u64 [a1 + 0x10]\n 11597: u64 [s1 + 0x60] = a0\n 11600: a0 = u64 [a1 + 0x8]\n 11603: u64 [s1 + 0x68] = a0\n 11606: a0 = u64 [a1]\n 11608: u64 [s1 + 0x70] = a0\n 11611: u64 [s1 + 440] = 0\n 11615: a0 = u64 [s1 + 0x88]\n 11619: a2 = s1 + 0x100\n 11623: u64 [a2 + 0xb0] = a0\n 11627: a0 = u64 [s1 + 0x90]\n 11631: u64 [a2 + 0xa8] = a0\n 11635: a1 = s1 + 0x1a0\n 11639: a0 = u64 [s1 + 0x98]\n 11643: u64 [a2 + 0xa0] = a0\n 11647: a0 = 0\n 11649: ra = 336, jump @9\n      : @389 [@dyn 168] (gas: 7)\n 11655: u64 [s1 + 408] = 0\n 11659: u64 [s1 + 400] = 0\n 11663: u64 [s1 + 392] = 0\n 11667: a0 = 0x20\n 11670: a1 = s1 + 0x180\n 11674: u64 [s1 + 384] = 0\n 11678: ra = 338, jump @9\n      : @390 [@dyn 169] (gas: 3)\n 11684: a1 = u64 [s1 + 0x80]\n 11688: a0 = i32 [a1]\n 11690: jump @392 if a0 >u 63\n      : @391 (gas: 2)\n 11694: u32 [a1 + 0] = 0x40\n 11697: fallthrough\n      : @392 (gas: 12)\n 11698: a0 = sp + 0xffffffffffffffe0\n 11701: a0 = a0 & 0xffffffffffffffe0\n 11704: u64 [s1 + 0x98] = a0\n 11708: sp = a0\n 11710: i32 a2 = a0 + 0\n 11712: a1 = 0x40\n 11715: a0 = u64 [s1 + 0x78]\n 11718: ra = 0x154\n 11722: ecalli 9 // 'hash_keccak_256'\n 11724: a3 = u64 [s1 + 0x98]\n 11728: t0 = 0x156\n 11732: jump @436\n      : @393 [@dyn 170] (gas: 2)\n 11735: a3 = u64 [s1 + 0x98]\n 11739: t0 = 342, jump @436\n      : @394 [@dyn 171] (gas: 7)\n 11745: u64 [a4 + 0xd8] = a3\n 11749: u64 [a4 + 0xd0] = a2\n 11753: u64 [a4 + 0xc8] = a1\n 11757: u64 [a4 + 0xc0] = a0\n 11761: a0 = s1 + 0x160\n 11765: a1 = s1 + 0x3c0\n 11769: ra = 344, jump @11\n      : @395 [@dyn 172] (gas: 9)\n 11775: a0 = u64 [s1 + 0x160]\n 11779: u64 [s1 + 0x98] = a0\n 11783: a0 = u64 [s1 + 0x168]\n 11787: u64 [s1 + 0x90] = a0\n 11791: a0 = u64 [s1 + 0x170]\n 11795: u64 [s1 + 0x88] = a0\n 11799: a0 = u64 [s1 + 0x178]\n 11803: u64 [s1 + 0x80] = a0\n 11807: ra = 346, jump @0\n      : @396 [@dyn 173] (gas: 20)\n 11813: a1 = u64 [0x30090]\n 11818: a2 = u64 [0x30098]\n 11823: a3 = u64 [0x300a0]\n 11828: a0 = u64 [0x300a8]\n 11833: u64 [s1 + 0x118] = a0\n 11837: u64 [s1 + 0x110] = a3\n 11841: u64 [s1 + 0x108] = a2\n 11845: u64 [s1 + 0x100] = a1\n 11849: a0 = u64 [s1 + 0x80]\n 11853: u64 [s1 + 0x138] = a0\n 11857: a0 = u64 [s1 + 0x88]\n 11861: u64 [s1 + 0x130] = a0\n 11865: a0 = u64 [s1 + 0x90]\n 11869: u64 [s1 + 0x128] = a0\n 11873: a0 = s1 + 0x140\n 11877: a1 = s1 + 0x120\n 11881: a2 = s1 + 0x100\n 11885: a3 = u64 [s1 + 0x98]\n 11889: u64 [s1 + 0x120] = a3\n 11893: ra = 348, jump @354\n      : @397 [@dyn 174] (gas: 21)\n 11899: a4 = s1 + 0x100\n 11903: a3 = u64 [a4 + 0x40]\n 11906: a0 = u64 [a4 + 0x48]\n 11909: a1 = u64 [a4 + 0x50]\n 11912: a2 = u64 [a4 + 0x58]\n 11915: a4 = u64 [s1 + 0x58]\n 11918: u64 [s1 + 0xb8] = a4\n 11922: a4 = u64 [s1 + 0x60]\n 11925: u64 [s1 + 0xb0] = a4\n 11929: a4 = u64 [s1 + 0x68]\n 11932: u64 [s1 + 0xa8] = a4\n 11936: a4 = u64 [s1 + 0x70]\n 11939: u64 [s1 + 0xa0] = a4\n 11943: u64 [s1 + 0xd8] = a2\n 11947: u64 [s1 + 0xd0] = a1\n 11951: u64 [s1 + 0xc8] = a0\n 11955: a0 = s1 + 0xe0\n 11959: a1 = s1 + 0xc0\n 11963: a2 = s1 + 0xa0\n 11967: u64 [s1 + 0xc0] = a3\n 11971: ra = 350, jump @354\n      : @398 [@dyn 175] (gas: 55)\n 11977: t0 = u64 [s1 + 0xf8]\n 11981: t2 = u64 [s1 + 0xf0]\n 11985: t1 = u64 [s1 + 0xe8]\n 11989: a1 = u64 [s1 + 0xe0]\n 11993: u64 [s1 + 0x58] = a1\n 11996: a0 = clz t0\n 11998: a2 = clz t2\n 12000: a5 = a2 + 0x40\n 12003: a5 = a0 if t0 != 0\n 12006: a0 = clz t1\n 12008: a2 = clz a1\n 12010: a2 = a2 + 0x40\n 12013: a2 = a0 if t1 != 0\n 12016: a0 = a2 + 0x80\n 12020: a3 = t2 | t0\n 12023: a5 = a0 if a3 == 0\n 12026: a2 = a0 <u a2\n 12029: a2 = 0 if a3 != 0\n 12031: a3 = a2 >u 0\n 12033: a0 = a5 <u 0xc5\n 12037: a4 = a0 ^ 0x1\n 12040: a3 = a4 if a2 == 0\n 12043: a0 = a3 <u 0x1\n 12046: a0 = a0 + 0xffffffffffffffff\n 12049: ra = -a3\n 12051: a2 = -a2\n 12053: a1 = a2 - a4\n 12056: a2 = 0xc4 - a5\n 12060: u64 [s1 + 0x88] = ra\n 12064: a5 = ra >u 0\n 12066: a4 = a0 >u 0\n 12068: u64 [s1 + 0x80] = a0\n 12072: a4 = a5 if a0 == 0\n 12075: u64 [s1 + 0x90] = a2\n 12079: a0 = a2 <u 0x100\n 12083: a0 = a0 ^ 0x1\n 12086: a5 = a1 >u 0\n 12088: a0 = a5 if a1 != 0\n 12091: a0 = a4 if a3 != 0\n 12094: a3 = t1 | t0\n 12097: ra = u64 [s1 + 0x58]\n 12100: a4 = ra | t2\n 12103: a3 = a3 | a4\n 12106: a3 = a3 <u 0x1\n 12109: a0 = a0 | a3\n 12112: u64 [s1 + 0x50] = t0\n 12115: a2 = t0\n 12117: a2 = 0 if a0 != 0\n 12119: a5 = t2\n 12121: a5 = 0 if a0 != 0\n 12123: a4 = t1\n 12125: a4 = 0 if a0 != 0\n 12127: t0 = ra\n 12129: t0 = 0 if a0 != 0\n 12131: jump @415 if a0 != 0\n      : @399 (gas: 9)\n 12135: ra = t2\n 12137: a0 = u64 [s1 + 0x90]\n 12141: a0 = a0 ^ 0xff\n 12145: a3 = u64 [s1 + 0x88]\n 12149: t2 = a0 | a3\n 12152: a3 = u64 [s1 + 0x80]\n 12156: a0 = a1 | a3\n 12159: a0 = t2 | a0\n 12162: jump @415 if a0 == 0\n      : @400 (gas: 22)\n 12166: a4 = u64 [s1 + 0x90]\n 12170: a2 = a4 + 0x1\n 12173: u64 [s1 + 0x98] = a2\n 12177: a0 = a2 <u 0x1\n 12180: a0 = a0 + a1\n 12183: u64 [s1 + 0x70] = a0\n 12186: a0 = a0 | a2\n 12189: a0 = a0 <u 0x1\n 12192: a2 = u64 [s1 + 0x88]\n 12196: a0 = a0 + a2\n 12199: u64 [s1 + 0x60] = a0\n 12202: a0 = a0 <u a2\n 12205: a0 = a0 + a3\n 12208: u64 [s1 + 0x68] = a0\n 12211: a1 = 0xff - a4\n 12215: u64 [s1 + 0x78] = a1\n 12218: a2 = 0x80 - a1\n 12222: a0 = u64 [s1 + 0x58]\n 12225: a1 = t1\n 12227: u64 [s1 + 0x48] = t1\n 12230: u64 [s1 + 0x40] = ra\n 12233: ra = 352, jump @445\n      : @401 [@dyn 176] (gas: 6)\n 12239: u64 [s1 + 0x88] = a0\n 12243: u64 [s1 + 0x80] = a1\n 12247: a0 = u64 [s1 + 0x40]\n 12250: a1 = u64 [s1 + 0x50]\n 12253: a2 = u64 [s1 + 0x78]\n 12256: ra = 354, jump @450\n      : @402 [@dyn 177] (gas: 9)\n 12262: u64 [s1 + 0x38] = a0\n 12265: a0 = u64 [s1 + 0x80]\n 12269: a0 = a0 | a1\n 12272: u64 [s1 + 0x80] = a0\n 12276: a1 = u64 [s1 + 0x90]\n 12280: a2 = 0x7f - a1\n 12283: a0 = u64 [s1 + 0x58]\n 12286: a1 = u64 [s1 + 0x48]\n 12289: ra = 356, jump @450\n      : @403 [@dyn 178] (gas: 18)\n 12295: a2 = u64 [s1 + 0x78]\n 12298: a3 = a2 <u 0x80\n 12302: u64 [s1 + 0x90] = a3\n 12306: a4 = u64 [s1 + 0x80]\n 12310: a1 = a4 if a3 != 0\n 12313: a4 = u64 [s1 + 0x50]\n 12316: a1 = a4 if a2 == 0\n 12319: u64 [s1 + 0x80] = a1\n 12323: a1 = u64 [s1 + 0x88]\n 12327: a4 = u64 [s1 + 0x38]\n 12330: a1 = a1 | a4\n 12333: a1 = a0 if a3 == 0\n 12336: a0 = u64 [s1 + 0x40]\n 12339: a1 = a0 if a2 == 0\n 12342: u64 [s1 + 0x88] = a1\n 12346: a0 = u64 [s1 + 0x58]\n 12349: a1 = u64 [s1 + 0x48]\n 12352: ra = 358, jump @450\n      : @404 [@dyn 179] (gas: 13)\n 12358: a3 = u64 [s1 + 0x60]\n 12361: a4 = u64 [s1 + 0x68]\n 12364: a2 = u64 [s1 + 0x70]\n 12367: a2 = a2 | a4\n 12370: a5 = u64 [s1 + 0x98]\n 12374: a5 = a5 | a3\n 12377: a2 = a2 | a5\n 12380: a3 = u64 [s1 + 0x90]\n 12384: a1 = 0 if a3 == 0\n 12386: u64 [s1 + 0x78] = a1\n 12389: a0 = 0 if a3 == 0\n 12391: u64 [s1 + 0x90] = a0\n 12395: jump @413 if a2 == 0\n      : @405 (gas: 7)\n 12399: a0 = 0xde0b6b3a7640000\n 12409: u64 [s1 + 0x30] = a0\n 12412: a0 = u64 [s1 + 0x98]\n 12416: a2 = a0 + 0xffffffffffffff80\n 12419: a0 = u64 [s1 + 0x40]\n 12422: a1 = u64 [s1 + 0x50]\n 12425: ra = 360, jump @445\n      : @406 [@dyn 180] (gas: 6)\n 12431: u64 [s1 + 0x38] = a0\n 12434: u64 [s1 + 0x20] = a1\n 12437: a0 = u64 [s1 + 0x58]\n 12440: a1 = u64 [s1 + 0x48]\n 12443: a2 = u64 [s1 + 0x98]\n 12447: ra = 362, jump @445\n      : @407 [@dyn 181] (gas: 7)\n 12453: u64 [s1 + 0x10] = a0\n 12456: u64 [s1 + 0x28] = a1\n 12459: a1 = u64 [s1 + 0x98]\n 12463: a2 = 0x80 - a1\n 12467: a0 = u64 [s1 + 0x40]\n 12470: a1 = u64 [s1 + 0x50]\n 12473: ra = 364, jump @450\n      : @408 [@dyn 182] (gas: 21)\n 12479: a2 = u64 [s1 + 0x28]\n 12482: a1 = a1 | a2\n 12485: a3 = u64 [s1 + 0x98]\n 12489: a4 = a3 <u 0x80\n 12493: u64 [s1 + 0x28] = a4\n 12496: a2 = u64 [s1 + 0x20]\n 12499: a1 = a2 if a4 == 0\n 12502: a2 = u64 [s1 + 0x48]\n 12505: a2 = a1 if a3 != 0\n 12508: u64 [s1 + 0x48] = a2\n 12511: a1 = u64 [s1 + 0x10]\n 12514: a0 = a0 | a1\n 12517: a1 = u64 [s1 + 0x38]\n 12520: a0 = a1 if a4 == 0\n 12523: a1 = u64 [s1 + 0x58]\n 12526: a1 = a0 if a3 != 0\n 12529: a2 = a3\n 12531: u64 [s1 + 0x58] = a1\n 12534: a0 = u64 [s1 + 0x40]\n 12537: a1 = u64 [s1 + 0x50]\n 12540: ra = 366, jump @445\n      : @409 [@dyn 183] (gas: 13)\n 12546: a5 = 0\n 12548: a2 = u64 [s1 + 0x28]\n 12551: a1 = 0 if a2 == 0\n 12553: a0 = 0 if a2 == 0\n 12555: a4 = u64 [s1 + 0x30]\n 12558: a2 = a4 + 0xffffffffffffffff\n 12561: u64 [s1 + 0x28] = a2\n 12564: a2 = a4 >u 0\n 12566: a2 = a2 + 0xffffffffffffffff\n 12569: u64 [s1 + 0x20] = a2\n 12572: t2 = u64 [s1 + 0x48]\n 12575: t0 = u64 [s1 + 0x58]\n 12578: fallthrough\n      : @410 (gas: 90)\n 12579: u64 [s1 + 0x48] = a1\n 12582: u64 [s1 + 0x50] = a5\n 12585: u64 [s1 + 56] = 0\n 12588: a2 = t0 >> 0x3f\n 12591: a3 = t2 << 0x1\n 12594: a3 = a3 | a2\n 12597: a2 = t0 << 0x1\n 12600: ra = u64 [s1 + 0x80]\n 12604: a4 = ra >> 0x3f\n 12607: a4 = a4 | a2\n 12610: u64 [s1 + 0x58] = a4\n 12613: a2 = u64 [s1 + 0x20]\n 12616: a1 = a2 ^ a3\n 12619: u64 [s1 + 0x40] = a1\n 12622: a1 = a2 <u a3\n 12625: a5 = u64 [s1 + 0x28]\n 12628: t0 = a5 <u a4\n 12631: a4 = u64 [s1 + 0x40]\n 12634: t0 = a1 if a4 != 0\n 12637: a1 = u64 [s1 + 0x48]\n 12640: a1 = a1 << 0x1\n 12643: a4 = a0 >> 0x3f\n 12646: a1 = a1 | a4\n 12649: u64 [s1 + 0x48] = a1\n 12652: a4 = t2 >> 0x3f\n 12655: a0 = a0 << 0x1\n 12658: a4 = a4 | a0\n 12661: a0 = ra << 0x1\n 12664: a1 = u64 [s1 + 0x88]\n 12668: a5 = a1 >> 0x3f\n 12671: a0 = a0 | a5\n 12674: u64 [s1 + 0x80] = a0\n 12678: a5 = a1 << 0x1\n 12681: a0 = u64 [s1 + 0x78]\n 12684: a1 = a0 >> 0x3f\n 12687: t2 = a5 | a1\n 12690: a5 = a0 << 0x1\n 12693: a0 = u64 [s1 + 0x90]\n 12697: ra = a0 >> 0x3f\n 12700: a5 = a5 | ra\n 12703: a0 = a0 << 0x1\n 12706: a1 = u64 [s1 + 0x50]\n 12709: a0 = a0 | a1\n 12712: u64 [s1 + 0x90] = a0\n 12716: a0 = a5 | 0\n 12718: u64 [s1 + 0x78] = a0\n 12721: a0 = t2 | 0\n 12723: u64 [s1 + 0x88] = a0\n 12727: a0 = u64 [s1 + 0x80]\n 12731: a0 = a0 | 0\n 12733: u64 [s1 + 0x80] = a0\n 12737: a0 = a2 - a4\n 12740: a0 = a0 <u t0\n 12743: a1 = a2 <u a4\n 12746: t1 = u64 [s1 + 0x48]\n 12749: a5 = a2 - t1\n 12752: a5 = a5 - a1\n 12755: a5 = a5 - a0\n 12758: ra = a5 >>a 0x3f\n 12761: a0 = u64 [s1 + 0x30]\n 12764: a0 = ra & a0\n 12767: a1 = u64 [s1 + 0x58]\n 12770: t0 = a1 - a0\n 12773: a1 = a1 <u a0\n 12776: t2 = a3 - a1\n 12779: a1 = 0 if a3 != 0\n 12781: a0 = a4 - a1\n 12784: a1 = a4 <u a1\n 12787: a1 = t1 - a1\n 12790: a3 = u64 [s1 + 0x98]\n 12794: a5 = u64 [s1 + 0x70]\n 12797: a2 = a3 | a5\n 12800: a2 = a2 <u 0x1\n 12803: a4 = u64 [s1 + 0x60]\n 12806: t1 = a4 <u a2\n 12809: a4 = a4 - a2\n 12812: a2 = a3 <u 0x1\n 12815: a5 = a5 - a2\n 12818: a2 = u64 [s1 + 0x68]\n 12821: a2 = a2 - t1\n 12824: a3 = a3 + 0xffffffffffffffff\n 12827: u64 [s1 + 0x70] = a5\n 12830: u64 [s1 + 0x68] = a2\n 12833: a2 = a2 | a5\n 12836: u64 [s1 + 0x98] = a3\n 12840: a3 = a3 | a4\n 12843: a2 = a2 | a3\n 12846: a5 = ra & 0x1\n 12849: u64 [s1 + 0x60] = a4\n 12852: jump @410 if a2 != 0\n      : @411 (gas: 1)\n 12856: jump @414\n      : @412 (gas: 5)\n 12858: t0 = 0\n 12860: a4 = 0\n 12862: a5 = 0\n 12864: a2 = 0\n 12866: jump @415\n      : @413 (gas: 3)\n 12868: a5 = 0\n 12870: u64 [s1 + 56] = 0\n 12873: fallthrough\n      : @414 (gas: 20)\n 12874: a2 = u64 [s1 + 0x88]\n 12878: a0 = a2 >> 0x3f\n 12881: a1 = u64 [s1 + 0x80]\n 12885: a1 = a1 << 0x1\n 12888: t1 = a1 | a0\n 12891: a4 = u64 [s1 + 0x78]\n 12894: a1 = a4 >> 0x3f\n 12897: a2 = a2 << 0x1\n 12900: a1 = a1 | a2\n 12903: a3 = u64 [s1 + 0x90]\n 12907: a2 = a3 >> 0x3f\n 12910: a4 = a4 << 0x1\n 12913: a3 = a3 << 0x1\n 12916: t0 = a5 | a3\n 12919: a0 = u64 [s1 + 0x38]\n 12922: a2 = a2 | a0\n 12925: a4 = a4 | a2\n 12928: a5 = a0 | a1\n 12931: a2 = a0 | t1\n 12934: fallthrough\n      : @415 (gas: 12)\n 12935: a1 = u64 [s1 + 0x18]\n 12938: u64 [a1] = t0\n 12940: u64 [a1 + 0x8] = a4\n 12943: u64 [a1 + 0x10] = a5\n 12946: u64 [a1 + 0x18] = a2\n 12949: sp = s0 + 0xfffffffffffffc00\n 12953: a0 = sp + 0x300\n 12957: ra = u64 [a0 + 0xf8]\n 12961: s0 = u64 [a0 + 0xf0]\n 12965: s1 = u64 [a0 + 0xe8]\n 12969: sp = sp + 0x400\n 12973: ret\n      : @416 (gas: 20)\n 12975: sp = sp + 0xfffffffffffffe80\n 12979: u64 [sp + 0x178] = ra\n 12983: u64 [sp + 0x170] = s0\n 12987: u64 [sp + 0x168] = s1\n 12991: s0 = sp + 0x180\n 12995: sp = sp & 0xffffffffffffffe0\n 12998: s1 = sp\n 13000: a2 = u64 [a0]\n 13002: a1 = u64 [a0 + 0x8]\n 13005: a0 = u32 [a0 + 0x10]\n 13008: u64 [s1 + 216] = 0\n 13012: u64 [s1 + 0x28] = a0\n 13015: u64 [s1 + 0xd0] = a0\n 13019: u64 [s1 + 0x10] = a1\n 13022: u64 [s1 + 0xc8] = a1\n 13026: a1 = s1 + 0xc0\n 13030: u64 [s1 + 0x18] = a2\n 13033: u64 [s1 + 0xc0] = a2\n 13037: a0 = 0\n 13039: ra = 368, jump @9\n      : @417 [@dyn 184] (gas: 7)\n 13045: u64 [s1 + 184] = 0\n 13049: u64 [s1 + 176] = 0\n 13053: u64 [s1 + 160] = 0x1\n 13058: a0 = 0x20\n 13061: a1 = s1 + 0xa0\n 13065: u64 [s1 + 168] = 0\n 13069: ra = 370, jump @9\n      : @418 [@dyn 185] (gas: 3)\n 13075: a2 = 0x20068\n 13080: a0 = i32 [0x20068]\n 13085: jump @420 if a0 >u 63\n      : @419 (gas: 2)\n 13089: u32 [0x20068] = 0x40\n 13095: fallthrough\n      : @420 (gas: 15)\n 13096: u64 [s1 + 0x30] = a2\n 13099: a0 = sp + 0xffffffffffffffe0\n 13102: a2 = a0 & 0xffffffffffffffe0\n 13105: u64 [s1 + 0x38] = a2\n 13108: sp = a2\n 13110: a0 = 0x20070\n 13115: i32 a0 = a0 + 0\n 13117: i32 a2 = a2 + 0\n 13119: a1 = 0x40\n 13122: u64 [s1 + 0x20] = a0\n 13125: ra = 0x174\n 13129: ecalli 9 // 'hash_keccak_256'\n 13131: a3 = u64 [s1 + 0x38]\n 13134: t0 = 0x176\n 13138: jump @435\n      : @421 [@dyn 186] (gas: 2)\n 13141: a3 = u64 [s1 + 0x38]\n 13144: t0 = 374, jump @435\n      : @422 [@dyn 187] (gas: 7)\n 13150: u64 [s1 + 0xf8] = a3\n 13154: u64 [s1 + 0xf0] = a2\n 13158: u64 [s1 + 0xe8] = a1\n 13162: u64 [s1 + 0xe0] = a0\n 13166: a0 = s1 + 0x80\n 13170: a1 = s1 + 0xe0\n 13174: ra = 376, jump @11\n      : @423 [@dyn 188] (gas: 8)\n 13180: a0 = u64 [s1 + 0x90]\n 13184: a1 = u64 [s1 + 0x98]\n 13188: a2 = u64 [s1 + 0x88]\n 13192: a3 = u64 [s1 + 0x80]\n 13196: a1 = a1 | a2\n 13199: a0 = a0 | a3\n 13202: a0 = a0 | a1\n 13205: jump @432 if a0 != 0\n      : @424 (gas: 10)\n 13209: u64 [s1 + 120] = 0\n 13212: a0 = u64 [s1 + 0x18]\n 13215: u64 [s1 + 0x60] = a0\n 13218: a0 = u64 [s1 + 0x10]\n 13221: u64 [s1 + 0x68] = a0\n 13224: a1 = s1 + 0x60\n 13227: a0 = u64 [s1 + 0x28]\n 13230: u64 [s1 + 0x70] = a0\n 13233: a0 = 0\n 13235: ra = 378, jump @9\n      : @425 [@dyn 189] (gas: 7)\n 13241: u64 [s1 + 88] = 0\n 13244: u64 [s1 + 80] = 0\n 13247: u64 [s1 + 64] = 0x1\n 13251: a0 = 0x20\n 13254: a1 = s1 + 0x40\n 13257: u64 [s1 + 72] = 0\n 13260: ra = 380, jump @9\n      : @426 [@dyn 190] (gas: 3)\n 13266: i32 a0 = s1 + 0x100\n 13270: ecalli 10 // 'now'\n 13272: fallthrough\n      : @427 (gas: 12)\n 13273: a3 = s1 + 0x100\n 13277: a0 = u64 [a3 + 0x18]\n 13280: u64 [s1 + 0x18] = a0\n 13283: a0 = u64 [a3 + 0x10]\n 13286: u64 [s1 + 0x28] = a0\n 13289: a0 = u64 [a3 + 0x8]\n 13292: u64 [s1 + 0x38] = a0\n 13295: a2 = u64 [s1 + 0x30]\n 13298: a0 = i32 [a2]\n 13300: a1 = u64 [a3]\n 13302: u64 [s1 + 0x10] = a1\n 13305: jump @429 if a0 >u 63\n      : @428 (gas: 2)\n 13309: u32 [a2 + 0] = 0x40\n 13312: fallthrough\n      : @429 (gas: 12)\n 13313: a0 = sp + 0xffffffffffffffe0\n 13316: a0 = a0 & 0xffffffffffffffe0\n 13319: u64 [s1 + 0x30] = a0\n 13322: sp = a0\n 13324: i32 a2 = a0 + 0\n 13326: a1 = 0x40\n 13329: a0 = u64 [s1 + 0x20]\n 13332: ra = 0x17e\n 13336: ecalli 9 // 'hash_keccak_256'\n 13338: a3 = u64 [s1 + 0x30]\n 13341: t0 = 0x180\n 13345: jump @435\n      : @430 [@dyn 191] (gas: 2)\n 13347: a3 = u64 [s1 + 0x30]\n 13350: t0 = 384, jump @435\n      : @431 [@dyn 192] (gas: 16)\n 13355: a4 = s1 + 0x100\n 13359: u64 [a4 + 0x38] = a3\n 13362: u64 [a4 + 0x30] = a2\n 13365: u64 [a4 + 0x28] = a1\n 13368: u64 [a4 + 0x20] = a0\n 13371: a0 = u64 [s1 + 0x18]\n 13374: u64 [a4 + 0x58] = a0\n 13377: a0 = u64 [s1 + 0x28]\n 13380: u64 [a4 + 0x50] = a0\n 13383: a0 = u64 [s1 + 0x38]\n 13386: u64 [a4 + 0x48] = a0\n 13389: a0 = u64 [s1 + 0x10]\n 13392: u64 [a4 + 0x40] = a0\n 13395: a0 = s1 + 0x120\n 13399: a1 = s1 + 0x140\n 13403: ra = 386, jump @12\n      : @432 [@dyn 193] (gas: 6)\n 13409: sp = s0 + 0xfffffffffffffe80\n 13413: ra = u64 [sp + 0x178]\n 13417: s0 = u64 [sp + 0x170]\n 13421: s1 = u64 [sp + 0x168]\n 13425: sp = sp + 0x180\n 13429: ret\n      : @433 [export #0: 'call'] (gas: 2)\n 13431: a0 = 0\n 13433: ra = 388, jump @21\n      : @434 [@dyn 194] [export #1: 'deploy'] (gas: 2)\n 13439: a0 = 0x1\n 13442: ra = 390, jump @21\n      : @435 [@dyn 195] (gas: 9)\n 13448: a0 = u64 [a3 + 0x18]\n 13451: a1 = u64 [a3 + 0x10]\n 13454: a2 = u64 [a3 + 0x8]\n 13457: a3 = u64 [a3]\n 13459: a0 = reverse a0\n 13461: a1 = reverse a1\n 13463: a2 = reverse a2\n 13465: a3 = reverse a3\n 13467: jump [t0]\n      : @436 (gas: 10)\n 13469: a0 = u64 [a3 + 0x18]\n 13472: a1 = u64 [a3 + 0x10]\n 13475: a2 = u64 [a3 + 0x8]\n 13478: a3 = u64 [a3]\n 13480: a0 = reverse a0\n 13482: a1 = reverse a1\n 13484: a2 = reverse a2\n 13486: a3 = reverse a3\n 13488: a4 = s1 + 0x300\n 13492: jump [t0]\n      : @437 (gas: 8)\n 13494: a0 = a0 | a2\n 13497: a2 = a3 | a1\n 13500: a2 = a2 | a0\n 13503: a2 = a2 >> 0x20\n 13506: a0 = a0 | a1\n 13509: a0 = a0 << 0x20\n 13512: a0 = a0 | a2\n 13515: jump [t0]\n      : @438 (gas: 15)\n 13517: a2 = u64 [s1 + 0x38]\n 13520: a0 = u64 [a2 + 0x8]\n 13523: a1 = i32 [a2 + 0x10]\n 13526: a2 = u64 [a2]\n 13528: a0 = reverse a0\n 13530: a3 = a0 << 0x20\n 13533: a1 = reverse a1\n 13535: a1 = a1 >> 0x20\n 13538: a3 = a3 | a1\n 13541: a0 = a0 >> 0x20\n 13544: a1 = reverse a2\n 13546: a2 = a1 << 0x20\n 13549: a0 = a0 | a2\n 13552: a1 = a1 >> 0x20\n 13555: jump [t0]\n      : @439 (gas: 14)\n 13557: a0 = u64 [a2 + 0x8]\n 13560: a1 = u64 [a2]\n 13562: a2 = i32 [a2 + 0x10]\n 13565: a0 = reverse a0\n 13567: a3 = a0 >> 0x20\n 13570: a1 = reverse a1\n 13572: a4 = a1 << 0x20\n 13575: a3 = a3 | a4\n 13578: a0 = a0 << 0x20\n 13581: a2 = reverse a2\n 13583: a2 = a2 >> 0x20\n 13586: a0 = a0 | a2\n 13589: a1 = a1 >> 0x20\n 13592: jump [t0]\n      : @440 (gas: 12)\n 13594: a0 = u64 [a3 + 0x18]\n 13597: a1 = u64 [a3 + 0x10]\n 13600: a2 = u64 [a3 + 0x8]\n 13603: a3 = u64 [a3]\n 13605: a0 = reverse a0\n 13607: a1 = reverse a1\n 13609: a2 = reverse a2\n 13611: a3 = reverse a3\n 13613: a4 = s1 + 0x7ff\n 13617: a4 = a4 + 0x11\n 13620: a5 = a4 + 0x100\n 13624: jump [t0]\n      : @441 (gas: 11)\n 13626: a0 = u64 [a3 + 0x18]\n 13629: a1 = u64 [a3 + 0x10]\n 13632: a2 = u64 [a3 + 0x8]\n 13635: a3 = u64 [a3]\n 13637: a0 = reverse a0\n 13639: a1 = reverse a1\n 13641: a2 = reverse a2\n 13643: a3 = reverse a3\n 13645: a4 = s1 + 0x7ff\n 13649: a4 = a4 + 0x11\n 13652: jump [t0]\n      : @442 (gas: 9)\n 13654: a0 = u64 [a3 + 0x18]\n 13657: a1 = u64 [a3 + 0x10]\n 13660: a2 = u64 [a3 + 0x8]\n 13663: a3 = u64 [a3]\n 13665: a0 = reverse a0\n 13667: a4 = reverse a1\n 13669: a2 = reverse a2\n 13671: a3 = reverse a3\n 13673: jump [t0]\n      : @443 (gas: 8)\n 13675: a0 = sp + 0xffffffffffffffe0\n 13678: a0 = a0 & 0xffffffffffffffe0\n 13681: u64 [s1 + 0x70] = a0\n 13684: sp = a0\n 13686: i32 a2 = a0 + 0\n 13688: a1 = 0x40\n 13691: a0 = u64 [s1 + 0x78]\n 13694: jump [t0]\n      : @444 (gas: 8)\n 13696: a0 = u64 [a4 + 0x80]\n 13700: a1 = u64 [a4 + 0x88]\n 13704: a2 = u64 [a4 + 0x78]\n 13707: a3 = u64 [a4 + 0x70]\n 13710: a1 = a1 | a2\n 13713: a0 = a0 | a3\n 13716: a0 = a0 | a1\n 13719: jump [t0]\n      : @445 (gas: 2)\n 13721: a3 = a2 & 0x40\n 13724: jump @449 if a3 != 0\n      : @446 (gas: 1)\n 13727: jump @448 if a2 == 0\n      : @447 (gas: 6)\n 13730: i32 a3 = 0x40 - a2\n 13733: a3 = a1 << a3\n 13736: a1 = a1 >> a2\n 13739: a0 = a0 >> a2\n 13742: a0 = a0 | a3\n 13745: ret\n      : @448 (gas: 1)\n 13747: ret\n      : @449 (gas: 4)\n 13749: a0 = a2 + 0xffffffffffffffc0\n 13752: a0 = a1 >> a0\n 13755: a1 = 0\n 13757: ret\n      : @450 (gas: 2)\n 13759: a3 = a2 & 0x40\n 13762: jump @454 if a3 != 0\n      : @451 (gas: 1)\n 13765: jump @453 if a2 == 0\n      : @452 (gas: 6)\n 13768: i32 a3 = 0x40 - a2\n 13771: a3 = a0 >> a3\n 13774: a0 = a0 << a2\n 13777: a1 = a1 << a2\n 13780: a1 = a1 | a3\n 13783: ret\n      : @453 (gas: 1)\n 13785: ret\n      : @454 (gas: 4)\n 13787: a1 = a2 + 0xffffffffffffffc0\n 13790: a1 = a0 << a1\n 13793: a0 = 0\n 13795: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"claimRewards()":"372500ab","deposits(address)":"fc7e286d","getContractBalance()":"6f9fb98a","getPendingRewards(address)":"f6ed2017","getStakedAmount(address)":"4da6a556","habitTracker()":"836ee1c0","lastUpdateTime(address)":"2ce9aead","ratePerSecond()":"8eff1a98","stake(address,uint256)":"adc9772e","unstake(address,uint256)":"c2a672e0"}},"irOptimized":"/// @use-src 2:\"contracts/interfaces/IStakingAdapter.sol\", 3:\"contracts/mocks/MockStakingRewards.sol\"\nobject \"MockStakingRewards_1770\" {\n    code {\n        {\n            /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MockStakingRewards_1770\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n            let value := mload(_1)\n            let value_1 := mload(add(_1, 32))\n            if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:1209:1239  \"ratePerSecond = _ratePerSecond\"\n            mstore(128, value)\n            /// @src 3:1249:1277  \"habitTracker = _habitTracker\"\n            mstore(160, value_1)\n            /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"MockStakingRewards_1770_deployed\")\n            codecopy(_2, dataoffset(\"MockStakingRewards_1770_deployed\"), _3)\n            setimmutable(_2, \"1417\", mload(/** @src 3:1209:1239  \"ratePerSecond = _ratePerSecond\" */ 128))\n            /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n            setimmutable(_2, \"1419\", mload(/** @src 3:1249:1277  \"habitTracker = _habitTracker\" */ 160))\n            /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n            return(_2, _3)\n        }\n    }\n    /// @use-src 3:\"contracts/mocks/MockStakingRewards.sol\"\n    object \"MockStakingRewards_1770_deployed\" {\n        code {\n            {\n                /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x2ce9aead {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 3:521:570  \"mapping(address => uint256) public lastUpdateTime\" */ 1)\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        mstore(_1, sload(keccak256(0, 64)))\n                        return(_1, 32)\n                    }\n                    case 0x372500ab {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 3:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 3:917:943  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 3:917:927  \"msg.sender\" */ caller(), /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ and(/** @src 3:931:943  \"habitTracker\" */ loadimmutable(\"1419\"), /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 3:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 3:952:970  \"OnlyHabitTracker()\"\n                            mstore(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 3:952:970  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 3:980:981  \"_\"\n                        let _2 := /** @src 3:2044:2887  \"function claimRewards() external onlyHabitTracker returns (uint256 claimed) {...\" */ fun_claimRewards_inner()\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _2)\n                        return(memPos, 32)\n                    }\n                    case 0x4da6a556 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _3 := sload(keccak256(0, 64))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _3)\n                        return(memPos_1, 32)\n                    }\n                    case 0x6f9fb98a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := /** @src 3:3207:3228  \"address(this).balance\" */ selfbalance()\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, ret)\n                        return(memPos_2, 32)\n                    }\n                    case 0x836ee1c0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, and(/** @src 3:428:465  \"address public immutable habitTracker\" */ loadimmutable(\"1419\"), /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_3, 32)\n                    }\n                    case 0x8eff1a98 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 3:333:371  \"uint256 public immutable ratePerSecond\" */ loadimmutable(\"1417\"))\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0xadc9772e {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value := calldataload(36)\n                        /// @src 3:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 3:917:943  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 3:917:927  \"msg.sender\" */ caller(), /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ and(/** @src 3:931:943  \"habitTracker\" */ loadimmutable(\"1419\"), /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 3:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 3:952:970  \"OnlyHabitTracker()\"\n                            mstore(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 3:952:970  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 3:1379:1426  \"if (msg.value != amount) revert InvalidAmount()\"\n                        if /** @src 3:1383:1402  \"msg.value != amount\" */ iszero(eq(/** @src 3:1383:1392  \"msg.value\" */ callvalue(), /** @src 3:1383:1402  \"msg.value != amount\" */ value))\n                        /// @src 3:1379:1426  \"if (msg.value != amount) revert InvalidAmount()\"\n                        {\n                            /// @src 3:1411:1426  \"InvalidAmount()\"\n                            mstore(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 3:1411:1426  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 3:1436:1475  \"if (amount == 0) revert InvalidAmount()\"\n                        if /** @src 3:1440:1451  \"amount == 0\" */ iszero(value)\n                        /// @src 3:1436:1475  \"if (amount == 0) revert InvalidAmount()\"\n                        {\n                            /// @src 3:1460:1475  \"InvalidAmount()\"\n                            mstore(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 3:1411:1426  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            /// @src 3:1460:1475  \"InvalidAmount()\"\n                            revert(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 3:1501:1505  \"user\"\n                        fun_updateRewards(value0)\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        let _4 := and(value0, sub(shl(160, 1), 1))\n                        mstore(0, _4)\n                        mstore(32, 0)\n                        let dataSlot := keccak256(0, 64)\n                        let _5 := sload(/** @src 3:1516:1540  \"deposits[user] += amount\" */ dataSlot)\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        let sum := add(_5, value)\n                        if gt(_5, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(dataSlot, sum)\n                        /// @src 3:1556:1576  \"Staked(user, amount)\"\n                        let _6 := /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ mload(64)\n                        mstore(_6, value)\n                        /// @src 3:1556:1576  \"Staked(user, amount)\"\n                        log2(_6, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 32, /** @src 3:1556:1576  \"Staked(user, amount)\" */ 0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d, _4)\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        return(0, 0)\n                    }\n                    case 0xc2a672e0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        /// @src 3:931:943  \"habitTracker\"\n                        let _7 := loadimmutable(\"1419\")\n                        /// @src 3:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        if /** @src 3:917:943  \"msg.sender != habitTracker\" */ iszero(eq(/** @src 3:917:927  \"msg.sender\" */ caller(), /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ and(/** @src 3:931:943  \"habitTracker\" */ _7, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 3:913:970  \"if (msg.sender != habitTracker) revert OnlyHabitTracker()\"\n                        {\n                            /// @src 3:952:970  \"OnlyHabitTracker()\"\n                            mstore(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 3:952:970  \"OnlyHabitTracker()\" */ shl(226, 0x30e7e801))\n                            revert(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 3:1672:1711  \"if (amount == 0) revert InvalidAmount()\"\n                        if /** @src 3:1676:1687  \"amount == 0\" */ iszero(value_1)\n                        /// @src 3:1672:1711  \"if (amount == 0) revert InvalidAmount()\"\n                        {\n                            /// @src 3:1696:1711  \"InvalidAmount()\"\n                            mstore(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 3:1411:1426  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            /// @src 3:1696:1711  \"InvalidAmount()\"\n                            revert(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        let _8 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _8)\n                        mstore(32, 0)\n                        /// @src 3:1721:1778  \"if (deposits[user] < amount) revert InsufficientBalance()\"\n                        if /** @src 3:1725:1748  \"deposits[user] < amount\" */ lt(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(0, 64)), /** @src 3:1725:1748  \"deposits[user] < amount\" */ value_1)\n                        /// @src 3:1721:1778  \"if (deposits[user] < amount) revert InsufficientBalance()\"\n                        {\n                            /// @src 3:1757:1778  \"InsufficientBalance()\"\n                            mstore(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 3:1757:1778  \"InsufficientBalance()\" */ shl(227, 0x1e9acf17))\n                            revert(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 3:1804:1808  \"user\"\n                        fun_updateRewards(value0_1)\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        mstore(0, _8)\n                        mstore(32, 0)\n                        let dataSlot_1 := keccak256(0, 64)\n                        sstore(dataSlot_1, /** @src 3:1819:1843  \"deposits[user] -= amount\" */ checked_sub_uint256(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(/** @src 3:1819:1843  \"deposits[user] -= amount\" */ dataSlot_1), value_1))\n                        /// @src 3:1910:1946  \"habitTracker.call{value: amount}(\\\"\\\")\"\n                        let expr_component := call(gas(), _7, value_1, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 0, 0, 0)\n                        /// @src 3:1910:1946  \"habitTracker.call{value: amount}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 3:1956:1993  \"if (!success) revert TransferFailed()\"\n                        if /** @src 3:1960:1968  \"!success\" */ iszero(expr_component)\n                        /// @src 3:1956:1993  \"if (!success) revert TransferFailed()\"\n                        {\n                            /// @src 3:1977:1993  \"TransferFailed()\"\n                            mstore(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, /** @src 3:1977:1993  \"TransferFailed()\" */ shl(227, 0x12171d83))\n                            revert(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0, 4)\n                        }\n                        /// @src 3:2009:2031  \"Unstaked(user, amount)\"\n                        let _9 := /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ mload(64)\n                        mstore(_9, value_1)\n                        /// @src 3:2009:2031  \"Unstaked(user, amount)\"\n                        log2(_9, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 32, /** @src 3:2009:2031  \"Unstaked(user, amount)\" */ 0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75, _8)\n                        /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                        return(0, 0)\n                    }\n                    case 0xf6ed2017 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 3:3088:3115  \"return _pendingRewards(who)\"\n                        let var := /** @src 3:3095:3115  \"_pendingRewards(who)\" */ fun_pendingRewards(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ abi_decode_address())\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, var)\n                        return(memPos_5, 32)\n                    }\n                    case 0xfc7e286d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _10 := sload(keccak256(0, 64))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _10)\n                        return(memPos_6, 32)\n                    }\n                }\n                if iszero(calldatasize()) { stop() }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(and(add(_1, 31), not(31)), 63), not(31)))\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ returndatasize())\n                }\n            }\n            /// @src 3:2044:2887  \"function claimRewards() external onlyHabitTracker returns (uint256 claimed) {...\"\n            function fun_claimRewards_inner() -> var_claimed\n            {\n                /// @src 3:2130:2167  \"claimed = _pendingRewards(msg.sender)\"\n                var_claimed := /** @src 3:2140:2167  \"_pendingRewards(msg.sender)\" */ fun_pendingRewards(/** @src 3:2156:2166  \"msg.sender\" */ caller())\n                /// @src 3:2248:2269  \"address(this).balance\"\n                let expr := selfbalance()\n                /// @src 3:2279:2305  \"if (balance == 0) return 0\"\n                if /** @src 3:2283:2295  \"balance == 0\" */ iszero(expr)\n                /// @src 3:2279:2305  \"if (balance == 0) return 0\"\n                {\n                    /// @src 3:2297:2305  \"return 0\"\n                    var_claimed := /** @src 3:2294:2295  \"0\" */ 0x00\n                    /// @src 3:2297:2305  \"return 0\"\n                    leave\n                }\n                /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                let r := div(expr, /** @src 3:2404:2406  \"10\" */ 0x0a)\n                /// @src 3:2416:2458  \"if (claimed > maxClaim) claimed = maxClaim\"\n                if /** @src 3:2420:2438  \"claimed > maxClaim\" */ gt(var_claimed, r)\n                /// @src 3:2416:2458  \"if (claimed > maxClaim) claimed = maxClaim\"\n                {\n                    /// @src 3:2440:2458  \"claimed = maxClaim\"\n                    var_claimed := r\n                }\n                /// @src 3:2528:2568  \"if (claimed > balance) claimed = balance\"\n                if /** @src 3:2532:2549  \"claimed > balance\" */ gt(var_claimed, expr)\n                /// @src 3:2528:2568  \"if (claimed > balance) claimed = balance\"\n                {\n                    /// @src 3:2551:2568  \"claimed = balance\"\n                    var_claimed := expr\n                }\n                /// @src 3:2587:2848  \"if (claimed > 0) {...\"\n                if /** @src 3:2591:2602  \"claimed > 0\" */ iszero(iszero(var_claimed))\n                /// @src 3:2587:2848  \"if (claimed > 0) {...\"\n                {\n                    /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    mstore(/** @src 3:2294:2295  \"0\" */ 0x00, /** @src 3:2156:2166  \"msg.sender\" */ caller())\n                    /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    mstore(0x20, /** @src 3:2618:2632  \"lastUpdateTime\" */ 0x01)\n                    /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    sstore(keccak256(/** @src 3:2294:2295  \"0\" */ 0x00, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x40), /** @src 3:2647:2662  \"block.timestamp\" */ timestamp())\n                    /// @src 3:2695:2732  \"habitTracker.call{value: claimed}(\\\"\\\")\"\n                    let expr_component := call(gas(), /** @src 3:2695:2707  \"habitTracker\" */ loadimmutable(\"1419\"), /** @src 3:2695:2732  \"habitTracker.call{value: claimed}(\\\"\\\")\" */ var_claimed, /** @src 3:2294:2295  \"0\" */ 0x00, 0x00, 0x00, 0x00)\n                    /// @src 3:2695:2732  \"habitTracker.call{value: claimed}(\\\"\\\")\"\n                    pop(extract_returndata())\n                    /// @src 3:2746:2783  \"if (!success) revert TransferFailed()\"\n                    if /** @src 3:2750:2758  \"!success\" */ iszero(expr_component)\n                    /// @src 3:2746:2783  \"if (!success) revert TransferFailed()\"\n                    {\n                        /// @src 3:2767:2783  \"TransferFailed()\"\n                        mstore(/** @src 3:2294:2295  \"0\" */ 0x00, /** @src 3:1977:1993  \"TransferFailed()\" */ shl(227, 0x12171d83))\n                        /// @src 3:2767:2783  \"TransferFailed()\"\n                        revert(/** @src 3:2294:2295  \"0\" */ 0x00, /** @src 3:2767:2783  \"TransferFailed()\" */ 4)\n                    }\n                    /// @src 3:2802:2837  \"RewardsClaimed(msg.sender, claimed)\"\n                    let _1 := /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ mload(0x40)\n                    mstore(_1, var_claimed)\n                    /// @src 3:2802:2837  \"RewardsClaimed(msg.sender, claimed)\"\n                    log2(_1, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x20, /** @src 3:2802:2837  \"RewardsClaimed(msg.sender, claimed)\" */ 0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe, /** @src 3:2156:2166  \"msg.sender\" */ caller())\n                }\n                /// @src 3:2866:2880  \"return claimed\"\n                var_claimed := var_claimed\n            }\n            /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 1764 @src 3:3404:3784  \"function _pendingRewards(address user) internal view returns (uint256) {...\"\n            function fun_pendingRewards(var_user) -> var\n            {\n                /// @src 3:3466:3473  \"uint256\"\n                var := /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0\n                let _1 := and(var_user, sub(shl(160, 1), 1))\n                mstore(0, _1)\n                mstore(0x20, /** @src 3:3489:3503  \"lastUpdateTime\" */ 0x01)\n                /// @src 3:3489:3537  \"lastUpdateTime[user] == 0 || deposits[user] == 0\"\n                let expr := /** @src 3:3489:3514  \"lastUpdateTime[user] == 0\" */ iszero(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(0, 0x40)))\n                /// @src 3:3489:3537  \"lastUpdateTime[user] == 0 || deposits[user] == 0\"\n                if iszero(expr)\n                {\n                    /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    mstore(0, _1)\n                    mstore(0x20, 0)\n                    /// @src 3:3489:3537  \"lastUpdateTime[user] == 0 || deposits[user] == 0\"\n                    expr := /** @src 3:3518:3537  \"deposits[user] == 0\" */ iszero(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(0, 0x40)))\n                }\n                /// @src 3:3485:3572  \"if (lastUpdateTime[user] == 0 || deposits[user] == 0) {...\"\n                if expr\n                {\n                    /// @src 3:3553:3561  \"return 0\"\n                    var := /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0\n                    /// @src 3:3553:3561  \"return 0\"\n                    leave\n                }\n                /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                mstore(0, _1)\n                mstore(0x20, /** @src 3:3489:3503  \"lastUpdateTime\" */ 0x01)\n                /// @src 3:3604:3642  \"block.timestamp - lastUpdateTime[user]\"\n                let expr_1 := checked_sub_uint256(/** @src 3:3604:3619  \"block.timestamp\" */ timestamp(), /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(0, 0x40)))\n                mstore(0, _1)\n                mstore(0x20, 0)\n                let _2 := sload(keccak256(0, 0x40))\n                /// @src 3:3717:3777  \"return (deposits[user] * ratePerSecond * timeElapsed) / 1e18\"\n                var := /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ div(/** @src 3:3725:3769  \"deposits[user] * ratePerSecond * timeElapsed\" */ checked_mul_uint256(/** @src 3:3725:3755  \"deposits[user] * ratePerSecond\" */ checked_mul_uint256(_2, /** @src 3:3742:3755  \"ratePerSecond\" */ loadimmutable(\"1417\")), /** @src 3:3725:3769  \"deposits[user] * ratePerSecond * timeElapsed\" */ expr_1), /** @src 3:3773:3777  \"1e18\" */ 0x0de0b6b3a7640000)\n            }\n            /// @ast-id 1721 @src 3:3241:3398  \"function _updateRewards(address user) internal {...\"\n            function fun_updateRewards(var_user)\n            {\n                /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                let _1 := and(var_user, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ _1)\n                mstore(0x20, /** @src 3:3302:3316  \"lastUpdateTime\" */ 0x01)\n                /// @src 3:3298:3392  \"if (lastUpdateTime[user] == 0) {...\"\n                if /** @src 3:3302:3327  \"lastUpdateTime[user] == 0\" */ iszero(/** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x40)))\n                /// @src 3:3298:3392  \"if (lastUpdateTime[user] == 0) {...\"\n                {\n                    /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ _1)\n                    mstore(0x20, /** @src 3:3302:3316  \"lastUpdateTime\" */ 0x01)\n                    /// @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\"\n                    sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:280:3888  \"contract MockStakingRewards is IStakingAdapter {...\" */ 0x40), /** @src 3:3366:3381  \"block.timestamp\" */ timestamp())\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f0313162fae5b1299aaaeb70151bec6356db6e8791794e24ea50eab4f373019d64736f6c634300081c0033\"\n    }\n}\n","hash":"c9b34f30cad06b8cd4a78aad9dad311933cccc3ff070f328deb867aa7b4cd811","factoryDependencies":{}}}}}}